module test_run15:
type t1a;
type t2a;
type t3a;
constant c1a = 8 : integer;
constant c2a : boolean;
constant c3a : integer;
function f1a() : integer;
function f2a(integer, boolean) : boolean;
function f3a() : boolean;
procedure p1a()();
procedure p2a(integer, boolean)(integer);
procedure p3a(integer)(boolean);
task ta1a()();
task ta2a(boolean, integer)(boolean);
task ta3a()();
input s1a;
input s2a;
output s3a;
output s4a;
inputoutput s5a;
inputoutput s6a;
return s10a;
return s11a;

var v1 : t1a,
    v2 : t2a,
    v3 : t3a,
    v4 : string,
    v5 : integer,
    v6 : boolean,
    v7 : float,
    v8 : double,
    v9 := c1a : integer,
    v10 := true : boolean,
    v11 := 3.14159 : double in
  v9 := f1a();
  v10 := f2a(v9, v10);
  v10 := f3a();
  v10 := and(v10, v10);
  v10 := or(v10, v10);
  v10 := not(v10);
  v9 := +(v9, v9);
  v9 := -(v9, v9);
  v9 := *(v9, v9);
  v9 := /(v9, v9 + 1);
  v10 := <(v9, v9);
  v10 := >(v9, v9);
  v10 := <=(v9, v9);
  v10 := >=(v9, v9);
  v10 := <>(v9, v9);
  v10 := =(v9, v9);
  call p1a()();
  call p2a(v9, v10)(v9);
  call p3a(v9)(v10);
  exec
    case ta1a()() return s10a
  end exec;
  exec
    case ta2a(v10, v9)(v10) return s11a
  end exec;
  present s1a then
    emit s3a
  end present;
  present s2a then
    emit s4a
  end present;
  present s5a then
    emit s6a
  end present
end var

end module
