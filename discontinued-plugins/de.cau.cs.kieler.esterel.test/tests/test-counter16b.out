module CUNTER:
function calc_or(boolean, boolean) : boolean;
function calc_not(boolean) : boolean;
function calc_and(boolean, boolean) : boolean;
procedure dump()(boolean, boolean);
input TAKT : boolean;
output bit0 : boolean;
output bit1 : boolean;
output bit2 : boolean;
output bit3 : boolean;
output bit4 : boolean;
output bit5 : boolean;
output bit6 : boolean;
output bit7 : boolean;
output bit8 : boolean;
output bit9 : boolean;
output bit10 : boolean;
output bit11 : boolean;
output bit12 : boolean;
output bit13 : boolean;
output bit14 : boolean;
output bit15 : boolean;
output ITERATE_P12;
output ITERATE_P22;
output ITERATE_FF;
output ITERATE_RS1;
output ITERATE_RS2;
output I_ITERATE;
output ITERATE12;
output ITERATE;
output valueout : boolean;
output oldout : boolean;
output O_NOT1 := false : boolean;
output therv : boolean;
output O_OR1 := false : boolean;
output O_NOT2 := false : boolean;
output I_SET : boolean;
output S_AND11 := false : boolean;
output S_AND1 := false : boolean;
output the_sand1 : boolean;
output S_ONE := true : boolean;
output S_PORT22 := false : boolean;
output thes_one : boolean;
output thes_port22 : boolean;
output the_TAKT : boolean;

signal S_FF_0 := false : boolean,
       S_FF_1 := false : boolean,
       S_FF_2 := false : boolean,
       S_FF_3 := false : boolean,
       S_FF_4 := false : boolean,
       S_FF_5 := false : boolean,
       S_FF_6 := false : boolean,
       S_FF_7 := false : boolean,
       S_FF_8 := false : boolean,
       S_FF_9 := false : boolean,
       S_FF_10 := false : boolean,
       S_FF_11 := false : boolean,
       S_FF_12 := false : boolean,
       S_FF_13 := false : boolean,
       S_FF_14 := false : boolean,
       S_FF_15 := false : boolean,
       S_FF_NQ_0 := false : boolean,
       S_FF_NQ_1 := false : boolean,
       S_FF_NQ_2 := false : boolean,
       S_FF_NQ_3 := false : boolean,
       S_FF_NQ_4 := false : boolean,
       S_FF_NQ_5 := false : boolean,
       S_FF_NQ_6 := false : boolean,
       S_FF_NQ_7 := false : boolean,
       S_FF_NQ_8 := false : boolean,
       S_FF_NQ_9 := false : boolean,
       S_FF_NQ_10 := false : boolean,
       S_FF_NQ_11 := false : boolean,
       S_FF_NQ_12 := false : boolean,
       S_FF_NQ_13 := false : boolean,
       S_FF_NQ_14 := false : boolean,
       S_FF_NQ_15 := false : boolean,
       S_AND_0 := false : boolean,
       S_AND_1 := false : boolean,
       S_AND_2 := false : boolean,
       S_AND_3 := false : boolean,
       S_AND_4 := false : boolean,
       S_AND_5 := false : boolean,
       S_AND_6 := false : boolean,
       S_AND_7 := false : boolean,
       S_AND_8 := false : boolean,
       S_AND_9 := false : boolean,
       S_AND_10 := false : boolean,
       S_AND_11 := false : boolean,
       S_AND_12 := false : boolean,
       S_AND_13 := false : boolean,
       S_AND_14 := false : boolean,
       S_AND_15 := false : boolean,
       ITERATE_FF_0,
       ITERATE_FF_1,
       ITERATE_FF_2,
       ITERATE_FF_3,
       ITERATE_FF_4,
       ITERATE_FF_5,
       ITERATE_FF_6,
       ITERATE_FF_7,
       ITERATE_FF_8,
       ITERATE_FF_9,
       ITERATE_FF_10,
       ITERATE_FF_11,
       ITERATE_FF_12,
       ITERATE_FF_13,
       ITERATE_FF_14,
       ITERATE_FF_15 in
    signal S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean in
        signal S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean in
            var init := false : boolean in
              signal I_RESET : boolean in
                  signal O_OR2 := false : boolean,
                         O_PORT12 := false : boolean in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit therv(rv);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          emit valueout(value);
                          emit oldout(old);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit the_TAKT(?TAKT);
                emit the_sand1(?S_AND1);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_ONE
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_ONE, ?S_PORT22);
            emit thes_one(?S_ONE);
            emit thes_port22(?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_ONE
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_ONE, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_0(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_0(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_0
        end loop
    end signal
  ||
    signal S_AND1 := false : boolean,
           S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_PORT22 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean,
           ITERATE_P12,
           ITERATE_P22,
           ITERATE_FF in
        signal S_AND11 := false : boolean,
               S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean,
               ITERATE_RS1,
               ITERATE_RS2 in
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_FF_0
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_FF_0, ?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_FF_0
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_FF_0, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_1(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_1(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_1
        end loop
    end signal
  ||
    signal S_AND1 := false : boolean,
           S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_PORT22 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean,
           ITERATE_P12,
           ITERATE_P22,
           ITERATE_FF in
        signal S_AND11 := false : boolean,
               S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean,
               ITERATE_RS1,
               ITERATE_RS2 in
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_AND_1
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_1, ?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_AND_1
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_1, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_2(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_2(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_2
        end loop
    end signal
  ||
    signal S_AND1 := false : boolean,
           S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_PORT22 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean,
           ITERATE_P12,
           ITERATE_P22,
           ITERATE_FF in
        signal S_AND11 := false : boolean,
               S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean,
               ITERATE_RS1,
               ITERATE_RS2 in
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_AND_2
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_2, ?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_AND_2
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_2, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_3(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_3(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_3
        end loop
    end signal
  ||
    signal S_AND1 := false : boolean,
           S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_PORT22 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean,
           ITERATE_P12,
           ITERATE_P22,
           ITERATE_FF in
        signal S_AND11 := false : boolean,
               S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean,
               ITERATE_RS1,
               ITERATE_RS2 in
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_AND_3
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_3, ?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_AND_3
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_3, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_4(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_4(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_4
        end loop
    end signal
  ||
    signal S_AND1 := false : boolean,
           S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_PORT22 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean,
           ITERATE_P12,
           ITERATE_P22,
           ITERATE_FF in
        signal S_AND11 := false : boolean,
               S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean,
               ITERATE_RS1,
               ITERATE_RS2 in
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_AND_4
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_4, ?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_AND_4
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_4, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_5(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_5(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_5
        end loop
    end signal
  ||
    signal S_AND1 := false : boolean,
           S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_PORT22 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean,
           ITERATE_P12,
           ITERATE_P22,
           ITERATE_FF in
        signal S_AND11 := false : boolean,
               S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean,
               ITERATE_RS1,
               ITERATE_RS2 in
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_AND_5
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_5, ?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_AND_5
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_5, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_6(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_6(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_6
        end loop
    end signal
  ||
    signal S_AND1 := false : boolean,
           S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_PORT22 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean,
           ITERATE_P12,
           ITERATE_P22,
           ITERATE_FF in
        signal S_AND11 := false : boolean,
               S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean,
               ITERATE_RS1,
               ITERATE_RS2 in
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_AND_6
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_6, ?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_AND_6
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_6, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_7(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_7(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_7
        end loop
    end signal
  ||
    signal S_AND1 := false : boolean,
           S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_PORT22 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean,
           ITERATE_P12,
           ITERATE_P22,
           ITERATE_FF in
        signal S_AND11 := false : boolean,
               S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean,
               ITERATE_RS1,
               ITERATE_RS2 in
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_AND_7
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_7, ?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_AND_7
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_7, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_8(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_8(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_8
        end loop
    end signal
  ||
    signal S_AND1 := false : boolean,
           S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_PORT22 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean,
           ITERATE_P12,
           ITERATE_P22,
           ITERATE_FF in
        signal S_AND11 := false : boolean,
               S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean,
               ITERATE_RS1,
               ITERATE_RS2 in
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_AND_8
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_8, ?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_AND_8
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_8, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_9(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_9(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_9
        end loop
    end signal
  ||
    signal S_AND1 := false : boolean,
           S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_PORT22 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean,
           ITERATE_P12,
           ITERATE_P22,
           ITERATE_FF in
        signal S_AND11 := false : boolean,
               S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean,
               ITERATE_RS1,
               ITERATE_RS2 in
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_AND_9
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_9, ?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_AND_9
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_9, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_10(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_10(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_10
        end loop
    end signal
  ||
    signal S_AND1 := false : boolean,
           S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_PORT22 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean,
           ITERATE_P12,
           ITERATE_P22,
           ITERATE_FF in
        signal S_AND11 := false : boolean,
               S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean,
               ITERATE_RS1,
               ITERATE_RS2 in
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_AND_10
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_10, ?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_AND_10
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_10, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_11(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_11(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_11
        end loop
    end signal
  ||
    signal S_AND1 := false : boolean,
           S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_PORT22 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean,
           ITERATE_P12,
           ITERATE_P22,
           ITERATE_FF in
        signal S_AND11 := false : boolean,
               S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean,
               ITERATE_RS1,
               ITERATE_RS2 in
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_AND_11
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_11, ?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_AND_11
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_11, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_12(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_12(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_12
        end loop
    end signal
  ||
    signal S_AND1 := false : boolean,
           S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_PORT22 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean,
           ITERATE_P12,
           ITERATE_P22,
           ITERATE_FF in
        signal S_AND11 := false : boolean,
               S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean,
               ITERATE_RS1,
               ITERATE_RS2 in
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_AND_12
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_12, ?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_AND_12
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_12, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_13(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_13(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_13
        end loop
    end signal
  ||
    signal S_AND1 := false : boolean,
           S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_PORT22 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean,
           ITERATE_P12,
           ITERATE_P22,
           ITERATE_FF in
        signal S_AND11 := false : boolean,
               S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean,
               ITERATE_RS1,
               ITERATE_RS2 in
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_AND_13
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_13, ?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_AND_13
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_13, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_14(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_14(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_14
        end loop
    end signal
  ||
    signal S_AND1 := false : boolean,
           S_AND2 := false : boolean,
           S_PORT12 := false : boolean,
           S_PORT22 := false : boolean,
           S_Q := false : boolean,
           S_NQ := false : boolean,
           ITERATE_P12,
           ITERATE_P22,
           ITERATE_FF in
        signal S_AND11 := false : boolean,
               S_AND12 := false : boolean,
               S_AND21 := false : boolean,
               S_AND22 := false : boolean,
               S_NOT := false : boolean,
               S_RS1_Q := false : boolean,
               S_RS1_NQ := false : boolean,
               S_RS2_Q := false : boolean,
               S_RS2_NQ := false : boolean,
               ITERATE_RS1,
               ITERATE_RS2 in
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS1_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS1_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS1;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND11 do
                      emit I_SET(?S_AND11)
                    end every
                  ||
                    every immediate S_AND21 do
                      emit I_RESET(?S_AND21)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS1
                    end every
                  ]
              end signal
            end var
          ||
            var init := false : boolean in
              signal I_SET : boolean,
                     I_RESET : boolean,
                     I_ITERATE in
                  signal O_OR1 := false : boolean,
                         O_OR2 := false : boolean,
                         O_NOT1 := false : boolean,
                         O_NOT2 := false : boolean,
                         O_PORT12 := false : boolean,
                         ITERATE12 in
                      loop
                        await 
                          case I_SET
                          case O_NOT2
                        end await;
                        var rv : boolean in
                          rv := calc_or(?I_SET, ?O_NOT2);
                          emit O_OR1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await 
                          case O_PORT12
                          case I_RESET
                        end await;
                        var rv : boolean in
                          rv := calc_or(?O_PORT12, ?I_RESET);
                          emit O_OR2(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR1;
                        var rv : boolean in
                          rv := calc_not(?O_OR1);
                          emit O_NOT1(rv)
                        end var
                      end loop
                    ||
                      loop
                        await O_OR2;
                        var rv : boolean in
                          rv := calc_not(?O_OR2);
                          emit O_NOT2(rv)
                        end var
                      end loop
                    ||
                      var old := false : boolean,
                          value := false : boolean in
                        emit O_PORT12(false);
                        await O_NOT1;
                        old := ?O_NOT1;
                        emit ITERATE12;
                        pause;
                        emit O_PORT12(old);
                        loop
                          await O_NOT1;
                          value := ?O_NOT1;
                          call dump()(old, value);
                          if value <> old then
                            emit ITERATE12;
                            pause;
                            emit O_PORT12(value);
                            old := value
                          end if
                        end loop
                      end var
                    ||
                      every O_NOT1 do
                        emit S_RS2_NQ(?O_NOT1)
                      end every
                    ||
                      every O_NOT2 do
                        emit S_RS2_Q(?O_NOT2)
                      end every
                    ||
                      loop
                        await ITERATE12;
                        emit I_ITERATE
                      end loop
                  end signal
                ||
                  trap init_rs in
                    [
                      loop
                        emit I_SET(false);
                        emit I_RESET(true);
                        emit ITERATE_RS2;
                        pause
                      end loop
                    ||
                      await I_ITERATE;
                      await [not I_ITERATE];
                      exit init_rs
                    ]
                  end trap;
                  pause;
                  [
                    every immediate S_AND12 do
                      emit I_SET(?S_AND12)
                    end every
                  ||
                    every immediate S_AND22 do
                      emit I_RESET(?S_AND22)
                    end every
                  ||
                    every immediate I_ITERATE do
                      emit ITERATE_RS2
                    end every
                  ]
              end signal
            end var
          ||
            loop
              await 
                case S_AND1
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND1, ?TAKT);
                emit S_AND11(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_AND2
                case TAKT
              end await;
              var rv : boolean in
                rv := calc_and(?S_AND2, ?TAKT);
                emit S_AND21(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_Q
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_Q, ?S_NOT);
                emit S_AND12(rv)
              end var
            end loop
          ||
            loop
              await 
                case S_RS1_NQ
                case S_NOT
              end await;
              var rv : boolean in
                rv := calc_and(?S_RS1_NQ, ?S_NOT);
                emit S_AND22(rv)
              end var
            end loop
          ||
            loop
              await TAKT;
              var rv : boolean in
                rv := calc_not(?TAKT);
                emit S_NOT(rv)
              end var
            end loop
          ||
            loop
              await S_RS2_Q;
              emit S_Q(?S_RS2_Q)
            end loop
          ||
            loop
              await S_RS2_NQ;
              emit S_NQ(?S_RS2_NQ)
            end loop
          ||
            loop
              await 
                case ITERATE_RS1
                case ITERATE_RS2
              end await;
              emit ITERATE_FF
            end loop
        end signal
      ||
        loop
          await 
            case S_AND_14
            case S_PORT22
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_14, ?S_PORT22);
            emit S_AND1(rv)
          end var
        end loop
      ||
        loop
          await 
            case S_AND_14
            case S_PORT12
          end await;
          var rv : boolean in
            rv := calc_and(?S_AND_14, ?S_PORT12);
            emit S_AND2(rv)
          end var
        end loop
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT12(false);
          await S_Q;
          old := ?S_Q;
          emit ITERATE_P12;
          pause;
          emit S_PORT12(old);
          loop
            await S_Q;
            value := ?S_Q;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P12;
              pause;
              emit S_PORT12(value);
              old := value
            end if
          end loop
        end var
      ||
        var old := false : boolean,
            value := false : boolean in
          emit S_PORT22(false);
          await S_NQ;
          old := ?S_NQ;
          emit ITERATE_P22;
          pause;
          emit S_PORT22(old);
          loop
            await S_NQ;
            value := ?S_NQ;
            call dump()(old, value);
            if value <> old then
              emit ITERATE_P22;
              pause;
              emit S_PORT22(value);
              old := value
            end if
          end loop
        end var
      ||
        loop
          await S_Q;
          emit S_FF_15(?S_Q)
        end loop
      ||
        loop
          await S_NQ;
          emit S_FF_NQ_15(?S_NQ)
        end loop
      ||
        loop
          await 
            case ITERATE_P12
            case ITERATE_P22
            case ITERATE_FF
          end await;
          emit ITERATE_FF_15
        end loop
    end signal
  ||
    loop
      await 
        case S_FF_0
        case S_FF_1
      end await;
      var rv : boolean in
        rv := calc_and(?S_FF_0, ?S_FF_1);
        emit S_AND_1(rv)
      end var
    end loop
  ||
    loop
      await 
        case S_AND_1
        case S_FF_2
      end await;
      var rv : boolean in
        rv := calc_and(?S_AND_1, ?S_FF_2);
        emit S_AND_2(rv)
      end var
    end loop
  ||
    loop
      await 
        case S_AND_2
        case S_FF_3
      end await;
      var rv : boolean in
        rv := calc_and(?S_AND_2, ?S_FF_3);
        emit S_AND_3(rv)
      end var
    end loop
  ||
    loop
      await 
        case S_AND_3
        case S_FF_4
      end await;
      var rv : boolean in
        rv := calc_and(?S_AND_3, ?S_FF_4);
        emit S_AND_4(rv)
      end var
    end loop
  ||
    loop
      await 
        case S_AND_4
        case S_FF_5
      end await;
      var rv : boolean in
        rv := calc_and(?S_AND_4, ?S_FF_5);
        emit S_AND_5(rv)
      end var
    end loop
  ||
    loop
      await 
        case S_AND_5
        case S_FF_6
      end await;
      var rv : boolean in
        rv := calc_and(?S_AND_5, ?S_FF_6);
        emit S_AND_6(rv)
      end var
    end loop
  ||
    loop
      await 
        case S_AND_6
        case S_FF_7
      end await;
      var rv : boolean in
        rv := calc_and(?S_AND_6, ?S_FF_7);
        emit S_AND_7(rv)
      end var
    end loop
  ||
    loop
      await 
        case S_AND_7
        case S_FF_8
      end await;
      var rv : boolean in
        rv := calc_and(?S_AND_7, ?S_FF_8);
        emit S_AND_8(rv)
      end var
    end loop
  ||
    loop
      await 
        case S_AND_8
        case S_FF_9
      end await;
      var rv : boolean in
        rv := calc_and(?S_AND_8, ?S_FF_9);
        emit S_AND_9(rv)
      end var
    end loop
  ||
    loop
      await 
        case S_AND_9
        case S_FF_10
      end await;
      var rv : boolean in
        rv := calc_and(?S_AND_9, ?S_FF_10);
        emit S_AND_10(rv)
      end var
    end loop
  ||
    loop
      await 
        case S_AND_10
        case S_FF_11
      end await;
      var rv : boolean in
        rv := calc_and(?S_AND_10, ?S_FF_11);
        emit S_AND_11(rv)
      end var
    end loop
  ||
    loop
      await 
        case S_AND_11
        case S_FF_12
      end await;
      var rv : boolean in
        rv := calc_and(?S_AND_11, ?S_FF_12);
        emit S_AND_12(rv)
      end var
    end loop
  ||
    loop
      await 
        case S_AND_12
        case S_FF_13
      end await;
      var rv : boolean in
        rv := calc_and(?S_AND_12, ?S_FF_13);
        emit S_AND_13(rv)
      end var
    end loop
  ||
    loop
      await 
        case S_AND_13
        case S_FF_14
      end await;
      var rv : boolean in
        rv := calc_and(?S_AND_13, ?S_FF_14);
        emit S_AND_14(rv)
      end var
    end loop
  ||
    loop
      await 
        case S_AND_14
        case S_FF_15
      end await;
      var rv : boolean in
        rv := calc_and(?S_AND_14, ?S_FF_15);
        emit S_AND_15(rv)
      end var
    end loop
  ||
    every S_FF_0 do
      emit bit0(?S_FF_0)
    end every
  ||
    every S_FF_1 do
      emit bit1(?S_FF_1)
    end every
  ||
    every S_FF_2 do
      emit bit2(?S_FF_2)
    end every
  ||
    every S_FF_3 do
      emit bit3(?S_FF_3)
    end every
  ||
    every S_FF_4 do
      emit bit4(?S_FF_4)
    end every
  ||
    every S_FF_5 do
      emit bit5(?S_FF_5)
    end every
  ||
    every S_FF_6 do
      emit bit6(?S_FF_6)
    end every
  ||
    every S_FF_7 do
      emit bit7(?S_FF_7)
    end every
  ||
    every S_FF_8 do
      emit bit8(?S_FF_8)
    end every
  ||
    every S_FF_9 do
      emit bit9(?S_FF_9)
    end every
  ||
    every S_FF_10 do
      emit bit10(?S_FF_10)
    end every
  ||
    every S_FF_11 do
      emit bit11(?S_FF_11)
    end every
  ||
    every S_FF_12 do
      emit bit12(?S_FF_12)
    end every
  ||
    every S_FF_13 do
      emit bit13(?S_FF_13)
    end every
  ||
    every S_FF_14 do
      emit bit14(?S_FF_14)
    end every
  ||
    every S_FF_15 do
      emit bit15(?S_FF_15)
    end every
  ||
    loop
      await 
        case ITERATE_FF_0
        case ITERATE_FF_1
        case ITERATE_FF_2
        case ITERATE_FF_3
        case ITERATE_FF_4
        case ITERATE_FF_5
        case ITERATE_FF_6
        case ITERATE_FF_7
        case ITERATE_FF_8
        case ITERATE_FF_9
        case ITERATE_FF_10
        case ITERATE_FF_11
        case ITERATE_FF_12
        case ITERATE_FF_13
        case ITERATE_FF_14
        case ITERATE_FF_15
      end await;
      emit ITERATE
    end loop
end signal

end module
