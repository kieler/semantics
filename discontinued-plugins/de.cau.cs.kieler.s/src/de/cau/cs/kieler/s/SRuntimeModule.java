/*
 * generated by Xtext
 */
package de.cau.cs.kieler.s;

import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.linking.ILinker;
import org.eclipse.xtext.linking.impl.Linker;
import org.eclipse.xtext.parsetree.reconstr.ITransientValueService;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension
 * registry.
 * 
 * @kieler.design 2012-10-08 proposed cmot
 * @kieler.rating 2012-10-08 proposed yellow cmot
 */
public class SRuntimeModule extends de.cau.cs.kieler.s.AbstractSRuntimeModule {
    public Class<? extends ITransientValueService> bindITransientValueService() {
        return de.cau.cs.kieler.s.formatting.STransientService.class;
    }

	public Class<? extends org.eclipse.xtext.scoping.IScopeProvider> bindIScopeProvider() {
		return de.cau.cs.kieler.s.scoping.SScopeProvider.class;
	}
	
	
	    /**
	     * Method registers the non-lazy linking Linker since the default
	     * {@link org.eclipse.xtext.linking.lazy.LazyLinker} doesn't work properly with EOpposite
	     * references. (Produces error markers in editor.)
	     * 
	     * @return the {@link Linker} class
	     */
	    @Override
	    public Class<? extends ILinker> bindILinker() {
	        return SLinker.class;
	    }
	
	
	    /**
	     * FIXME Xtext EOpposite Problem.
	     * Temporary fix for an issue where Transition#targetState is set to null again
	     * _after_ it was successfully linked. Xtext EOpposite.
	     */
	    private static class SLinker extends Linker {
	        
	        protected boolean isClearAllReferencesRequired(Resource resource) {
	                return false;
	        }
	    }	
}
