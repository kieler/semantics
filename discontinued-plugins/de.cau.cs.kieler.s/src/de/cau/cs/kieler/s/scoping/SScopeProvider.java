/*
 * generated by Xtext
 */
package de.cau.cs.kieler.s.scoping;

import java.util.Collections;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.naming.QualifiedName;
import org.eclipse.xtext.resource.EObjectDescription;
import org.eclipse.xtext.resource.IEObjectDescription;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;
import org.eclipse.xtext.scoping.impl.SimpleScope;

import de.cau.cs.kieler.kexpressions.TextExpression;
import de.cau.cs.kieler.s.s.HostCodeInstruction;


/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#scoping
 * on how and when to use it 
 *
 * @kieler.design 2012-10-08 proposed cmot
 * @kieler.rating 2012-10-08 proposed yellow cmot
 */
public class SScopeProvider extends AbstractDeclarativeScopeProvider {

//    public IScope scope_HostCodeInstruction_hostCode(final EObject obj,
//			final EReference reference) {
//        List<IEObjectDescription> l = new LinkedList<IEObjectDescription>();
//        if (obj instanceof HostCodeInstruction) {
//        	l.add(new EObjectDescription(QualifiedName.create(, obj, Collections.<String, String> emptyMap()));
//        }
//        return new SimpleScope(l);
//    }
	
}
