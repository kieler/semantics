module abcd:
input A;
input B;
input C;
input D;
input LOCK;
output A_PRESELECTED_ON;
output B_PRESELECTED_ON;
output C_PRESELECTED_ON;
output D_PRESELECTED_ON;
output A_PRESELECTED_OFF;
output B_PRESELECTED_OFF;
output C_PRESELECTED_OFF;
output D_PRESELECTED_OFF;
output A_LOCKED_ON;
output B_LOCKED_ON;
output C_LOCKED_ON;
output D_LOCKED_ON;
output A_LOCKED_OFF;
output B_LOCKED_OFF;
output C_LOCKED_OFF;
output D_LOCKED_OFF;

signal LOCKED,
       UNLOCKED,
       PRESELECTED in
    emit A_PRESELECTED_OFF;
    emit A_LOCKED_OFF;
    loop
      trap BACK_TO_MAIN_LOOP in
        trap PRESELECTED in
          loop
            abort
              abort
                loop
                  pause
                end loop
              when A do
                exit PRESELECTED
              end abort;
              loop
                pause
              end loop
            when LOCKED;
            abort
              loop
                pause
              end loop
            when UNLOCKED
          end loop
        end trap;
        loop
          emit PRESELECTED;
          emit A_PRESELECTED_ON;
          abort
            abort
              loop
                pause
              end loop
            when
              case A
              case PRESELECTED
            end abort;
            emit A_PRESELECTED_OFF;
            exit BACK_TO_MAIN_LOOP
          when LOCK do
            emit A_PRESELECTED_OFF;
            emit LOCKED;
            emit A_LOCKED_ON;
            abort
              loop
                pause
              end loop
            when LOCK do
              emit A_LOCKED_OFF;
              emit UNLOCKED
            end abort
          end abort
        end loop
      end trap
    end loop
  ||
    emit B_PRESELECTED_OFF;
    emit B_LOCKED_OFF;
    loop
      trap BACK_TO_MAIN_LOOP in
        trap PRESELECTED in
          loop
            abort
              abort
                loop
                  pause
                end loop
              when B do
                exit PRESELECTED
              end abort;
              loop
                pause
              end loop
            when LOCKED;
            abort
              loop
                pause
              end loop
            when UNLOCKED
          end loop
        end trap;
        loop
          emit PRESELECTED;
          emit B_PRESELECTED_ON;
          abort
            abort
              loop
                pause
              end loop
            when
              case B
              case PRESELECTED
            end abort;
            emit B_PRESELECTED_OFF;
            exit BACK_TO_MAIN_LOOP
          when LOCK do
            emit B_PRESELECTED_OFF;
            emit LOCKED;
            emit B_LOCKED_ON;
            abort
              loop
                pause
              end loop
            when LOCK do
              emit B_LOCKED_OFF;
              emit UNLOCKED
            end abort
          end abort
        end loop
      end trap
    end loop
  ||
    emit C_PRESELECTED_OFF;
    emit C_LOCKED_OFF;
    loop
      trap BACK_TO_MAIN_LOOP in
        trap PRESELECTED in
          loop
            abort
              abort
                loop
                  pause
                end loop
              when C do
                exit PRESELECTED
              end abort;
              loop
                pause
              end loop
            when LOCKED;
            abort
              loop
                pause
              end loop
            when UNLOCKED
          end loop
        end trap;
        loop
          emit PRESELECTED;
          emit C_PRESELECTED_ON;
          abort
            abort
              loop
                pause
              end loop
            when
              case C
              case PRESELECTED
            end abort;
            emit C_PRESELECTED_OFF;
            exit BACK_TO_MAIN_LOOP
          when LOCK do
            emit C_PRESELECTED_OFF;
            emit LOCKED;
            emit C_LOCKED_ON;
            abort
              loop
                pause
              end loop
            when LOCK do
              emit C_LOCKED_OFF;
              emit UNLOCKED
            end abort
          end abort
        end loop
      end trap
    end loop
  ||
    emit D_PRESELECTED_OFF;
    emit D_LOCKED_OFF;
    loop
      trap BACK_TO_MAIN_LOOP in
        trap PRESELECTED in
          loop
            abort
              abort
                loop
                  pause
                end loop
              when D do
                exit PRESELECTED
              end abort;
              loop
                pause
              end loop
            when LOCKED;
            abort
              loop
                pause
              end loop
            when UNLOCKED
          end loop
        end trap;
        loop
          emit PRESELECTED;
          emit D_PRESELECTED_ON;
          abort
            abort
              loop
                pause
              end loop
            when
              case D
              case PRESELECTED
            end abort;
            emit D_PRESELECTED_OFF;
            exit BACK_TO_MAIN_LOOP
          when LOCK do
            emit D_PRESELECTED_OFF;
            emit LOCKED;
            emit D_LOCKED_ON;
            abort
              loop
                pause
              end loop
            when LOCK do
              emit D_LOCKED_OFF;
              emit UNLOCKED
            end abort
          end abort
        end loop
      end trap
    end loop
end signal

end module
