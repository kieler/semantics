/*
 * generated by Xtext
 */
package de.cau.cs.kieler.s.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.cau.cs.kieler.s.services.SGrammarAccess;

public class SParser extends AbstractContentAssistParser {
	
	@Inject
	private SGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.cau.cs.kieler.s.ui.contentassist.antlr.internal.InternalSParser createParser() {
		de.cau.cs.kieler.s.ui.contentassist.antlr.internal.InternalSParser result = new de.cau.cs.kieler.s.ui.contentassist.antlr.internal.InternalSParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getInstructionAccess().getAlternatives(), "rule__Instruction__Alternatives");
					put(grammarAccess.getTestEntityAccess().getAlternatives(), "rule__TestEntity__Alternatives");
					put(grammarAccess.getDeclarationAccess().getAlternatives(), "rule__Declaration__Alternatives");
					put(grammarAccess.getDeclarationWOSemicolonAccess().getAlternatives(), "rule__DeclarationWOSemicolon__Alternatives");
					put(grammarAccess.getVariableDeclarationAccess().getAlternatives_5(), "rule__VariableDeclaration__Alternatives_5");
					put(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAlternatives_5(), "rule__VariableDeclarationWOSemicolon__Alternatives_5");
					put(grammarAccess.getReferenceDeclarationAccess().getAlternatives_1(), "rule__ReferenceDeclaration__Alternatives_1");
					put(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAlternatives_1(), "rule__ReferenceDeclarationWOSemicolon__Alternatives_1");
					put(grammarAccess.getEffectAccess().getAlternatives(), "rule__Effect__Alternatives");
					put(grammarAccess.getReferenceCallEffectAccess().getAlternatives_2(), "rule__ReferenceCallEffect__Alternatives_2");
					put(grammarAccess.getFunctionCallEffectAccess().getAlternatives(), "rule__FunctionCallEffect__Alternatives");
					put(grammarAccess.getFunctionCallEffectAccess().getAlternatives_0_1_2(), "rule__FunctionCallEffect__Alternatives_0_1_2");
					put(grammarAccess.getFunctionCallEffectAccess().getAlternatives_1_2(), "rule__FunctionCallEffect__Alternatives_1_2");
					put(grammarAccess.getExpressionAccess().getAlternatives_0(), "rule__Expression__Alternatives_0");
					put(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives(), "rule__NotOrValuedExpression__Alternatives");
					put(grammarAccess.getBitwiseNotExpressionAccess().getAlternatives(), "rule__BitwiseNotExpression__Alternatives");
					put(grammarAccess.getNotExpressionAccess().getAlternatives(), "rule__NotExpression__Alternatives");
					put(grammarAccess.getNegExpressionAccess().getAlternatives(), "rule__NegExpression__Alternatives");
					put(grammarAccess.getTernaryOperationAccess().getAlternatives(), "rule__TernaryOperation__Alternatives");
					put(grammarAccess.getAtomicExpressionAccess().getAlternatives(), "rule__AtomicExpression__Alternatives");
					put(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives(), "rule__AtomicValuedExpression__Alternatives");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives(), "rule__ValuedObjectTestExpression__Alternatives");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAlternatives_0_1_0(), "rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0");
					put(grammarAccess.getReferenceCallAccess().getAlternatives_1(), "rule__ReferenceCall__Alternatives_1");
					put(grammarAccess.getFunctionCallAccess().getAlternatives_2(), "rule__FunctionCall__Alternatives_2");
					put(grammarAccess.getVectorValueMemberAccess().getAlternatives(), "rule__VectorValueMember__Alternatives");
					put(grammarAccess.getAnyTypeAccess().getAlternatives(), "rule__AnyType__Alternatives");
					put(grammarAccess.getAnyValueAccess().getAlternatives(), "rule__AnyValue__Alternatives");
					put(grammarAccess.getAnnotationAccess().getAlternatives(), "rule__Annotation__Alternatives");
					put(grammarAccess.getPragmaAccess().getAlternatives(), "rule__Pragma__Alternatives");
					put(grammarAccess.getValuedAnnotationAccess().getAlternatives(), "rule__ValuedAnnotation__Alternatives");
					put(grammarAccess.getRestrictedTypeAnnotationAccess().getAlternatives(), "rule__RestrictedTypeAnnotation__Alternatives");
					put(grammarAccess.getQuotedStringAnnotationAccess().getAlternatives(), "rule__QuotedStringAnnotation__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEStringBooleanAccess().getAlternatives(), "rule__EStringBoolean__Alternatives");
					put(grammarAccess.getEStringAllTypesAccess().getAlternatives(), "rule__EStringAllTypes__Alternatives");
					put(grammarAccess.getExtendedIDAccess().getAlternatives_1_0(), "rule__ExtendedID__Alternatives_1_0");
					put(grammarAccess.getSchedulePriorityTypeAccess().getAlternatives(), "rule__SchedulePriorityType__Alternatives");
					put(grammarAccess.getAssignOperatorAccess().getAlternatives(), "rule__AssignOperator__Alternatives");
					put(grammarAccess.getPostfixOperatorAccess().getAlternatives(), "rule__PostfixOperator__Alternatives");
					put(grammarAccess.getCompareOperatorAccess().getAlternatives(), "rule__CompareOperator__Alternatives");
					put(grammarAccess.getValueTypeAccess().getAlternatives(), "rule__ValueType__Alternatives");
					put(grammarAccess.getCombineOperatorAccess().getAlternatives(), "rule__CombineOperator__Alternatives");
					put(grammarAccess.getProgramAccess().getGroup(), "rule__Program__Group__0");
					put(grammarAccess.getStateAccess().getGroup(), "rule__State__Group__0");
					put(grammarAccess.getStateAccess().getGroup_7(), "rule__State__Group_7__0");
					put(grammarAccess.getAssignmentAccess().getGroup(), "rule__Assignment__Group__0");
					put(grammarAccess.getAssignmentAccess().getGroup_1(), "rule__Assignment__Group_1__0");
					put(grammarAccess.getPrioAccess().getGroup(), "rule__Prio__Group__0");
					put(grammarAccess.getPrioAccess().getGroup_3(), "rule__Prio__Group_3__0");
					put(grammarAccess.getTransAccess().getGroup(), "rule__Trans__Group__0");
					put(grammarAccess.getForkAccess().getGroup(), "rule__Fork__Group__0");
					put(grammarAccess.getJoinAccess().getGroup(), "rule__Join__Group__0");
					put(grammarAccess.getJoinAccess().getGroup_2(), "rule__Join__Group_2__0");
					put(grammarAccess.getPauseAccess().getGroup(), "rule__Pause__Group__0");
					put(grammarAccess.getPauseAccess().getGroup_2(), "rule__Pause__Group_2__0");
					put(grammarAccess.getTermAccess().getGroup(), "rule__Term__Group__0");
					put(grammarAccess.getTermAccess().getGroup_2(), "rule__Term__Group_2__0");
					put(grammarAccess.getHaltAccess().getGroup(), "rule__Halt__Group__0");
					put(grammarAccess.getHaltAccess().getGroup_2(), "rule__Halt__Group_2__0");
					put(grammarAccess.getLocalSignalAccess().getGroup(), "rule__LocalSignal__Group__0");
					put(grammarAccess.getEmitAccess().getGroup(), "rule__Emit__Group__0");
					put(grammarAccess.getEmitAccess().getGroup_3(), "rule__Emit__Group_3__0");
					put(grammarAccess.getEmitAccess().getGroup_4(), "rule__Emit__Group_4__0");
					put(grammarAccess.getAbortAccess().getGroup(), "rule__Abort__Group__0");
					put(grammarAccess.getAbortAccess().getGroup_2(), "rule__Abort__Group_2__0");
					put(grammarAccess.getIfAccess().getGroup(), "rule__If__Group__0");
					put(grammarAccess.getIfAccess().getGroup_3(), "rule__If__Group_3__0");
					put(grammarAccess.getIfAccess().getGroup_6(), "rule__If__Group_6__0");
					put(grammarAccess.getAwaitAccess().getGroup(), "rule__Await__Group__0");
					put(grammarAccess.getAwaitAccess().getGroup_3(), "rule__Await__Group_3__0");
					put(grammarAccess.getRootScopeAccess().getGroup(), "rule__RootScope__Group__0");
					put(grammarAccess.getRootScopeAccess().getGroup_3(), "rule__RootScope__Group_3__0");
					put(grammarAccess.getScopeAccess().getGroup(), "rule__Scope__Group__0");
					put(grammarAccess.getScopeAccess().getGroup_5(), "rule__Scope__Group_5__0");
					put(grammarAccess.getAnnotatedExpressionAccess().getGroup(), "rule__AnnotatedExpression__Group__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup(), "rule__VariableDeclaration__Group__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup_5_0(), "rule__VariableDeclaration__Group_5_0__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup_7(), "rule__VariableDeclaration__Group_7__0");
					put(grammarAccess.getVariableDeclarationWOSemicolonAccess().getGroup(), "rule__VariableDeclarationWOSemicolon__Group__0");
					put(grammarAccess.getVariableDeclarationWOSemicolonAccess().getGroup_5_0(), "rule__VariableDeclarationWOSemicolon__Group_5_0__0");
					put(grammarAccess.getVariableDeclarationWOSemicolonAccess().getGroup_7(), "rule__VariableDeclarationWOSemicolon__Group_7__0");
					put(grammarAccess.getNamespaceIDAccess().getGroup(), "rule__NamespaceID__Group__0");
					put(grammarAccess.getNamespaceIDAccess().getGroup_1(), "rule__NamespaceID__Group_1__0");
					put(grammarAccess.getReferenceDeclarationAccess().getGroup(), "rule__ReferenceDeclaration__Group__0");
					put(grammarAccess.getReferenceDeclarationAccess().getGroup_1_0(), "rule__ReferenceDeclaration__Group_1_0__0");
					put(grammarAccess.getReferenceDeclarationAccess().getGroup_1_1(), "rule__ReferenceDeclaration__Group_1_1__0");
					put(grammarAccess.getReferenceDeclarationAccess().getGroup_3(), "rule__ReferenceDeclaration__Group_3__0");
					put(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGroup(), "rule__ReferenceDeclarationWOSemicolon__Group__0");
					put(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGroup_1_0(), "rule__ReferenceDeclarationWOSemicolon__Group_1_0__0");
					put(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGroup_1_1(), "rule__ReferenceDeclarationWOSemicolon__Group_1_1__0");
					put(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGroup_3(), "rule__ReferenceDeclarationWOSemicolon__Group_3__0");
					put(grammarAccess.getScheduleDeclarationAccess().getGroup(), "rule__ScheduleDeclaration__Group__0");
					put(grammarAccess.getScheduleDeclarationAccess().getGroup_6(), "rule__ScheduleDeclaration__Group_6__0");
					put(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGroup(), "rule__ScheduleDeclarationWOSemicolon__Group__0");
					put(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGroup_6(), "rule__ScheduleDeclarationWOSemicolon__Group_6__0");
					put(grammarAccess.getSchedulePriorityAccess().getGroup(), "rule__SchedulePriority__Group__0");
					put(grammarAccess.getValuedObjectAccess().getGroup(), "rule__ValuedObject__Group__0");
					put(grammarAccess.getValuedObjectAccess().getGroup_2(), "rule__ValuedObject__Group_2__0");
					put(grammarAccess.getValuedObjectAccess().getGroup_3(), "rule__ValuedObject__Group_3__0");
					put(grammarAccess.getValuedObjectAccess().getGroup_4(), "rule__ValuedObject__Group_4__0");
					put(grammarAccess.getEmissionAccess().getGroup(), "rule__Emission__Group__0");
					put(grammarAccess.getEmissionAccess().getGroup_2(), "rule__Emission__Group_2__0");
					put(grammarAccess.getEmissionAccess().getGroup_3(), "rule__Emission__Group_3__0");
					put(grammarAccess.getSubReferenceAssignmentAccess().getGroup(), "rule__SubReferenceAssignment__Group__0");
					put(grammarAccess.getSubReferenceAssignmentAccess().getGroup_2(), "rule__SubReferenceAssignment__Group_2__0");
					put(grammarAccess.getSubReferenceAssignmentAccess().getGroup_3(), "rule__SubReferenceAssignment__Group_3__0");
					put(grammarAccess.getSubReferenceAssignmentAccess().getGroup_6(), "rule__SubReferenceAssignment__Group_6__0");
					put(grammarAccess.getPostfixEffectAccess().getGroup(), "rule__PostfixEffect__Group__0");
					put(grammarAccess.getPostfixEffectAccess().getGroup_2(), "rule__PostfixEffect__Group_2__0");
					put(grammarAccess.getPostfixEffectAccess().getGroup_4(), "rule__PostfixEffect__Group_4__0");
					put(grammarAccess.getHostcodeEffectAccess().getGroup(), "rule__HostcodeEffect__Group__0");
					put(grammarAccess.getReferenceCallEffectAccess().getGroup(), "rule__ReferenceCallEffect__Group__0");
					put(grammarAccess.getReferenceCallEffectAccess().getGroup_2_0(), "rule__ReferenceCallEffect__Group_2_0__0");
					put(grammarAccess.getReferenceCallEffectAccess().getGroup_2_0_2(), "rule__ReferenceCallEffect__Group_2_0_2__0");
					put(grammarAccess.getFunctionCallEffectAccess().getGroup_0(), "rule__FunctionCallEffect__Group_0__0");
					put(grammarAccess.getFunctionCallEffectAccess().getGroup_0_1(), "rule__FunctionCallEffect__Group_0_1__0");
					put(grammarAccess.getFunctionCallEffectAccess().getGroup_0_1_2_0(), "rule__FunctionCallEffect__Group_0_1_2_0__0");
					put(grammarAccess.getFunctionCallEffectAccess().getGroup_0_1_2_0_2(), "rule__FunctionCallEffect__Group_0_1_2_0_2__0");
					put(grammarAccess.getFunctionCallEffectAccess().getGroup_1(), "rule__FunctionCallEffect__Group_1__0");
					put(grammarAccess.getFunctionCallEffectAccess().getGroup_1_2_0(), "rule__FunctionCallEffect__Group_1_2_0__0");
					put(grammarAccess.getFunctionCallEffectAccess().getGroup_1_2_0_2(), "rule__FunctionCallEffect__Group_1_2_0_2__0");
					put(grammarAccess.getPrintCallEffectAccess().getGroup(), "rule__PrintCallEffect__Group__0");
					put(grammarAccess.getPrintCallEffectAccess().getGroup_3(), "rule__PrintCallEffect__Group_3__0");
					put(grammarAccess.getExpressionAccess().getGroup(), "rule__Expression__Group__0");
					put(grammarAccess.getExpressionAccess().getGroup_1(), "rule__Expression__Group_1__0");
					put(grammarAccess.getLogicalOrExpressionAccess().getGroup(), "rule__LogicalOrExpression__Group__0");
					put(grammarAccess.getLogicalOrExpressionAccess().getGroup_1(), "rule__LogicalOrExpression__Group_1__0");
					put(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_1(), "rule__LogicalOrExpression__Group_1_1__0");
					put(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_2(), "rule__LogicalOrExpression__Group_1_2__0");
					put(grammarAccess.getLogicalAndExpressionAccess().getGroup(), "rule__LogicalAndExpression__Group__0");
					put(grammarAccess.getLogicalAndExpressionAccess().getGroup_1(), "rule__LogicalAndExpression__Group_1__0");
					put(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_1(), "rule__LogicalAndExpression__Group_1_1__0");
					put(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_2(), "rule__LogicalAndExpression__Group_1_2__0");
					put(grammarAccess.getBitwiseOrExpressionAccess().getGroup(), "rule__BitwiseOrExpression__Group__0");
					put(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1(), "rule__BitwiseOrExpression__Group_1__0");
					put(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1_1(), "rule__BitwiseOrExpression__Group_1_1__0");
					put(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1_2(), "rule__BitwiseOrExpression__Group_1_2__0");
					put(grammarAccess.getBitwiseXOrExpressionAccess().getGroup(), "rule__BitwiseXOrExpression__Group__0");
					put(grammarAccess.getBitwiseXOrExpressionAccess().getGroup_1(), "rule__BitwiseXOrExpression__Group_1__0");
					put(grammarAccess.getBitwiseXOrExpressionAccess().getGroup_1_1(), "rule__BitwiseXOrExpression__Group_1_1__0");
					put(grammarAccess.getBitwiseXOrExpressionAccess().getGroup_1_2(), "rule__BitwiseXOrExpression__Group_1_2__0");
					put(grammarAccess.getBitwiseAndExpressionAccess().getGroup(), "rule__BitwiseAndExpression__Group__0");
					put(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1(), "rule__BitwiseAndExpression__Group_1__0");
					put(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1_1(), "rule__BitwiseAndExpression__Group_1_1__0");
					put(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1_2(), "rule__BitwiseAndExpression__Group_1_2__0");
					put(grammarAccess.getCompareOperationAccess().getGroup(), "rule__CompareOperation__Group__0");
					put(grammarAccess.getCompareOperationAccess().getGroup_1(), "rule__CompareOperation__Group_1__0");
					put(grammarAccess.getBitwiseNotExpressionAccess().getGroup_0(), "rule__BitwiseNotExpression__Group_0__0");
					put(grammarAccess.getNotExpressionAccess().getGroup_0(), "rule__NotExpression__Group_0__0");
					put(grammarAccess.getShiftLeftExpressionAccess().getGroup(), "rule__ShiftLeftExpression__Group__0");
					put(grammarAccess.getShiftLeftExpressionAccess().getGroup_1(), "rule__ShiftLeftExpression__Group_1__0");
					put(grammarAccess.getShiftLeftExpressionAccess().getGroup_1_1(), "rule__ShiftLeftExpression__Group_1_1__0");
					put(grammarAccess.getShiftLeftExpressionAccess().getGroup_1_2(), "rule__ShiftLeftExpression__Group_1_2__0");
					put(grammarAccess.getShiftRightExpressionAccess().getGroup(), "rule__ShiftRightExpression__Group__0");
					put(grammarAccess.getShiftRightExpressionAccess().getGroup_1(), "rule__ShiftRightExpression__Group_1__0");
					put(grammarAccess.getShiftRightExpressionAccess().getGroup_1_1(), "rule__ShiftRightExpression__Group_1_1__0");
					put(grammarAccess.getShiftRightExpressionAccess().getGroup_1_2(), "rule__ShiftRightExpression__Group_1_2__0");
					put(grammarAccess.getShiftRightUnsignedExpressionAccess().getGroup(), "rule__ShiftRightUnsignedExpression__Group__0");
					put(grammarAccess.getShiftRightUnsignedExpressionAccess().getGroup_1(), "rule__ShiftRightUnsignedExpression__Group_1__0");
					put(grammarAccess.getShiftRightUnsignedExpressionAccess().getGroup_1_1(), "rule__ShiftRightUnsignedExpression__Group_1_1__0");
					put(grammarAccess.getShiftRightUnsignedExpressionAccess().getGroup_1_2(), "rule__ShiftRightUnsignedExpression__Group_1_2__0");
					put(grammarAccess.getAddExpressionAccess().getGroup(), "rule__AddExpression__Group__0");
					put(grammarAccess.getAddExpressionAccess().getGroup_1(), "rule__AddExpression__Group_1__0");
					put(grammarAccess.getAddExpressionAccess().getGroup_1_1(), "rule__AddExpression__Group_1_1__0");
					put(grammarAccess.getAddExpressionAccess().getGroup_1_2(), "rule__AddExpression__Group_1_2__0");
					put(grammarAccess.getSubExpressionAccess().getGroup(), "rule__SubExpression__Group__0");
					put(grammarAccess.getSubExpressionAccess().getGroup_1(), "rule__SubExpression__Group_1__0");
					put(grammarAccess.getSubExpressionAccess().getGroup_1_1(), "rule__SubExpression__Group_1_1__0");
					put(grammarAccess.getSubExpressionAccess().getGroup_1_2(), "rule__SubExpression__Group_1_2__0");
					put(grammarAccess.getMultExpressionAccess().getGroup(), "rule__MultExpression__Group__0");
					put(grammarAccess.getMultExpressionAccess().getGroup_1(), "rule__MultExpression__Group_1__0");
					put(grammarAccess.getMultExpressionAccess().getGroup_1_1(), "rule__MultExpression__Group_1_1__0");
					put(grammarAccess.getMultExpressionAccess().getGroup_1_2(), "rule__MultExpression__Group_1_2__0");
					put(grammarAccess.getDivExpressionAccess().getGroup(), "rule__DivExpression__Group__0");
					put(grammarAccess.getDivExpressionAccess().getGroup_1(), "rule__DivExpression__Group_1__0");
					put(grammarAccess.getDivExpressionAccess().getGroup_1_1(), "rule__DivExpression__Group_1_1__0");
					put(grammarAccess.getDivExpressionAccess().getGroup_1_2(), "rule__DivExpression__Group_1_2__0");
					put(grammarAccess.getModExpressionAccess().getGroup(), "rule__ModExpression__Group__0");
					put(grammarAccess.getModExpressionAccess().getGroup_1(), "rule__ModExpression__Group_1__0");
					put(grammarAccess.getModExpressionAccess().getGroup_1_1(), "rule__ModExpression__Group_1_1__0");
					put(grammarAccess.getModExpressionAccess().getGroup_1_2(), "rule__ModExpression__Group_1_2__0");
					put(grammarAccess.getNegExpressionAccess().getGroup_0(), "rule__NegExpression__Group_0__0");
					put(grammarAccess.getTernaryOperationAccess().getGroup_0(), "rule__TernaryOperation__Group_0__0");
					put(grammarAccess.getAtomicExpressionAccess().getGroup_2(), "rule__AtomicExpression__Group_2__0");
					put(grammarAccess.getAtomicValuedExpressionAccess().getGroup_4(), "rule__AtomicValuedExpression__Group_4__0");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0(), "rule__ValuedObjectTestExpression__Group_0__0");
					put(grammarAccess.getPrimeIDAccess().getGroup(), "rule__PrimeID__Group__0");
					put(grammarAccess.getValuedObjectReferenceAccess().getGroup(), "rule__ValuedObjectReference__Group__0");
					put(grammarAccess.getValuedObjectReferenceAccess().getGroup_1(), "rule__ValuedObjectReference__Group_1__0");
					put(grammarAccess.getValuedObjectReferenceAccess().getGroup_2(), "rule__ValuedObjectReference__Group_2__0");
					put(grammarAccess.getScheduleObjectReferenceAccess().getGroup(), "rule__ScheduleObjectReference__Group__0");
					put(grammarAccess.getReferenceCallAccess().getGroup(), "rule__ReferenceCall__Group__0");
					put(grammarAccess.getReferenceCallAccess().getGroup_1_0(), "rule__ReferenceCall__Group_1_0__0");
					put(grammarAccess.getReferenceCallAccess().getGroup_1_0_2(), "rule__ReferenceCall__Group_1_0_2__0");
					put(grammarAccess.getFunctionCallAccess().getGroup(), "rule__FunctionCall__Group__0");
					put(grammarAccess.getFunctionCallAccess().getGroup_2_0(), "rule__FunctionCall__Group_2_0__0");
					put(grammarAccess.getFunctionCallAccess().getGroup_2_0_2(), "rule__FunctionCall__Group_2_0_2__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getParameterAccess().getGroup_0(), "rule__Parameter__Group_0__0");
					put(grammarAccess.getVectorValueAccess().getGroup(), "rule__VectorValue__Group__0");
					put(grammarAccess.getVectorValueAccess().getGroup_2(), "rule__VectorValue__Group_2__0");
					put(grammarAccess.getIgnoreValueAccess().getGroup(), "rule__IgnoreValue__Group__0");
					put(grammarAccess.getTagAnnotationAccess().getGroup(), "rule__TagAnnotation__Group__0");
					put(grammarAccess.getPragmaTagAccess().getGroup(), "rule__PragmaTag__Group__0");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getGroup(), "rule__KeyStringValueAnnotation__Group__0");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3(), "rule__KeyStringValueAnnotation__Group_3__0");
					put(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getGroup(), "rule__RestrictedKeyStringValueAnnotation__Group__0");
					put(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getGroup_3(), "rule__RestrictedKeyStringValueAnnotation__Group_3__0");
					put(grammarAccess.getStringPragmaAccess().getGroup(), "rule__StringPragma__Group__0");
					put(grammarAccess.getStringPragmaAccess().getGroup_3(), "rule__StringPragma__Group_3__0");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup(), "rule__TypedKeyStringValueAnnotation__Group__0");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6(), "rule__TypedKeyStringValueAnnotation__Group_6__0");
					put(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getGroup(), "rule__RestrictedTypedKeyStringValueAnnotation__Group__0");
					put(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getGroup_6(), "rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0");
					put(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getGroup(), "rule__QuotedKeyStringValueAnnotation__Group__0");
					put(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getGroup_3(), "rule__QuotedKeyStringValueAnnotation__Group_3__0");
					put(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getGroup(), "rule__QuotedTypedKeyStringValueAnnotation__Group__0");
					put(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getGroup_6(), "rule__QuotedTypedKeyStringValueAnnotation__Group_6__0");
					put(grammarAccess.getExtendedIDAccess().getGroup(), "rule__ExtendedID__Group__0");
					put(grammarAccess.getExtendedIDAccess().getGroup_1(), "rule__ExtendedID__Group_1__0");
					put(grammarAccess.getExtendedIDAccess().getGroup_2(), "rule__ExtendedID__Group_2__0");
					put(grammarAccess.getQualifiedIDAccess().getGroup(), "rule__QualifiedID__Group__0");
					put(grammarAccess.getQualifiedIDAccess().getGroup_1(), "rule__QualifiedID__Group_1__0");
					put(grammarAccess.getIntegerAccess().getGroup(), "rule__Integer__Group__0");
					put(grammarAccess.getFloategerAccess().getGroup(), "rule__Floateger__Group__0");
					put(grammarAccess.getProgramAccess().getAnnotationsAssignment_0(), "rule__Program__AnnotationsAssignment_0");
					put(grammarAccess.getProgramAccess().getNameAssignment_2(), "rule__Program__NameAssignment_2");
					put(grammarAccess.getProgramAccess().getPriorityAssignment_4(), "rule__Program__PriorityAssignment_4");
					put(grammarAccess.getProgramAccess().getDeclarationsAssignment_6(), "rule__Program__DeclarationsAssignment_6");
					put(grammarAccess.getProgramAccess().getGlobalHostCodeInstructionAssignment_7(), "rule__Program__GlobalHostCodeInstructionAssignment_7");
					put(grammarAccess.getProgramAccess().getStatesAssignment_8(), "rule__Program__StatesAssignment_8");
					put(grammarAccess.getStateAccess().getAnnotationsAssignment_0(), "rule__State__AnnotationsAssignment_0");
					put(grammarAccess.getStateAccess().getNameAssignment_3(), "rule__State__NameAssignment_3");
					put(grammarAccess.getStateAccess().getDeclarationsAssignment_6(), "rule__State__DeclarationsAssignment_6");
					put(grammarAccess.getStateAccess().getInstructionsAssignment_7_0(), "rule__State__InstructionsAssignment_7_0");
					put(grammarAccess.getHostCodeInstructionAccess().getHostCodeAssignment(), "rule__HostCodeInstruction__HostCodeAssignment");
					put(grammarAccess.getAssignmentAccess().getValuedObjectAssignment_0(), "rule__Assignment__ValuedObjectAssignment_0");
					put(grammarAccess.getAssignmentAccess().getIndicesAssignment_1_1(), "rule__Assignment__IndicesAssignment_1_1");
					put(grammarAccess.getAssignmentAccess().getExpressionAssignment_3(), "rule__Assignment__ExpressionAssignment_3");
					put(grammarAccess.getPrioAccess().getPriorityAssignment_2(), "rule__Prio__PriorityAssignment_2");
					put(grammarAccess.getPrioAccess().getContinuationAssignment_3_1(), "rule__Prio__ContinuationAssignment_3_1");
					put(grammarAccess.getTransAccess().getContinuationAssignment_2(), "rule__Trans__ContinuationAssignment_2");
					put(grammarAccess.getForkAccess().getContinuationAssignment_2(), "rule__Fork__ContinuationAssignment_2");
					put(grammarAccess.getForkAccess().getPriorityAssignment_4(), "rule__Fork__PriorityAssignment_4");
					put(grammarAccess.getJoinAccess().getContinuationAssignment_2_1(), "rule__Join__ContinuationAssignment_2_1");
					put(grammarAccess.getPauseAccess().getContinuationAssignment_2_1(), "rule__Pause__ContinuationAssignment_2_1");
					put(grammarAccess.getTermAccess().getContinuationAssignment_2_1(), "rule__Term__ContinuationAssignment_2_1");
					put(grammarAccess.getHaltAccess().getContinuationAssignment_2_1(), "rule__Halt__ContinuationAssignment_2_1");
					put(grammarAccess.getLocalSignalAccess().getSignalAssignment_2(), "rule__LocalSignal__SignalAssignment_2");
					put(grammarAccess.getEmitAccess().getSignalAssignment_2(), "rule__Emit__SignalAssignment_2");
					put(grammarAccess.getEmitAccess().getValueAssignment_3_1(), "rule__Emit__ValueAssignment_3_1");
					put(grammarAccess.getEmitAccess().getContinuationAssignment_4_1(), "rule__Emit__ContinuationAssignment_4_1");
					put(grammarAccess.getAbortAccess().getContinuationAssignment_2_1(), "rule__Abort__ContinuationAssignment_2_1");
					put(grammarAccess.getIfAccess().getExpressionAssignment_2(), "rule__If__ExpressionAssignment_2");
					put(grammarAccess.getIfAccess().getContinuationAssignment_3_1(), "rule__If__ContinuationAssignment_3_1");
					put(grammarAccess.getIfAccess().getInstructionsAssignment_6_0(), "rule__If__InstructionsAssignment_6_0");
					put(grammarAccess.getAwaitAccess().getSignalAssignment_2(), "rule__Await__SignalAssignment_2");
					put(grammarAccess.getAwaitAccess().getContinuationAssignment_3_1(), "rule__Await__ContinuationAssignment_3_1");
					put(grammarAccess.getKextAccess().getScopesAssignment(), "rule__Kext__ScopesAssignment");
					put(grammarAccess.getRootScopeAccess().getDeclarationsAssignment_1(), "rule__RootScope__DeclarationsAssignment_1");
					put(grammarAccess.getRootScopeAccess().getEntitiesAssignment_2(), "rule__RootScope__EntitiesAssignment_2");
					put(grammarAccess.getRootScopeAccess().getScopesAssignment_3_1(), "rule__RootScope__ScopesAssignment_3_1");
					put(grammarAccess.getScopeAccess().getNameAssignment_1(), "rule__Scope__NameAssignment_1");
					put(grammarAccess.getScopeAccess().getDeclarationsAssignment_3(), "rule__Scope__DeclarationsAssignment_3");
					put(grammarAccess.getScopeAccess().getEntitiesAssignment_4(), "rule__Scope__EntitiesAssignment_4");
					put(grammarAccess.getScopeAccess().getScopesAssignment_5_1(), "rule__Scope__ScopesAssignment_5_1");
					put(grammarAccess.getTestEntityAccess().getExpressionAssignment_0(), "rule__TestEntity__ExpressionAssignment_0");
					put(grammarAccess.getTestEntityAccess().getEffectAssignment_1(), "rule__TestEntity__EffectAssignment_1");
					put(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAssignment_0(), "rule__AnnotatedExpression__AnnotationsAssignment_0");
					put(grammarAccess.getAnnotatedExpressionAccess().getExpressionAssignment_2(), "rule__AnnotatedExpression__ExpressionAssignment_2");
					put(grammarAccess.getVariableDeclarationAccess().getAnnotationsAssignment_0(), "rule__VariableDeclaration__AnnotationsAssignment_0");
					put(grammarAccess.getVariableDeclarationAccess().getConstAssignment_1(), "rule__VariableDeclaration__ConstAssignment_1");
					put(grammarAccess.getVariableDeclarationAccess().getInputAssignment_2(), "rule__VariableDeclaration__InputAssignment_2");
					put(grammarAccess.getVariableDeclarationAccess().getOutputAssignment_3(), "rule__VariableDeclaration__OutputAssignment_3");
					put(grammarAccess.getVariableDeclarationAccess().getStaticAssignment_4(), "rule__VariableDeclaration__StaticAssignment_4");
					put(grammarAccess.getVariableDeclarationAccess().getSignalAssignment_5_0_0(), "rule__VariableDeclaration__SignalAssignment_5_0_0");
					put(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_5_0_1(), "rule__VariableDeclaration__TypeAssignment_5_0_1");
					put(grammarAccess.getVariableDeclarationAccess().getSignalAssignment_5_1(), "rule__VariableDeclaration__SignalAssignment_5_1");
					put(grammarAccess.getVariableDeclarationAccess().getValuedObjectsAssignment_6(), "rule__VariableDeclaration__ValuedObjectsAssignment_6");
					put(grammarAccess.getVariableDeclarationAccess().getValuedObjectsAssignment_7_1(), "rule__VariableDeclaration__ValuedObjectsAssignment_7_1");
					put(grammarAccess.getVariableDeclarationAccess().getAnnotationsAssignment_9(), "rule__VariableDeclaration__AnnotationsAssignment_9");
					put(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAssignment_0(), "rule__VariableDeclarationWOSemicolon__AnnotationsAssignment_0");
					put(grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstAssignment_1(), "rule__VariableDeclarationWOSemicolon__ConstAssignment_1");
					put(grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputAssignment_2(), "rule__VariableDeclarationWOSemicolon__InputAssignment_2");
					put(grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputAssignment_3(), "rule__VariableDeclarationWOSemicolon__OutputAssignment_3");
					put(grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticAssignment_4(), "rule__VariableDeclarationWOSemicolon__StaticAssignment_4");
					put(grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalAssignment_5_0_0(), "rule__VariableDeclarationWOSemicolon__SignalAssignment_5_0_0");
					put(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeAssignment_5_0_1(), "rule__VariableDeclarationWOSemicolon__TypeAssignment_5_0_1");
					put(grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalAssignment_5_1(), "rule__VariableDeclarationWOSemicolon__SignalAssignment_5_1");
					put(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsAssignment_6(), "rule__VariableDeclarationWOSemicolon__ValuedObjectsAssignment_6");
					put(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsAssignment_7_1(), "rule__VariableDeclarationWOSemicolon__ValuedObjectsAssignment_7_1");
					put(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAssignment_8(), "rule__VariableDeclarationWOSemicolon__AnnotationsAssignment_8");
					put(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAssignment_0(), "rule__ReferenceDeclaration__AnnotationsAssignment_0");
					put(grammarAccess.getReferenceDeclarationAccess().getReferenceAssignment_1_0_1(), "rule__ReferenceDeclaration__ReferenceAssignment_1_0_1");
					put(grammarAccess.getReferenceDeclarationAccess().getExternAssignment_1_1_1(), "rule__ReferenceDeclaration__ExternAssignment_1_1_1");
					put(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsAssignment_2(), "rule__ReferenceDeclaration__ValuedObjectsAssignment_2");
					put(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsAssignment_3_1(), "rule__ReferenceDeclaration__ValuedObjectsAssignment_3_1");
					put(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAssignment_5(), "rule__ReferenceDeclaration__AnnotationsAssignment_5");
					put(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAssignment_0(), "rule__ReferenceDeclarationWOSemicolon__AnnotationsAssignment_0");
					put(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceAssignment_1_0_1(), "rule__ReferenceDeclarationWOSemicolon__ReferenceAssignment_1_0_1");
					put(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternAssignment_1_1_1(), "rule__ReferenceDeclarationWOSemicolon__ExternAssignment_1_1_1");
					put(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsAssignment_2(), "rule__ReferenceDeclarationWOSemicolon__ValuedObjectsAssignment_2");
					put(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsAssignment_3_1(), "rule__ReferenceDeclarationWOSemicolon__ValuedObjectsAssignment_3_1");
					put(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAssignment_4(), "rule__ReferenceDeclarationWOSemicolon__AnnotationsAssignment_4");
					put(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAssignment_0(), "rule__ScheduleDeclaration__AnnotationsAssignment_0");
					put(grammarAccess.getScheduleDeclarationAccess().getNameAssignment_2(), "rule__ScheduleDeclaration__NameAssignment_2");
					put(grammarAccess.getScheduleDeclarationAccess().getGlobalAssignment_3(), "rule__ScheduleDeclaration__GlobalAssignment_3");
					put(grammarAccess.getScheduleDeclarationAccess().getPrioritiesAssignment_4(), "rule__ScheduleDeclaration__PrioritiesAssignment_4");
					put(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsAssignment_5(), "rule__ScheduleDeclaration__ValuedObjectsAssignment_5");
					put(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsAssignment_6_1(), "rule__ScheduleDeclaration__ValuedObjectsAssignment_6_1");
					put(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAssignment_8(), "rule__ScheduleDeclaration__AnnotationsAssignment_8");
					put(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAssignment_0(), "rule__ScheduleDeclarationWOSemicolon__AnnotationsAssignment_0");
					put(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNameAssignment_2(), "rule__ScheduleDeclarationWOSemicolon__NameAssignment_2");
					put(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalAssignment_3(), "rule__ScheduleDeclarationWOSemicolon__GlobalAssignment_3");
					put(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesAssignment_4(), "rule__ScheduleDeclarationWOSemicolon__PrioritiesAssignment_4");
					put(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsAssignment_5(), "rule__ScheduleDeclarationWOSemicolon__ValuedObjectsAssignment_5");
					put(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsAssignment_6_1(), "rule__ScheduleDeclarationWOSemicolon__ValuedObjectsAssignment_6_1");
					put(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAssignment_7(), "rule__ScheduleDeclarationWOSemicolon__AnnotationsAssignment_7");
					put(grammarAccess.getSchedulePriorityAccess().getPriorityAssignment_1(), "rule__SchedulePriority__PriorityAssignment_1");
					put(grammarAccess.getSchedulePriorityAccess().getTypeAssignment_2(), "rule__SchedulePriority__TypeAssignment_2");
					put(grammarAccess.getValuedObjectAccess().getAnnotationsAssignment_0(), "rule__ValuedObject__AnnotationsAssignment_0");
					put(grammarAccess.getValuedObjectAccess().getNameAssignment_1(), "rule__ValuedObject__NameAssignment_1");
					put(grammarAccess.getValuedObjectAccess().getCardinalitiesAssignment_2_1(), "rule__ValuedObject__CardinalitiesAssignment_2_1");
					put(grammarAccess.getValuedObjectAccess().getInitialValueAssignment_3_1(), "rule__ValuedObject__InitialValueAssignment_3_1");
					put(grammarAccess.getValuedObjectAccess().getCombineOperatorAssignment_4_1(), "rule__ValuedObject__CombineOperatorAssignment_4_1");
					put(grammarAccess.getEmissionAccess().getAnnotationsAssignment_0(), "rule__Emission__AnnotationsAssignment_0");
					put(grammarAccess.getEmissionAccess().getValuedObjectAssignment_1(), "rule__Emission__ValuedObjectAssignment_1");
					put(grammarAccess.getEmissionAccess().getNewValueAssignment_2_1(), "rule__Emission__NewValueAssignment_2_1");
					put(grammarAccess.getEmissionAccess().getScheduleAssignment_3_1(), "rule__Emission__ScheduleAssignment_3_1");
					put(grammarAccess.getSubReferenceAssignmentAccess().getAnnotationsAssignment_0(), "rule__SubReferenceAssignment__AnnotationsAssignment_0");
					put(grammarAccess.getSubReferenceAssignmentAccess().getValuedObjectAssignment_1(), "rule__SubReferenceAssignment__ValuedObjectAssignment_1");
					put(grammarAccess.getSubReferenceAssignmentAccess().getIndicesAssignment_2_1(), "rule__SubReferenceAssignment__IndicesAssignment_2_1");
					put(grammarAccess.getSubReferenceAssignmentAccess().getSubReferenceAssignment_3_1(), "rule__SubReferenceAssignment__SubReferenceAssignment_3_1");
					put(grammarAccess.getSubReferenceAssignmentAccess().getOperatorAssignment_4(), "rule__SubReferenceAssignment__OperatorAssignment_4");
					put(grammarAccess.getSubReferenceAssignmentAccess().getExpressionAssignment_5(), "rule__SubReferenceAssignment__ExpressionAssignment_5");
					put(grammarAccess.getSubReferenceAssignmentAccess().getScheduleAssignment_6_1(), "rule__SubReferenceAssignment__ScheduleAssignment_6_1");
					put(grammarAccess.getPostfixEffectAccess().getAnnotationsAssignment_0(), "rule__PostfixEffect__AnnotationsAssignment_0");
					put(grammarAccess.getPostfixEffectAccess().getValuedObjectAssignment_1(), "rule__PostfixEffect__ValuedObjectAssignment_1");
					put(grammarAccess.getPostfixEffectAccess().getIndicesAssignment_2_1(), "rule__PostfixEffect__IndicesAssignment_2_1");
					put(grammarAccess.getPostfixEffectAccess().getOperatorAssignment_3(), "rule__PostfixEffect__OperatorAssignment_3");
					put(grammarAccess.getPostfixEffectAccess().getScheduleAssignment_4_1(), "rule__PostfixEffect__ScheduleAssignment_4_1");
					put(grammarAccess.getHostcodeEffectAccess().getAnnotationsAssignment_0(), "rule__HostcodeEffect__AnnotationsAssignment_0");
					put(grammarAccess.getHostcodeEffectAccess().getTextAssignment_1(), "rule__HostcodeEffect__TextAssignment_1");
					put(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAssignment_0(), "rule__ReferenceCallEffect__AnnotationsAssignment_0");
					put(grammarAccess.getReferenceCallEffectAccess().getValuedObjectAssignment_1(), "rule__ReferenceCallEffect__ValuedObjectAssignment_1");
					put(grammarAccess.getReferenceCallEffectAccess().getParametersAssignment_2_0_1(), "rule__ReferenceCallEffect__ParametersAssignment_2_0_1");
					put(grammarAccess.getReferenceCallEffectAccess().getParametersAssignment_2_0_2_1(), "rule__ReferenceCallEffect__ParametersAssignment_2_0_2_1");
					put(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAssignment_0_0(), "rule__FunctionCallEffect__AnnotationsAssignment_0_0");
					put(grammarAccess.getFunctionCallEffectAccess().getFunctionNameAssignment_0_1_1(), "rule__FunctionCallEffect__FunctionNameAssignment_0_1_1");
					put(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_0_1_2_0_1(), "rule__FunctionCallEffect__ParametersAssignment_0_1_2_0_1");
					put(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_0_1_2_0_2_1(), "rule__FunctionCallEffect__ParametersAssignment_0_1_2_0_2_1");
					put(grammarAccess.getFunctionCallEffectAccess().getFunctionNameAssignment_1_1(), "rule__FunctionCallEffect__FunctionNameAssignment_1_1");
					put(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_1_2_0_1(), "rule__FunctionCallEffect__ParametersAssignment_1_2_0_1");
					put(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_1_2_0_2_1(), "rule__FunctionCallEffect__ParametersAssignment_1_2_0_2_1");
					put(grammarAccess.getPrintCallEffectAccess().getAnnotationsAssignment_0(), "rule__PrintCallEffect__AnnotationsAssignment_0");
					put(grammarAccess.getPrintCallEffectAccess().getParametersAssignment_2(), "rule__PrintCallEffect__ParametersAssignment_2");
					put(grammarAccess.getPrintCallEffectAccess().getParametersAssignment_3_1(), "rule__PrintCallEffect__ParametersAssignment_3_1");
					put(grammarAccess.getExpressionAccess().getScheduleAssignment_1_1(), "rule__Expression__ScheduleAssignment_1_1");
					put(grammarAccess.getLogicalOrExpressionAccess().getOperatorAssignment_1_1_0(), "rule__LogicalOrExpression__OperatorAssignment_1_1_0");
					put(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsAssignment_1_1_1(), "rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1");
					put(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsAssignment_1_2_1(), "rule__LogicalOrExpression__SubExpressionsAssignment_1_2_1");
					put(grammarAccess.getLogicalAndExpressionAccess().getOperatorAssignment_1_1_0(), "rule__LogicalAndExpression__OperatorAssignment_1_1_0");
					put(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsAssignment_1_1_1(), "rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1");
					put(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsAssignment_1_2_1(), "rule__LogicalAndExpression__SubExpressionsAssignment_1_2_1");
					put(grammarAccess.getBitwiseOrExpressionAccess().getOperatorAssignment_1_1_0(), "rule__BitwiseOrExpression__OperatorAssignment_1_1_0");
					put(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsAssignment_1_1_1(), "rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1");
					put(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsAssignment_1_2_1(), "rule__BitwiseOrExpression__SubExpressionsAssignment_1_2_1");
					put(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorAssignment_1_1_0(), "rule__BitwiseXOrExpression__OperatorAssignment_1_1_0");
					put(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsAssignment_1_1_1(), "rule__BitwiseXOrExpression__SubExpressionsAssignment_1_1_1");
					put(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsAssignment_1_2_1(), "rule__BitwiseXOrExpression__SubExpressionsAssignment_1_2_1");
					put(grammarAccess.getBitwiseAndExpressionAccess().getOperatorAssignment_1_1_0(), "rule__BitwiseAndExpression__OperatorAssignment_1_1_0");
					put(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsAssignment_1_1_1(), "rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1");
					put(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsAssignment_1_2_1(), "rule__BitwiseAndExpression__SubExpressionsAssignment_1_2_1");
					put(grammarAccess.getCompareOperationAccess().getOperatorAssignment_1_1(), "rule__CompareOperation__OperatorAssignment_1_1");
					put(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_1_2(), "rule__CompareOperation__SubExpressionsAssignment_1_2");
					put(grammarAccess.getBitwiseNotExpressionAccess().getOperatorAssignment_0_1(), "rule__BitwiseNotExpression__OperatorAssignment_0_1");
					put(grammarAccess.getBitwiseNotExpressionAccess().getSubExpressionsAssignment_0_2(), "rule__BitwiseNotExpression__SubExpressionsAssignment_0_2");
					put(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1(), "rule__NotExpression__OperatorAssignment_0_1");
					put(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2(), "rule__NotExpression__SubExpressionsAssignment_0_2");
					put(grammarAccess.getShiftLeftExpressionAccess().getOperatorAssignment_1_1_0(), "rule__ShiftLeftExpression__OperatorAssignment_1_1_0");
					put(grammarAccess.getShiftLeftExpressionAccess().getSubExpressionsAssignment_1_1_1(), "rule__ShiftLeftExpression__SubExpressionsAssignment_1_1_1");
					put(grammarAccess.getShiftLeftExpressionAccess().getSubExpressionsAssignment_1_2_1(), "rule__ShiftLeftExpression__SubExpressionsAssignment_1_2_1");
					put(grammarAccess.getShiftRightExpressionAccess().getOperatorAssignment_1_1_0(), "rule__ShiftRightExpression__OperatorAssignment_1_1_0");
					put(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsAssignment_1_1_1(), "rule__ShiftRightExpression__SubExpressionsAssignment_1_1_1");
					put(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsAssignment_1_2_1(), "rule__ShiftRightExpression__SubExpressionsAssignment_1_2_1");
					put(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorAssignment_1_1_0(), "rule__ShiftRightUnsignedExpression__OperatorAssignment_1_1_0");
					put(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsAssignment_1_1_1(), "rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_1_1");
					put(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsAssignment_1_2_1(), "rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_2_1");
					put(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1_0(), "rule__AddExpression__OperatorAssignment_1_1_0");
					put(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_1_1(), "rule__AddExpression__SubExpressionsAssignment_1_1_1");
					put(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_2_1(), "rule__AddExpression__SubExpressionsAssignment_1_2_1");
					put(grammarAccess.getSubExpressionAccess().getOperatorAssignment_1_1_0(), "rule__SubExpression__OperatorAssignment_1_1_0");
					put(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_1_1(), "rule__SubExpression__SubExpressionsAssignment_1_1_1");
					put(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_2_1(), "rule__SubExpression__SubExpressionsAssignment_1_2_1");
					put(grammarAccess.getMultExpressionAccess().getOperatorAssignment_1_1_0(), "rule__MultExpression__OperatorAssignment_1_1_0");
					put(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_1_1(), "rule__MultExpression__SubExpressionsAssignment_1_1_1");
					put(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_2_1(), "rule__MultExpression__SubExpressionsAssignment_1_2_1");
					put(grammarAccess.getDivExpressionAccess().getOperatorAssignment_1_1_0(), "rule__DivExpression__OperatorAssignment_1_1_0");
					put(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_1_1(), "rule__DivExpression__SubExpressionsAssignment_1_1_1");
					put(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_2_1(), "rule__DivExpression__SubExpressionsAssignment_1_2_1");
					put(grammarAccess.getModExpressionAccess().getOperatorAssignment_1_1_0(), "rule__ModExpression__OperatorAssignment_1_1_0");
					put(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_1_1(), "rule__ModExpression__SubExpressionsAssignment_1_1_1");
					put(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_2_1(), "rule__ModExpression__SubExpressionsAssignment_1_2_1");
					put(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1(), "rule__NegExpression__OperatorAssignment_0_1");
					put(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2(), "rule__NegExpression__SubExpressionsAssignment_0_2");
					put(grammarAccess.getTernaryOperationAccess().getSubExpressionsAssignment_0_1(), "rule__TernaryOperation__SubExpressionsAssignment_0_1");
					put(grammarAccess.getTernaryOperationAccess().getOperatorAssignment_0_2(), "rule__TernaryOperation__OperatorAssignment_0_2");
					put(grammarAccess.getTernaryOperationAccess().getSubExpressionsAssignment_0_3(), "rule__TernaryOperation__SubExpressionsAssignment_0_3");
					put(grammarAccess.getTernaryOperationAccess().getSubExpressionsAssignment_0_5(), "rule__TernaryOperation__SubExpressionsAssignment_0_5");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1(), "rule__ValuedObjectTestExpression__OperatorAssignment_0_1");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3(), "rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3");
					put(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment_0(), "rule__ValuedObjectReference__ValuedObjectAssignment_0");
					put(grammarAccess.getValuedObjectReferenceAccess().getIndicesAssignment_1_1(), "rule__ValuedObjectReference__IndicesAssignment_1_1");
					put(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceAssignment_2_1(), "rule__ValuedObjectReference__SubReferenceAssignment_2_1");
					put(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectAssignment_0(), "rule__ScheduleObjectReference__ValuedObjectAssignment_0");
					put(grammarAccess.getScheduleObjectReferenceAccess().getPriorityAssignment_1(), "rule__ScheduleObjectReference__PriorityAssignment_1");
					put(grammarAccess.getReferenceCallAccess().getValuedObjectAssignment_0(), "rule__ReferenceCall__ValuedObjectAssignment_0");
					put(grammarAccess.getReferenceCallAccess().getParametersAssignment_1_0_1(), "rule__ReferenceCall__ParametersAssignment_1_0_1");
					put(grammarAccess.getReferenceCallAccess().getParametersAssignment_1_0_2_1(), "rule__ReferenceCall__ParametersAssignment_1_0_2_1");
					put(grammarAccess.getFunctionCallAccess().getFunctionNameAssignment_1(), "rule__FunctionCall__FunctionNameAssignment_1");
					put(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0_1(), "rule__FunctionCall__ParametersAssignment_2_0_1");
					put(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0_2_1(), "rule__FunctionCall__ParametersAssignment_2_0_2_1");
					put(grammarAccess.getParameterAccess().getPureOutputAssignment_0_0(), "rule__Parameter__PureOutputAssignment_0_0");
					put(grammarAccess.getParameterAccess().getCallByReferenceAssignment_0_1(), "rule__Parameter__CallByReferenceAssignment_0_1");
					put(grammarAccess.getParameterAccess().getExpressionAssignment_1(), "rule__Parameter__ExpressionAssignment_1");
					put(grammarAccess.getTextExpressionAccess().getTextAssignment(), "rule__TextExpression__TextAssignment");
					put(grammarAccess.getIntValueAccess().getValueAssignment(), "rule__IntValue__ValueAssignment");
					put(grammarAccess.getFloatValueAccess().getValueAssignment(), "rule__FloatValue__ValueAssignment");
					put(grammarAccess.getBoolValueAccess().getValueAssignment(), "rule__BoolValue__ValueAssignment");
					put(grammarAccess.getStringValueAccess().getValueAssignment(), "rule__StringValue__ValueAssignment");
					put(grammarAccess.getVectorValueAccess().getValuesAssignment_1(), "rule__VectorValue__ValuesAssignment_1");
					put(grammarAccess.getVectorValueAccess().getValuesAssignment_2_1(), "rule__VectorValue__ValuesAssignment_2_1");
					put(grammarAccess.getCommentAnnotationAccess().getValuesAssignment(), "rule__CommentAnnotation__ValuesAssignment");
					put(grammarAccess.getCommentAnnotatonSLAccess().getValuesAssignment(), "rule__CommentAnnotatonSL__ValuesAssignment");
					put(grammarAccess.getTagAnnotationAccess().getNameAssignment_1(), "rule__TagAnnotation__NameAssignment_1");
					put(grammarAccess.getPragmaTagAccess().getNameAssignment_1(), "rule__PragmaTag__NameAssignment_1");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1(), "rule__KeyStringValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getValuesAssignment_2(), "rule__KeyStringValueAnnotation__ValuesAssignment_2");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getValuesAssignment_3_1(), "rule__KeyStringValueAnnotation__ValuesAssignment_3_1");
					put(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameAssignment_1(), "rule__RestrictedKeyStringValueAnnotation__NameAssignment_1");
					put(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesAssignment_2(), "rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_2");
					put(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesAssignment_3_1(), "rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_3_1");
					put(grammarAccess.getStringPragmaAccess().getNameAssignment_1(), "rule__StringPragma__NameAssignment_1");
					put(grammarAccess.getStringPragmaAccess().getValuesAssignment_2(), "rule__StringPragma__ValuesAssignment_2");
					put(grammarAccess.getStringPragmaAccess().getValuesAssignment_3_1(), "rule__StringPragma__ValuesAssignment_3_1");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1(), "rule__TypedKeyStringValueAnnotation__NameAssignment_1");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3(), "rule__TypedKeyStringValueAnnotation__TypeAssignment_3");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesAssignment_5(), "rule__TypedKeyStringValueAnnotation__ValuesAssignment_5");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1(), "rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1");
					put(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameAssignment_1(), "rule__RestrictedTypedKeyStringValueAnnotation__NameAssignment_1");
					put(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeAssignment_3(), "rule__RestrictedTypedKeyStringValueAnnotation__TypeAssignment_3");
					put(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesAssignment_5(), "rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_5");
					put(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1(), "rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_6_1");
					put(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameAssignment_1(), "rule__QuotedKeyStringValueAnnotation__NameAssignment_1");
					put(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesAssignment_2(), "rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2");
					put(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesAssignment_3_1(), "rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1");
					put(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameAssignment_1(), "rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1");
					put(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeAssignment_3(), "rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3");
					put(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesAssignment_5(), "rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5");
					put(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1(), "rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.cau.cs.kieler.s.ui.contentassist.antlr.internal.InternalSParser typedParser = (de.cau.cs.kieler.s.ui.contentassist.antlr.internal.InternalSParser) parser;
			typedParser.entryRuleProgram();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public SGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(SGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
