<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.cau.cs.kieler</groupId>
  <artifactId>semantics</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>


  <!-- Define a few properties used throughout all build profiles. -->
  <properties>
    <!-- Language server dependency versions -->
    <elk-version>0.9.1</elk-version>
    <klighd-version>3.0.2.v20240507</klighd-version>
    <lsp4j-version>0.23.0</lsp4j-version>
    <pragmatics-version>0.51.0.v20240410</pragmatics-version>

    <!-- Xtext compile dependency versions -->
    <xtend-version>2.36.0</xtend-version>
    <xtext-version>2.36.0</xtext-version>

    <!-- Tycho -->
    <tycho-version>2.7.5</tycho-version>
    <tycho.disableP2Mirrors>true</tycho.disableP2Mirrors>

    <!-- Java -->
    <targetJdk>11</targetJdk>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
  
    <!-- Non-breakable space, as normal spaces are trimmed. -->
    <sourceFeatureLabelSuffix>&#xA0;(Sources)</sourceFeatureLabelSuffix>

    <!-- guarantee that we use utf8 for compilation, this is especially required due to xtend's template symbols (Â«) when running maven on windows. -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>
    <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
  </properties>


  <!-- Define one profile for each output target we have. -->
  <profiles>
    <profile>
      <id>semantics</id>

      <modules>
        <module>de.cau.cs.kieler.semantics.targetplatform</module>
        <module>../plugins</module>
        <module>../features</module>
      </modules>
    </profile>

    <profile>
      <id>semantics.test</id>

      <modules>
        <module>de.cau.cs.kieler.semantics.targetplatform</module>
        <module>../plugins</module>
        <module>../test</module>
        <module>de.cau.cs.kieler.sccharts.cli</module>
        <module>de.cau.cs.kieler.kicool.cli</module>
        <module>de.cau.cs.kieler.kicool.klighd.cli</module>
        <module>../test/de.cau.cs.kieler.cli.test</module>
        <module>../language-server</module>
        <module>de.cau.cs.kieler.language.server.cli</module>
      </modules>
    </profile>

    <profile>
      <id>semantics.cli.test</id>

      <modules>
        <module>de.cau.cs.kieler.semantics.targetplatform</module>
        <module>../plugins</module>
        <module>de.cau.cs.kieler.sccharts.cli</module>
        <module>de.cau.cs.kieler.kicool.cli</module>
        <module>de.cau.cs.kieler.kicool.klighd.cli</module>
        <module>../test/de.cau.cs.kieler.cli.test</module>
      </modules>
    </profile>

    <profile>
      <id>semantics.product</id>

      <modules>
        <module>de.cau.cs.kieler.semantics.targetplatform</module> 
        <module>../plugins</module>
        <module>../features</module>
        <module>de.cau.cs.kieler.semantics.repository</module>
        <module>de.cau.cs.kieler.semantics.product.repository</module>
        <module>de.cau.cs.kieler.sccharts.cli</module>
        <module>de.cau.cs.kieler.kicool.cli</module>
        <module>de.cau.cs.kieler.kicool.klighd.cli</module>
        <module>../language-server</module>
        <module>de.cau.cs.kieler.language.server.cli</module>
      </modules>
    </profile>

    <profile>
      <id>semantics.ls</id>
      <modules>
        <module>de.cau.cs.kieler.semantics.targetplatform</module>
        <module>../plugins</module>
        <module>../language-server</module>
        <module>de.cau.cs.kieler.language.server.cli</module>
      </modules>
    </profile>


    <profile>
      <id>semantics.all</id>
      
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>

      <modules>
        <module>de.cau.cs.kieler.semantics.targetplatform</module> 
        <module>../plugins</module>
        <module>../test</module>
        <module>../features</module>
        <module>de.cau.cs.kieler.semantics.repository</module>
        <module>de.cau.cs.kieler.semantics.product.repository</module>
        <module>de.cau.cs.kieler.sccharts.cli</module>
        <module>de.cau.cs.kieler.kicool.cli</module>
        <module>de.cau.cs.kieler.kicool.klighd.cli</module>
        <module>../language-server</module>
        <module>de.cau.cs.kieler.language.server.cli</module>
        <module>../test/de.cau.cs.kieler.cli.test</module>
      </modules>
    </profile>
  
  </profiles>

  <!-- This configuration is based on the Xtext example project (https://github.com/xtext/maven-xtext-example) and prevents weird build errors -->
  <repositories>
    <repository>
      <id>codehaus-snapshots</id>
      <name>disable dead 'Codehaus Snapshots' repository, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=481478</name>
      <url>http://nexus.codehaus.org/snapshots/</url>
      <releases>
          <enabled>false</enabled>
      </releases>
      <snapshots>
          <enabled>false</enabled>
      </snapshots>
    </repository>
    <!-- This must be disabled explicitly, otherwise it is enabled by https://github.com/mojohaus/mojo-parent 
        which is taken from exec-maven-plugin from at least version 1.6.0 -->
    <repository>
      <id>ossrh-snapshots</id>
      <name>ossrh-snapshots</name>
      <releases>
          <enabled>false</enabled>
      </releases>
      <snapshots>
          <enabled>false</enabled>
      </snapshots>
      <url>http://oss.sonatype.org/content/repositories/snapshots</url>
    </repository>
    <!-- This is enabled by /org/sonatype/oss/oss-parent/7 used as parent by 
        org/xtext/antlr-generator/3.2.1 -->
    <repository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
          <enabled>false</enabled>
      </releases>
      <snapshots>
          <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <!-- This configuration is based on the Xtext example project (https://github.com/xtext/maven-xtext-example) and prevents weird build errors -->
    <pluginRepository>
      <id>codehaus-snapshots</id>
      <name>disable dead 'Codehaus Snapshots' repository, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=481478</name>
      <url>http://nexus.codehaus.org/snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>ossrh-snapshots</id>
      <name>ossrh-snapshots</name>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <url>http://oss.sonatype.org/content/repositories/snapshots</url>
    </pluginRepository>
    <pluginRepository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>


  <dependencyManagement>
    <dependencies>
      <!-- A dependency that Maven artifacts of Eclipse bundles tries to pull the (non-existent) version 1.0.0 from. This version exists and will be used instead. -->
      <dependency>
        <groupId>xml-apis</groupId>
        <artifactId>xml-apis-ext</artifactId>
        <version>1.3.04</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <resources>
      <resource>
        <directory>.</directory>
         <includes>
           <include>META-INF/services/**</include>
         </includes>
      </resource>
    </resources>

    <plugins>
      <!-- we need tycho plugin to build eclipse plugins -->
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-maven-plugin</artifactId>
        <version>${tycho-version}</version>
        <extensions>true</extensions>
      </plugin>

      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-source-plugin</artifactId>
        <version>${tycho-version}</version>
        <executions>
          <execution>
            <id>plugin-source</id>
            <goals>
              <goal>plugin-source</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Enable java assertions during junit test runs. -->
      <!-- The "enableAssertions" property is only available in the maven-surefire plugin. -->
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-surefire-plugin</artifactId>
        <version>${tycho-version}</version>
        <configuration>
          <argLine>-ea</argLine>
          <includes>
           <include>**/Test*.java</include>
           <include>**/*Test.java</include>
           <include>**/*Tests.java</include>
           <include>**/*TestCase.java</include>
          </includes>
          <excludes>
            <exclude>**/Abstract*.java</exclude>
          </excludes>
        </configuration>
      </plugin>      

      <!-- as we have platform specific fragments we need to tell tycho about target platforms -->
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>target-platform-configuration</artifactId>
        <version>${tycho-version}</version>
        <configuration>      
          <target>
            <artifact>
              <groupId>de.cau.cs.kieler</groupId>
              <artifactId>de.cau.cs.kieler.semantics.targetplatform</artifactId>
              <version>0.1.0-SNAPSHOT</version>
            </artifact>
          </target>     
      
          <environments>
            <!-- als 2019-06-17: Dropped 32bit support. Primariliy due to cdt dependency (https://bugs.eclipse.org/bugs/show_bug.cgi?id=543366) -->
            <!-- <environment>
              <os>linux</os>
              <ws>gtk</ws>
              <arch>x86</arch>
            </environment> -->
            <environment>
              <os>linux</os>
              <ws>gtk</ws>
              <arch>x86_64</arch>
            </environment>
            <!-- <environment>
              <os>win32</os>
              <ws>win32</ws>
              <arch>x86</arch>
            </environment> -->
            <environment>
              <os>win32</os>
              <ws>win32</ws>
              <arch>x86_64</arch>
            </environment>
            <environment>
              <os>macosx</os>
              <ws>cocoa</ws>
              <arch>x86_64</arch>
            </environment>
            <!-- Apple M1/M2 chip support -->
            <environment>
              <os>macosx</os>
              <ws>cocoa</ws>
              <arch>aarch64</arch>
            </environment>
          </environments>
        </configuration>
      </plugin>

      <!-- Produces a list of all direct and transient dependencies for each module -->
      <!-- NO LONGER NEEDED: We do not make dependency sanity checks anymore -->
      <!-- <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>tree</id>
            <phase>initialize</phase>
            <goals>
              <goal>tree</goal>
            </goals>
            <configuration>
              <outputFile>dependencies.txt</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin> -->
    </plugins>
  
    <pluginManagement>
      <plugins>
        <!-- maven xtend plugin to tell maven how to compile xtend code -->
        <plugin>
          <groupId>org.eclipse.xtend</groupId>
          <artifactId>xtend-maven-plugin</artifactId>
          <version>${xtend-version}</version>
          <dependencies>
            <!-- Here was a now deprecated workaround for broken build from https://github.com/eclipse/xtext/issues/1231 -->
            <!-- Here was a now deprecated workaround for broken xtend compilation from https://github.com/eclipse/xtext-xtend/issues/116 -->
          </dependencies>
          <configuration>
            <outputDirectory>${basedir}/xtend-gen</outputDirectory>
            <javaSourceVersion>11</javaSourceVersion>
          </configuration>
        </plugin>
        <!-- add src-gen and xtend-gen to source-directories -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.5.0</version>
          <executions>
            <execution>
              <id>add-source</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>add-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>src-gen</source>
                </sources>
                <sources>
                  <source>${project.build.directory}/xtend-gen</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!-- generated code needs cleanup too -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.4.1</version>
          <configuration>
            <filesets>
              <fileset>
                <directory>xtend-gen</directory>
                <includes>
                  <include>**</include>
                </includes>
              </fileset>
            </filesets>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
