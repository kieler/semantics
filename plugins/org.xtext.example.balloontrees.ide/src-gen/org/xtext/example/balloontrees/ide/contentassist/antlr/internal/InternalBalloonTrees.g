/*
 * generated by Xtext 2.25.0
 */
grammar InternalBalloonTrees;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.balloontrees.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.balloontrees.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.balloontrees.services.BalloonTreesGrammarAccess;

}
@parser::members {
	private BalloonTreesGrammarAccess grammarAccess;

	public void setGrammarAccess(BalloonTreesGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleBalloonTree
entryRuleBalloonTree
:
{ before(grammarAccess.getBalloonTreeRule()); }
	 ruleBalloonTree
{ after(grammarAccess.getBalloonTreeRule()); } 
	 EOF 
;

// Rule BalloonTree
ruleBalloonTree 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBalloonTreeAccess().getGroup()); }
		(rule__BalloonTree__Group__0)
		{ after(grammarAccess.getBalloonTreeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBalloonTreeNode
entryRuleBalloonTreeNode
:
{ before(grammarAccess.getBalloonTreeNodeRule()); }
	 ruleBalloonTreeNode
{ after(grammarAccess.getBalloonTreeNodeRule()); } 
	 EOF 
;

// Rule BalloonTreeNode
ruleBalloonTreeNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBalloonTreeNodeAccess().getGroup()); }
		(rule__BalloonTreeNode__Group__0)
		{ after(grammarAccess.getBalloonTreeNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTree__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BalloonTree__Group__0__Impl
	rule__BalloonTree__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTree__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBalloonTreeAccess().getBalloonTreeAction_0()); }
	()
	{ after(grammarAccess.getBalloonTreeAccess().getBalloonTreeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTree__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BalloonTree__Group__1__Impl
	rule__BalloonTree__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTree__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBalloonTreeAccess().getBalloonTreeKeyword_1()); }
	'BalloonTree'
	{ after(grammarAccess.getBalloonTreeAccess().getBalloonTreeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTree__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BalloonTree__Group__2__Impl
	rule__BalloonTree__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTree__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBalloonTreeAccess().getIdentifierAssignment_2()); }
	(rule__BalloonTree__IdentifierAssignment_2)
	{ after(grammarAccess.getBalloonTreeAccess().getIdentifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTree__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BalloonTree__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTree__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBalloonTreeAccess().getGroup_3()); }
	(rule__BalloonTree__Group_3__0)?
	{ after(grammarAccess.getBalloonTreeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BalloonTree__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BalloonTree__Group_3__0__Impl
	rule__BalloonTree__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTree__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBalloonTreeAccess().getLeftCurlyBracketKeyword_3_0()); }
	'{'
	{ after(grammarAccess.getBalloonTreeAccess().getLeftCurlyBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTree__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BalloonTree__Group_3__1__Impl
	rule__BalloonTree__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTree__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBalloonTreeAccess().getChildrenAssignment_3_1()); }
	(rule__BalloonTree__ChildrenAssignment_3_1)*
	{ after(grammarAccess.getBalloonTreeAccess().getChildrenAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTree__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BalloonTree__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTree__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBalloonTreeAccess().getRightCurlyBracketKeyword_3_2()); }
	'}'
	{ after(grammarAccess.getBalloonTreeAccess().getRightCurlyBracketKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BalloonTreeNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BalloonTreeNode__Group__0__Impl
	rule__BalloonTreeNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTreeNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBalloonTreeNodeAccess().getBalloonTreeNodeAction_0()); }
	()
	{ after(grammarAccess.getBalloonTreeNodeAccess().getBalloonTreeNodeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTreeNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BalloonTreeNode__Group__1__Impl
	rule__BalloonTreeNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTreeNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBalloonTreeNodeAccess().getNodeKeyword_1()); }
	'node'
	{ after(grammarAccess.getBalloonTreeNodeAccess().getNodeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTreeNode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BalloonTreeNode__Group__2__Impl
	rule__BalloonTreeNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTreeNode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBalloonTreeNodeAccess().getIdentifierAssignment_2()); }
	(rule__BalloonTreeNode__IdentifierAssignment_2)
	{ after(grammarAccess.getBalloonTreeNodeAccess().getIdentifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTreeNode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BalloonTreeNode__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTreeNode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBalloonTreeNodeAccess().getGroup_3()); }
	(rule__BalloonTreeNode__Group_3__0)?
	{ after(grammarAccess.getBalloonTreeNodeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BalloonTreeNode__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BalloonTreeNode__Group_3__0__Impl
	rule__BalloonTreeNode__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTreeNode__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBalloonTreeNodeAccess().getLeftCurlyBracketKeyword_3_0()); }
	'{'
	{ after(grammarAccess.getBalloonTreeNodeAccess().getLeftCurlyBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTreeNode__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BalloonTreeNode__Group_3__1__Impl
	rule__BalloonTreeNode__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTreeNode__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBalloonTreeNodeAccess().getChildrenAssignment_3_1()); }
	(rule__BalloonTreeNode__ChildrenAssignment_3_1)*
	{ after(grammarAccess.getBalloonTreeNodeAccess().getChildrenAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTreeNode__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BalloonTreeNode__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTreeNode__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBalloonTreeNodeAccess().getRightCurlyBracketKeyword_3_2()); }
	'}'
	{ after(grammarAccess.getBalloonTreeNodeAccess().getRightCurlyBracketKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BalloonTree__IdentifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBalloonTreeAccess().getIdentifierIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getBalloonTreeAccess().getIdentifierIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTree__ChildrenAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBalloonTreeAccess().getChildrenBalloonTreeNodeParserRuleCall_3_1_0()); }
		ruleBalloonTreeNode
		{ after(grammarAccess.getBalloonTreeAccess().getChildrenBalloonTreeNodeParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTreeNode__IdentifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBalloonTreeNodeAccess().getIdentifierIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getBalloonTreeNodeAccess().getIdentifierIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BalloonTreeNode__ChildrenAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBalloonTreeNodeAccess().getChildrenBalloonTreeNodeParserRuleCall_3_1_0()); }
		ruleBalloonTreeNode
		{ after(grammarAccess.getBalloonTreeNodeAccess().getChildrenBalloonTreeNodeParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
