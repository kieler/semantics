/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.balloontrees.balloonTrees.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.balloontrees.balloonTrees.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BalloonTreesFactoryImpl extends EFactoryImpl implements BalloonTreesFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static BalloonTreesFactory init()
  {
    try
    {
      BalloonTreesFactory theBalloonTreesFactory = (BalloonTreesFactory)EPackage.Registry.INSTANCE.getEFactory(BalloonTreesPackage.eNS_URI);
      if (theBalloonTreesFactory != null)
      {
        return theBalloonTreesFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new BalloonTreesFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BalloonTreesFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case BalloonTreesPackage.BALLOON_TREE: return createBalloonTree();
      case BalloonTreesPackage.BALLOON_TREE_NODE: return createBalloonTreeNode();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BalloonTree createBalloonTree()
  {
    BalloonTreeImpl balloonTree = new BalloonTreeImpl();
    return balloonTree;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BalloonTreeNode createBalloonTreeNode()
  {
    BalloonTreeNodeImpl balloonTreeNode = new BalloonTreeNodeImpl();
    return balloonTreeNode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BalloonTreesPackage getBalloonTreesPackage()
  {
    return (BalloonTreesPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static BalloonTreesPackage getPackage()
  {
    return BalloonTreesPackage.eINSTANCE;
  }

} //BalloonTreesFactoryImpl
