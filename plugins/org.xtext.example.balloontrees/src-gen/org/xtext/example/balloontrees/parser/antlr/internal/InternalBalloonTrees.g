/*
 * generated by Xtext 2.25.0
 */
grammar InternalBalloonTrees;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.balloontrees.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.balloontrees.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.balloontrees.services.BalloonTreesGrammarAccess;

}

@parser::members {

 	private BalloonTreesGrammarAccess grammarAccess;

    public InternalBalloonTreesParser(TokenStream input, BalloonTreesGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "BalloonTree";
   	}

   	@Override
   	protected BalloonTreesGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleBalloonTree
entryRuleBalloonTree returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBalloonTreeRule()); }
	iv_ruleBalloonTree=ruleBalloonTree
	{ $current=$iv_ruleBalloonTree.current; }
	EOF;

// Rule BalloonTree
ruleBalloonTree returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBalloonTreeAccess().getBalloonTreeAction_0(),
					$current);
			}
		)
		otherlv_1='BalloonTree'
		{
			newLeafNode(otherlv_1, grammarAccess.getBalloonTreeAccess().getBalloonTreeKeyword_1());
		}
		(
			(
				lv_identifier_2_0=RULE_ID
				{
					newLeafNode(lv_identifier_2_0, grammarAccess.getBalloonTreeAccess().getIdentifierIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBalloonTreeRule());
					}
					setWithLastConsumed(
						$current,
						"identifier",
						lv_identifier_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getBalloonTreeAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBalloonTreeAccess().getChildrenBalloonTreeNodeParserRuleCall_3_1_0());
					}
					lv_children_4_0=ruleBalloonTreeNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBalloonTreeRule());
						}
						add(
							$current,
							"children",
							lv_children_4_0,
							"org.xtext.example.balloontrees.BalloonTrees.BalloonTreeNode");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getBalloonTreeAccess().getRightCurlyBracketKeyword_3_2());
			}
		)?
	)
;

// Entry rule entryRuleBalloonTreeNode
entryRuleBalloonTreeNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBalloonTreeNodeRule()); }
	iv_ruleBalloonTreeNode=ruleBalloonTreeNode
	{ $current=$iv_ruleBalloonTreeNode.current; }
	EOF;

// Rule BalloonTreeNode
ruleBalloonTreeNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBalloonTreeNodeAccess().getBalloonTreeNodeAction_0(),
					$current);
			}
		)
		otherlv_1='node'
		{
			newLeafNode(otherlv_1, grammarAccess.getBalloonTreeNodeAccess().getNodeKeyword_1());
		}
		(
			(
				lv_identifier_2_0=RULE_ID
				{
					newLeafNode(lv_identifier_2_0, grammarAccess.getBalloonTreeNodeAccess().getIdentifierIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBalloonTreeNodeRule());
					}
					setWithLastConsumed(
						$current,
						"identifier",
						lv_identifier_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getBalloonTreeNodeAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBalloonTreeNodeAccess().getChildrenBalloonTreeNodeParserRuleCall_3_1_0());
					}
					lv_children_4_0=ruleBalloonTreeNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBalloonTreeNodeRule());
						}
						add(
							$current,
							"children",
							lv_children_4_0,
							"org.xtext.example.balloontrees.BalloonTrees.BalloonTreeNode");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getBalloonTreeNodeAccess().getRightCurlyBracketKeyword_3_2());
			}
		)?
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
