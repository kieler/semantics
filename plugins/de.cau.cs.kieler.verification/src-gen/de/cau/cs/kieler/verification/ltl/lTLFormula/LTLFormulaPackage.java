/**
 * generated by Xtext
 */
package de.cau.cs.kieler.verification.ltl.lTLFormula;

import de.cau.cs.kieler.kexpressions.KExpressionsPackage;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see de.cau.cs.kieler.verification.ltl.lTLFormula.LTLFormulaFactory
 * @model kind="package"
 * @generated
 */
public interface LTLFormulaPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "lTLFormula";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.cau.de/cs/kieler/verification/ltl/LTLFormula";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "lTLFormula";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  LTLFormulaPackage eINSTANCE = de.cau.cs.kieler.verification.ltl.lTLFormula.impl.LTLFormulaPackageImpl.init();

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.verification.ltl.lTLFormula.impl.LTLExpressionImpl <em>LTL Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.verification.ltl.lTLFormula.impl.LTLExpressionImpl
   * @see de.cau.cs.kieler.verification.ltl.lTLFormula.impl.LTLFormulaPackageImpl#getLTLExpression()
   * @generated
   */
  int LTL_EXPRESSION = 0;

  /**
   * The feature id for the '<em><b>Schedule</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LTL_EXPRESSION__SCHEDULE = KExpressionsPackage.EXPRESSION__SCHEDULE;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LTL_EXPRESSION__OPERATOR = KExpressionsPackage.EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Sub Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LTL_EXPRESSION__SUB_EXPRESSIONS = KExpressionsPackage.EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>LTL Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LTL_EXPRESSION_FEATURE_COUNT = KExpressionsPackage.EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.verification.ltl.lTLFormula.impl.OperatorExpressionImpl <em>Operator Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.verification.ltl.lTLFormula.impl.OperatorExpressionImpl
   * @see de.cau.cs.kieler.verification.ltl.lTLFormula.impl.LTLFormulaPackageImpl#getOperatorExpression()
   * @generated
   */
  int OPERATOR_EXPRESSION = 1;

  /**
   * The feature id for the '<em><b>Schedule</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR_EXPRESSION__SCHEDULE = KExpressionsPackage.EXPRESSION__SCHEDULE;

  /**
   * The feature id for the '<em><b>Sub Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR_EXPRESSION__SUB_EXPRESSIONS = KExpressionsPackage.EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR_EXPRESSION__OPERATOR = KExpressionsPackage.EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Operator Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATOR_EXPRESSION_FEATURE_COUNT = KExpressionsPackage.EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.verification.ltl.lTLFormula.LTLOperatorType <em>LTL Operator Type</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.verification.ltl.lTLFormula.LTLOperatorType
   * @see de.cau.cs.kieler.verification.ltl.lTLFormula.impl.LTLFormulaPackageImpl#getLTLOperatorType()
   * @generated
   */
  int LTL_OPERATOR_TYPE = 2;


  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.verification.ltl.lTLFormula.LTLExpression <em>LTL Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>LTL Expression</em>'.
   * @see de.cau.cs.kieler.verification.ltl.lTLFormula.LTLExpression
   * @generated
   */
  EClass getLTLExpression();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.verification.ltl.lTLFormula.LTLExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see de.cau.cs.kieler.verification.ltl.lTLFormula.LTLExpression#getOperator()
   * @see #getLTLExpression()
   * @generated
   */
  EAttribute getLTLExpression_Operator();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.verification.ltl.lTLFormula.LTLExpression#getSubExpressions <em>Sub Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Sub Expressions</em>'.
   * @see de.cau.cs.kieler.verification.ltl.lTLFormula.LTLExpression#getSubExpressions()
   * @see #getLTLExpression()
   * @generated
   */
  EReference getLTLExpression_SubExpressions();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.verification.ltl.lTLFormula.OperatorExpression <em>Operator Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operator Expression</em>'.
   * @see de.cau.cs.kieler.verification.ltl.lTLFormula.OperatorExpression
   * @generated
   */
  EClass getOperatorExpression();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.verification.ltl.lTLFormula.OperatorExpression#getSubExpressions <em>Sub Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Sub Expressions</em>'.
   * @see de.cau.cs.kieler.verification.ltl.lTLFormula.OperatorExpression#getSubExpressions()
   * @see #getOperatorExpression()
   * @generated
   */
  EReference getOperatorExpression_SubExpressions();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.verification.ltl.lTLFormula.OperatorExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see de.cau.cs.kieler.verification.ltl.lTLFormula.OperatorExpression#getOperator()
   * @see #getOperatorExpression()
   * @generated
   */
  EAttribute getOperatorExpression_Operator();

  /**
   * Returns the meta object for enum '{@link de.cau.cs.kieler.verification.ltl.lTLFormula.LTLOperatorType <em>LTL Operator Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>LTL Operator Type</em>'.
   * @see de.cau.cs.kieler.verification.ltl.lTLFormula.LTLOperatorType
   * @generated
   */
  EEnum getLTLOperatorType();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  LTLFormulaFactory getLTLFormulaFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.verification.ltl.lTLFormula.impl.LTLExpressionImpl <em>LTL Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.verification.ltl.lTLFormula.impl.LTLExpressionImpl
     * @see de.cau.cs.kieler.verification.ltl.lTLFormula.impl.LTLFormulaPackageImpl#getLTLExpression()
     * @generated
     */
    EClass LTL_EXPRESSION = eINSTANCE.getLTLExpression();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LTL_EXPRESSION__OPERATOR = eINSTANCE.getLTLExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Sub Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LTL_EXPRESSION__SUB_EXPRESSIONS = eINSTANCE.getLTLExpression_SubExpressions();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.verification.ltl.lTLFormula.impl.OperatorExpressionImpl <em>Operator Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.verification.ltl.lTLFormula.impl.OperatorExpressionImpl
     * @see de.cau.cs.kieler.verification.ltl.lTLFormula.impl.LTLFormulaPackageImpl#getOperatorExpression()
     * @generated
     */
    EClass OPERATOR_EXPRESSION = eINSTANCE.getOperatorExpression();

    /**
     * The meta object literal for the '<em><b>Sub Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATOR_EXPRESSION__SUB_EXPRESSIONS = eINSTANCE.getOperatorExpression_SubExpressions();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATOR_EXPRESSION__OPERATOR = eINSTANCE.getOperatorExpression_Operator();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.verification.ltl.lTLFormula.LTLOperatorType <em>LTL Operator Type</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.verification.ltl.lTLFormula.LTLOperatorType
     * @see de.cau.cs.kieler.verification.ltl.lTLFormula.impl.LTLFormulaPackageImpl#getLTLOperatorType()
     * @generated
     */
    EEnum LTL_OPERATOR_TYPE = eINSTANCE.getLTLOperatorType();

  }

} //LTLFormulaPackage
