<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="kexpressions" nsURI="http://kieler.cs.cau.de/kexpressions/0.1.2"
    nsPrefix="kexpressions">
  <eClassifiers xsi:type="ecore:EEnum" name="CombineOperator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Built-in operators that can be used as Signal combine operators."/>
    </eAnnotations>
    <eLiterals name="NONE" literal="NONE">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specifies that no combine operator is given. "/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ADD" value="1" literal="+">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Arithmetic addition."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="MULT" value="2" literal="*">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Arithmetic multiplication.&#xA;"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="MAX" value="5" literal="max">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The maximum function. Takes the greater of the given two."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="MIN" value="6" literal="min">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The minimum function. Takes the lesser of the given two."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OR" value="4" literal="|">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Logical or function for boolean valued signals."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="AND" value="3" literal="&amp;">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Logical and for boolean valued signals."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="HOST" literal="host">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Specifies that no built-in combine operator should be used &#xA;but the operator given in the hostCombineOperator field given as a String and &#xA;referencing some function of the host language (maybe C or Java, etc. ) ."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Expression" abstract="true" interface="true"
      eSuperTypes="#//Schedulable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An Expression is the supertype of all kinds of Expressions over Signals, Variables or Values. &#xA;It is used as a simple common entry point. In this metamodel there are no more specializations avaliable&#xA;according to return value of the Expressions (e.g. BooleanExpression or ValuedExpression). These&#xA;might be provided by more specialized textual grammars for this metamodel."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="OperatorType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="OperatorTypes are used for OperatorExpressions. &#xA;The types may reference any corresponding&#xA;operator or function that may make use of&#xA;an arbitrary number of subExpressions. Hence it&#xA;contains unary and binary operators."/>
    </eAnnotations>
    <eLiterals name="NOT" literal="!">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Logical Negation operator (unary)"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="EQ" value="1" literal="==">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Equals operator"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="LT" value="2" literal="&lt;">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Less than operator. (Not commutative!)"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="LEQ" value="3" literal="&lt;=">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Less or Equal operator. (Not commutative!)"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="LOGICAL_AND" value="4" literal="&amp;&amp;">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Logical AND operator.&#xA;"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="LOGICAL_OR" value="5" literal="||">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Logical OR operator."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ADD" value="6" literal="+">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Arithmetic addition operator."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="SUB" value="7" literal="-">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Arithmetic subtraction operator. (Not commutative!)"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="MULT" value="8" literal="*">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Arithmetic multiplication operator."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="DIV" value="9" literal="/">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Aithmetic division operator. (Not commutative!)"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="GEQ" value="10" literal=">=">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Greater or Equal operator. (Not commutative!)"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="PRE" value="11" literal="pre">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Pre operator, returns the previous state of a Signal referenced by a SignalReference."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="GT" value="12" literal=">">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Greater than operator. (Not commutative!)"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="MOD" value="13" literal="%">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Arithmetic modulo operation. (Not commutative!)"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="NE" value="14" literal="!=">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Not Equal operator.&#xA;"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="VAL" value="15" literal="val">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Value operator. Returns the value of a Signal referenced by a SignalReference."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="BITWISE_AND" value="16" literal="&amp;"/>
    <eLiterals name="BITWISE_OR" value="17" literal="|"/>
    <eLiterals name="POSTFIX_ADD" value="18" literal="++"/>
    <eLiterals name="POSTFIX_SUB" value="19" literal="--"/>
    <eLiterals name="SHIFT_LEFT" value="20" literal="&lt;&lt;"/>
    <eLiterals name="SHIFT_RIGHT" value="21" literal=">>"/>
    <eLiterals name="SHIFT_RIGHT_UNSIGNED" value="22" literal=">>>"/>
    <eLiterals name="BITWISE_XOR" value="23" literal="^"/>
    <eLiterals name="BITWISE_NOT" value="25" literal="~"/>
    <eLiterals name="CONDITIONAL" value="24" literal="? :"/>
    <eLiterals name="FBY" value="25" literal="fby"/>
    <eLiterals name="CURRENT" value="26" literal="current"/>
    <eLiterals name="WHEN" value="27" literal="when"/>
    <eLiterals name="INIT" value="28" literal="->"/>
    <eLiterals name="ATMOSTONEOF" value="29" literal="#"/>
    <eLiterals name="NOR" value="30" literal="nor"/>
    <eLiterals name="IMPLIES" value="31" literal="implies"/>
    <eLiterals name="SFBY" value="32" literal="sfby"/>
    <eLiterals name="LAST" value="33" literal="last"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ValuedObject" eSuperTypes="../../de.cau.cs.kieler.annotations/model/annotations.ecore#//NamedObject ../../de.cau.cs.kieler.annotations/model/annotations.ecore#//Annotatable #//Referenceable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Base Class for Variables and Signals. A ValuedObject has a name and may carry a value. &#xA;Therefore the class has a type attribute which specifies the type of the value. &#xA;The type might either be given from a predefined list of internal (primitive) types or by the hostType String that &#xA;references some type in the target language, e.g. a Type in C or Java. An initial value can be given in String format.&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="combineOperator" lowerBound="1"
        eType="#//CombineOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="initialValue" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="cardinalities" upperBound="-1"
        eType="#//Expression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="label" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="genericParameters" upperBound="-1"
        eType="#//Parameter" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
        eType="#//Parameter" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="ValueType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Possible built-in types for values (e.g. for Varibales or Signals).&#xA;&lt;p>&#xA;Default value is the PURE type which means that the&#xA;ValuedObject does not contain any value at all (only&#xA;makes sense for Signals).&#xA;&lt;p>&#xA;HOST means that no actual type is given but the&#xA;type in the hostType attribute should be used &#xA;instead."/>
    </eAnnotations>
    <eLiterals name="PURE" literal="pure">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Default value is the PURE type which means that the&#xA;ValuedObject does not contain any value at all (only&#xA;makes sense for Signals)."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="BOOL" value="1" literal="bool"/>
    <eLiterals name="UNSIGNED" value="2" literal="unsigned">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="@deprecated No longer used in grammars"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="INT" value="3" literal="int"/>
    <eLiterals name="FLOAT" value="4" literal="float"/>
    <eLiterals name="HOST" value="7" literal="host">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="HOST means that no actual type is given but the&#xA;type in the hostType attribute should be used &#xA;instead."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="DOUBLE" value="5" literal="double">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="@deprecated No longer used in grammars"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="STRING" value="6" literal="string"/>
    <eLiterals name="REFERENCE" value="8" literal="reference"/>
    <eLiterals name="SCHEDULE" value="9" literal="schedule"/>
    <eLiterals name="UNKNOWN" value="10" literal="UNKNOWN"/>
    <eLiterals name="CLOCK" value="11" literal="clock"/>
    <eLiterals name="JSON" value="12" literal="json"/>
    <eLiterals name="STRUCT" value="13" literal="struct"/>
    <eLiterals name="CLASS" value="14" literal="class"/>
    <eLiterals name="ENUM" value="15" literal="enum"/>
    <eLiterals name="VOID" value="16" literal="void"/>
    <eLiterals name="TIME" value="17" literal="time"/>
    <eLiterals name="PRIMITIVE" value="18" literal="primitive"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ValuedObjectReference" eSuperTypes="#//Expression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A ValuedObjectReference has a reference to a ValuedObject and is a ComplexExpression.&#xA;Therefore such reference may have subExpressions. Those can be used to &#xA;address a specific value. E.g. the ValuedObject could carry an array&#xA;value and a subExpression could be an IntValue that points to a special entry in &#xA;that array. &#xA;&lt;p>&#xA;The distinction between a Variable and a VariableReference is mainly due to containment&#xA;relations. A Variable is usually defined exactly once and therefore contained by some &#xA;scope element. A reference to that Variable may be required multiple times where&#xA;such reference need to be contained at the places where the reference is used.&#xA;Hence we need this distinction."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="valuedObject" lowerBound="1"
        eType="#//ValuedObject"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="indices" upperBound="-1"
        eType="#//Expression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subReference" eType="#//ValuedObjectReference"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Value" abstract="true" interface="true"
      eSuperTypes="#//Expression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Interface representing values, e.g. Integers, Floats or Booleans. Subclasses should contain a field with the value.&#xA;Values may be used as Expressions, e.g. used as subExpressions in OperatorExpressions.&#xA;"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IntValue" eSuperTypes="#//Value">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An Integer value object."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FloatValue" eSuperTypes="#//Value">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An Real value object represented by a float."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDoubleObject"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BoolValue" eSuperTypes="#//Value">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An Boolean value object."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBooleanObject"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StringValue" eSuperTypes="#//Value">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An Integer value object."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="VectorValue" eSuperTypes="#//Value">
    <eStructuralFeatures xsi:type="ecore:EReference" name="values" lowerBound="1"
        upperBound="-1" eType="#//Expression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="range" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IgnoreValue" eSuperTypes="#//Value"/>
  <eClassifiers xsi:type="ecore:EClass" name="JsonPragma" eSuperTypes="../../de.cau.cs.kieler.annotations/model/annotations.ecore#//Pragma">
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#//JsonObjectValue"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JsonAnnotation" eSuperTypes="../../de.cau.cs.kieler.annotations/model/annotations.ecore#//Annotation">
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#//JsonObjectValue"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JsonObjectValue" eSuperTypes="#//Value">
    <eOperations name="getMembersMap" lowerBound="1">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
        <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eTypeArguments eClassifier="#//Value"/>
      </eGenericType>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="members" upperBound="-1"
        eType="#//JsonObjectMember" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JsonObjectMember">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="key" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#//Value"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JsonArrayValue" eSuperTypes="#//Value">
    <eStructuralFeatures xsi:type="ecore:EReference" name="elements" upperBound="-1"
        eType="#//Value" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NullValue" eSuperTypes="#//Value"/>
  <eClassifiers xsi:type="ecore:EClass" name="OperatorExpression" eSuperTypes="#//Expression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An OperatorExpression is the most obvious ComplexExpression containing&#xA;an operator and a list of subExpressions. The meaning is that the operator &#xA;should be applied to all elements of the ordered subExpression list.&#xA;Note that some pre-defined operators are not commutative, hence the&#xA;order of the subExpressions list is of importance."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" eType="#//OperatorType"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subExpressions" upperBound="-1"
        eType="#//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TextExpression" eSuperTypes="#//Expression ../../de.cau.cs.kieler.annotations/model/annotations.ecore#//Annotatable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A TextExpression is an Expression containing arbitrary text. It is used to&#xA;escape to a host language such as C or Java. This way arbitrary host code&#xA;can be used as parameters for operators, other functions or values."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="text" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Declaration" abstract="true" eSuperTypes="../../de.cau.cs.kieler.annotations/model/annotations.ecore#//Annotatable">
    <eStructuralFeatures xsi:type="ecore:EReference" name="valuedObjects" upperBound="-1"
        eType="#//ValuedObject" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="access" eType="#//AccessModifier"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IODeclaration" abstract="true" eSuperTypes="#//Declaration">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="input" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="output" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="VariableDeclaration" eSuperTypes="#//IODeclaration">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1" eType="#//ValueType"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="static" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="signal" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="const" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="extern" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="volatile" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="global" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="hostType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReferenceDeclaration" eSuperTypes="#//IODeclaration">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="simple" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="const" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="reference" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referenceContainer" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
        eType="#//Parameter" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="extern" upperBound="-1"
        eType="#//ExternString" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="genericParameters" upperBound="-1"
        eType="#//Parameter" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="GenericParameterDeclaration" eSuperTypes="#//Declaration">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="reference" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="valueType" eType="#//ValueType"
        defaultValueLiteral="UNKNOWN"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="ecore:EClass ../../de.cau.cs.kieler.annotations/model/annotations.ecore#//NamedObject"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="GenericTypeReference" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="ecore:EClass ../../de.cau.cs.kieler.annotations/model/annotations.ecore#//NamedObject"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="genericParameters" upperBound="-1"
        eType="#//Parameter" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ValueTypeReference" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="valueType" lowerBound="1"
        eType="#//ValueType"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MethodDeclaration" eSuperTypes="#//Declaration #//Schedulable">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="static" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="override" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="returnType" eType="#//ValueType"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="returnHostType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="returnReference" eType="ecore:EClass ../../de.cau.cs.kieler.annotations/model/annotations.ecore#//NamedObject"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="returnReferenceContainer"
        eType="ecore:EClass ../../de.cau.cs.kieler.annotations/model/annotations.ecore#//NamedObject"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameterDeclarations"
        upperBound="-1" eType="#//Declaration" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ScheduleDeclaration" eSuperTypes="#//Declaration">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="global" eType="#//PriorityProtocol"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="priorities" unique="false"
        upperBound="-1" eType="#//PriorityProtocol"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="PriorityProtocol">
    <eLiterals name="CONFLICT"/>
    <eLiterals name="CONFLUENT" value="1"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ScheduleObjectReference" eSuperTypes="#//ValuedObjectReference ../../de.cau.cs.kieler.annotations/model/annotations.ecore#//Annotatable">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="priority" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Parameter">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="accessType" eType="#//ParameterAccessType"
        defaultValueLiteral="CALL_BY_VALUE"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="explicitBinding" eType="#//ValuedObject"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="explicitBindingIndices"
        upperBound="-1" eType="#//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Call" abstract="true" interface="true"
      eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
        eType="#//Parameter" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="ParameterAccessType">
    <eLiterals name="CALL_BY_VALUE"/>
    <eLiterals name="CALL_BY_REFERENCE" value="1"/>
    <eLiterals name="PURE_OUTPUT" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReferenceCall" eSuperTypes="#//ValuedObjectReference #//Call">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="super" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FunctionCall" eSuperTypes="#//Call">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="functionName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PrintCall" eSuperTypes="#//Call"/>
  <eClassifiers xsi:type="ecore:EClass" name="RandomCall" eSuperTypes="#//Call"/>
  <eClassifiers xsi:type="ecore:EClass" name="RandomizeCall" eSuperTypes="#//Call"/>
  <eClassifiers xsi:type="ecore:EClass" name="Referenceable" abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="Schedulable" abstract="true" interface="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="schedule" upperBound="-1"
        eType="#//ScheduleObjectReference" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExternString" eSuperTypes="../../de.cau.cs.kieler.annotations/model/annotations.ecore#//Annotatable">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="code" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="AccessModifier">
    <eLiterals name="UNDEF" literal="UNDEF"/>
    <eLiterals name="PRIVATE" value="1"/>
    <eLiterals name="PROTECTED" value="2"/>
    <eLiterals name="PUBLIC" value="3"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SpecialAccessExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="access" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subReference" eType="#//ValuedObjectReference"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="container" eType="ecore:EClass ../../de.cau.cs.kieler.annotations/model/annotations.ecore#//NamedObject"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" eType="ecore:EClass ../../de.cau.cs.kieler.annotations/model/annotations.ecore#//NamedObject"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ThisExpression" eSuperTypes="#//Expression"/>
</ecore:EPackage>
