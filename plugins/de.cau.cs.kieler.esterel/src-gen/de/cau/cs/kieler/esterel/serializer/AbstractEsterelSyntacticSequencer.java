/*
 * generated by Xtext
 */
package de.cau.cs.kieler.esterel.serializer;

import com.google.inject.Inject;
import de.cau.cs.kieler.esterel.services.EsterelGrammarAccess;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public abstract class AbstractEsterelSyntacticSequencer extends AbstractSyntacticSequencer {

	protected EsterelGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Abort_AbortKeyword_4_0_1_4_q;
	protected AbstractElementAlias match_Abort_AbortKeyword_4_1_3_q;
	protected AbstractElementAlias match_Abort_WeakKeyword_4_0_1_3_q;
	protected AbstractElementAlias match_Abort_WeakKeyword_4_1_2_q;
	protected AbstractElementAlias match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_a_LeftParenthesisKeyword_5_0__a;
	protected AbstractElementAlias match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_a_LeftParenthesisKeyword_5_0__p;
	protected AbstractElementAlias match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_or_LeftParenthesisKeyword_5_0__a;
	protected AbstractElementAlias match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_or_LeftParenthesisKeyword_5_0__p;
	protected AbstractElementAlias match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_5_0_LeftParenthesisKeyword_2_0_a__a;
	protected AbstractElementAlias match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_5_0_LeftParenthesisKeyword_2_0_a__p;
	protected AbstractElementAlias match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_5_0___LeftParenthesisKeyword_2_0_a_LeftParenthesisKeyword_5_0__a__q;
	protected AbstractElementAlias match_Await_AwaitKeyword_2_0_1_3_q;
	protected AbstractElementAlias match_Await_AwaitKeyword_2_1_2_q;
	protected AbstractElementAlias match_EsterelFunctionCall_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__;
	protected AbstractElementAlias match_EsterelModule_FullStopKeyword_6_1_or___EndKeyword_6_0_0_ModuleKeyword_6_0_1__;
	protected AbstractElementAlias match_EsterelThread_SemicolonKeyword_2_q;
	protected AbstractElementAlias match_EveryDo_EveryKeyword_6_q;
	protected AbstractElementAlias match_ExecCase_LeftParenthesisRightParenthesisKeyword_3_1_or___LeftParenthesisKeyword_3_0_0_RightParenthesisKeyword_3_0_2__;
	protected AbstractElementAlias match_ExecCase_LeftParenthesisRightParenthesisKeyword_4_1_or___LeftParenthesisKeyword_4_0_0_RightParenthesisKeyword_4_0_2__;
	protected AbstractElementAlias match_Exec_ExecKeyword_2_0_5_3_q;
	protected AbstractElementAlias match_Exec_ExecKeyword_2_1_2_q;
	protected AbstractElementAlias match_Exec_LeftParenthesisRightParenthesisKeyword_2_0_1_1_or___LeftParenthesisKeyword_2_0_1_0_0_RightParenthesisKeyword_2_0_1_0_2__;
	protected AbstractElementAlias match_Exec_LeftParenthesisRightParenthesisKeyword_2_0_2_1_or___LeftParenthesisKeyword_2_0_2_0_0_RightParenthesisKeyword_2_0_2_0_2__;
	protected AbstractElementAlias match_Function_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__;
	protected AbstractElementAlias match_IfTest_IfKeyword_7_q;
	protected AbstractElementAlias match_LegacyDo_TimeoutKeyword_3_1_2_3_q;
	protected AbstractElementAlias match_LocalSignalDeclaration_SignalKeyword_7_q;
	protected AbstractElementAlias match_LocalVariableDeclaration_VarKeyword_7_q;
	protected AbstractElementAlias match_Loop_LoopKeyword_4_0_1_q;
	protected AbstractElementAlias match_MethodDeclarationWOSemicolon___LeftCurlyBracketKeyword_7_0_RightCurlyBracketKeyword_7_4__q;
	protected AbstractElementAlias match_MethodDeclaration_SemicolonKeyword_7_0_or___LeftCurlyBracketKeyword_7_1_0_RightCurlyBracketKeyword_7_1_4__;
	protected AbstractElementAlias match_ModuleCall_LeftParenthesisRightParenthesisKeyword_3_1_q;
	protected AbstractElementAlias match_Module_ColonKeyword_3_q;
	protected AbstractElementAlias match_Present_PresentKeyword_5_q;
	protected AbstractElementAlias match_ProcedureCall_LeftParenthesisRightParenthesisKeyword_3_1_or___LeftParenthesisKeyword_3_0_0_RightParenthesisKeyword_3_0_2__;
	protected AbstractElementAlias match_ProcedureCall_LeftParenthesisRightParenthesisKeyword_4_1_or___LeftParenthesisKeyword_4_0_0_RightParenthesisKeyword_4_0_2__;
	protected AbstractElementAlias match_Procedure_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__;
	protected AbstractElementAlias match_Procedure_LeftParenthesisRightParenthesisKeyword_2_1_or___LeftParenthesisKeyword_2_0_0_RightParenthesisKeyword_2_0_2__;
	protected AbstractElementAlias match_RandomCall_LeftParenthesisRightParenthesisKeyword_2_q;
	protected AbstractElementAlias match_RandomizeCall_LeftParenthesisRightParenthesisKeyword_2_q;
	protected AbstractElementAlias match_ReferenceValuedObject_LeftParenthesisRightParenthesisKeyword_5_1_q;
	protected AbstractElementAlias match_Repeat_RepeatKeyword_7_q;
	protected AbstractElementAlias match_SignalAtomicExpression_LeftParenthesisKeyword_0_0_a;
	protected AbstractElementAlias match_SignalAtomicExpression_LeftParenthesisKeyword_0_0_p;
	protected AbstractElementAlias match_Task_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__;
	protected AbstractElementAlias match_Task_LeftParenthesisRightParenthesisKeyword_2_1_or___LeftParenthesisKeyword_2_0_0_RightParenthesisKeyword_2_0_2__;
	protected AbstractElementAlias match_Thread___LeftCurlyBracketKeyword_1_0_1_RightCurlyBracketKeyword_1_0_4__q;
	protected AbstractElementAlias match_Trap_TrapKeyword_8_q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (EsterelGrammarAccess) access;
		match_Abort_AbortKeyword_4_0_1_4_q = new TokenAlias(false, true, grammarAccess.getAbortAccess().getAbortKeyword_4_0_1_4());
		match_Abort_AbortKeyword_4_1_3_q = new TokenAlias(false, true, grammarAccess.getAbortAccess().getAbortKeyword_4_1_3());
		match_Abort_WeakKeyword_4_0_1_3_q = new TokenAlias(false, true, grammarAccess.getAbortAccess().getWeakKeyword_4_0_1_3());
		match_Abort_WeakKeyword_4_1_2_q = new TokenAlias(false, true, grammarAccess.getAbortAccess().getWeakKeyword_4_1_2());
		match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_a_LeftParenthesisKeyword_5_0__a = new GroupAlias(true, true, new TokenAlias(true, true, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_5_0()));
		match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_a_LeftParenthesisKeyword_5_0__p = new GroupAlias(true, false, new TokenAlias(true, true, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_5_0()));
		match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_or_LeftParenthesisKeyword_5_0__a = new AlternativeAlias(true, true, new TokenAlias(false, false, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_5_0()), new TokenAlias(false, false, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_2_0()));
		match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_or_LeftParenthesisKeyword_5_0__p = new AlternativeAlias(true, false, new TokenAlias(false, false, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_5_0()), new TokenAlias(false, false, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_2_0()));
		match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_5_0_LeftParenthesisKeyword_2_0_a__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_5_0()), new TokenAlias(true, true, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_2_0()));
		match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_5_0_LeftParenthesisKeyword_2_0_a__p = new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_5_0()), new TokenAlias(true, true, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_2_0()));
		match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_5_0___LeftParenthesisKeyword_2_0_a_LeftParenthesisKeyword_5_0__a__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_5_0()), new GroupAlias(true, true, new TokenAlias(true, true, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_5_0())));
		match_Await_AwaitKeyword_2_0_1_3_q = new TokenAlias(false, true, grammarAccess.getAwaitAccess().getAwaitKeyword_2_0_1_3());
		match_Await_AwaitKeyword_2_1_2_q = new TokenAlias(false, true, grammarAccess.getAwaitAccess().getAwaitKeyword_2_1_2());
		match_EsterelFunctionCall_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getEsterelFunctionCallAccess().getLeftParenthesisKeyword_1_0_0()), new TokenAlias(false, false, grammarAccess.getEsterelFunctionCallAccess().getRightParenthesisKeyword_1_0_2())), new TokenAlias(false, false, grammarAccess.getEsterelFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_1_1()));
		match_EsterelModule_FullStopKeyword_6_1_or___EndKeyword_6_0_0_ModuleKeyword_6_0_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getEsterelModuleAccess().getEndKeyword_6_0_0()), new TokenAlias(false, false, grammarAccess.getEsterelModuleAccess().getModuleKeyword_6_0_1())), new TokenAlias(false, false, grammarAccess.getEsterelModuleAccess().getFullStopKeyword_6_1()));
		match_EsterelThread_SemicolonKeyword_2_q = new TokenAlias(false, true, grammarAccess.getEsterelThreadAccess().getSemicolonKeyword_2());
		match_EveryDo_EveryKeyword_6_q = new TokenAlias(false, true, grammarAccess.getEveryDoAccess().getEveryKeyword_6());
		match_ExecCase_LeftParenthesisRightParenthesisKeyword_3_1_or___LeftParenthesisKeyword_3_0_0_RightParenthesisKeyword_3_0_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExecCaseAccess().getLeftParenthesisKeyword_3_0_0()), new TokenAlias(false, false, grammarAccess.getExecCaseAccess().getRightParenthesisKeyword_3_0_2())), new TokenAlias(false, false, grammarAccess.getExecCaseAccess().getLeftParenthesisRightParenthesisKeyword_3_1()));
		match_ExecCase_LeftParenthesisRightParenthesisKeyword_4_1_or___LeftParenthesisKeyword_4_0_0_RightParenthesisKeyword_4_0_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExecCaseAccess().getLeftParenthesisKeyword_4_0_0()), new TokenAlias(false, false, grammarAccess.getExecCaseAccess().getRightParenthesisKeyword_4_0_2())), new TokenAlias(false, false, grammarAccess.getExecCaseAccess().getLeftParenthesisRightParenthesisKeyword_4_1()));
		match_Exec_ExecKeyword_2_0_5_3_q = new TokenAlias(false, true, grammarAccess.getExecAccess().getExecKeyword_2_0_5_3());
		match_Exec_ExecKeyword_2_1_2_q = new TokenAlias(false, true, grammarAccess.getExecAccess().getExecKeyword_2_1_2());
		match_Exec_LeftParenthesisRightParenthesisKeyword_2_0_1_1_or___LeftParenthesisKeyword_2_0_1_0_0_RightParenthesisKeyword_2_0_1_0_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExecAccess().getLeftParenthesisKeyword_2_0_1_0_0()), new TokenAlias(false, false, grammarAccess.getExecAccess().getRightParenthesisKeyword_2_0_1_0_2())), new TokenAlias(false, false, grammarAccess.getExecAccess().getLeftParenthesisRightParenthesisKeyword_2_0_1_1()));
		match_Exec_LeftParenthesisRightParenthesisKeyword_2_0_2_1_or___LeftParenthesisKeyword_2_0_2_0_0_RightParenthesisKeyword_2_0_2_0_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExecAccess().getLeftParenthesisKeyword_2_0_2_0_0()), new TokenAlias(false, false, grammarAccess.getExecAccess().getRightParenthesisKeyword_2_0_2_0_2())), new TokenAlias(false, false, grammarAccess.getExecAccess().getLeftParenthesisRightParenthesisKeyword_2_0_2_1()));
		match_Function_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1_0_0()), new TokenAlias(false, false, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_1_0_2())), new TokenAlias(false, false, grammarAccess.getFunctionAccess().getLeftParenthesisRightParenthesisKeyword_1_1()));
		match_IfTest_IfKeyword_7_q = new TokenAlias(false, true, grammarAccess.getIfTestAccess().getIfKeyword_7());
		match_LegacyDo_TimeoutKeyword_3_1_2_3_q = new TokenAlias(false, true, grammarAccess.getLegacyDoAccess().getTimeoutKeyword_3_1_2_3());
		match_LocalSignalDeclaration_SignalKeyword_7_q = new TokenAlias(false, true, grammarAccess.getLocalSignalDeclarationAccess().getSignalKeyword_7());
		match_LocalVariableDeclaration_VarKeyword_7_q = new TokenAlias(false, true, grammarAccess.getLocalVariableDeclarationAccess().getVarKeyword_7());
		match_Loop_LoopKeyword_4_0_1_q = new TokenAlias(false, true, grammarAccess.getLoopAccess().getLoopKeyword_4_0_1());
		match_MethodDeclarationWOSemicolon___LeftCurlyBracketKeyword_7_0_RightCurlyBracketKeyword_7_4__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_7_0()), new TokenAlias(false, false, grammarAccess.getMethodDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_7_4()));
		match_MethodDeclaration_SemicolonKeyword_7_0_or___LeftCurlyBracketKeyword_7_1_0_RightCurlyBracketKeyword_7_1_4__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getMethodDeclarationAccess().getLeftCurlyBracketKeyword_7_1_0()), new TokenAlias(false, false, grammarAccess.getMethodDeclarationAccess().getRightCurlyBracketKeyword_7_1_4())), new TokenAlias(false, false, grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_7_0()));
		match_ModuleCall_LeftParenthesisRightParenthesisKeyword_3_1_q = new TokenAlias(false, true, grammarAccess.getModuleCallAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
		match_Module_ColonKeyword_3_q = new TokenAlias(false, true, grammarAccess.getModuleAccess().getColonKeyword_3());
		match_Present_PresentKeyword_5_q = new TokenAlias(false, true, grammarAccess.getPresentAccess().getPresentKeyword_5());
		match_ProcedureCall_LeftParenthesisRightParenthesisKeyword_3_1_or___LeftParenthesisKeyword_3_0_0_RightParenthesisKeyword_3_0_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getProcedureCallAccess().getLeftParenthesisKeyword_3_0_0()), new TokenAlias(false, false, grammarAccess.getProcedureCallAccess().getRightParenthesisKeyword_3_0_2())), new TokenAlias(false, false, grammarAccess.getProcedureCallAccess().getLeftParenthesisRightParenthesisKeyword_3_1()));
		match_ProcedureCall_LeftParenthesisRightParenthesisKeyword_4_1_or___LeftParenthesisKeyword_4_0_0_RightParenthesisKeyword_4_0_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getProcedureCallAccess().getLeftParenthesisKeyword_4_0_0()), new TokenAlias(false, false, grammarAccess.getProcedureCallAccess().getRightParenthesisKeyword_4_0_2())), new TokenAlias(false, false, grammarAccess.getProcedureCallAccess().getLeftParenthesisRightParenthesisKeyword_4_1()));
		match_Procedure_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_1_0_0()), new TokenAlias(false, false, grammarAccess.getProcedureAccess().getRightParenthesisKeyword_1_0_2())), new TokenAlias(false, false, grammarAccess.getProcedureAccess().getLeftParenthesisRightParenthesisKeyword_1_1()));
		match_Procedure_LeftParenthesisRightParenthesisKeyword_2_1_or___LeftParenthesisKeyword_2_0_0_RightParenthesisKeyword_2_0_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_2_0_0()), new TokenAlias(false, false, grammarAccess.getProcedureAccess().getRightParenthesisKeyword_2_0_2())), new TokenAlias(false, false, grammarAccess.getProcedureAccess().getLeftParenthesisRightParenthesisKeyword_2_1()));
		match_RandomCall_LeftParenthesisRightParenthesisKeyword_2_q = new TokenAlias(false, true, grammarAccess.getRandomCallAccess().getLeftParenthesisRightParenthesisKeyword_2());
		match_RandomizeCall_LeftParenthesisRightParenthesisKeyword_2_q = new TokenAlias(false, true, grammarAccess.getRandomizeCallAccess().getLeftParenthesisRightParenthesisKeyword_2());
		match_ReferenceValuedObject_LeftParenthesisRightParenthesisKeyword_5_1_q = new TokenAlias(false, true, grammarAccess.getReferenceValuedObjectAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
		match_Repeat_RepeatKeyword_7_q = new TokenAlias(false, true, grammarAccess.getRepeatAccess().getRepeatKeyword_7());
		match_SignalAtomicExpression_LeftParenthesisKeyword_0_0_a = new TokenAlias(true, true, grammarAccess.getSignalAtomicExpressionAccess().getLeftParenthesisKeyword_0_0());
		match_SignalAtomicExpression_LeftParenthesisKeyword_0_0_p = new TokenAlias(true, false, grammarAccess.getSignalAtomicExpressionAccess().getLeftParenthesisKeyword_0_0());
		match_Task_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTaskAccess().getLeftParenthesisKeyword_1_0_0()), new TokenAlias(false, false, grammarAccess.getTaskAccess().getRightParenthesisKeyword_1_0_2())), new TokenAlias(false, false, grammarAccess.getTaskAccess().getLeftParenthesisRightParenthesisKeyword_1_1()));
		match_Task_LeftParenthesisRightParenthesisKeyword_2_1_or___LeftParenthesisKeyword_2_0_0_RightParenthesisKeyword_2_0_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTaskAccess().getLeftParenthesisKeyword_2_0_0()), new TokenAlias(false, false, grammarAccess.getTaskAccess().getRightParenthesisKeyword_2_0_2())), new TokenAlias(false, false, grammarAccess.getTaskAccess().getLeftParenthesisRightParenthesisKeyword_2_1()));
		match_Thread___LeftCurlyBracketKeyword_1_0_1_RightCurlyBracketKeyword_1_0_4__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getThreadAccess().getLeftCurlyBracketKeyword_1_0_1()), new TokenAlias(false, false, grammarAccess.getThreadAccess().getRightCurlyBracketKeyword_1_0_4()));
		match_Trap_TrapKeyword_8_q = new TokenAlias(false, true, grammarAccess.getTrapAccess().getTrapKeyword_8());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Abort_AbortKeyword_4_0_1_4_q.equals(syntax))
				emit_Abort_AbortKeyword_4_0_1_4_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Abort_AbortKeyword_4_1_3_q.equals(syntax))
				emit_Abort_AbortKeyword_4_1_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Abort_WeakKeyword_4_0_1_3_q.equals(syntax))
				emit_Abort_WeakKeyword_4_0_1_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Abort_WeakKeyword_4_1_2_q.equals(syntax))
				emit_Abort_WeakKeyword_4_1_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_a_LeftParenthesisKeyword_5_0__a.equals(syntax))
				emit_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_a_LeftParenthesisKeyword_5_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_a_LeftParenthesisKeyword_5_0__p.equals(syntax))
				emit_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_a_LeftParenthesisKeyword_5_0__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_or_LeftParenthesisKeyword_5_0__a.equals(syntax))
				emit_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_or_LeftParenthesisKeyword_5_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_or_LeftParenthesisKeyword_5_0__p.equals(syntax))
				emit_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_or_LeftParenthesisKeyword_5_0__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_5_0_LeftParenthesisKeyword_2_0_a__a.equals(syntax))
				emit_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_5_0_LeftParenthesisKeyword_2_0_a__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_5_0_LeftParenthesisKeyword_2_0_a__p.equals(syntax))
				emit_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_5_0_LeftParenthesisKeyword_2_0_a__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_5_0___LeftParenthesisKeyword_2_0_a_LeftParenthesisKeyword_5_0__a__q.equals(syntax))
				emit_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_5_0___LeftParenthesisKeyword_2_0_a_LeftParenthesisKeyword_5_0__a__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Await_AwaitKeyword_2_0_1_3_q.equals(syntax))
				emit_Await_AwaitKeyword_2_0_1_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Await_AwaitKeyword_2_1_2_q.equals(syntax))
				emit_Await_AwaitKeyword_2_1_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_EsterelFunctionCall_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__.equals(syntax))
				emit_EsterelFunctionCall_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_EsterelModule_FullStopKeyword_6_1_or___EndKeyword_6_0_0_ModuleKeyword_6_0_1__.equals(syntax))
				emit_EsterelModule_FullStopKeyword_6_1_or___EndKeyword_6_0_0_ModuleKeyword_6_0_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_EsterelThread_SemicolonKeyword_2_q.equals(syntax))
				emit_EsterelThread_SemicolonKeyword_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_EveryDo_EveryKeyword_6_q.equals(syntax))
				emit_EveryDo_EveryKeyword_6_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ExecCase_LeftParenthesisRightParenthesisKeyword_3_1_or___LeftParenthesisKeyword_3_0_0_RightParenthesisKeyword_3_0_2__.equals(syntax))
				emit_ExecCase_LeftParenthesisRightParenthesisKeyword_3_1_or___LeftParenthesisKeyword_3_0_0_RightParenthesisKeyword_3_0_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ExecCase_LeftParenthesisRightParenthesisKeyword_4_1_or___LeftParenthesisKeyword_4_0_0_RightParenthesisKeyword_4_0_2__.equals(syntax))
				emit_ExecCase_LeftParenthesisRightParenthesisKeyword_4_1_or___LeftParenthesisKeyword_4_0_0_RightParenthesisKeyword_4_0_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Exec_ExecKeyword_2_0_5_3_q.equals(syntax))
				emit_Exec_ExecKeyword_2_0_5_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Exec_ExecKeyword_2_1_2_q.equals(syntax))
				emit_Exec_ExecKeyword_2_1_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Exec_LeftParenthesisRightParenthesisKeyword_2_0_1_1_or___LeftParenthesisKeyword_2_0_1_0_0_RightParenthesisKeyword_2_0_1_0_2__.equals(syntax))
				emit_Exec_LeftParenthesisRightParenthesisKeyword_2_0_1_1_or___LeftParenthesisKeyword_2_0_1_0_0_RightParenthesisKeyword_2_0_1_0_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Exec_LeftParenthesisRightParenthesisKeyword_2_0_2_1_or___LeftParenthesisKeyword_2_0_2_0_0_RightParenthesisKeyword_2_0_2_0_2__.equals(syntax))
				emit_Exec_LeftParenthesisRightParenthesisKeyword_2_0_2_1_or___LeftParenthesisKeyword_2_0_2_0_0_RightParenthesisKeyword_2_0_2_0_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Function_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__.equals(syntax))
				emit_Function_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_IfTest_IfKeyword_7_q.equals(syntax))
				emit_IfTest_IfKeyword_7_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LegacyDo_TimeoutKeyword_3_1_2_3_q.equals(syntax))
				emit_LegacyDo_TimeoutKeyword_3_1_2_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LocalSignalDeclaration_SignalKeyword_7_q.equals(syntax))
				emit_LocalSignalDeclaration_SignalKeyword_7_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LocalVariableDeclaration_VarKeyword_7_q.equals(syntax))
				emit_LocalVariableDeclaration_VarKeyword_7_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Loop_LoopKeyword_4_0_1_q.equals(syntax))
				emit_Loop_LoopKeyword_4_0_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_MethodDeclarationWOSemicolon___LeftCurlyBracketKeyword_7_0_RightCurlyBracketKeyword_7_4__q.equals(syntax))
				emit_MethodDeclarationWOSemicolon___LeftCurlyBracketKeyword_7_0_RightCurlyBracketKeyword_7_4__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_MethodDeclaration_SemicolonKeyword_7_0_or___LeftCurlyBracketKeyword_7_1_0_RightCurlyBracketKeyword_7_1_4__.equals(syntax))
				emit_MethodDeclaration_SemicolonKeyword_7_0_or___LeftCurlyBracketKeyword_7_1_0_RightCurlyBracketKeyword_7_1_4__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ModuleCall_LeftParenthesisRightParenthesisKeyword_3_1_q.equals(syntax))
				emit_ModuleCall_LeftParenthesisRightParenthesisKeyword_3_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Module_ColonKeyword_3_q.equals(syntax))
				emit_Module_ColonKeyword_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Present_PresentKeyword_5_q.equals(syntax))
				emit_Present_PresentKeyword_5_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ProcedureCall_LeftParenthesisRightParenthesisKeyword_3_1_or___LeftParenthesisKeyword_3_0_0_RightParenthesisKeyword_3_0_2__.equals(syntax))
				emit_ProcedureCall_LeftParenthesisRightParenthesisKeyword_3_1_or___LeftParenthesisKeyword_3_0_0_RightParenthesisKeyword_3_0_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ProcedureCall_LeftParenthesisRightParenthesisKeyword_4_1_or___LeftParenthesisKeyword_4_0_0_RightParenthesisKeyword_4_0_2__.equals(syntax))
				emit_ProcedureCall_LeftParenthesisRightParenthesisKeyword_4_1_or___LeftParenthesisKeyword_4_0_0_RightParenthesisKeyword_4_0_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Procedure_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__.equals(syntax))
				emit_Procedure_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Procedure_LeftParenthesisRightParenthesisKeyword_2_1_or___LeftParenthesisKeyword_2_0_0_RightParenthesisKeyword_2_0_2__.equals(syntax))
				emit_Procedure_LeftParenthesisRightParenthesisKeyword_2_1_or___LeftParenthesisKeyword_2_0_0_RightParenthesisKeyword_2_0_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_RandomCall_LeftParenthesisRightParenthesisKeyword_2_q.equals(syntax))
				emit_RandomCall_LeftParenthesisRightParenthesisKeyword_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_RandomizeCall_LeftParenthesisRightParenthesisKeyword_2_q.equals(syntax))
				emit_RandomizeCall_LeftParenthesisRightParenthesisKeyword_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ReferenceValuedObject_LeftParenthesisRightParenthesisKeyword_5_1_q.equals(syntax))
				emit_ReferenceValuedObject_LeftParenthesisRightParenthesisKeyword_5_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Repeat_RepeatKeyword_7_q.equals(syntax))
				emit_Repeat_RepeatKeyword_7_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SignalAtomicExpression_LeftParenthesisKeyword_0_0_a.equals(syntax))
				emit_SignalAtomicExpression_LeftParenthesisKeyword_0_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SignalAtomicExpression_LeftParenthesisKeyword_0_0_p.equals(syntax))
				emit_SignalAtomicExpression_LeftParenthesisKeyword_0_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Task_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__.equals(syntax))
				emit_Task_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Task_LeftParenthesisRightParenthesisKeyword_2_1_or___LeftParenthesisKeyword_2_0_0_RightParenthesisKeyword_2_0_2__.equals(syntax))
				emit_Task_LeftParenthesisRightParenthesisKeyword_2_1_or___LeftParenthesisKeyword_2_0_0_RightParenthesisKeyword_2_0_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Thread___LeftCurlyBracketKeyword_1_0_1_RightCurlyBracketKeyword_1_0_4__q.equals(syntax))
				emit_Thread___LeftCurlyBracketKeyword_1_0_1_RightCurlyBracketKeyword_1_0_4__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Trap_TrapKeyword_8_q.equals(syntax))
				emit_Trap_TrapKeyword_8_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'abort'?
	 *
	 * This ambiguous syntax occurs at:
	 *     doStatements+=EsterelParallel 'end' 'weak'? (ambiguity) ';'? (rule end)
	 *     doStatements+=EsterelParallel 'end' 'weak'? (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Abort_AbortKeyword_4_0_1_4_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'abort'?
	 *
	 * This ambiguous syntax occurs at:
	 *     cases+=Case 'end' 'weak'? (ambiguity) ';'? (rule end)
	 *     cases+=Case 'end' 'weak'? (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Abort_AbortKeyword_4_1_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'weak'?
	 *
	 * This ambiguous syntax occurs at:
	 *     doStatements+=EsterelParallel 'end' (ambiguity) 'abort'? ';'? (rule end)
	 *     doStatements+=EsterelParallel 'end' (ambiguity) 'abort'? (rule end)
	 
	 * </pre>
	 */
	protected void emit_Abort_WeakKeyword_4_0_1_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'weak'?
	 *
	 * This ambiguous syntax occurs at:
	 *     cases+=Case 'end' (ambiguity) 'abort'? ';'? (rule end)
	 *     cases+=Case 'end' (ambiguity) 'abort'? (rule end)
	 
	 * </pre>
	 */
	protected void emit_Abort_WeakKeyword_4_1_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('('* '(')*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) '(' (ambiguity) operator=EsterelNotOperator
	 *     (rule start) '(' (ambiguity) {OperatorExpression.subExpressions+=}
	 *     (rule start) (ambiguity) operator=EsterelNotOperator
	 *     (rule start) (ambiguity) {OperatorExpression.subExpressions+=}
	 
	 * </pre>
	 */
	protected void emit_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_a_LeftParenthesisKeyword_5_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('('* '(')+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) operator=EsterelNotOperator
	 *     (rule start) (ambiguity) {OperatorExpression.subExpressions+=}
	 
	 * </pre>
	 */
	protected void emit_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_a_LeftParenthesisKeyword_5_0__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' | '(')*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '??' trap=[TrapSignal|ID]
	 *     (rule start) (ambiguity) annotations+=Annotation
	 *     (rule start) (ambiguity) constant=[Constant|ID]
	 *     (rule start) (ambiguity) function=[Function|ID]
	 *     (rule start) (ambiguity) operator=EsterelPreOperator
	 *     (rule start) (ambiguity) operator=EsterelSubOperator
	 *     (rule start) (ambiguity) operator=EsterelValueTestOperator
	 *     (rule start) (ambiguity) text=HOSTCODE
	 *     (rule start) (ambiguity) value=AnyValue
	 *     (rule start) (ambiguity) value=BOOLEAN
	 *     (rule start) (ambiguity) value=FLOAT
	 *     (rule start) (ambiguity) value=INT
	 *     (rule start) (ambiguity) valuedObject=[ValuedObject|PrimeID]
	 *     (rule start) (ambiguity) {OperatorExpression.subExpressions+=}
	 
	 * </pre>
	 */
	protected void emit_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_or_LeftParenthesisKeyword_5_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' | '(')+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) operator=EsterelSubOperator
	 *     (rule start) (ambiguity) {OperatorExpression.subExpressions+=}
	 
	 * </pre>
	 */
	protected void emit_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_2_0_or_LeftParenthesisKeyword_5_0__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' '('*)*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '??' trap=[TrapSignal|ID]
	 *     (rule start) (ambiguity) annotations+=Annotation
	 *     (rule start) (ambiguity) constant=[Constant|ID]
	 *     (rule start) (ambiguity) function=[Function|ID]
	 *     (rule start) (ambiguity) operator=EsterelPreOperator
	 *     (rule start) (ambiguity) operator=EsterelValueTestOperator
	 *     (rule start) (ambiguity) text=HOSTCODE
	 *     (rule start) (ambiguity) value=AnyValue
	 *     (rule start) (ambiguity) value=BOOLEAN
	 *     (rule start) (ambiguity) valuedObject=[ValuedObject|PrimeID]
	 
	 * </pre>
	 */
	protected void emit_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_5_0_LeftParenthesisKeyword_2_0_a__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' '('*)+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) operator=EsterelSubOperator
	 *     (rule start) (ambiguity) value=FLOAT
	 *     (rule start) (ambiguity) value=INT
	 *     (rule start) (ambiguity) {OperatorExpression.subExpressions+=}
	 
	 * </pre>
	 */
	protected void emit_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_5_0_LeftParenthesisKeyword_2_0_a__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ('('* '(')*)?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) operator=EsterelNotOperator
	 
	 * </pre>
	 */
	protected void emit_AtomicExpression_AtomicValuedExpression___LeftParenthesisKeyword_5_0___LeftParenthesisKeyword_2_0_a_LeftParenthesisKeyword_5_0__a__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'await'?
	 *
	 * This ambiguous syntax occurs at:
	 *     statements+=EsterelParallel 'end' (ambiguity) ';'? (rule end)
	 *     statements+=EsterelParallel 'end' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Await_AwaitKeyword_2_0_1_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'await'?
	 *
	 * This ambiguous syntax occurs at:
	 *     cases+=Case 'end' (ambiguity) ';'? (rule end)
	 *     cases+=Case 'end' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Await_AwaitKeyword_2_1_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')') | '()'
	 *
	 * This ambiguous syntax occurs at:
	 *     function=[Function|ID] (ambiguity) 'schedule' schedule+=ScheduleObjectReference
	 *     function=[Function|ID] (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_EsterelFunctionCall_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('end' 'module') | '.'
	 *
	 * This ambiguous syntax occurs at:
	 *     declarations+=EsterelDeclaration (ambiguity) (rule end)
	 *     name=ID ':' (ambiguity) (rule end)
	 *     statements+=EsterelParallel (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_EsterelModule_FullStopKeyword_6_1_or___EndKeyword_6_0_0_ModuleKeyword_6_0_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ';'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'halt' (ambiguity) (rule start)
	 *     (rule start) 'nothing' (ambiguity) (rule start)
	 *     (rule start) 'pause' (ambiguity) (rule start)
	 *     annotations+=Annotation 'halt' (ambiguity) (rule end)
	 *     annotations+=Annotation 'nothing' (ambiguity) (rule end)
	 *     annotations+=Annotation 'pause' (ambiguity) (rule end)
	 *     cases+=Case 'end' 'await'? (ambiguity) (rule end)
	 *     cases+=Case 'end' 'weak'? 'abort'? (ambiguity) (rule end)
	 *     cases+=PresentCase 'end' 'present'? (ambiguity) (rule end)
	 *     delay=DelayExpression (ambiguity) (rule end)
	 *     doStatements+=EsterelParallel 'end' 'weak'? 'abort'? (ambiguity) (rule end)
	 *     elseStatements+=EsterelParallel 'end' 'if'? (ambiguity) (rule end)
	 *     elseStatements+=EsterelParallel 'end' 'present'? (ambiguity) (rule end)
	 *     elseif+=ElsIf 'end' 'if'? (ambiguity) (rule end)
	 *     execCaseList+=ExecCase 'end' 'exec'? (ambiguity) (rule end)
	 *     expression=Expression ')' (ambiguity) (rule end)
	 *     expression=Expression 'end' 'if'? (ambiguity) (rule end)
	 *     expression=Expression (ambiguity) (rule end)
	 *     expression=SignalExpression ']' 'end' 'present'? (ambiguity) (rule end)
	 *     expression=SignalExpression 'end' 'present'? (ambiguity) (rule end)
	 *     module=ModuleRenaming (ambiguity) (rule end)
	 *     procedure=[Procedure|ID] (('(' ')') | '()') (('(' ')') | '()') (ambiguity) (rule end)
	 *     referenceArguments+=[Variable|ID] ')' (('(' ')') | '()') (ambiguity) (rule end)
	 *     renamings+=Renamings ']' (ambiguity) (rule end)
	 *     returnSignal=[Signal|ID] (ambiguity) (rule end)
	 *     signal=[Signal|ID] (ambiguity) (rule end)
	 *     statements+=EsterelParallel ']' (ambiguity) (rule end)
	 *     statements+=EsterelParallel 'end' 'await'? (ambiguity) (rule end)
	 *     statements+=EsterelParallel 'end' 'every'? (ambiguity) (rule end)
	 *     statements+=EsterelParallel 'end' 'exec'? (ambiguity) (rule end)
	 *     statements+=EsterelParallel 'end' 'if'? (ambiguity) (rule end)
	 *     statements+=EsterelParallel 'end' 'loop'? (ambiguity) (rule end)
	 *     statements+=EsterelParallel 'end' 'present'? (ambiguity) (rule end)
	 *     statements+=EsterelParallel 'end' 'repeat'? (ambiguity) (rule end)
	 *     statements+=EsterelParallel 'end' 'signal'? (ambiguity) (rule end)
	 *     statements+=EsterelParallel 'end' 'trap'? (ambiguity) (rule end)
	 *     statements+=EsterelParallel 'end' 'var'? (ambiguity) (rule end)
	 *     statements+=InstructionStatement (ambiguity) (rule end)
	 *     trap=[TrapSignal|ID] (ambiguity) (rule end)
	 *     trapHandler+=TrapHandler 'end' 'trap'? (ambiguity) (rule end)
	 *     valueArguments+=Expression ')' (ambiguity) (rule end)
	 *     watching=DelayExpression (ambiguity) (rule end)
	 *     watchingStatements+=EsterelParallel 'end' 'timeout'? (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_EsterelThread_SemicolonKeyword_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'every'?
	 *
	 * This ambiguous syntax occurs at:
	 *     statements+=EsterelParallel 'end' (ambiguity) ';'? (rule end)
	 *     statements+=EsterelParallel 'end' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_EveryDo_EveryKeyword_6_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')') | '()'
	 *
	 * This ambiguous syntax occurs at:
	 *     task=[Task|ID] (ambiguity) '(' valueParameters+=Expression
	 *     task=[Task|ID] (ambiguity) (('(' ')') | '()') 'return' returnSignal=[Signal|ID]
	 
	 * </pre>
	 */
	protected void emit_ExecCase_LeftParenthesisRightParenthesisKeyword_3_1_or___LeftParenthesisKeyword_3_0_0_RightParenthesisKeyword_3_0_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')') | '()'
	 *
	 * This ambiguous syntax occurs at:
	 *     referenceParameters+=[Variable|ID] ')' (ambiguity) 'return' returnSignal=[Signal|ID]
	 *     task=[Task|ID] (('(' ')') | '()') (ambiguity) 'return' returnSignal=[Signal|ID]
	 
	 * </pre>
	 */
	protected void emit_ExecCase_LeftParenthesisRightParenthesisKeyword_4_1_or___LeftParenthesisKeyword_4_0_0_RightParenthesisKeyword_4_0_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'exec'?
	 *
	 * This ambiguous syntax occurs at:
	 *     statements+=EsterelParallel 'end' (ambiguity) ';'? (rule end)
	 *     statements+=EsterelParallel 'end' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Exec_ExecKeyword_2_0_5_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'exec'?
	 *
	 * This ambiguous syntax occurs at:
	 *     execCaseList+=ExecCase 'end' (ambiguity) ';'? (rule end)
	 *     execCaseList+=ExecCase 'end' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Exec_ExecKeyword_2_1_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')') | '()'
	 *
	 * This ambiguous syntax occurs at:
	 *     task=[Task|ID] (ambiguity) '(' valueParameters+=Expression
	 *     task=[Task|ID] (ambiguity) (('(' ')') | '()') 'return' returnSignal=[Signal|ID]
	 
	 * </pre>
	 */
	protected void emit_Exec_LeftParenthesisRightParenthesisKeyword_2_0_1_1_or___LeftParenthesisKeyword_2_0_1_0_0_RightParenthesisKeyword_2_0_1_0_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')') | '()'
	 *
	 * This ambiguous syntax occurs at:
	 *     referenceParameters+=[Variable|ID] ')' (ambiguity) 'return' returnSignal=[Signal|ID]
	 *     task=[Task|ID] (('(' ')') | '()') (ambiguity) 'return' returnSignal=[Signal|ID]
	 
	 * </pre>
	 */
	protected void emit_Exec_LeftParenthesisRightParenthesisKeyword_2_0_2_1_or___LeftParenthesisKeyword_2_0_2_0_0_RightParenthesisKeyword_2_0_2_0_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')') | '()'
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) ':' returnType=TypeIdentifier
	 
	 * </pre>
	 */
	protected void emit_Function_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'if'?
	 *
	 * This ambiguous syntax occurs at:
	 *     elseStatements+=EsterelParallel 'end' (ambiguity) ';'? (rule end)
	 *     elseStatements+=EsterelParallel 'end' (ambiguity) (rule end)
	 *     elseif+=ElsIf 'end' (ambiguity) ';'? (rule end)
	 *     elseif+=ElsIf 'end' (ambiguity) (rule end)
	 *     expression=Expression 'end' (ambiguity) ';'? (rule end)
	 *     expression=Expression 'end' (ambiguity) (rule end)
	 *     statements+=EsterelParallel 'end' (ambiguity) ';'? (rule end)
	 *     statements+=EsterelParallel 'end' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_IfTest_IfKeyword_7_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'timeout'?
	 *
	 * This ambiguous syntax occurs at:
	 *     watchingStatements+=EsterelParallel 'end' (ambiguity) ';'? (rule end)
	 *     watchingStatements+=EsterelParallel 'end' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_LegacyDo_TimeoutKeyword_3_1_2_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'signal'?
	 *
	 * This ambiguous syntax occurs at:
	 *     statements+=EsterelParallel 'end' (ambiguity) ';'? (rule end)
	 *     statements+=EsterelParallel 'end' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_LocalSignalDeclaration_SignalKeyword_7_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'var'?
	 *
	 * This ambiguous syntax occurs at:
	 *     statements+=EsterelParallel 'end' (ambiguity) ';'? (rule end)
	 *     statements+=EsterelParallel 'end' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_LocalVariableDeclaration_VarKeyword_7_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'loop'?
	 *
	 * This ambiguous syntax occurs at:
	 *     statements+=EsterelParallel 'end' (ambiguity) ';'? (rule end)
	 *     statements+=EsterelParallel 'end' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Loop_LoopKeyword_4_0_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     parameterDeclarations+=VariableDeclarationWOSemicolon ')' (ambiguity) (rule end)
	 *     schedule+=ScheduleObjectReference (ambiguity) (rule end)
	 *     valuedObjects+=SimpleValuedObject '()' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_MethodDeclarationWOSemicolon___LeftCurlyBracketKeyword_7_0_RightCurlyBracketKeyword_7_4__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ';' | ('{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     parameterDeclarations+=VariableDeclarationWOSemicolon ')' (ambiguity) (rule end)
	 *     parameterDeclarations+=VariableDeclarationWOSemicolon ')' (ambiguity) annotations+=CommentAnnotatonSL
	 *     schedule+=ScheduleObjectReference (ambiguity) (rule end)
	 *     schedule+=ScheduleObjectReference (ambiguity) annotations+=CommentAnnotatonSL
	 *     valuedObjects+=SimpleValuedObject '()' (ambiguity) (rule end)
	 *     valuedObjects+=SimpleValuedObject '()' (ambiguity) annotations+=CommentAnnotatonSL
	 
	 * </pre>
	 */
	protected void emit_MethodDeclaration_SemicolonKeyword_7_0_or___LeftCurlyBracketKeyword_7_1_0_RightCurlyBracketKeyword_7_1_4__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     '()'?
	 *
	 * This ambiguous syntax occurs at:
	 *     module=[Module|ID] (ambiguity) (rule end)
	 *     module=[Module|ID] (ambiguity) semicolon?=';'
	 
	 * </pre>
	 */
	protected void emit_ModuleCall_LeftParenthesisRightParenthesisKeyword_3_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ':'?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) (rule end)
	 *     name=ID (ambiguity) declarations+=Declaration
	 *     name=ID (ambiguity) statements+=Statement
	 
	 * </pre>
	 */
	protected void emit_Module_ColonKeyword_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'present'?
	 *
	 * This ambiguous syntax occurs at:
	 *     cases+=PresentCase 'end' (ambiguity) ';'? (rule end)
	 *     cases+=PresentCase 'end' (ambiguity) (rule end)
	 *     elseStatements+=EsterelParallel 'end' (ambiguity) ';'? (rule end)
	 *     elseStatements+=EsterelParallel 'end' (ambiguity) (rule end)
	 *     expression=SignalExpression ']' 'end' (ambiguity) ';'? (rule end)
	 *     expression=SignalExpression ']' 'end' (ambiguity) (rule end)
	 *     expression=SignalExpression 'end' (ambiguity) ';'? (rule end)
	 *     expression=SignalExpression 'end' (ambiguity) (rule end)
	 *     statements+=EsterelParallel 'end' (ambiguity) ';'? (rule end)
	 *     statements+=EsterelParallel 'end' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Present_PresentKeyword_5_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')') | '()'
	 *
	 * This ambiguous syntax occurs at:
	 *     procedure=[Procedure|ID] (ambiguity) '(' valueArguments+=Expression
	 *     procedure=[Procedure|ID] (ambiguity) (('(' ')') | '()') ';'? (rule end)
	 *     procedure=[Procedure|ID] (ambiguity) (('(' ')') | '()') (rule end)
	 
	 * </pre>
	 */
	protected void emit_ProcedureCall_LeftParenthesisRightParenthesisKeyword_3_1_or___LeftParenthesisKeyword_3_0_0_RightParenthesisKeyword_3_0_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')') | '()'
	 *
	 * This ambiguous syntax occurs at:
	 *     procedure=[Procedure|ID] (('(' ')') | '()') (ambiguity) ';'? (rule end)
	 *     procedure=[Procedure|ID] (('(' ')') | '()') (ambiguity) (rule end)
	 *     referenceArguments+=[Variable|ID] ')' (ambiguity) ';'? (rule end)
	 *     referenceArguments+=[Variable|ID] ')' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_ProcedureCall_LeftParenthesisRightParenthesisKeyword_4_1_or___LeftParenthesisKeyword_4_0_0_RightParenthesisKeyword_4_0_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')') | '()'
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) '(' valueArguments+=TypeIdentifier
	 *     name=ID (ambiguity) (('(' ')') | '()') (rule end)
	 
	 * </pre>
	 */
	protected void emit_Procedure_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')') | '()'
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (('(' ')') | '()') (ambiguity) (rule end)
	 *     referenceArguments+=TypeIdentifier ')' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Procedure_LeftParenthesisRightParenthesisKeyword_2_1_or___LeftParenthesisKeyword_2_0_0_RightParenthesisKeyword_2_0_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     '()'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'random' (ambiguity) (rule start)
	 
	 * </pre>
	 */
	protected void emit_RandomCall_LeftParenthesisRightParenthesisKeyword_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     '()'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'randomize' (ambiguity) (rule start)
	 
	 * </pre>
	 */
	protected void emit_RandomizeCall_LeftParenthesisRightParenthesisKeyword_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     '()'?
	 *
	 * This ambiguous syntax occurs at:
	 *     cardinalities+=Expression ']' (ambiguity) '=' initialValue=Expression
	 *     cardinalities+=Expression ']' (ambiguity) 'label' label=STRING
	 *     cardinalities+=Expression ']' (ambiguity) (rule end)
	 *     genericParameters+=GenericParameter '&gt;' (ambiguity) '=' initialValue=Expression
	 *     genericParameters+=GenericParameter '&gt;' (ambiguity) 'label' label=STRING
	 *     genericParameters+=GenericParameter '&gt;' (ambiguity) (rule end)
	 *     name=PrimeID (ambiguity) '=' initialValue=Expression
	 *     name=PrimeID (ambiguity) 'label' label=STRING
	 *     name=PrimeID (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_ReferenceValuedObject_LeftParenthesisRightParenthesisKeyword_5_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'repeat'?
	 *
	 * This ambiguous syntax occurs at:
	 *     statements+=EsterelParallel 'end' (ambiguity) ';'? (rule end)
	 *     statements+=EsterelParallel 'end' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Repeat_RepeatKeyword_7_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     '('*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'tick' (rule start)
	 *     (rule start) (ambiguity) operator=EsterelNotOperator
	 *     (rule start) (ambiguity) operator=EsterelPreOperator
	 *     (rule start) (ambiguity) valuedObject=[Signal|ID]
	 *     (rule start) (ambiguity) {OperatorExpression.subExpressions+=}
	 
	 * </pre>
	 */
	protected void emit_SignalAtomicExpression_LeftParenthesisKeyword_0_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     '('+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) operator=EsterelNotOperator
	 *     (rule start) (ambiguity) {OperatorExpression.subExpressions+=}
	 
	 * </pre>
	 */
	protected void emit_SignalAtomicExpression_LeftParenthesisKeyword_0_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')') | '()'
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) '(' valueArguments+=TypeIdentifier
	 *     name=ID (ambiguity) (('(' ')') | '()') (rule end)
	 
	 * </pre>
	 */
	protected void emit_Task_LeftParenthesisRightParenthesisKeyword_1_1_or___LeftParenthesisKeyword_1_0_0_RightParenthesisKeyword_1_0_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')') | '()'
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (('(' ')') | '()') (ambiguity) (rule end)
	 *     referenceArguments+=TypeIdentifier ')' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Task_LeftParenthesisRightParenthesisKeyword_2_1_or___LeftParenthesisKeyword_2_0_0_RightParenthesisKeyword_2_0_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 
	 * </pre>
	 */
	protected void emit_Thread___LeftCurlyBracketKeyword_1_0_1_RightCurlyBracketKeyword_1_0_4__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'trap'?
	 *
	 * This ambiguous syntax occurs at:
	 *     statements+=EsterelParallel 'end' (ambiguity) ';'? (rule end)
	 *     statements+=EsterelParallel 'end' (ambiguity) (rule end)
	 *     trapHandler+=TrapHandler 'end' (ambiguity) ';'? (rule end)
	 *     trapHandler+=TrapHandler 'end' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Trap_TrapKeyword_8_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
