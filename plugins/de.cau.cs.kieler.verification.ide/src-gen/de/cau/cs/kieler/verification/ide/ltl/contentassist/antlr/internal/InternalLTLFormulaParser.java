package de.cau.cs.kieler.verification.ide.ltl.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.cau.cs.kieler.verification.ltl.services.LTLFormulaGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalLTLFormulaParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_BOOLEAN", "RULE_ID", "RULE_INT", "RULE_FLOAT", "RULE_HOSTCODE", "RULE_COMMENT_ANNOTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT_ANNOTATION", "RULE_SL_COMMENT", "RULE_NUMBER", "RULE_WS", "RULE_ANY_OTHER", "'G'", "'F'", "'X'", "'U'", "'pre'", "'~'", "'^'", "'|'", "'&'", "'!'", "'+'", "'-'", "'*'", "'%'", "'/'", "'val'", "'||'", "'&&'", "'<<'", "'>>'", "'>>>'", "'?'", "'->'", "'fby'", "'sfby'", "'()'", "'.'", "'=='", "'<'", "'<='", "'>'", "'>='", "'!='", "'!&'", "'('", "')'", "':'", "','", "'\\''", "'['", "']'", "'random'", "'randomize'", "'extern'", "'{'", "'}'", "'_'", "'null'", "'#'", "'@'", "'static'", "'to'"
    };
    public static final int T__50=50;
    public static final int RULE_BOOLEAN=5;
    public static final int T__19=19;
    public static final int T__59=59;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=6;
    public static final int T__26=26;
    public static final int RULE_HOSTCODE=9;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=7;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=11;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int T__65=65;
    public static final int RULE_COMMENT_ANNOTATION=10;
    public static final int RULE_STRING=4;
    public static final int RULE_SL_COMMENT=13;
    public static final int T__37=37;
    public static final int RULE_SL_COMMENT_ANNOTATION=12;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_WS=15;
    public static final int RULE_ANY_OTHER=16;
    public static final int RULE_NUMBER=14;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=8;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalLTLFormulaParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalLTLFormulaParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalLTLFormulaParser.tokenNames; }
    public String getGrammarFileName() { return "InternalLTLFormula.g"; }


    	private LTLFormulaGrammarAccess grammarAccess;

    	public void setGrammarAccess(LTLFormulaGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleLTLFormula"
    // InternalLTLFormula.g:54:1: entryRuleLTLFormula : ruleLTLFormula EOF ;
    public final void entryRuleLTLFormula() throws RecognitionException {
        try {
            // InternalLTLFormula.g:55:1: ( ruleLTLFormula EOF )
            // InternalLTLFormula.g:56:1: ruleLTLFormula EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLFormulaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLTLFormula();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLFormulaRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLTLFormula"


    // $ANTLR start "ruleLTLFormula"
    // InternalLTLFormula.g:63:1: ruleLTLFormula : ( ruleLTLExpression ) ;
    public final void ruleLTLFormula() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:67:2: ( ( ruleLTLExpression ) )
            // InternalLTLFormula.g:68:2: ( ruleLTLExpression )
            {
            // InternalLTLFormula.g:68:2: ( ruleLTLExpression )
            // InternalLTLFormula.g:69:3: ruleLTLExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLFormulaAccess().getLTLExpressionParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLTLExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLFormulaAccess().getLTLExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLTLFormula"


    // $ANTLR start "entryRuleLTLExpression"
    // InternalLTLFormula.g:79:1: entryRuleLTLExpression : ruleLTLExpression EOF ;
    public final void entryRuleLTLExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:80:1: ( ruleLTLExpression EOF )
            // InternalLTLFormula.g:81:1: ruleLTLExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLTLExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLTLExpression"


    // $ANTLR start "ruleLTLExpression"
    // InternalLTLFormula.g:88:1: ruleLTLExpression : ( ( rule__LTLExpression__Alternatives ) ) ;
    public final void ruleLTLExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:92:2: ( ( ( rule__LTLExpression__Alternatives ) ) )
            // InternalLTLFormula.g:93:2: ( ( rule__LTLExpression__Alternatives ) )
            {
            // InternalLTLFormula.g:93:2: ( ( rule__LTLExpression__Alternatives ) )
            // InternalLTLFormula.g:94:3: ( rule__LTLExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:95:3: ( rule__LTLExpression__Alternatives )
            // InternalLTLFormula.g:95:4: rule__LTLExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLTLExpression"


    // $ANTLR start "entryRuleAtomicExpression"
    // InternalLTLFormula.g:104:1: entryRuleAtomicExpression : ruleAtomicExpression EOF ;
    public final void entryRuleAtomicExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:105:1: ( ruleAtomicExpression EOF )
            // InternalLTLFormula.g:106:1: ruleAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAtomicExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAtomicExpression"


    // $ANTLR start "ruleAtomicExpression"
    // InternalLTLFormula.g:113:1: ruleAtomicExpression : ( ( rule__AtomicExpression__Alternatives ) ) ;
    public final void ruleAtomicExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:117:2: ( ( ( rule__AtomicExpression__Alternatives ) ) )
            // InternalLTLFormula.g:118:2: ( ( rule__AtomicExpression__Alternatives ) )
            {
            // InternalLTLFormula.g:118:2: ( ( rule__AtomicExpression__Alternatives ) )
            // InternalLTLFormula.g:119:3: ( rule__AtomicExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicExpressionAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:120:3: ( rule__AtomicExpression__Alternatives )
            // InternalLTLFormula.g:120:4: rule__AtomicExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AtomicExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAtomicExpression"


    // $ANTLR start "entryRuleExpression"
    // InternalLTLFormula.g:129:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:130:1: ( ruleExpression EOF )
            // InternalLTLFormula.g:131:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalLTLFormula.g:138:1: ruleExpression : ( ( rule__Expression__Alternatives ) ) ;
    public final void ruleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:142:2: ( ( ( rule__Expression__Alternatives ) ) )
            // InternalLTLFormula.g:143:2: ( ( rule__Expression__Alternatives ) )
            {
            // InternalLTLFormula.g:143:2: ( ( rule__Expression__Alternatives ) )
            // InternalLTLFormula.g:144:3: ( rule__Expression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:145:3: ( rule__Expression__Alternatives )
            // InternalLTLFormula.g:145:4: rule__Expression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Expression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleBoolExpression"
    // InternalLTLFormula.g:154:1: entryRuleBoolExpression : ruleBoolExpression EOF ;
    public final void entryRuleBoolExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:155:1: ( ruleBoolExpression EOF )
            // InternalLTLFormula.g:156:1: ruleBoolExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBoolExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBoolExpression"


    // $ANTLR start "ruleBoolExpression"
    // InternalLTLFormula.g:163:1: ruleBoolExpression : ( ruleLogicalOrExpression ) ;
    public final void ruleBoolExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:167:2: ( ( ruleLogicalOrExpression ) )
            // InternalLTLFormula.g:168:2: ( ruleLogicalOrExpression )
            {
            // InternalLTLFormula.g:168:2: ( ruleLogicalOrExpression )
            // InternalLTLFormula.g:169:3: ruleLogicalOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolExpressionAccess().getLogicalOrExpressionParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolExpressionAccess().getLogicalOrExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBoolExpression"


    // $ANTLR start "entryRuleLogicalOrExpression"
    // InternalLTLFormula.g:179:1: entryRuleLogicalOrExpression : ruleLogicalOrExpression EOF ;
    public final void entryRuleLogicalOrExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:180:1: ( ruleLogicalOrExpression EOF )
            // InternalLTLFormula.g:181:1: ruleLogicalOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLogicalOrExpression"


    // $ANTLR start "ruleLogicalOrExpression"
    // InternalLTLFormula.g:188:1: ruleLogicalOrExpression : ( ( rule__LogicalOrExpression__Group__0 ) ) ;
    public final void ruleLogicalOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:192:2: ( ( ( rule__LogicalOrExpression__Group__0 ) ) )
            // InternalLTLFormula.g:193:2: ( ( rule__LogicalOrExpression__Group__0 ) )
            {
            // InternalLTLFormula.g:193:2: ( ( rule__LogicalOrExpression__Group__0 ) )
            // InternalLTLFormula.g:194:3: ( rule__LogicalOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getGroup()); 
            }
            // InternalLTLFormula.g:195:3: ( rule__LogicalOrExpression__Group__0 )
            // InternalLTLFormula.g:195:4: rule__LogicalOrExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLogicalOrExpression"


    // $ANTLR start "entryRuleLogicalAndExpression"
    // InternalLTLFormula.g:204:1: entryRuleLogicalAndExpression : ruleLogicalAndExpression EOF ;
    public final void entryRuleLogicalAndExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:205:1: ( ruleLogicalAndExpression EOF )
            // InternalLTLFormula.g:206:1: ruleLogicalAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLogicalAndExpression"


    // $ANTLR start "ruleLogicalAndExpression"
    // InternalLTLFormula.g:213:1: ruleLogicalAndExpression : ( ( rule__LogicalAndExpression__Group__0 ) ) ;
    public final void ruleLogicalAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:217:2: ( ( ( rule__LogicalAndExpression__Group__0 ) ) )
            // InternalLTLFormula.g:218:2: ( ( rule__LogicalAndExpression__Group__0 ) )
            {
            // InternalLTLFormula.g:218:2: ( ( rule__LogicalAndExpression__Group__0 ) )
            // InternalLTLFormula.g:219:3: ( rule__LogicalAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getGroup()); 
            }
            // InternalLTLFormula.g:220:3: ( rule__LogicalAndExpression__Group__0 )
            // InternalLTLFormula.g:220:4: rule__LogicalAndExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLogicalAndExpression"


    // $ANTLR start "entryRuleBitwiseOrExpression"
    // InternalLTLFormula.g:229:1: entryRuleBitwiseOrExpression : ruleBitwiseOrExpression EOF ;
    public final void entryRuleBitwiseOrExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:230:1: ( ruleBitwiseOrExpression EOF )
            // InternalLTLFormula.g:231:1: ruleBitwiseOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseOrExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBitwiseOrExpression"


    // $ANTLR start "ruleBitwiseOrExpression"
    // InternalLTLFormula.g:238:1: ruleBitwiseOrExpression : ( ( rule__BitwiseOrExpression__Group__0 ) ) ;
    public final void ruleBitwiseOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:242:2: ( ( ( rule__BitwiseOrExpression__Group__0 ) ) )
            // InternalLTLFormula.g:243:2: ( ( rule__BitwiseOrExpression__Group__0 ) )
            {
            // InternalLTLFormula.g:243:2: ( ( rule__BitwiseOrExpression__Group__0 ) )
            // InternalLTLFormula.g:244:3: ( rule__BitwiseOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseOrExpressionAccess().getGroup()); 
            }
            // InternalLTLFormula.g:245:3: ( rule__BitwiseOrExpression__Group__0 )
            // InternalLTLFormula.g:245:4: rule__BitwiseOrExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBitwiseOrExpression"


    // $ANTLR start "entryRuleBitwiseXOrExpression"
    // InternalLTLFormula.g:254:1: entryRuleBitwiseXOrExpression : ruleBitwiseXOrExpression EOF ;
    public final void entryRuleBitwiseXOrExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:255:1: ( ruleBitwiseXOrExpression EOF )
            // InternalLTLFormula.g:256:1: ruleBitwiseXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseXOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseXOrExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBitwiseXOrExpression"


    // $ANTLR start "ruleBitwiseXOrExpression"
    // InternalLTLFormula.g:263:1: ruleBitwiseXOrExpression : ( ( rule__BitwiseXOrExpression__Group__0 ) ) ;
    public final void ruleBitwiseXOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:267:2: ( ( ( rule__BitwiseXOrExpression__Group__0 ) ) )
            // InternalLTLFormula.g:268:2: ( ( rule__BitwiseXOrExpression__Group__0 ) )
            {
            // InternalLTLFormula.g:268:2: ( ( rule__BitwiseXOrExpression__Group__0 ) )
            // InternalLTLFormula.g:269:3: ( rule__BitwiseXOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseXOrExpressionAccess().getGroup()); 
            }
            // InternalLTLFormula.g:270:3: ( rule__BitwiseXOrExpression__Group__0 )
            // InternalLTLFormula.g:270:4: rule__BitwiseXOrExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseXOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseXOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBitwiseXOrExpression"


    // $ANTLR start "entryRuleBitwiseAndExpression"
    // InternalLTLFormula.g:279:1: entryRuleBitwiseAndExpression : ruleBitwiseAndExpression EOF ;
    public final void entryRuleBitwiseAndExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:280:1: ( ruleBitwiseAndExpression EOF )
            // InternalLTLFormula.g:281:1: ruleBitwiseAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseAndExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBitwiseAndExpression"


    // $ANTLR start "ruleBitwiseAndExpression"
    // InternalLTLFormula.g:288:1: ruleBitwiseAndExpression : ( ( rule__BitwiseAndExpression__Group__0 ) ) ;
    public final void ruleBitwiseAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:292:2: ( ( ( rule__BitwiseAndExpression__Group__0 ) ) )
            // InternalLTLFormula.g:293:2: ( ( rule__BitwiseAndExpression__Group__0 ) )
            {
            // InternalLTLFormula.g:293:2: ( ( rule__BitwiseAndExpression__Group__0 ) )
            // InternalLTLFormula.g:294:3: ( rule__BitwiseAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseAndExpressionAccess().getGroup()); 
            }
            // InternalLTLFormula.g:295:3: ( rule__BitwiseAndExpression__Group__0 )
            // InternalLTLFormula.g:295:4: rule__BitwiseAndExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBitwiseAndExpression"


    // $ANTLR start "entryRuleCompareOperation"
    // InternalLTLFormula.g:304:1: entryRuleCompareOperation : ruleCompareOperation EOF ;
    public final void entryRuleCompareOperation() throws RecognitionException {
        try {
            // InternalLTLFormula.g:305:1: ( ruleCompareOperation EOF )
            // InternalLTLFormula.g:306:1: ruleCompareOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCompareOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCompareOperation"


    // $ANTLR start "ruleCompareOperation"
    // InternalLTLFormula.g:313:1: ruleCompareOperation : ( ( rule__CompareOperation__Group__0 ) ) ;
    public final void ruleCompareOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:317:2: ( ( ( rule__CompareOperation__Group__0 ) ) )
            // InternalLTLFormula.g:318:2: ( ( rule__CompareOperation__Group__0 ) )
            {
            // InternalLTLFormula.g:318:2: ( ( rule__CompareOperation__Group__0 ) )
            // InternalLTLFormula.g:319:3: ( rule__CompareOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperationAccess().getGroup()); 
            }
            // InternalLTLFormula.g:320:3: ( rule__CompareOperation__Group__0 )
            // InternalLTLFormula.g:320:4: rule__CompareOperation__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CompareOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompareOperation"


    // $ANTLR start "entryRuleNotOrValuedExpression"
    // InternalLTLFormula.g:329:1: entryRuleNotOrValuedExpression : ruleNotOrValuedExpression EOF ;
    public final void entryRuleNotOrValuedExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:330:1: ( ruleNotOrValuedExpression EOF )
            // InternalLTLFormula.g:331:1: ruleNotOrValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNotOrValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNotOrValuedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNotOrValuedExpression"


    // $ANTLR start "ruleNotOrValuedExpression"
    // InternalLTLFormula.g:338:1: ruleNotOrValuedExpression : ( ( rule__NotOrValuedExpression__Alternatives ) ) ;
    public final void ruleNotOrValuedExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:342:2: ( ( ( rule__NotOrValuedExpression__Alternatives ) ) )
            // InternalLTLFormula.g:343:2: ( ( rule__NotOrValuedExpression__Alternatives ) )
            {
            // InternalLTLFormula.g:343:2: ( ( rule__NotOrValuedExpression__Alternatives ) )
            // InternalLTLFormula.g:344:3: ( rule__NotOrValuedExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:345:3: ( rule__NotOrValuedExpression__Alternatives )
            // InternalLTLFormula.g:345:4: rule__NotOrValuedExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NotOrValuedExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNotOrValuedExpression"


    // $ANTLR start "entryRuleBitwiseNotExpression"
    // InternalLTLFormula.g:354:1: entryRuleBitwiseNotExpression : ruleBitwiseNotExpression EOF ;
    public final void entryRuleBitwiseNotExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:355:1: ( ruleBitwiseNotExpression EOF )
            // InternalLTLFormula.g:356:1: ruleBitwiseNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBitwiseNotExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseNotExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBitwiseNotExpression"


    // $ANTLR start "ruleBitwiseNotExpression"
    // InternalLTLFormula.g:363:1: ruleBitwiseNotExpression : ( ( rule__BitwiseNotExpression__Alternatives ) ) ;
    public final void ruleBitwiseNotExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:367:2: ( ( ( rule__BitwiseNotExpression__Alternatives ) ) )
            // InternalLTLFormula.g:368:2: ( ( rule__BitwiseNotExpression__Alternatives ) )
            {
            // InternalLTLFormula.g:368:2: ( ( rule__BitwiseNotExpression__Alternatives ) )
            // InternalLTLFormula.g:369:3: ( rule__BitwiseNotExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseNotExpressionAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:370:3: ( rule__BitwiseNotExpression__Alternatives )
            // InternalLTLFormula.g:370:4: rule__BitwiseNotExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseNotExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseNotExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBitwiseNotExpression"


    // $ANTLR start "entryRuleNotExpression"
    // InternalLTLFormula.g:379:1: entryRuleNotExpression : ruleNotExpression EOF ;
    public final void entryRuleNotExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:380:1: ( ruleNotExpression EOF )
            // InternalLTLFormula.g:381:1: ruleNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNotExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNotExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNotExpression"


    // $ANTLR start "ruleNotExpression"
    // InternalLTLFormula.g:388:1: ruleNotExpression : ( ( rule__NotExpression__Alternatives ) ) ;
    public final void ruleNotExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:392:2: ( ( ( rule__NotExpression__Alternatives ) ) )
            // InternalLTLFormula.g:393:2: ( ( rule__NotExpression__Alternatives ) )
            {
            // InternalLTLFormula.g:393:2: ( ( rule__NotExpression__Alternatives ) )
            // InternalLTLFormula.g:394:3: ( rule__NotExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNotExpressionAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:395:3: ( rule__NotExpression__Alternatives )
            // InternalLTLFormula.g:395:4: rule__NotExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NotExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNotExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNotExpression"


    // $ANTLR start "entryRuleValuedExpression"
    // InternalLTLFormula.g:404:1: entryRuleValuedExpression : ruleValuedExpression EOF ;
    public final void entryRuleValuedExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:405:1: ( ruleValuedExpression EOF )
            // InternalLTLFormula.g:406:1: ruleValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleValuedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleValuedExpression"


    // $ANTLR start "ruleValuedExpression"
    // InternalLTLFormula.g:413:1: ruleValuedExpression : ( ruleShiftExpressions ) ;
    public final void ruleValuedExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:417:2: ( ( ruleShiftExpressions ) )
            // InternalLTLFormula.g:418:2: ( ruleShiftExpressions )
            {
            // InternalLTLFormula.g:418:2: ( ruleShiftExpressions )
            // InternalLTLFormula.g:419:3: ruleShiftExpressions
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedExpressionAccess().getShiftExpressionsParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleShiftExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedExpressionAccess().getShiftExpressionsParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValuedExpression"


    // $ANTLR start "entryRuleShiftExpressions"
    // InternalLTLFormula.g:429:1: entryRuleShiftExpressions : ruleShiftExpressions EOF ;
    public final void entryRuleShiftExpressions() throws RecognitionException {
        try {
            // InternalLTLFormula.g:430:1: ( ruleShiftExpressions EOF )
            // InternalLTLFormula.g:431:1: ruleShiftExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleShiftExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleShiftExpressions"


    // $ANTLR start "ruleShiftExpressions"
    // InternalLTLFormula.g:438:1: ruleShiftExpressions : ( ( rule__ShiftExpressions__Group__0 ) ) ;
    public final void ruleShiftExpressions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:442:2: ( ( ( rule__ShiftExpressions__Group__0 ) ) )
            // InternalLTLFormula.g:443:2: ( ( rule__ShiftExpressions__Group__0 ) )
            {
            // InternalLTLFormula.g:443:2: ( ( rule__ShiftExpressions__Group__0 ) )
            // InternalLTLFormula.g:444:3: ( rule__ShiftExpressions__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getGroup()); 
            }
            // InternalLTLFormula.g:445:3: ( rule__ShiftExpressions__Group__0 )
            // InternalLTLFormula.g:445:4: rule__ShiftExpressions__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleShiftExpressions"


    // $ANTLR start "entryRuleShiftRightExpression"
    // InternalLTLFormula.g:454:1: entryRuleShiftRightExpression : ruleShiftRightExpression EOF ;
    public final void entryRuleShiftRightExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:455:1: ( ruleShiftRightExpression EOF )
            // InternalLTLFormula.g:456:1: ruleShiftRightExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleShiftRightExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleShiftRightExpression"


    // $ANTLR start "ruleShiftRightExpression"
    // InternalLTLFormula.g:463:1: ruleShiftRightExpression : ( ( rule__ShiftRightExpression__Group__0 ) ) ;
    public final void ruleShiftRightExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:467:2: ( ( ( rule__ShiftRightExpression__Group__0 ) ) )
            // InternalLTLFormula.g:468:2: ( ( rule__ShiftRightExpression__Group__0 ) )
            {
            // InternalLTLFormula.g:468:2: ( ( rule__ShiftRightExpression__Group__0 ) )
            // InternalLTLFormula.g:469:3: ( rule__ShiftRightExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightExpressionAccess().getGroup()); 
            }
            // InternalLTLFormula.g:470:3: ( rule__ShiftRightExpression__Group__0 )
            // InternalLTLFormula.g:470:4: rule__ShiftRightExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleShiftRightExpression"


    // $ANTLR start "entryRuleShiftRightUnsignedExpression"
    // InternalLTLFormula.g:479:1: entryRuleShiftRightUnsignedExpression : ruleShiftRightUnsignedExpression EOF ;
    public final void entryRuleShiftRightUnsignedExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:480:1: ( ruleShiftRightUnsignedExpression EOF )
            // InternalLTLFormula.g:481:1: ruleShiftRightUnsignedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightUnsignedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleShiftRightUnsignedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightUnsignedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleShiftRightUnsignedExpression"


    // $ANTLR start "ruleShiftRightUnsignedExpression"
    // InternalLTLFormula.g:488:1: ruleShiftRightUnsignedExpression : ( ( rule__ShiftRightUnsignedExpression__Group__0 ) ) ;
    public final void ruleShiftRightUnsignedExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:492:2: ( ( ( rule__ShiftRightUnsignedExpression__Group__0 ) ) )
            // InternalLTLFormula.g:493:2: ( ( rule__ShiftRightUnsignedExpression__Group__0 ) )
            {
            // InternalLTLFormula.g:493:2: ( ( rule__ShiftRightUnsignedExpression__Group__0 ) )
            // InternalLTLFormula.g:494:3: ( rule__ShiftRightUnsignedExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightUnsignedExpressionAccess().getGroup()); 
            }
            // InternalLTLFormula.g:495:3: ( rule__ShiftRightUnsignedExpression__Group__0 )
            // InternalLTLFormula.g:495:4: rule__ShiftRightUnsignedExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightUnsignedExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightUnsignedExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleShiftRightUnsignedExpression"


    // $ANTLR start "entryRuleSumExpression"
    // InternalLTLFormula.g:504:1: entryRuleSumExpression : ruleSumExpression EOF ;
    public final void entryRuleSumExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:505:1: ( ruleSumExpression EOF )
            // InternalLTLFormula.g:506:1: ruleSumExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSumExpression"


    // $ANTLR start "ruleSumExpression"
    // InternalLTLFormula.g:513:1: ruleSumExpression : ( ( rule__SumExpression__Group__0 ) ) ;
    public final void ruleSumExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:517:2: ( ( ( rule__SumExpression__Group__0 ) ) )
            // InternalLTLFormula.g:518:2: ( ( rule__SumExpression__Group__0 ) )
            {
            // InternalLTLFormula.g:518:2: ( ( rule__SumExpression__Group__0 ) )
            // InternalLTLFormula.g:519:3: ( rule__SumExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getGroup()); 
            }
            // InternalLTLFormula.g:520:3: ( rule__SumExpression__Group__0 )
            // InternalLTLFormula.g:520:4: rule__SumExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSumExpression"


    // $ANTLR start "entryRuleProductExpression"
    // InternalLTLFormula.g:529:1: entryRuleProductExpression : ruleProductExpression EOF ;
    public final void entryRuleProductExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:530:1: ( ruleProductExpression EOF )
            // InternalLTLFormula.g:531:1: ruleProductExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleProductExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleProductExpression"


    // $ANTLR start "ruleProductExpression"
    // InternalLTLFormula.g:538:1: ruleProductExpression : ( ( rule__ProductExpression__Group__0 ) ) ;
    public final void ruleProductExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:542:2: ( ( ( rule__ProductExpression__Group__0 ) ) )
            // InternalLTLFormula.g:543:2: ( ( rule__ProductExpression__Group__0 ) )
            {
            // InternalLTLFormula.g:543:2: ( ( rule__ProductExpression__Group__0 ) )
            // InternalLTLFormula.g:544:3: ( rule__ProductExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getGroup()); 
            }
            // InternalLTLFormula.g:545:3: ( rule__ProductExpression__Group__0 )
            // InternalLTLFormula.g:545:4: rule__ProductExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProductExpression"


    // $ANTLR start "entryRuleNegExpression"
    // InternalLTLFormula.g:554:1: entryRuleNegExpression : ruleNegExpression EOF ;
    public final void entryRuleNegExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:555:1: ( ruleNegExpression EOF )
            // InternalLTLFormula.g:556:1: ruleNegExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNegExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNegExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNegExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNegExpression"


    // $ANTLR start "ruleNegExpression"
    // InternalLTLFormula.g:563:1: ruleNegExpression : ( ( rule__NegExpression__Alternatives ) ) ;
    public final void ruleNegExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:567:2: ( ( ( rule__NegExpression__Alternatives ) ) )
            // InternalLTLFormula.g:568:2: ( ( rule__NegExpression__Alternatives ) )
            {
            // InternalLTLFormula.g:568:2: ( ( rule__NegExpression__Alternatives ) )
            // InternalLTLFormula.g:569:3: ( rule__NegExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNegExpressionAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:570:3: ( rule__NegExpression__Alternatives )
            // InternalLTLFormula.g:570:4: rule__NegExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NegExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNegExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNegExpression"


    // $ANTLR start "entryRuleTernaryOperation"
    // InternalLTLFormula.g:579:1: entryRuleTernaryOperation : ruleTernaryOperation EOF ;
    public final void entryRuleTernaryOperation() throws RecognitionException {
        try {
            // InternalLTLFormula.g:580:1: ( ruleTernaryOperation EOF )
            // InternalLTLFormula.g:581:1: ruleTernaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTernaryOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTernaryOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTernaryOperationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTernaryOperation"


    // $ANTLR start "ruleTernaryOperation"
    // InternalLTLFormula.g:588:1: ruleTernaryOperation : ( ( rule__TernaryOperation__Alternatives ) ) ;
    public final void ruleTernaryOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:592:2: ( ( ( rule__TernaryOperation__Alternatives ) ) )
            // InternalLTLFormula.g:593:2: ( ( rule__TernaryOperation__Alternatives ) )
            {
            // InternalLTLFormula.g:593:2: ( ( rule__TernaryOperation__Alternatives ) )
            // InternalLTLFormula.g:594:3: ( rule__TernaryOperation__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTernaryOperationAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:595:3: ( rule__TernaryOperation__Alternatives )
            // InternalLTLFormula.g:595:4: rule__TernaryOperation__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TernaryOperation__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTernaryOperationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTernaryOperation"


    // $ANTLR start "entryRuleInitExpression"
    // InternalLTLFormula.g:604:1: entryRuleInitExpression : ruleInitExpression EOF ;
    public final void entryRuleInitExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:605:1: ( ruleInitExpression EOF )
            // InternalLTLFormula.g:606:1: ruleInitExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInitExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInitExpression"


    // $ANTLR start "ruleInitExpression"
    // InternalLTLFormula.g:613:1: ruleInitExpression : ( ( rule__InitExpression__Group__0 ) ) ;
    public final void ruleInitExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:617:2: ( ( ( rule__InitExpression__Group__0 ) ) )
            // InternalLTLFormula.g:618:2: ( ( rule__InitExpression__Group__0 ) )
            {
            // InternalLTLFormula.g:618:2: ( ( rule__InitExpression__Group__0 ) )
            // InternalLTLFormula.g:619:3: ( rule__InitExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitExpressionAccess().getGroup()); 
            }
            // InternalLTLFormula.g:620:3: ( rule__InitExpression__Group__0 )
            // InternalLTLFormula.g:620:4: rule__InitExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitExpression"


    // $ANTLR start "entryRuleFbyExpression"
    // InternalLTLFormula.g:629:1: entryRuleFbyExpression : ruleFbyExpression EOF ;
    public final void entryRuleFbyExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:630:1: ( ruleFbyExpression EOF )
            // InternalLTLFormula.g:631:1: ruleFbyExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFbyExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFbyExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFbyExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFbyExpression"


    // $ANTLR start "ruleFbyExpression"
    // InternalLTLFormula.g:638:1: ruleFbyExpression : ( ( rule__FbyExpression__Group__0 ) ) ;
    public final void ruleFbyExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:642:2: ( ( ( rule__FbyExpression__Group__0 ) ) )
            // InternalLTLFormula.g:643:2: ( ( rule__FbyExpression__Group__0 ) )
            {
            // InternalLTLFormula.g:643:2: ( ( rule__FbyExpression__Group__0 ) )
            // InternalLTLFormula.g:644:3: ( rule__FbyExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFbyExpressionAccess().getGroup()); 
            }
            // InternalLTLFormula.g:645:3: ( rule__FbyExpression__Group__0 )
            // InternalLTLFormula.g:645:4: rule__FbyExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FbyExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFbyExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFbyExpression"


    // $ANTLR start "entryRuleSfbyExpression"
    // InternalLTLFormula.g:654:1: entryRuleSfbyExpression : ruleSfbyExpression EOF ;
    public final void entryRuleSfbyExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:655:1: ( ruleSfbyExpression EOF )
            // InternalLTLFormula.g:656:1: ruleSfbyExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSfbyExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSfbyExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSfbyExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSfbyExpression"


    // $ANTLR start "ruleSfbyExpression"
    // InternalLTLFormula.g:663:1: ruleSfbyExpression : ( ( rule__SfbyExpression__Group__0 ) ) ;
    public final void ruleSfbyExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:667:2: ( ( ( rule__SfbyExpression__Group__0 ) ) )
            // InternalLTLFormula.g:668:2: ( ( rule__SfbyExpression__Group__0 ) )
            {
            // InternalLTLFormula.g:668:2: ( ( rule__SfbyExpression__Group__0 ) )
            // InternalLTLFormula.g:669:3: ( rule__SfbyExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSfbyExpressionAccess().getGroup()); 
            }
            // InternalLTLFormula.g:670:3: ( rule__SfbyExpression__Group__0 )
            // InternalLTLFormula.g:670:4: rule__SfbyExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SfbyExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSfbyExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSfbyExpression"


    // $ANTLR start "entryRuleAtomicValuedExpression"
    // InternalLTLFormula.g:679:1: entryRuleAtomicValuedExpression : ruleAtomicValuedExpression EOF ;
    public final void entryRuleAtomicValuedExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:680:1: ( ruleAtomicValuedExpression EOF )
            // InternalLTLFormula.g:681:1: ruleAtomicValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicValuedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAtomicValuedExpression"


    // $ANTLR start "ruleAtomicValuedExpression"
    // InternalLTLFormula.g:688:1: ruleAtomicValuedExpression : ( ( rule__AtomicValuedExpression__Alternatives ) ) ;
    public final void ruleAtomicValuedExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:692:2: ( ( ( rule__AtomicValuedExpression__Alternatives ) ) )
            // InternalLTLFormula.g:693:2: ( ( rule__AtomicValuedExpression__Alternatives ) )
            {
            // InternalLTLFormula.g:693:2: ( ( rule__AtomicValuedExpression__Alternatives ) )
            // InternalLTLFormula.g:694:3: ( rule__AtomicValuedExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:695:3: ( rule__AtomicValuedExpression__Alternatives )
            // InternalLTLFormula.g:695:4: rule__AtomicValuedExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AtomicValuedExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAtomicValuedExpression"


    // $ANTLR start "entryRuleValuedObjectTestExpression"
    // InternalLTLFormula.g:704:1: entryRuleValuedObjectTestExpression : ruleValuedObjectTestExpression EOF ;
    public final void entryRuleValuedObjectTestExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:705:1: ( ruleValuedObjectTestExpression EOF )
            // InternalLTLFormula.g:706:1: ruleValuedObjectTestExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectTestExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleValuedObjectTestExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectTestExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleValuedObjectTestExpression"


    // $ANTLR start "ruleValuedObjectTestExpression"
    // InternalLTLFormula.g:713:1: ruleValuedObjectTestExpression : ( ( rule__ValuedObjectTestExpression__Alternatives ) ) ;
    public final void ruleValuedObjectTestExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:717:2: ( ( ( rule__ValuedObjectTestExpression__Alternatives ) ) )
            // InternalLTLFormula.g:718:2: ( ( rule__ValuedObjectTestExpression__Alternatives ) )
            {
            // InternalLTLFormula.g:718:2: ( ( rule__ValuedObjectTestExpression__Alternatives ) )
            // InternalLTLFormula.g:719:3: ( rule__ValuedObjectTestExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:720:3: ( rule__ValuedObjectTestExpression__Alternatives )
            // InternalLTLFormula.g:720:4: rule__ValuedObjectTestExpression__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectTestExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValuedObjectTestExpression"


    // $ANTLR start "entryRuleSpecialAccessExpression"
    // InternalLTLFormula.g:729:1: entryRuleSpecialAccessExpression : ruleSpecialAccessExpression EOF ;
    public final void entryRuleSpecialAccessExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:730:1: ( ruleSpecialAccessExpression EOF )
            // InternalLTLFormula.g:731:1: ruleSpecialAccessExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSpecialAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSpecialAccessExpression"


    // $ANTLR start "ruleSpecialAccessExpression"
    // InternalLTLFormula.g:738:1: ruleSpecialAccessExpression : ( ( rule__SpecialAccessExpression__Group__0 ) ) ;
    public final void ruleSpecialAccessExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:742:2: ( ( ( rule__SpecialAccessExpression__Group__0 ) ) )
            // InternalLTLFormula.g:743:2: ( ( rule__SpecialAccessExpression__Group__0 ) )
            {
            // InternalLTLFormula.g:743:2: ( ( rule__SpecialAccessExpression__Group__0 ) )
            // InternalLTLFormula.g:744:3: ( rule__SpecialAccessExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getGroup()); 
            }
            // InternalLTLFormula.g:745:3: ( rule__SpecialAccessExpression__Group__0 )
            // InternalLTLFormula.g:745:4: rule__SpecialAccessExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialAccessExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSpecialAccessExpression"


    // $ANTLR start "entryRulePrimeID"
    // InternalLTLFormula.g:754:1: entryRulePrimeID : rulePrimeID EOF ;
    public final void entryRulePrimeID() throws RecognitionException {
        try {
            // InternalLTLFormula.g:755:1: ( rulePrimeID EOF )
            // InternalLTLFormula.g:756:1: rulePrimeID EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimeIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimeIDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimeID"


    // $ANTLR start "rulePrimeID"
    // InternalLTLFormula.g:763:1: rulePrimeID : ( ( rule__PrimeID__Group__0 ) ) ;
    public final void rulePrimeID() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:767:2: ( ( ( rule__PrimeID__Group__0 ) ) )
            // InternalLTLFormula.g:768:2: ( ( rule__PrimeID__Group__0 ) )
            {
            // InternalLTLFormula.g:768:2: ( ( rule__PrimeID__Group__0 ) )
            // InternalLTLFormula.g:769:3: ( rule__PrimeID__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimeIDAccess().getGroup()); 
            }
            // InternalLTLFormula.g:770:3: ( rule__PrimeID__Group__0 )
            // InternalLTLFormula.g:770:4: rule__PrimeID__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrimeID__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimeIDAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimeID"


    // $ANTLR start "entryRuleValuedObjectReference"
    // InternalLTLFormula.g:779:1: entryRuleValuedObjectReference : ruleValuedObjectReference EOF ;
    public final void entryRuleValuedObjectReference() throws RecognitionException {
        try {
            // InternalLTLFormula.g:780:1: ( ruleValuedObjectReference EOF )
            // InternalLTLFormula.g:781:1: ruleValuedObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectReferenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleValuedObjectReference"


    // $ANTLR start "ruleValuedObjectReference"
    // InternalLTLFormula.g:788:1: ruleValuedObjectReference : ( ( rule__ValuedObjectReference__Group__0 ) ) ;
    public final void ruleValuedObjectReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:792:2: ( ( ( rule__ValuedObjectReference__Group__0 ) ) )
            // InternalLTLFormula.g:793:2: ( ( rule__ValuedObjectReference__Group__0 ) )
            {
            // InternalLTLFormula.g:793:2: ( ( rule__ValuedObjectReference__Group__0 ) )
            // InternalLTLFormula.g:794:3: ( rule__ValuedObjectReference__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectReferenceAccess().getGroup()); 
            }
            // InternalLTLFormula.g:795:3: ( rule__ValuedObjectReference__Group__0 )
            // InternalLTLFormula.g:795:4: rule__ValuedObjectReference__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectReference__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectReferenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValuedObjectReference"


    // $ANTLR start "entryRuleScheduleObjectReference"
    // InternalLTLFormula.g:804:1: entryRuleScheduleObjectReference : ruleScheduleObjectReference EOF ;
    public final void entryRuleScheduleObjectReference() throws RecognitionException {
        try {
            // InternalLTLFormula.g:805:1: ( ruleScheduleObjectReference EOF )
            // InternalLTLFormula.g:806:1: ruleScheduleObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScheduleObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleScheduleObjectReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScheduleObjectReferenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScheduleObjectReference"


    // $ANTLR start "ruleScheduleObjectReference"
    // InternalLTLFormula.g:813:1: ruleScheduleObjectReference : ( ( rule__ScheduleObjectReference__Group__0 ) ) ;
    public final void ruleScheduleObjectReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:817:2: ( ( ( rule__ScheduleObjectReference__Group__0 ) ) )
            // InternalLTLFormula.g:818:2: ( ( rule__ScheduleObjectReference__Group__0 ) )
            {
            // InternalLTLFormula.g:818:2: ( ( rule__ScheduleObjectReference__Group__0 ) )
            // InternalLTLFormula.g:819:3: ( rule__ScheduleObjectReference__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScheduleObjectReferenceAccess().getGroup()); 
            }
            // InternalLTLFormula.g:820:3: ( rule__ScheduleObjectReference__Group__0 )
            // InternalLTLFormula.g:820:4: rule__ScheduleObjectReference__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ScheduleObjectReference__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScheduleObjectReferenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScheduleObjectReference"


    // $ANTLR start "entryRuleReferenceCall"
    // InternalLTLFormula.g:829:1: entryRuleReferenceCall : ruleReferenceCall EOF ;
    public final void entryRuleReferenceCall() throws RecognitionException {
        try {
            // InternalLTLFormula.g:830:1: ( ruleReferenceCall EOF )
            // InternalLTLFormula.g:831:1: ruleReferenceCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleReferenceCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReferenceCall"


    // $ANTLR start "ruleReferenceCall"
    // InternalLTLFormula.g:838:1: ruleReferenceCall : ( ( rule__ReferenceCall__Group__0 ) ) ;
    public final void ruleReferenceCall() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:842:2: ( ( ( rule__ReferenceCall__Group__0 ) ) )
            // InternalLTLFormula.g:843:2: ( ( rule__ReferenceCall__Group__0 ) )
            {
            // InternalLTLFormula.g:843:2: ( ( rule__ReferenceCall__Group__0 ) )
            // InternalLTLFormula.g:844:3: ( rule__ReferenceCall__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getGroup()); 
            }
            // InternalLTLFormula.g:845:3: ( rule__ReferenceCall__Group__0 )
            // InternalLTLFormula.g:845:4: rule__ReferenceCall__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReferenceCall"


    // $ANTLR start "entryRuleRandomCall"
    // InternalLTLFormula.g:854:1: entryRuleRandomCall : ruleRandomCall EOF ;
    public final void entryRuleRandomCall() throws RecognitionException {
        try {
            // InternalLTLFormula.g:855:1: ( ruleRandomCall EOF )
            // InternalLTLFormula.g:856:1: ruleRandomCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRandomCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRandomCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRandomCallRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRandomCall"


    // $ANTLR start "ruleRandomCall"
    // InternalLTLFormula.g:863:1: ruleRandomCall : ( ( rule__RandomCall__Group__0 ) ) ;
    public final void ruleRandomCall() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:867:2: ( ( ( rule__RandomCall__Group__0 ) ) )
            // InternalLTLFormula.g:868:2: ( ( rule__RandomCall__Group__0 ) )
            {
            // InternalLTLFormula.g:868:2: ( ( rule__RandomCall__Group__0 ) )
            // InternalLTLFormula.g:869:3: ( rule__RandomCall__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRandomCallAccess().getGroup()); 
            }
            // InternalLTLFormula.g:870:3: ( rule__RandomCall__Group__0 )
            // InternalLTLFormula.g:870:4: rule__RandomCall__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RandomCall__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRandomCallAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRandomCall"


    // $ANTLR start "entryRuleRandomizeCall"
    // InternalLTLFormula.g:879:1: entryRuleRandomizeCall : ruleRandomizeCall EOF ;
    public final void entryRuleRandomizeCall() throws RecognitionException {
        try {
            // InternalLTLFormula.g:880:1: ( ruleRandomizeCall EOF )
            // InternalLTLFormula.g:881:1: ruleRandomizeCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRandomizeCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRandomizeCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRandomizeCallRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRandomizeCall"


    // $ANTLR start "ruleRandomizeCall"
    // InternalLTLFormula.g:888:1: ruleRandomizeCall : ( ( rule__RandomizeCall__Group__0 ) ) ;
    public final void ruleRandomizeCall() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:892:2: ( ( ( rule__RandomizeCall__Group__0 ) ) )
            // InternalLTLFormula.g:893:2: ( ( rule__RandomizeCall__Group__0 ) )
            {
            // InternalLTLFormula.g:893:2: ( ( rule__RandomizeCall__Group__0 ) )
            // InternalLTLFormula.g:894:3: ( rule__RandomizeCall__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRandomizeCallAccess().getGroup()); 
            }
            // InternalLTLFormula.g:895:3: ( rule__RandomizeCall__Group__0 )
            // InternalLTLFormula.g:895:4: rule__RandomizeCall__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RandomizeCall__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRandomizeCallAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRandomizeCall"


    // $ANTLR start "entryRuleFunctionCall"
    // InternalLTLFormula.g:904:1: entryRuleFunctionCall : ruleFunctionCall EOF ;
    public final void entryRuleFunctionCall() throws RecognitionException {
        try {
            // InternalLTLFormula.g:905:1: ( ruleFunctionCall EOF )
            // InternalLTLFormula.g:906:1: ruleFunctionCall EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFunctionCall();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionCall"


    // $ANTLR start "ruleFunctionCall"
    // InternalLTLFormula.g:913:1: ruleFunctionCall : ( ( rule__FunctionCall__Group__0 ) ) ;
    public final void ruleFunctionCall() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:917:2: ( ( ( rule__FunctionCall__Group__0 ) ) )
            // InternalLTLFormula.g:918:2: ( ( rule__FunctionCall__Group__0 ) )
            {
            // InternalLTLFormula.g:918:2: ( ( rule__FunctionCall__Group__0 ) )
            // InternalLTLFormula.g:919:3: ( rule__FunctionCall__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getGroup()); 
            }
            // InternalLTLFormula.g:920:3: ( rule__FunctionCall__Group__0 )
            // InternalLTLFormula.g:920:4: rule__FunctionCall__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FunctionCall__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionCall"


    // $ANTLR start "entryRuleParameter"
    // InternalLTLFormula.g:929:1: entryRuleParameter : ruleParameter EOF ;
    public final void entryRuleParameter() throws RecognitionException {
        try {
            // InternalLTLFormula.g:930:1: ( ruleParameter EOF )
            // InternalLTLFormula.g:931:1: ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalLTLFormula.g:938:1: ruleParameter : ( ( rule__Parameter__Alternatives ) ) ;
    public final void ruleParameter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:942:2: ( ( ( rule__Parameter__Alternatives ) ) )
            // InternalLTLFormula.g:943:2: ( ( rule__Parameter__Alternatives ) )
            {
            // InternalLTLFormula.g:943:2: ( ( rule__Parameter__Alternatives ) )
            // InternalLTLFormula.g:944:3: ( rule__Parameter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:945:3: ( rule__Parameter__Alternatives )
            // InternalLTLFormula.g:945:4: rule__Parameter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Parameter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleTextExpression"
    // InternalLTLFormula.g:954:1: entryRuleTextExpression : ruleTextExpression EOF ;
    public final void entryRuleTextExpression() throws RecognitionException {
        try {
            // InternalLTLFormula.g:955:1: ( ruleTextExpression EOF )
            // InternalLTLFormula.g:956:1: ruleTextExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTextExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTextExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTextExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTextExpression"


    // $ANTLR start "ruleTextExpression"
    // InternalLTLFormula.g:963:1: ruleTextExpression : ( ( rule__TextExpression__Group__0 ) ) ;
    public final void ruleTextExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:967:2: ( ( ( rule__TextExpression__Group__0 ) ) )
            // InternalLTLFormula.g:968:2: ( ( rule__TextExpression__Group__0 ) )
            {
            // InternalLTLFormula.g:968:2: ( ( rule__TextExpression__Group__0 ) )
            // InternalLTLFormula.g:969:3: ( rule__TextExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTextExpressionAccess().getGroup()); 
            }
            // InternalLTLFormula.g:970:3: ( rule__TextExpression__Group__0 )
            // InternalLTLFormula.g:970:4: rule__TextExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TextExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTextExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTextExpression"


    // $ANTLR start "entryRuleIntValue"
    // InternalLTLFormula.g:979:1: entryRuleIntValue : ruleIntValue EOF ;
    public final void entryRuleIntValue() throws RecognitionException {
        try {
            // InternalLTLFormula.g:980:1: ( ruleIntValue EOF )
            // InternalLTLFormula.g:981:1: ruleIntValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntValue"


    // $ANTLR start "ruleIntValue"
    // InternalLTLFormula.g:988:1: ruleIntValue : ( ( rule__IntValue__ValueAssignment ) ) ;
    public final void ruleIntValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:992:2: ( ( ( rule__IntValue__ValueAssignment ) ) )
            // InternalLTLFormula.g:993:2: ( ( rule__IntValue__ValueAssignment ) )
            {
            // InternalLTLFormula.g:993:2: ( ( rule__IntValue__ValueAssignment ) )
            // InternalLTLFormula.g:994:3: ( rule__IntValue__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntValueAccess().getValueAssignment()); 
            }
            // InternalLTLFormula.g:995:3: ( rule__IntValue__ValueAssignment )
            // InternalLTLFormula.g:995:4: rule__IntValue__ValueAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntValue__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntValueAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntValue"


    // $ANTLR start "entryRuleFloatValue"
    // InternalLTLFormula.g:1004:1: entryRuleFloatValue : ruleFloatValue EOF ;
    public final void entryRuleFloatValue() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1005:1: ( ruleFloatValue EOF )
            // InternalLTLFormula.g:1006:1: ruleFloatValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFloatValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFloatValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFloatValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFloatValue"


    // $ANTLR start "ruleFloatValue"
    // InternalLTLFormula.g:1013:1: ruleFloatValue : ( ( rule__FloatValue__ValueAssignment ) ) ;
    public final void ruleFloatValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1017:2: ( ( ( rule__FloatValue__ValueAssignment ) ) )
            // InternalLTLFormula.g:1018:2: ( ( rule__FloatValue__ValueAssignment ) )
            {
            // InternalLTLFormula.g:1018:2: ( ( rule__FloatValue__ValueAssignment ) )
            // InternalLTLFormula.g:1019:3: ( rule__FloatValue__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFloatValueAccess().getValueAssignment()); 
            }
            // InternalLTLFormula.g:1020:3: ( rule__FloatValue__ValueAssignment )
            // InternalLTLFormula.g:1020:4: rule__FloatValue__ValueAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FloatValue__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFloatValueAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFloatValue"


    // $ANTLR start "entryRuleBoolValue"
    // InternalLTLFormula.g:1029:1: entryRuleBoolValue : ruleBoolValue EOF ;
    public final void entryRuleBoolValue() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1030:1: ( ruleBoolValue EOF )
            // InternalLTLFormula.g:1031:1: ruleBoolValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBoolValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBoolValue"


    // $ANTLR start "ruleBoolValue"
    // InternalLTLFormula.g:1038:1: ruleBoolValue : ( ( rule__BoolValue__ValueAssignment ) ) ;
    public final void ruleBoolValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1042:2: ( ( ( rule__BoolValue__ValueAssignment ) ) )
            // InternalLTLFormula.g:1043:2: ( ( rule__BoolValue__ValueAssignment ) )
            {
            // InternalLTLFormula.g:1043:2: ( ( rule__BoolValue__ValueAssignment ) )
            // InternalLTLFormula.g:1044:3: ( rule__BoolValue__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolValueAccess().getValueAssignment()); 
            }
            // InternalLTLFormula.g:1045:3: ( rule__BoolValue__ValueAssignment )
            // InternalLTLFormula.g:1045:4: rule__BoolValue__ValueAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BoolValue__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolValueAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBoolValue"


    // $ANTLR start "entryRuleStringValue"
    // InternalLTLFormula.g:1054:1: entryRuleStringValue : ruleStringValue EOF ;
    public final void entryRuleStringValue() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1055:1: ( ruleStringValue EOF )
            // InternalLTLFormula.g:1056:1: ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalLTLFormula.g:1063:1: ruleStringValue : ( ( rule__StringValue__ValueAssignment ) ) ;
    public final void ruleStringValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1067:2: ( ( ( rule__StringValue__ValueAssignment ) ) )
            // InternalLTLFormula.g:1068:2: ( ( rule__StringValue__ValueAssignment ) )
            {
            // InternalLTLFormula.g:1068:2: ( ( rule__StringValue__ValueAssignment ) )
            // InternalLTLFormula.g:1069:3: ( rule__StringValue__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueAccess().getValueAssignment()); 
            }
            // InternalLTLFormula.g:1070:3: ( rule__StringValue__ValueAssignment )
            // InternalLTLFormula.g:1070:4: rule__StringValue__ValueAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValue__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleVectorValue"
    // InternalLTLFormula.g:1079:1: entryRuleVectorValue : ruleVectorValue EOF ;
    public final void entryRuleVectorValue() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1080:1: ( ruleVectorValue EOF )
            // InternalLTLFormula.g:1081:1: ruleVectorValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleVectorValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVectorValue"


    // $ANTLR start "ruleVectorValue"
    // InternalLTLFormula.g:1088:1: ruleVectorValue : ( ( rule__VectorValue__Group__0 ) ) ;
    public final void ruleVectorValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1092:2: ( ( ( rule__VectorValue__Group__0 ) ) )
            // InternalLTLFormula.g:1093:2: ( ( rule__VectorValue__Group__0 ) )
            {
            // InternalLTLFormula.g:1093:2: ( ( rule__VectorValue__Group__0 ) )
            // InternalLTLFormula.g:1094:3: ( rule__VectorValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1095:3: ( rule__VectorValue__Group__0 )
            // InternalLTLFormula.g:1095:4: rule__VectorValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVectorValue"


    // $ANTLR start "entryRuleVectorValueMember"
    // InternalLTLFormula.g:1104:1: entryRuleVectorValueMember : ruleVectorValueMember EOF ;
    public final void entryRuleVectorValueMember() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1105:1: ( ruleVectorValueMember EOF )
            // InternalLTLFormula.g:1106:1: ruleVectorValueMember EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueMemberRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVectorValueMember"


    // $ANTLR start "ruleVectorValueMember"
    // InternalLTLFormula.g:1113:1: ruleVectorValueMember : ( ( rule__VectorValueMember__Alternatives ) ) ;
    public final void ruleVectorValueMember() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1117:2: ( ( ( rule__VectorValueMember__Alternatives ) ) )
            // InternalLTLFormula.g:1118:2: ( ( rule__VectorValueMember__Alternatives ) )
            {
            // InternalLTLFormula.g:1118:2: ( ( rule__VectorValueMember__Alternatives ) )
            // InternalLTLFormula.g:1119:3: ( rule__VectorValueMember__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueMemberAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:1120:3: ( rule__VectorValueMember__Alternatives )
            // InternalLTLFormula.g:1120:4: rule__VectorValueMember__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValueMember__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueMemberAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVectorValueMember"


    // $ANTLR start "entryRuleIgnoreValue"
    // InternalLTLFormula.g:1129:1: entryRuleIgnoreValue : ruleIgnoreValue EOF ;
    public final void entryRuleIgnoreValue() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1130:1: ( ruleIgnoreValue EOF )
            // InternalLTLFormula.g:1131:1: ruleIgnoreValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIgnoreValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIgnoreValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIgnoreValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIgnoreValue"


    // $ANTLR start "ruleIgnoreValue"
    // InternalLTLFormula.g:1138:1: ruleIgnoreValue : ( ( rule__IgnoreValue__Group__0 ) ) ;
    public final void ruleIgnoreValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1142:2: ( ( ( rule__IgnoreValue__Group__0 ) ) )
            // InternalLTLFormula.g:1143:2: ( ( rule__IgnoreValue__Group__0 ) )
            {
            // InternalLTLFormula.g:1143:2: ( ( rule__IgnoreValue__Group__0 ) )
            // InternalLTLFormula.g:1144:3: ( rule__IgnoreValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIgnoreValueAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1145:3: ( rule__IgnoreValue__Group__0 )
            // InternalLTLFormula.g:1145:4: rule__IgnoreValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IgnoreValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIgnoreValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIgnoreValue"


    // $ANTLR start "entryRuleAnyValue"
    // InternalLTLFormula.g:1154:1: entryRuleAnyValue : ruleAnyValue EOF ;
    public final void entryRuleAnyValue() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1155:1: ( ruleAnyValue EOF )
            // InternalLTLFormula.g:1156:1: ruleAnyValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAnyValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnyValue"


    // $ANTLR start "ruleAnyValue"
    // InternalLTLFormula.g:1163:1: ruleAnyValue : ( ( rule__AnyValue__Alternatives ) ) ;
    public final void ruleAnyValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1167:2: ( ( ( rule__AnyValue__Alternatives ) ) )
            // InternalLTLFormula.g:1168:2: ( ( rule__AnyValue__Alternatives ) )
            {
            // InternalLTLFormula.g:1168:2: ( ( rule__AnyValue__Alternatives ) )
            // InternalLTLFormula.g:1169:3: ( rule__AnyValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyValueAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:1170:3: ( rule__AnyValue__Alternatives )
            // InternalLTLFormula.g:1170:4: rule__AnyValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AnyValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnyValue"


    // $ANTLR start "entryRuleJsonObjectValue"
    // InternalLTLFormula.g:1179:1: entryRuleJsonObjectValue : ruleJsonObjectValue EOF ;
    public final void entryRuleJsonObjectValue() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1180:1: ( ruleJsonObjectValue EOF )
            // InternalLTLFormula.g:1181:1: ruleJsonObjectValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJsonObjectValue"


    // $ANTLR start "ruleJsonObjectValue"
    // InternalLTLFormula.g:1188:1: ruleJsonObjectValue : ( ( rule__JsonObjectValue__Group__0 ) ) ;
    public final void ruleJsonObjectValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1192:2: ( ( ( rule__JsonObjectValue__Group__0 ) ) )
            // InternalLTLFormula.g:1193:2: ( ( rule__JsonObjectValue__Group__0 ) )
            {
            // InternalLTLFormula.g:1193:2: ( ( rule__JsonObjectValue__Group__0 ) )
            // InternalLTLFormula.g:1194:3: ( rule__JsonObjectValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectValueAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1195:3: ( rule__JsonObjectValue__Group__0 )
            // InternalLTLFormula.g:1195:4: rule__JsonObjectValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJsonObjectValue"


    // $ANTLR start "entryRuleJsonObjectMember"
    // InternalLTLFormula.g:1204:1: entryRuleJsonObjectMember : ruleJsonObjectMember EOF ;
    public final void entryRuleJsonObjectMember() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1205:1: ( ruleJsonObjectMember EOF )
            // InternalLTLFormula.g:1206:1: ruleJsonObjectMember EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleJsonObjectMember();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectMemberRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJsonObjectMember"


    // $ANTLR start "ruleJsonObjectMember"
    // InternalLTLFormula.g:1213:1: ruleJsonObjectMember : ( ( rule__JsonObjectMember__Group__0 ) ) ;
    public final void ruleJsonObjectMember() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1217:2: ( ( ( rule__JsonObjectMember__Group__0 ) ) )
            // InternalLTLFormula.g:1218:2: ( ( rule__JsonObjectMember__Group__0 ) )
            {
            // InternalLTLFormula.g:1218:2: ( ( rule__JsonObjectMember__Group__0 ) )
            // InternalLTLFormula.g:1219:3: ( rule__JsonObjectMember__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectMemberAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1220:3: ( rule__JsonObjectMember__Group__0 )
            // InternalLTLFormula.g:1220:4: rule__JsonObjectMember__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectMember__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectMemberAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJsonObjectMember"


    // $ANTLR start "entryRuleJsonArrayValue"
    // InternalLTLFormula.g:1229:1: entryRuleJsonArrayValue : ruleJsonArrayValue EOF ;
    public final void entryRuleJsonArrayValue() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1230:1: ( ruleJsonArrayValue EOF )
            // InternalLTLFormula.g:1231:1: ruleJsonArrayValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonArrayValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleJsonArrayValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonArrayValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJsonArrayValue"


    // $ANTLR start "ruleJsonArrayValue"
    // InternalLTLFormula.g:1238:1: ruleJsonArrayValue : ( ( rule__JsonArrayValue__Group__0 ) ) ;
    public final void ruleJsonArrayValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1242:2: ( ( ( rule__JsonArrayValue__Group__0 ) ) )
            // InternalLTLFormula.g:1243:2: ( ( rule__JsonArrayValue__Group__0 ) )
            {
            // InternalLTLFormula.g:1243:2: ( ( rule__JsonArrayValue__Group__0 ) )
            // InternalLTLFormula.g:1244:3: ( rule__JsonArrayValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonArrayValueAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1245:3: ( rule__JsonArrayValue__Group__0 )
            // InternalLTLFormula.g:1245:4: rule__JsonArrayValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonArrayValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonArrayValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJsonArrayValue"


    // $ANTLR start "entryRuleJsonValue"
    // InternalLTLFormula.g:1254:1: entryRuleJsonValue : ruleJsonValue EOF ;
    public final void entryRuleJsonValue() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1255:1: ( ruleJsonValue EOF )
            // InternalLTLFormula.g:1256:1: ruleJsonValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleJsonValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJsonValue"


    // $ANTLR start "ruleJsonValue"
    // InternalLTLFormula.g:1263:1: ruleJsonValue : ( ( rule__JsonValue__Alternatives ) ) ;
    public final void ruleJsonValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1267:2: ( ( ( rule__JsonValue__Alternatives ) ) )
            // InternalLTLFormula.g:1268:2: ( ( rule__JsonValue__Alternatives ) )
            {
            // InternalLTLFormula.g:1268:2: ( ( rule__JsonValue__Alternatives ) )
            // InternalLTLFormula.g:1269:3: ( rule__JsonValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonValueAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:1270:3: ( rule__JsonValue__Alternatives )
            // InternalLTLFormula.g:1270:4: rule__JsonValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJsonValue"


    // $ANTLR start "entryRuleNullValue"
    // InternalLTLFormula.g:1279:1: entryRuleNullValue : ruleNullValue EOF ;
    public final void entryRuleNullValue() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1280:1: ( ruleNullValue EOF )
            // InternalLTLFormula.g:1281:1: ruleNullValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNullValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNullValue"


    // $ANTLR start "ruleNullValue"
    // InternalLTLFormula.g:1288:1: ruleNullValue : ( ( rule__NullValue__Group__0 ) ) ;
    public final void ruleNullValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1292:2: ( ( ( rule__NullValue__Group__0 ) ) )
            // InternalLTLFormula.g:1293:2: ( ( rule__NullValue__Group__0 ) )
            {
            // InternalLTLFormula.g:1293:2: ( ( rule__NullValue__Group__0 ) )
            // InternalLTLFormula.g:1294:3: ( rule__NullValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullValueAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1295:3: ( rule__NullValue__Group__0 )
            // InternalLTLFormula.g:1295:4: rule__NullValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NullValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNullValue"


    // $ANTLR start "entryRuleJsonPragma"
    // InternalLTLFormula.g:1304:1: entryRuleJsonPragma : ruleJsonPragma EOF ;
    public final void entryRuleJsonPragma() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1305:1: ( ruleJsonPragma EOF )
            // InternalLTLFormula.g:1306:1: ruleJsonPragma EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleJsonPragma();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonPragmaRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJsonPragma"


    // $ANTLR start "ruleJsonPragma"
    // InternalLTLFormula.g:1313:1: ruleJsonPragma : ( ( rule__JsonPragma__Group__0 ) ) ;
    public final void ruleJsonPragma() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1317:2: ( ( ( rule__JsonPragma__Group__0 ) ) )
            // InternalLTLFormula.g:1318:2: ( ( rule__JsonPragma__Group__0 ) )
            {
            // InternalLTLFormula.g:1318:2: ( ( rule__JsonPragma__Group__0 ) )
            // InternalLTLFormula.g:1319:3: ( rule__JsonPragma__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonPragmaAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1320:3: ( rule__JsonPragma__Group__0 )
            // InternalLTLFormula.g:1320:4: rule__JsonPragma__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonPragma__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonPragmaAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJsonPragma"


    // $ANTLR start "entryRuleJsonAnnotation"
    // InternalLTLFormula.g:1329:1: entryRuleJsonAnnotation : ruleJsonAnnotation EOF ;
    public final void entryRuleJsonAnnotation() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1330:1: ( ruleJsonAnnotation EOF )
            // InternalLTLFormula.g:1331:1: ruleJsonAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleJsonAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonAnnotationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJsonAnnotation"


    // $ANTLR start "ruleJsonAnnotation"
    // InternalLTLFormula.g:1338:1: ruleJsonAnnotation : ( ( rule__JsonAnnotation__Group__0 ) ) ;
    public final void ruleJsonAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1342:2: ( ( ( rule__JsonAnnotation__Group__0 ) ) )
            // InternalLTLFormula.g:1343:2: ( ( rule__JsonAnnotation__Group__0 ) )
            {
            // InternalLTLFormula.g:1343:2: ( ( rule__JsonAnnotation__Group__0 ) )
            // InternalLTLFormula.g:1344:3: ( rule__JsonAnnotation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonAnnotationAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1345:3: ( rule__JsonAnnotation__Group__0 )
            // InternalLTLFormula.g:1345:4: rule__JsonAnnotation__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonAnnotation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonAnnotationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJsonAnnotation"


    // $ANTLR start "entryRuleAnnotation"
    // InternalLTLFormula.g:1354:1: entryRuleAnnotation : ruleAnnotation EOF ;
    public final void entryRuleAnnotation() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1355:1: ( ruleAnnotation EOF )
            // InternalLTLFormula.g:1356:1: ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalLTLFormula.g:1363:1: ruleAnnotation : ( ( rule__Annotation__Alternatives ) ) ;
    public final void ruleAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1367:2: ( ( ( rule__Annotation__Alternatives ) ) )
            // InternalLTLFormula.g:1368:2: ( ( rule__Annotation__Alternatives ) )
            {
            // InternalLTLFormula.g:1368:2: ( ( rule__Annotation__Alternatives ) )
            // InternalLTLFormula.g:1369:3: ( rule__Annotation__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:1370:3: ( rule__Annotation__Alternatives )
            // InternalLTLFormula.g:1370:4: rule__Annotation__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Annotation__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entrySuperAnnotation"
    // InternalLTLFormula.g:1379:1: entrySuperAnnotation : superAnnotation EOF ;
    public final void entrySuperAnnotation() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1380:1: ( superAnnotation EOF )
            // InternalLTLFormula.g:1381:1: superAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationsAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            superAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationsAnnotationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entrySuperAnnotation"


    // $ANTLR start "superAnnotation"
    // InternalLTLFormula.g:1388:1: superAnnotation : ( ( superAnnotation__Alternatives ) ) ;
    public final void superAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1392:2: ( ( ( superAnnotation__Alternatives ) ) )
            // InternalLTLFormula.g:1393:2: ( ( superAnnotation__Alternatives ) )
            {
            // InternalLTLFormula.g:1393:2: ( ( superAnnotation__Alternatives ) )
            // InternalLTLFormula.g:1394:3: ( superAnnotation__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationsAnnotationAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:1395:3: ( superAnnotation__Alternatives )
            // InternalLTLFormula.g:1395:4: superAnnotation__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            superAnnotation__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationsAnnotationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "superAnnotation"


    // $ANTLR start "entrySuperPragma"
    // InternalLTLFormula.g:1404:1: entrySuperPragma : superPragma EOF ;
    public final void entrySuperPragma() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1405:1: ( superPragma EOF )
            // InternalLTLFormula.g:1406:1: superPragma EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationsPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            superPragma();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationsPragmaRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entrySuperPragma"


    // $ANTLR start "superPragma"
    // InternalLTLFormula.g:1413:1: superPragma : ( ( superPragma__Alternatives ) ) ;
    public final void superPragma() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1417:2: ( ( ( superPragma__Alternatives ) ) )
            // InternalLTLFormula.g:1418:2: ( ( superPragma__Alternatives ) )
            {
            // InternalLTLFormula.g:1418:2: ( ( superPragma__Alternatives ) )
            // InternalLTLFormula.g:1419:3: ( superPragma__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationsPragmaAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:1420:3: ( superPragma__Alternatives )
            // InternalLTLFormula.g:1420:4: superPragma__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            superPragma__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationsPragmaAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "superPragma"


    // $ANTLR start "entrySuperValuedAnnotation"
    // InternalLTLFormula.g:1429:1: entrySuperValuedAnnotation : superValuedAnnotation EOF ;
    public final void entrySuperValuedAnnotation() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1430:1: ( superValuedAnnotation EOF )
            // InternalLTLFormula.g:1431:1: superValuedAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationsValuedAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            superValuedAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationsValuedAnnotationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entrySuperValuedAnnotation"


    // $ANTLR start "superValuedAnnotation"
    // InternalLTLFormula.g:1438:1: superValuedAnnotation : ( ( superValuedAnnotation__Alternatives ) ) ;
    public final void superValuedAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1442:2: ( ( ( superValuedAnnotation__Alternatives ) ) )
            // InternalLTLFormula.g:1443:2: ( ( superValuedAnnotation__Alternatives ) )
            {
            // InternalLTLFormula.g:1443:2: ( ( superValuedAnnotation__Alternatives ) )
            // InternalLTLFormula.g:1444:3: ( superValuedAnnotation__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationsValuedAnnotationAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:1445:3: ( superValuedAnnotation__Alternatives )
            // InternalLTLFormula.g:1445:4: superValuedAnnotation__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            superValuedAnnotation__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationsValuedAnnotationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "superValuedAnnotation"


    // $ANTLR start "entrySuperQuotedStringAnnotation"
    // InternalLTLFormula.g:1454:1: entrySuperQuotedStringAnnotation : superQuotedStringAnnotation EOF ;
    public final void entrySuperQuotedStringAnnotation() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1455:1: ( superQuotedStringAnnotation EOF )
            // InternalLTLFormula.g:1456:1: superQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationsQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            superQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationsQuotedStringAnnotationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entrySuperQuotedStringAnnotation"


    // $ANTLR start "superQuotedStringAnnotation"
    // InternalLTLFormula.g:1463:1: superQuotedStringAnnotation : ( ( superQuotedStringAnnotation__Alternatives ) ) ;
    public final void superQuotedStringAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1467:2: ( ( ( superQuotedStringAnnotation__Alternatives ) ) )
            // InternalLTLFormula.g:1468:2: ( ( superQuotedStringAnnotation__Alternatives ) )
            {
            // InternalLTLFormula.g:1468:2: ( ( superQuotedStringAnnotation__Alternatives ) )
            // InternalLTLFormula.g:1469:3: ( superQuotedStringAnnotation__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:1470:3: ( superQuotedStringAnnotation__Alternatives )
            // InternalLTLFormula.g:1470:4: superQuotedStringAnnotation__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            superQuotedStringAnnotation__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "superQuotedStringAnnotation"


    // $ANTLR start "entryRuleCommentAnnotation"
    // InternalLTLFormula.g:1479:1: entryRuleCommentAnnotation : ruleCommentAnnotation EOF ;
    public final void entryRuleCommentAnnotation() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1480:1: ( ruleCommentAnnotation EOF )
            // InternalLTLFormula.g:1481:1: ruleCommentAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommentAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCommentAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommentAnnotationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCommentAnnotation"


    // $ANTLR start "ruleCommentAnnotation"
    // InternalLTLFormula.g:1488:1: ruleCommentAnnotation : ( ( rule__CommentAnnotation__ValuesAssignment ) ) ;
    public final void ruleCommentAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1492:2: ( ( ( rule__CommentAnnotation__ValuesAssignment ) ) )
            // InternalLTLFormula.g:1493:2: ( ( rule__CommentAnnotation__ValuesAssignment ) )
            {
            // InternalLTLFormula.g:1493:2: ( ( rule__CommentAnnotation__ValuesAssignment ) )
            // InternalLTLFormula.g:1494:3: ( rule__CommentAnnotation__ValuesAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommentAnnotationAccess().getValuesAssignment()); 
            }
            // InternalLTLFormula.g:1495:3: ( rule__CommentAnnotation__ValuesAssignment )
            // InternalLTLFormula.g:1495:4: rule__CommentAnnotation__ValuesAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CommentAnnotation__ValuesAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommentAnnotationAccess().getValuesAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCommentAnnotation"


    // $ANTLR start "entryRuleTagAnnotation"
    // InternalLTLFormula.g:1504:1: entryRuleTagAnnotation : ruleTagAnnotation EOF ;
    public final void entryRuleTagAnnotation() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1505:1: ( ruleTagAnnotation EOF )
            // InternalLTLFormula.g:1506:1: ruleTagAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTagAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTagAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTagAnnotationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTagAnnotation"


    // $ANTLR start "ruleTagAnnotation"
    // InternalLTLFormula.g:1513:1: ruleTagAnnotation : ( ( rule__TagAnnotation__Group__0 ) ) ;
    public final void ruleTagAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1517:2: ( ( ( rule__TagAnnotation__Group__0 ) ) )
            // InternalLTLFormula.g:1518:2: ( ( rule__TagAnnotation__Group__0 ) )
            {
            // InternalLTLFormula.g:1518:2: ( ( rule__TagAnnotation__Group__0 ) )
            // InternalLTLFormula.g:1519:3: ( rule__TagAnnotation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTagAnnotationAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1520:3: ( rule__TagAnnotation__Group__0 )
            // InternalLTLFormula.g:1520:4: rule__TagAnnotation__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TagAnnotation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTagAnnotationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTagAnnotation"


    // $ANTLR start "entryRulePragmaTag"
    // InternalLTLFormula.g:1529:1: entryRulePragmaTag : rulePragmaTag EOF ;
    public final void entryRulePragmaTag() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1530:1: ( rulePragmaTag EOF )
            // InternalLTLFormula.g:1531:1: rulePragmaTag EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPragmaTagRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePragmaTag();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPragmaTagRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePragmaTag"


    // $ANTLR start "rulePragmaTag"
    // InternalLTLFormula.g:1538:1: rulePragmaTag : ( ( rule__PragmaTag__Group__0 ) ) ;
    public final void rulePragmaTag() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1542:2: ( ( ( rule__PragmaTag__Group__0 ) ) )
            // InternalLTLFormula.g:1543:2: ( ( rule__PragmaTag__Group__0 ) )
            {
            // InternalLTLFormula.g:1543:2: ( ( rule__PragmaTag__Group__0 ) )
            // InternalLTLFormula.g:1544:3: ( rule__PragmaTag__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPragmaTagAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1545:3: ( rule__PragmaTag__Group__0 )
            // InternalLTLFormula.g:1545:4: rule__PragmaTag__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PragmaTag__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPragmaTagAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePragmaTag"


    // $ANTLR start "entryRuleKeyStringValueAnnotation"
    // InternalLTLFormula.g:1554:1: entryRuleKeyStringValueAnnotation : ruleKeyStringValueAnnotation EOF ;
    public final void entryRuleKeyStringValueAnnotation() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1555:1: ( ruleKeyStringValueAnnotation EOF )
            // InternalLTLFormula.g:1556:1: ruleKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyStringValueAnnotationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleKeyStringValueAnnotation"


    // $ANTLR start "ruleKeyStringValueAnnotation"
    // InternalLTLFormula.g:1563:1: ruleKeyStringValueAnnotation : ( ( rule__KeyStringValueAnnotation__Group__0 ) ) ;
    public final void ruleKeyStringValueAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1567:2: ( ( ( rule__KeyStringValueAnnotation__Group__0 ) ) )
            // InternalLTLFormula.g:1568:2: ( ( rule__KeyStringValueAnnotation__Group__0 ) )
            {
            // InternalLTLFormula.g:1568:2: ( ( rule__KeyStringValueAnnotation__Group__0 ) )
            // InternalLTLFormula.g:1569:3: ( rule__KeyStringValueAnnotation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyStringValueAnnotationAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1570:3: ( rule__KeyStringValueAnnotation__Group__0 )
            // InternalLTLFormula.g:1570:4: rule__KeyStringValueAnnotation__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeyStringValueAnnotation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyStringValueAnnotationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedKeyStringValueAnnotation"
    // InternalLTLFormula.g:1579:1: entryRuleRestrictedKeyStringValueAnnotation : ruleRestrictedKeyStringValueAnnotation EOF ;
    public final void entryRuleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1580:1: ( ruleRestrictedKeyStringValueAnnotation EOF )
            // InternalLTLFormula.g:1581:1: ruleRestrictedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRestrictedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedKeyStringValueAnnotation"
    // InternalLTLFormula.g:1588:1: ruleRestrictedKeyStringValueAnnotation : ( ( rule__RestrictedKeyStringValueAnnotation__Group__0 ) ) ;
    public final void ruleRestrictedKeyStringValueAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1592:2: ( ( ( rule__RestrictedKeyStringValueAnnotation__Group__0 ) ) )
            // InternalLTLFormula.g:1593:2: ( ( rule__RestrictedKeyStringValueAnnotation__Group__0 ) )
            {
            // InternalLTLFormula.g:1593:2: ( ( rule__RestrictedKeyStringValueAnnotation__Group__0 ) )
            // InternalLTLFormula.g:1594:3: ( rule__RestrictedKeyStringValueAnnotation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1595:3: ( rule__RestrictedKeyStringValueAnnotation__Group__0 )
            // InternalLTLFormula.g:1595:4: rule__RestrictedKeyStringValueAnnotation__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedKeyStringValueAnnotation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleStringPragma"
    // InternalLTLFormula.g:1604:1: entryRuleStringPragma : ruleStringPragma EOF ;
    public final void entryRuleStringPragma() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1605:1: ( ruleStringPragma EOF )
            // InternalLTLFormula.g:1606:1: ruleStringPragma EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringPragma();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringPragmaRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringPragma"


    // $ANTLR start "ruleStringPragma"
    // InternalLTLFormula.g:1613:1: ruleStringPragma : ( ( rule__StringPragma__Group__0 ) ) ;
    public final void ruleStringPragma() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1617:2: ( ( ( rule__StringPragma__Group__0 ) ) )
            // InternalLTLFormula.g:1618:2: ( ( rule__StringPragma__Group__0 ) )
            {
            // InternalLTLFormula.g:1618:2: ( ( rule__StringPragma__Group__0 ) )
            // InternalLTLFormula.g:1619:3: ( rule__StringPragma__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringPragmaAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1620:3: ( rule__StringPragma__Group__0 )
            // InternalLTLFormula.g:1620:4: rule__StringPragma__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringPragma__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringPragmaAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringPragma"


    // $ANTLR start "entryRuleTypedKeyStringValueAnnotation"
    // InternalLTLFormula.g:1629:1: entryRuleTypedKeyStringValueAnnotation : ruleTypedKeyStringValueAnnotation EOF ;
    public final void entryRuleTypedKeyStringValueAnnotation() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1630:1: ( ruleTypedKeyStringValueAnnotation EOF )
            // InternalLTLFormula.g:1631:1: ruleTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedKeyStringValueAnnotationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleTypedKeyStringValueAnnotation"
    // InternalLTLFormula.g:1638:1: ruleTypedKeyStringValueAnnotation : ( ( rule__TypedKeyStringValueAnnotation__Group__0 ) ) ;
    public final void ruleTypedKeyStringValueAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1642:2: ( ( ( rule__TypedKeyStringValueAnnotation__Group__0 ) ) )
            // InternalLTLFormula.g:1643:2: ( ( rule__TypedKeyStringValueAnnotation__Group__0 ) )
            {
            // InternalLTLFormula.g:1643:2: ( ( rule__TypedKeyStringValueAnnotation__Group__0 ) )
            // InternalLTLFormula.g:1644:3: ( rule__TypedKeyStringValueAnnotation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1645:3: ( rule__TypedKeyStringValueAnnotation__Group__0 )
            // InternalLTLFormula.g:1645:4: rule__TypedKeyStringValueAnnotation__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedKeyStringValueAnnotation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedTypedKeyStringValueAnnotation"
    // InternalLTLFormula.g:1654:1: entryRuleRestrictedTypedKeyStringValueAnnotation : ruleRestrictedTypedKeyStringValueAnnotation EOF ;
    public final void entryRuleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1655:1: ( ruleRestrictedTypedKeyStringValueAnnotation EOF )
            // InternalLTLFormula.g:1656:1: ruleRestrictedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRestrictedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedTypedKeyStringValueAnnotation"
    // InternalLTLFormula.g:1663:1: ruleRestrictedTypedKeyStringValueAnnotation : ( ( rule__RestrictedTypedKeyStringValueAnnotation__Group__0 ) ) ;
    public final void ruleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1667:2: ( ( ( rule__RestrictedTypedKeyStringValueAnnotation__Group__0 ) ) )
            // InternalLTLFormula.g:1668:2: ( ( rule__RestrictedTypedKeyStringValueAnnotation__Group__0 ) )
            {
            // InternalLTLFormula.g:1668:2: ( ( rule__RestrictedTypedKeyStringValueAnnotation__Group__0 ) )
            // InternalLTLFormula.g:1669:3: ( rule__RestrictedTypedKeyStringValueAnnotation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1670:3: ( rule__RestrictedTypedKeyStringValueAnnotation__Group__0 )
            // InternalLTLFormula.g:1670:4: rule__RestrictedTypedKeyStringValueAnnotation__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedTypedKeyStringValueAnnotation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedKeyStringValueAnnotation"
    // InternalLTLFormula.g:1679:1: entryRuleQuotedKeyStringValueAnnotation : ruleQuotedKeyStringValueAnnotation EOF ;
    public final void entryRuleQuotedKeyStringValueAnnotation() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1680:1: ( ruleQuotedKeyStringValueAnnotation EOF )
            // InternalLTLFormula.g:1681:1: ruleQuotedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleQuotedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedKeyStringValueAnnotationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQuotedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedKeyStringValueAnnotation"
    // InternalLTLFormula.g:1688:1: ruleQuotedKeyStringValueAnnotation : ( ( rule__QuotedKeyStringValueAnnotation__Group__0 ) ) ;
    public final void ruleQuotedKeyStringValueAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1692:2: ( ( ( rule__QuotedKeyStringValueAnnotation__Group__0 ) ) )
            // InternalLTLFormula.g:1693:2: ( ( rule__QuotedKeyStringValueAnnotation__Group__0 ) )
            {
            // InternalLTLFormula.g:1693:2: ( ( rule__QuotedKeyStringValueAnnotation__Group__0 ) )
            // InternalLTLFormula.g:1694:3: ( rule__QuotedKeyStringValueAnnotation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1695:3: ( rule__QuotedKeyStringValueAnnotation__Group__0 )
            // InternalLTLFormula.g:1695:4: rule__QuotedKeyStringValueAnnotation__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedKeyStringValueAnnotation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQuotedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedTypedKeyStringValueAnnotation"
    // InternalLTLFormula.g:1704:1: entryRuleQuotedTypedKeyStringValueAnnotation : ruleQuotedTypedKeyStringValueAnnotation EOF ;
    public final void entryRuleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1705:1: ( ruleQuotedTypedKeyStringValueAnnotation EOF )
            // InternalLTLFormula.g:1706:1: ruleQuotedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleQuotedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedTypedKeyStringValueAnnotation"
    // InternalLTLFormula.g:1713:1: ruleQuotedTypedKeyStringValueAnnotation : ( ( rule__QuotedTypedKeyStringValueAnnotation__Group__0 ) ) ;
    public final void ruleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1717:2: ( ( ( rule__QuotedTypedKeyStringValueAnnotation__Group__0 ) ) )
            // InternalLTLFormula.g:1718:2: ( ( rule__QuotedTypedKeyStringValueAnnotation__Group__0 ) )
            {
            // InternalLTLFormula.g:1718:2: ( ( rule__QuotedTypedKeyStringValueAnnotation__Group__0 ) )
            // InternalLTLFormula.g:1719:3: ( rule__QuotedTypedKeyStringValueAnnotation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1720:3: ( rule__QuotedTypedKeyStringValueAnnotation__Group__0 )
            // InternalLTLFormula.g:1720:4: rule__QuotedTypedKeyStringValueAnnotation__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedTypedKeyStringValueAnnotation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleEStringBoolean"
    // InternalLTLFormula.g:1729:1: entryRuleEStringBoolean : ruleEStringBoolean EOF ;
    public final void entryRuleEStringBoolean() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1730:1: ( ruleEStringBoolean EOF )
            // InternalLTLFormula.g:1731:1: ruleEStringBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEStringBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEStringBooleanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEStringBoolean"


    // $ANTLR start "ruleEStringBoolean"
    // InternalLTLFormula.g:1738:1: ruleEStringBoolean : ( ( rule__EStringBoolean__Alternatives ) ) ;
    public final void ruleEStringBoolean() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1742:2: ( ( ( rule__EStringBoolean__Alternatives ) ) )
            // InternalLTLFormula.g:1743:2: ( ( rule__EStringBoolean__Alternatives ) )
            {
            // InternalLTLFormula.g:1743:2: ( ( rule__EStringBoolean__Alternatives ) )
            // InternalLTLFormula.g:1744:3: ( rule__EStringBoolean__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEStringBooleanAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:1745:3: ( rule__EStringBoolean__Alternatives )
            // InternalLTLFormula.g:1745:4: rule__EStringBoolean__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EStringBoolean__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEStringBooleanAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEStringBoolean"


    // $ANTLR start "entryRuleEStringAllTypes"
    // InternalLTLFormula.g:1754:1: entryRuleEStringAllTypes : ruleEStringAllTypes EOF ;
    public final void entryRuleEStringAllTypes() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1755:1: ( ruleEStringAllTypes EOF )
            // InternalLTLFormula.g:1756:1: ruleEStringAllTypes EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEStringAllTypesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEStringAllTypesRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEStringAllTypes"


    // $ANTLR start "ruleEStringAllTypes"
    // InternalLTLFormula.g:1763:1: ruleEStringAllTypes : ( ( rule__EStringAllTypes__Alternatives ) ) ;
    public final void ruleEStringAllTypes() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1767:2: ( ( ( rule__EStringAllTypes__Alternatives ) ) )
            // InternalLTLFormula.g:1768:2: ( ( rule__EStringAllTypes__Alternatives ) )
            {
            // InternalLTLFormula.g:1768:2: ( ( rule__EStringAllTypes__Alternatives ) )
            // InternalLTLFormula.g:1769:3: ( rule__EStringAllTypes__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEStringAllTypesAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:1770:3: ( rule__EStringAllTypes__Alternatives )
            // InternalLTLFormula.g:1770:4: rule__EStringAllTypes__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EStringAllTypes__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEStringAllTypesAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEStringAllTypes"


    // $ANTLR start "entryRuleExtendedID"
    // InternalLTLFormula.g:1779:1: entryRuleExtendedID : ruleExtendedID EOF ;
    public final void entryRuleExtendedID() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1780:1: ( ruleExtendedID EOF )
            // InternalLTLFormula.g:1781:1: ruleExtendedID EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtendedIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExtendedID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtendedIDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExtendedID"


    // $ANTLR start "ruleExtendedID"
    // InternalLTLFormula.g:1788:1: ruleExtendedID : ( ( rule__ExtendedID__Group__0 ) ) ;
    public final void ruleExtendedID() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1792:2: ( ( ( rule__ExtendedID__Group__0 ) ) )
            // InternalLTLFormula.g:1793:2: ( ( rule__ExtendedID__Group__0 ) )
            {
            // InternalLTLFormula.g:1793:2: ( ( rule__ExtendedID__Group__0 ) )
            // InternalLTLFormula.g:1794:3: ( rule__ExtendedID__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtendedIDAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1795:3: ( rule__ExtendedID__Group__0 )
            // InternalLTLFormula.g:1795:4: rule__ExtendedID__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtendedID__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtendedIDAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExtendedID"


    // $ANTLR start "entryRuleInteger"
    // InternalLTLFormula.g:1804:1: entryRuleInteger : ruleInteger EOF ;
    public final void entryRuleInteger() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1805:1: ( ruleInteger EOF )
            // InternalLTLFormula.g:1806:1: ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalLTLFormula.g:1813:1: ruleInteger : ( ( rule__Integer__Group__0 ) ) ;
    public final void ruleInteger() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1817:2: ( ( ( rule__Integer__Group__0 ) ) )
            // InternalLTLFormula.g:1818:2: ( ( rule__Integer__Group__0 ) )
            {
            // InternalLTLFormula.g:1818:2: ( ( rule__Integer__Group__0 ) )
            // InternalLTLFormula.g:1819:3: ( rule__Integer__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1820:3: ( rule__Integer__Group__0 )
            // InternalLTLFormula.g:1820:4: rule__Integer__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleFloateger"
    // InternalLTLFormula.g:1829:1: entryRuleFloateger : ruleFloateger EOF ;
    public final void entryRuleFloateger() throws RecognitionException {
        try {
            // InternalLTLFormula.g:1830:1: ( ruleFloateger EOF )
            // InternalLTLFormula.g:1831:1: ruleFloateger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFloategerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFloateger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFloategerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFloateger"


    // $ANTLR start "ruleFloateger"
    // InternalLTLFormula.g:1838:1: ruleFloateger : ( ( rule__Floateger__Group__0 ) ) ;
    public final void ruleFloateger() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1842:2: ( ( ( rule__Floateger__Group__0 ) ) )
            // InternalLTLFormula.g:1843:2: ( ( rule__Floateger__Group__0 ) )
            {
            // InternalLTLFormula.g:1843:2: ( ( rule__Floateger__Group__0 ) )
            // InternalLTLFormula.g:1844:3: ( rule__Floateger__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFloategerAccess().getGroup()); 
            }
            // InternalLTLFormula.g:1845:3: ( rule__Floateger__Group__0 )
            // InternalLTLFormula.g:1845:4: rule__Floateger__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Floateger__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFloategerAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFloateger"


    // $ANTLR start "ruleGlobalOperator"
    // InternalLTLFormula.g:1854:1: ruleGlobalOperator : ( ( 'G' ) ) ;
    public final void ruleGlobalOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1858:1: ( ( ( 'G' ) ) )
            // InternalLTLFormula.g:1859:2: ( ( 'G' ) )
            {
            // InternalLTLFormula.g:1859:2: ( ( 'G' ) )
            // InternalLTLFormula.g:1860:3: ( 'G' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGlobalOperatorAccess().getGLOBALEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:1861:3: ( 'G' )
            // InternalLTLFormula.g:1861:4: 'G'
            {
            match(input,17,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGlobalOperatorAccess().getGLOBALEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGlobalOperator"


    // $ANTLR start "ruleFinalOperator"
    // InternalLTLFormula.g:1870:1: ruleFinalOperator : ( ( 'F' ) ) ;
    public final void ruleFinalOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1874:1: ( ( ( 'F' ) ) )
            // InternalLTLFormula.g:1875:2: ( ( 'F' ) )
            {
            // InternalLTLFormula.g:1875:2: ( ( 'F' ) )
            // InternalLTLFormula.g:1876:3: ( 'F' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFinalOperatorAccess().getFINALEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:1877:3: ( 'F' )
            // InternalLTLFormula.g:1877:4: 'F'
            {
            match(input,18,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFinalOperatorAccess().getFINALEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFinalOperator"


    // $ANTLR start "ruleNextOperator"
    // InternalLTLFormula.g:1886:1: ruleNextOperator : ( ( 'X' ) ) ;
    public final void ruleNextOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1890:1: ( ( ( 'X' ) ) )
            // InternalLTLFormula.g:1891:2: ( ( 'X' ) )
            {
            // InternalLTLFormula.g:1891:2: ( ( 'X' ) )
            // InternalLTLFormula.g:1892:3: ( 'X' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNextOperatorAccess().getNEXTEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:1893:3: ( 'X' )
            // InternalLTLFormula.g:1893:4: 'X'
            {
            match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNextOperatorAccess().getNEXTEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNextOperator"


    // $ANTLR start "ruleUntilOperator"
    // InternalLTLFormula.g:1902:1: ruleUntilOperator : ( ( 'U' ) ) ;
    public final void ruleUntilOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1906:1: ( ( ( 'U' ) ) )
            // InternalLTLFormula.g:1907:2: ( ( 'U' ) )
            {
            // InternalLTLFormula.g:1907:2: ( ( 'U' ) )
            // InternalLTLFormula.g:1908:3: ( 'U' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUntilOperatorAccess().getUNTILEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:1909:3: ( 'U' )
            // InternalLTLFormula.g:1909:4: 'U'
            {
            match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUntilOperatorAccess().getUNTILEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUntilOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalLTLFormula.g:1918:1: ruleCompareOperator : ( ( rule__CompareOperator__Alternatives ) ) ;
    public final void ruleCompareOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1922:1: ( ( ( rule__CompareOperator__Alternatives ) ) )
            // InternalLTLFormula.g:1923:2: ( ( rule__CompareOperator__Alternatives ) )
            {
            // InternalLTLFormula.g:1923:2: ( ( rule__CompareOperator__Alternatives ) )
            // InternalLTLFormula.g:1924:3: ( rule__CompareOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:1925:3: ( rule__CompareOperator__Alternatives )
            // InternalLTLFormula.g:1925:4: rule__CompareOperator__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CompareOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "rulePreOperator"
    // InternalLTLFormula.g:1934:1: rulePreOperator : ( ( 'pre' ) ) ;
    public final void rulePreOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1938:1: ( ( ( 'pre' ) ) )
            // InternalLTLFormula.g:1939:2: ( ( 'pre' ) )
            {
            // InternalLTLFormula.g:1939:2: ( ( 'pre' ) )
            // InternalLTLFormula.g:1940:3: ( 'pre' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:1941:3: ( 'pre' )
            // InternalLTLFormula.g:1941:4: 'pre'
            {
            match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePreOperator"


    // $ANTLR start "ruleBitwiseNotOperator"
    // InternalLTLFormula.g:1950:1: ruleBitwiseNotOperator : ( ( '~' ) ) ;
    public final void ruleBitwiseNotOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1954:1: ( ( ( '~' ) ) )
            // InternalLTLFormula.g:1955:2: ( ( '~' ) )
            {
            // InternalLTLFormula.g:1955:2: ( ( '~' ) )
            // InternalLTLFormula.g:1956:3: ( '~' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:1957:3: ( '~' )
            // InternalLTLFormula.g:1957:4: '~'
            {
            match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBitwiseNotOperator"


    // $ANTLR start "ruleBitwiseXOrOperator"
    // InternalLTLFormula.g:1966:1: ruleBitwiseXOrOperator : ( ( '^' ) ) ;
    public final void ruleBitwiseXOrOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1970:1: ( ( ( '^' ) ) )
            // InternalLTLFormula.g:1971:2: ( ( '^' ) )
            {
            // InternalLTLFormula.g:1971:2: ( ( '^' ) )
            // InternalLTLFormula.g:1972:3: ( '^' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:1973:3: ( '^' )
            // InternalLTLFormula.g:1973:4: '^'
            {
            match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBitwiseXOrOperator"


    // $ANTLR start "ruleBitwiseOrOperator"
    // InternalLTLFormula.g:1982:1: ruleBitwiseOrOperator : ( ( '|' ) ) ;
    public final void ruleBitwiseOrOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:1986:1: ( ( ( '|' ) ) )
            // InternalLTLFormula.g:1987:2: ( ( '|' ) )
            {
            // InternalLTLFormula.g:1987:2: ( ( '|' ) )
            // InternalLTLFormula.g:1988:3: ( '|' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:1989:3: ( '|' )
            // InternalLTLFormula.g:1989:4: '|'
            {
            match(input,24,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBitwiseOrOperator"


    // $ANTLR start "ruleBitwiseAndOperator"
    // InternalLTLFormula.g:1998:1: ruleBitwiseAndOperator : ( ( '&' ) ) ;
    public final void ruleBitwiseAndOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2002:1: ( ( ( '&' ) ) )
            // InternalLTLFormula.g:2003:2: ( ( '&' ) )
            {
            // InternalLTLFormula.g:2003:2: ( ( '&' ) )
            // InternalLTLFormula.g:2004:3: ( '&' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2005:3: ( '&' )
            // InternalLTLFormula.g:2005:4: '&'
            {
            match(input,25,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBitwiseAndOperator"


    // $ANTLR start "ruleNotOperator"
    // InternalLTLFormula.g:2014:1: ruleNotOperator : ( ( '!' ) ) ;
    public final void ruleNotOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2018:1: ( ( ( '!' ) ) )
            // InternalLTLFormula.g:2019:2: ( ( '!' ) )
            {
            // InternalLTLFormula.g:2019:2: ( ( '!' ) )
            // InternalLTLFormula.g:2020:3: ( '!' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2021:3: ( '!' )
            // InternalLTLFormula.g:2021:4: '!'
            {
            match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNotOperator"


    // $ANTLR start "ruleAddOperator"
    // InternalLTLFormula.g:2030:1: ruleAddOperator : ( ( '+' ) ) ;
    public final void ruleAddOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2034:1: ( ( ( '+' ) ) )
            // InternalLTLFormula.g:2035:2: ( ( '+' ) )
            {
            // InternalLTLFormula.g:2035:2: ( ( '+' ) )
            // InternalLTLFormula.g:2036:3: ( '+' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2037:3: ( '+' )
            // InternalLTLFormula.g:2037:4: '+'
            {
            match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddOperator"


    // $ANTLR start "ruleSubOperator"
    // InternalLTLFormula.g:2046:1: ruleSubOperator : ( ( '-' ) ) ;
    public final void ruleSubOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2050:1: ( ( ( '-' ) ) )
            // InternalLTLFormula.g:2051:2: ( ( '-' ) )
            {
            // InternalLTLFormula.g:2051:2: ( ( '-' ) )
            // InternalLTLFormula.g:2052:3: ( '-' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2053:3: ( '-' )
            // InternalLTLFormula.g:2053:4: '-'
            {
            match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubOperator"


    // $ANTLR start "ruleMultOperator"
    // InternalLTLFormula.g:2062:1: ruleMultOperator : ( ( '*' ) ) ;
    public final void ruleMultOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2066:1: ( ( ( '*' ) ) )
            // InternalLTLFormula.g:2067:2: ( ( '*' ) )
            {
            // InternalLTLFormula.g:2067:2: ( ( '*' ) )
            // InternalLTLFormula.g:2068:3: ( '*' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2069:3: ( '*' )
            // InternalLTLFormula.g:2069:4: '*'
            {
            match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultOperator"


    // $ANTLR start "ruleModOperator"
    // InternalLTLFormula.g:2078:1: ruleModOperator : ( ( '%' ) ) ;
    public final void ruleModOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2082:1: ( ( ( '%' ) ) )
            // InternalLTLFormula.g:2083:2: ( ( '%' ) )
            {
            // InternalLTLFormula.g:2083:2: ( ( '%' ) )
            // InternalLTLFormula.g:2084:3: ( '%' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2085:3: ( '%' )
            // InternalLTLFormula.g:2085:4: '%'
            {
            match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModOperator"


    // $ANTLR start "ruleDivOperator"
    // InternalLTLFormula.g:2094:1: ruleDivOperator : ( ( '/' ) ) ;
    public final void ruleDivOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2098:1: ( ( ( '/' ) ) )
            // InternalLTLFormula.g:2099:2: ( ( '/' ) )
            {
            // InternalLTLFormula.g:2099:2: ( ( '/' ) )
            // InternalLTLFormula.g:2100:3: ( '/' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2101:3: ( '/' )
            // InternalLTLFormula.g:2101:4: '/'
            {
            match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDivOperator"


    // $ANTLR start "ruleValOperator"
    // InternalLTLFormula.g:2110:1: ruleValOperator : ( ( 'val' ) ) ;
    public final void ruleValOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2114:1: ( ( ( 'val' ) ) )
            // InternalLTLFormula.g:2115:2: ( ( 'val' ) )
            {
            // InternalLTLFormula.g:2115:2: ( ( 'val' ) )
            // InternalLTLFormula.g:2116:3: ( 'val' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2117:3: ( 'val' )
            // InternalLTLFormula.g:2117:4: 'val'
            {
            match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValOperator"


    // $ANTLR start "ruleLogicalOrOperator"
    // InternalLTLFormula.g:2126:1: ruleLogicalOrOperator : ( ( '||' ) ) ;
    public final void ruleLogicalOrOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2130:1: ( ( ( '||' ) ) )
            // InternalLTLFormula.g:2131:2: ( ( '||' ) )
            {
            // InternalLTLFormula.g:2131:2: ( ( '||' ) )
            // InternalLTLFormula.g:2132:3: ( '||' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2133:3: ( '||' )
            // InternalLTLFormula.g:2133:4: '||'
            {
            match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLogicalOrOperator"


    // $ANTLR start "ruleLogicalAndOperator"
    // InternalLTLFormula.g:2142:1: ruleLogicalAndOperator : ( ( '&&' ) ) ;
    public final void ruleLogicalAndOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2146:1: ( ( ( '&&' ) ) )
            // InternalLTLFormula.g:2147:2: ( ( '&&' ) )
            {
            // InternalLTLFormula.g:2147:2: ( ( '&&' ) )
            // InternalLTLFormula.g:2148:3: ( '&&' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2149:3: ( '&&' )
            // InternalLTLFormula.g:2149:4: '&&'
            {
            match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLogicalAndOperator"


    // $ANTLR start "ruleShiftLeftOperator"
    // InternalLTLFormula.g:2158:1: ruleShiftLeftOperator : ( ( '<<' ) ) ;
    public final void ruleShiftLeftOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2162:1: ( ( ( '<<' ) ) )
            // InternalLTLFormula.g:2163:2: ( ( '<<' ) )
            {
            // InternalLTLFormula.g:2163:2: ( ( '<<' ) )
            // InternalLTLFormula.g:2164:3: ( '<<' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2165:3: ( '<<' )
            // InternalLTLFormula.g:2165:4: '<<'
            {
            match(input,35,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleShiftLeftOperator"


    // $ANTLR start "ruleShiftRightOperator"
    // InternalLTLFormula.g:2174:1: ruleShiftRightOperator : ( ( '>>' ) ) ;
    public final void ruleShiftRightOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2178:1: ( ( ( '>>' ) ) )
            // InternalLTLFormula.g:2179:2: ( ( '>>' ) )
            {
            // InternalLTLFormula.g:2179:2: ( ( '>>' ) )
            // InternalLTLFormula.g:2180:3: ( '>>' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2181:3: ( '>>' )
            // InternalLTLFormula.g:2181:4: '>>'
            {
            match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleShiftRightOperator"


    // $ANTLR start "ruleShiftRightUnsignedOperator"
    // InternalLTLFormula.g:2190:1: ruleShiftRightUnsignedOperator : ( ( '>>>' ) ) ;
    public final void ruleShiftRightUnsignedOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2194:1: ( ( ( '>>>' ) ) )
            // InternalLTLFormula.g:2195:2: ( ( '>>>' ) )
            {
            // InternalLTLFormula.g:2195:2: ( ( '>>>' ) )
            // InternalLTLFormula.g:2196:3: ( '>>>' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2197:3: ( '>>>' )
            // InternalLTLFormula.g:2197:4: '>>>'
            {
            match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleShiftRightUnsignedOperator"


    // $ANTLR start "ruleConditionalOperator"
    // InternalLTLFormula.g:2206:1: ruleConditionalOperator : ( ( '?' ) ) ;
    public final void ruleConditionalOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2210:1: ( ( ( '?' ) ) )
            // InternalLTLFormula.g:2211:2: ( ( '?' ) )
            {
            // InternalLTLFormula.g:2211:2: ( ( '?' ) )
            // InternalLTLFormula.g:2212:3: ( '?' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2213:3: ( '?' )
            // InternalLTLFormula.g:2213:4: '?'
            {
            match(input,38,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConditionalOperator"


    // $ANTLR start "ruleInitOperator"
    // InternalLTLFormula.g:2222:1: ruleInitOperator : ( ( '->' ) ) ;
    public final void ruleInitOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2226:1: ( ( ( '->' ) ) )
            // InternalLTLFormula.g:2227:2: ( ( '->' ) )
            {
            // InternalLTLFormula.g:2227:2: ( ( '->' ) )
            // InternalLTLFormula.g:2228:3: ( '->' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2229:3: ( '->' )
            // InternalLTLFormula.g:2229:4: '->'
            {
            match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitOperator"


    // $ANTLR start "ruleFbyOperator"
    // InternalLTLFormula.g:2238:1: ruleFbyOperator : ( ( 'fby' ) ) ;
    public final void ruleFbyOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2242:1: ( ( ( 'fby' ) ) )
            // InternalLTLFormula.g:2243:2: ( ( 'fby' ) )
            {
            // InternalLTLFormula.g:2243:2: ( ( 'fby' ) )
            // InternalLTLFormula.g:2244:3: ( 'fby' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFbyOperatorAccess().getFBYEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2245:3: ( 'fby' )
            // InternalLTLFormula.g:2245:4: 'fby'
            {
            match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFbyOperatorAccess().getFBYEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFbyOperator"


    // $ANTLR start "ruleSfbyOperator"
    // InternalLTLFormula.g:2254:1: ruleSfbyOperator : ( ( 'sfby' ) ) ;
    public final void ruleSfbyOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2258:1: ( ( ( 'sfby' ) ) )
            // InternalLTLFormula.g:2259:2: ( ( 'sfby' ) )
            {
            // InternalLTLFormula.g:2259:2: ( ( 'sfby' ) )
            // InternalLTLFormula.g:2260:3: ( 'sfby' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSfbyOperatorAccess().getSFBYEnumLiteralDeclaration()); 
            }
            // InternalLTLFormula.g:2261:3: ( 'sfby' )
            // InternalLTLFormula.g:2261:4: 'sfby'
            {
            match(input,41,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSfbyOperatorAccess().getSFBYEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSfbyOperator"


    // $ANTLR start "ruleParameterAccessType"
    // InternalLTLFormula.g:2270:1: ruleParameterAccessType : ( ( rule__ParameterAccessType__Alternatives ) ) ;
    public final void ruleParameterAccessType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2274:1: ( ( ( rule__ParameterAccessType__Alternatives ) ) )
            // InternalLTLFormula.g:2275:2: ( ( rule__ParameterAccessType__Alternatives ) )
            {
            // InternalLTLFormula.g:2275:2: ( ( rule__ParameterAccessType__Alternatives ) )
            // InternalLTLFormula.g:2276:3: ( rule__ParameterAccessType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccessTypeAccess().getAlternatives()); 
            }
            // InternalLTLFormula.g:2277:3: ( rule__ParameterAccessType__Alternatives )
            // InternalLTLFormula.g:2277:4: rule__ParameterAccessType__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParameterAccessType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccessTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterAccessType"


    // $ANTLR start "rule__LTLExpression__Alternatives"
    // InternalLTLFormula.g:2285:1: rule__LTLExpression__Alternatives : ( ( ( rule__LTLExpression__Group_0__0 ) ) | ( ( rule__LTLExpression__Group_1__0 ) ) );
    public final void rule__LTLExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2289:1: ( ( ( rule__LTLExpression__Group_0__0 ) ) | ( ( rule__LTLExpression__Group_1__0 ) ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( ((LA1_0>=17 && LA1_0<=19)) ) {
                alt1=1;
            }
            else if ( ((LA1_0>=RULE_STRING && LA1_0<=RULE_COMMENT_ANNOTATION)||(LA1_0>=21 && LA1_0<=22)||LA1_0==26||LA1_0==28||LA1_0==32||LA1_0==51||(LA1_0>=58 && LA1_0<=61)||LA1_0==64||(LA1_0>=66 && LA1_0<=67)) ) {
                alt1=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalLTLFormula.g:2290:2: ( ( rule__LTLExpression__Group_0__0 ) )
                    {
                    // InternalLTLFormula.g:2290:2: ( ( rule__LTLExpression__Group_0__0 ) )
                    // InternalLTLFormula.g:2291:3: ( rule__LTLExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLTLExpressionAccess().getGroup_0()); 
                    }
                    // InternalLTLFormula.g:2292:3: ( rule__LTLExpression__Group_0__0 )
                    // InternalLTLFormula.g:2292:4: rule__LTLExpression__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LTLExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLTLExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2296:2: ( ( rule__LTLExpression__Group_1__0 ) )
                    {
                    // InternalLTLFormula.g:2296:2: ( ( rule__LTLExpression__Group_1__0 ) )
                    // InternalLTLFormula.g:2297:3: ( rule__LTLExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLTLExpressionAccess().getGroup_1()); 
                    }
                    // InternalLTLFormula.g:2298:3: ( rule__LTLExpression__Group_1__0 )
                    // InternalLTLFormula.g:2298:4: rule__LTLExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LTLExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLTLExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Alternatives"


    // $ANTLR start "rule__LTLExpression__OperatorAlternatives_0_1_0"
    // InternalLTLFormula.g:2306:1: rule__LTLExpression__OperatorAlternatives_0_1_0 : ( ( ruleGlobalOperator ) | ( ruleFinalOperator ) | ( ruleNextOperator ) );
    public final void rule__LTLExpression__OperatorAlternatives_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2310:1: ( ( ruleGlobalOperator ) | ( ruleFinalOperator ) | ( ruleNextOperator ) )
            int alt2=3;
            switch ( input.LA(1) ) {
            case 17:
                {
                alt2=1;
                }
                break;
            case 18:
                {
                alt2=2;
                }
                break;
            case 19:
                {
                alt2=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }

            switch (alt2) {
                case 1 :
                    // InternalLTLFormula.g:2311:2: ( ruleGlobalOperator )
                    {
                    // InternalLTLFormula.g:2311:2: ( ruleGlobalOperator )
                    // InternalLTLFormula.g:2312:3: ruleGlobalOperator
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLTLExpressionAccess().getOperatorGlobalOperatorEnumRuleCall_0_1_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleGlobalOperator();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLTLExpressionAccess().getOperatorGlobalOperatorEnumRuleCall_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2317:2: ( ruleFinalOperator )
                    {
                    // InternalLTLFormula.g:2317:2: ( ruleFinalOperator )
                    // InternalLTLFormula.g:2318:3: ruleFinalOperator
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLTLExpressionAccess().getOperatorFinalOperatorEnumRuleCall_0_1_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFinalOperator();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLTLExpressionAccess().getOperatorFinalOperatorEnumRuleCall_0_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLTLFormula.g:2323:2: ( ruleNextOperator )
                    {
                    // InternalLTLFormula.g:2323:2: ( ruleNextOperator )
                    // InternalLTLFormula.g:2324:3: ruleNextOperator
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLTLExpressionAccess().getOperatorNextOperatorEnumRuleCall_0_1_0_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNextOperator();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLTLExpressionAccess().getOperatorNextOperatorEnumRuleCall_0_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__OperatorAlternatives_0_1_0"


    // $ANTLR start "rule__AtomicExpression__Alternatives"
    // InternalLTLFormula.g:2333:1: rule__AtomicExpression__Alternatives : ( ( ruleBoolValue ) | ( ( rule__AtomicExpression__Group_1__0 ) ) | ( ruleReferenceCall ) | ( ruleFunctionCall ) | ( ruleRandomCall ) | ( ruleRandomizeCall ) | ( ruleValuedObjectTestExpression ) | ( ruleSpecialAccessExpression ) | ( ruleTextExpression ) );
    public final void rule__AtomicExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2337:1: ( ( ruleBoolValue ) | ( ( rule__AtomicExpression__Group_1__0 ) ) | ( ruleReferenceCall ) | ( ruleFunctionCall ) | ( ruleRandomCall ) | ( ruleRandomizeCall ) | ( ruleValuedObjectTestExpression ) | ( ruleSpecialAccessExpression ) | ( ruleTextExpression ) )
            int alt3=9;
            alt3 = dfa3.predict(input);
            switch (alt3) {
                case 1 :
                    // InternalLTLFormula.g:2338:2: ( ruleBoolValue )
                    {
                    // InternalLTLFormula.g:2338:2: ( ruleBoolValue )
                    // InternalLTLFormula.g:2339:3: ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2344:2: ( ( rule__AtomicExpression__Group_1__0 ) )
                    {
                    // InternalLTLFormula.g:2344:2: ( ( rule__AtomicExpression__Group_1__0 ) )
                    // InternalLTLFormula.g:2345:3: ( rule__AtomicExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicExpressionAccess().getGroup_1()); 
                    }
                    // InternalLTLFormula.g:2346:3: ( rule__AtomicExpression__Group_1__0 )
                    // InternalLTLFormula.g:2346:4: rule__AtomicExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AtomicExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLTLFormula.g:2350:2: ( ruleReferenceCall )
                    {
                    // InternalLTLFormula.g:2350:2: ( ruleReferenceCall )
                    // InternalLTLFormula.g:2351:3: ruleReferenceCall
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleReferenceCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLTLFormula.g:2356:2: ( ruleFunctionCall )
                    {
                    // InternalLTLFormula.g:2356:2: ( ruleFunctionCall )
                    // InternalLTLFormula.g:2357:3: ruleFunctionCall
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFunctionCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLTLFormula.g:2362:2: ( ruleRandomCall )
                    {
                    // InternalLTLFormula.g:2362:2: ( ruleRandomCall )
                    // InternalLTLFormula.g:2363:3: ruleRandomCall
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicExpressionAccess().getRandomCallParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleRandomCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicExpressionAccess().getRandomCallParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLTLFormula.g:2368:2: ( ruleRandomizeCall )
                    {
                    // InternalLTLFormula.g:2368:2: ( ruleRandomizeCall )
                    // InternalLTLFormula.g:2369:3: ruleRandomizeCall
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicExpressionAccess().getRandomizeCallParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleRandomizeCall();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicExpressionAccess().getRandomizeCallParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalLTLFormula.g:2374:2: ( ruleValuedObjectTestExpression )
                    {
                    // InternalLTLFormula.g:2374:2: ( ruleValuedObjectTestExpression )
                    // InternalLTLFormula.g:2375:3: ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalLTLFormula.g:2380:2: ( ruleSpecialAccessExpression )
                    {
                    // InternalLTLFormula.g:2380:2: ( ruleSpecialAccessExpression )
                    // InternalLTLFormula.g:2381:3: ruleSpecialAccessExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicExpressionAccess().getSpecialAccessExpressionParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSpecialAccessExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicExpressionAccess().getSpecialAccessExpressionParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalLTLFormula.g:2386:2: ( ruleTextExpression )
                    {
                    // InternalLTLFormula.g:2386:2: ( ruleTextExpression )
                    // InternalLTLFormula.g:2387:3: ruleTextExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTextExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AtomicExpression__Alternatives"


    // $ANTLR start "rule__Expression__Alternatives"
    // InternalLTLFormula.g:2396:1: rule__Expression__Alternatives : ( ( ruleBoolExpression ) | ( ruleValuedExpression ) );
    public final void rule__Expression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2400:1: ( ( ruleBoolExpression ) | ( ruleValuedExpression ) )
            int alt4=2;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalLTLFormula.g:2401:2: ( ruleBoolExpression )
                    {
                    // InternalLTLFormula.g:2401:2: ( ruleBoolExpression )
                    // InternalLTLFormula.g:2402:3: ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2407:2: ( ruleValuedExpression )
                    {
                    // InternalLTLFormula.g:2407:2: ( ruleValuedExpression )
                    // InternalLTLFormula.g:2408:3: ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Alternatives"


    // $ANTLR start "rule__NotOrValuedExpression__Alternatives"
    // InternalLTLFormula.g:2417:1: rule__NotOrValuedExpression__Alternatives : ( ( ruleValuedExpression ) | ( ruleNotExpression ) );
    public final void rule__NotOrValuedExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2421:1: ( ( ruleValuedExpression ) | ( ruleNotExpression ) )
            int alt5=2;
            alt5 = dfa5.predict(input);
            switch (alt5) {
                case 1 :
                    // InternalLTLFormula.g:2422:2: ( ruleValuedExpression )
                    {
                    // InternalLTLFormula.g:2422:2: ( ruleValuedExpression )
                    // InternalLTLFormula.g:2423:3: ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2428:2: ( ruleNotExpression )
                    {
                    // InternalLTLFormula.g:2428:2: ( ruleNotExpression )
                    // InternalLTLFormula.g:2429:3: ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NotOrValuedExpression__Alternatives"


    // $ANTLR start "rule__BitwiseNotExpression__Alternatives"
    // InternalLTLFormula.g:2438:1: rule__BitwiseNotExpression__Alternatives : ( ( ( rule__BitwiseNotExpression__Group_0__0 ) ) | ( ruleAtomicExpression ) );
    public final void rule__BitwiseNotExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2442:1: ( ( ( rule__BitwiseNotExpression__Group_0__0 ) ) | ( ruleAtomicExpression ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==22) ) {
                alt6=1;
            }
            else if ( ((LA6_0>=RULE_BOOLEAN && LA6_0<=RULE_ID)||(LA6_0>=RULE_HOSTCODE && LA6_0<=RULE_COMMENT_ANNOTATION)||LA6_0==21||LA6_0==32||LA6_0==51||(LA6_0>=58 && LA6_0<=60)||(LA6_0>=66 && LA6_0<=67)) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalLTLFormula.g:2443:2: ( ( rule__BitwiseNotExpression__Group_0__0 ) )
                    {
                    // InternalLTLFormula.g:2443:2: ( ( rule__BitwiseNotExpression__Group_0__0 ) )
                    // InternalLTLFormula.g:2444:3: ( rule__BitwiseNotExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBitwiseNotExpressionAccess().getGroup_0()); 
                    }
                    // InternalLTLFormula.g:2445:3: ( rule__BitwiseNotExpression__Group_0__0 )
                    // InternalLTLFormula.g:2445:4: rule__BitwiseNotExpression__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__BitwiseNotExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBitwiseNotExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2449:2: ( ruleAtomicExpression )
                    {
                    // InternalLTLFormula.g:2449:2: ( ruleAtomicExpression )
                    // InternalLTLFormula.g:2450:3: ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBitwiseNotExpressionAccess().getAtomicExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBitwiseNotExpressionAccess().getAtomicExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseNotExpression__Alternatives"


    // $ANTLR start "rule__NotExpression__Alternatives"
    // InternalLTLFormula.g:2459:1: rule__NotExpression__Alternatives : ( ( ( rule__NotExpression__Group_0__0 ) ) | ( ruleBitwiseNotExpression ) );
    public final void rule__NotExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2463:1: ( ( ( rule__NotExpression__Group_0__0 ) ) | ( ruleBitwiseNotExpression ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==26) ) {
                alt7=1;
            }
            else if ( ((LA7_0>=RULE_BOOLEAN && LA7_0<=RULE_ID)||(LA7_0>=RULE_HOSTCODE && LA7_0<=RULE_COMMENT_ANNOTATION)||(LA7_0>=21 && LA7_0<=22)||LA7_0==32||LA7_0==51||(LA7_0>=58 && LA7_0<=60)||(LA7_0>=66 && LA7_0<=67)) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalLTLFormula.g:2464:2: ( ( rule__NotExpression__Group_0__0 ) )
                    {
                    // InternalLTLFormula.g:2464:2: ( ( rule__NotExpression__Group_0__0 ) )
                    // InternalLTLFormula.g:2465:3: ( rule__NotExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNotExpressionAccess().getGroup_0()); 
                    }
                    // InternalLTLFormula.g:2466:3: ( rule__NotExpression__Group_0__0 )
                    // InternalLTLFormula.g:2466:4: rule__NotExpression__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NotExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNotExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2470:2: ( ruleBitwiseNotExpression )
                    {
                    // InternalLTLFormula.g:2470:2: ( ruleBitwiseNotExpression )
                    // InternalLTLFormula.g:2471:3: ruleBitwiseNotExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNotExpressionAccess().getBitwiseNotExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBitwiseNotExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNotExpressionAccess().getBitwiseNotExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NotExpression__Alternatives"


    // $ANTLR start "rule__ShiftExpressions__Alternatives_1"
    // InternalLTLFormula.g:2480:1: rule__ShiftExpressions__Alternatives_1 : ( ( ( rule__ShiftExpressions__Group_1_0__0 ) ) | ( ( rule__ShiftExpressions__Group_1_1__0 ) ) | ( ( rule__ShiftExpressions__Group_1_2__0 ) ) );
    public final void rule__ShiftExpressions__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2484:1: ( ( ( rule__ShiftExpressions__Group_1_0__0 ) ) | ( ( rule__ShiftExpressions__Group_1_1__0 ) ) | ( ( rule__ShiftExpressions__Group_1_2__0 ) ) )
            int alt8=3;
            switch ( input.LA(1) ) {
            case 35:
                {
                alt8=1;
                }
                break;
            case 36:
                {
                alt8=2;
                }
                break;
            case 37:
                {
                alt8=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalLTLFormula.g:2485:2: ( ( rule__ShiftExpressions__Group_1_0__0 ) )
                    {
                    // InternalLTLFormula.g:2485:2: ( ( rule__ShiftExpressions__Group_1_0__0 ) )
                    // InternalLTLFormula.g:2486:3: ( rule__ShiftExpressions__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShiftExpressionsAccess().getGroup_1_0()); 
                    }
                    // InternalLTLFormula.g:2487:3: ( rule__ShiftExpressions__Group_1_0__0 )
                    // InternalLTLFormula.g:2487:4: rule__ShiftExpressions__Group_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ShiftExpressions__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShiftExpressionsAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2491:2: ( ( rule__ShiftExpressions__Group_1_1__0 ) )
                    {
                    // InternalLTLFormula.g:2491:2: ( ( rule__ShiftExpressions__Group_1_1__0 ) )
                    // InternalLTLFormula.g:2492:3: ( rule__ShiftExpressions__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShiftExpressionsAccess().getGroup_1_1()); 
                    }
                    // InternalLTLFormula.g:2493:3: ( rule__ShiftExpressions__Group_1_1__0 )
                    // InternalLTLFormula.g:2493:4: rule__ShiftExpressions__Group_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ShiftExpressions__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShiftExpressionsAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLTLFormula.g:2497:2: ( ( rule__ShiftExpressions__Group_1_2__0 ) )
                    {
                    // InternalLTLFormula.g:2497:2: ( ( rule__ShiftExpressions__Group_1_2__0 ) )
                    // InternalLTLFormula.g:2498:3: ( rule__ShiftExpressions__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getShiftExpressionsAccess().getGroup_1_2()); 
                    }
                    // InternalLTLFormula.g:2499:3: ( rule__ShiftExpressions__Group_1_2__0 )
                    // InternalLTLFormula.g:2499:4: rule__ShiftExpressions__Group_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ShiftExpressions__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getShiftExpressionsAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Alternatives_1"


    // $ANTLR start "rule__SumExpression__Alternatives_1"
    // InternalLTLFormula.g:2507:1: rule__SumExpression__Alternatives_1 : ( ( ( rule__SumExpression__Group_1_0__0 ) ) | ( ( rule__SumExpression__Group_1_1__0 ) ) );
    public final void rule__SumExpression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2511:1: ( ( ( rule__SumExpression__Group_1_0__0 ) ) | ( ( rule__SumExpression__Group_1_1__0 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==27) ) {
                alt9=1;
            }
            else if ( (LA9_0==28) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalLTLFormula.g:2512:2: ( ( rule__SumExpression__Group_1_0__0 ) )
                    {
                    // InternalLTLFormula.g:2512:2: ( ( rule__SumExpression__Group_1_0__0 ) )
                    // InternalLTLFormula.g:2513:3: ( rule__SumExpression__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSumExpressionAccess().getGroup_1_0()); 
                    }
                    // InternalLTLFormula.g:2514:3: ( rule__SumExpression__Group_1_0__0 )
                    // InternalLTLFormula.g:2514:4: rule__SumExpression__Group_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SumExpression__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSumExpressionAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2518:2: ( ( rule__SumExpression__Group_1_1__0 ) )
                    {
                    // InternalLTLFormula.g:2518:2: ( ( rule__SumExpression__Group_1_1__0 ) )
                    // InternalLTLFormula.g:2519:3: ( rule__SumExpression__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSumExpressionAccess().getGroup_1_1()); 
                    }
                    // InternalLTLFormula.g:2520:3: ( rule__SumExpression__Group_1_1__0 )
                    // InternalLTLFormula.g:2520:4: rule__SumExpression__Group_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SumExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSumExpressionAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Alternatives_1"


    // $ANTLR start "rule__ProductExpression__Alternatives_1"
    // InternalLTLFormula.g:2528:1: rule__ProductExpression__Alternatives_1 : ( ( ( rule__ProductExpression__Group_1_0__0 ) ) | ( ( rule__ProductExpression__Group_1_1__0 ) ) | ( ( rule__ProductExpression__Group_1_2__0 ) ) );
    public final void rule__ProductExpression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2532:1: ( ( ( rule__ProductExpression__Group_1_0__0 ) ) | ( ( rule__ProductExpression__Group_1_1__0 ) ) | ( ( rule__ProductExpression__Group_1_2__0 ) ) )
            int alt10=3;
            switch ( input.LA(1) ) {
            case 29:
                {
                alt10=1;
                }
                break;
            case 31:
                {
                alt10=2;
                }
                break;
            case 30:
                {
                alt10=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalLTLFormula.g:2533:2: ( ( rule__ProductExpression__Group_1_0__0 ) )
                    {
                    // InternalLTLFormula.g:2533:2: ( ( rule__ProductExpression__Group_1_0__0 ) )
                    // InternalLTLFormula.g:2534:3: ( rule__ProductExpression__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProductExpressionAccess().getGroup_1_0()); 
                    }
                    // InternalLTLFormula.g:2535:3: ( rule__ProductExpression__Group_1_0__0 )
                    // InternalLTLFormula.g:2535:4: rule__ProductExpression__Group_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProductExpression__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProductExpressionAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2539:2: ( ( rule__ProductExpression__Group_1_1__0 ) )
                    {
                    // InternalLTLFormula.g:2539:2: ( ( rule__ProductExpression__Group_1_1__0 ) )
                    // InternalLTLFormula.g:2540:3: ( rule__ProductExpression__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProductExpressionAccess().getGroup_1_1()); 
                    }
                    // InternalLTLFormula.g:2541:3: ( rule__ProductExpression__Group_1_1__0 )
                    // InternalLTLFormula.g:2541:4: rule__ProductExpression__Group_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProductExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProductExpressionAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLTLFormula.g:2545:2: ( ( rule__ProductExpression__Group_1_2__0 ) )
                    {
                    // InternalLTLFormula.g:2545:2: ( ( rule__ProductExpression__Group_1_2__0 ) )
                    // InternalLTLFormula.g:2546:3: ( rule__ProductExpression__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getProductExpressionAccess().getGroup_1_2()); 
                    }
                    // InternalLTLFormula.g:2547:3: ( rule__ProductExpression__Group_1_2__0 )
                    // InternalLTLFormula.g:2547:4: rule__ProductExpression__Group_1_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ProductExpression__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getProductExpressionAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Alternatives_1"


    // $ANTLR start "rule__NegExpression__Alternatives"
    // InternalLTLFormula.g:2555:1: rule__NegExpression__Alternatives : ( ( ( rule__NegExpression__Group_0__0 ) ) | ( ruleTernaryOperation ) );
    public final void rule__NegExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2559:1: ( ( ( rule__NegExpression__Group_0__0 ) ) | ( ruleTernaryOperation ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==28) ) {
                alt11=1;
            }
            else if ( ((LA11_0>=RULE_STRING && LA11_0<=RULE_COMMENT_ANNOTATION)||LA11_0==21||LA11_0==32||LA11_0==51||(LA11_0>=58 && LA11_0<=61)||LA11_0==64||(LA11_0>=66 && LA11_0<=67)) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalLTLFormula.g:2560:2: ( ( rule__NegExpression__Group_0__0 ) )
                    {
                    // InternalLTLFormula.g:2560:2: ( ( rule__NegExpression__Group_0__0 ) )
                    // InternalLTLFormula.g:2561:3: ( rule__NegExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNegExpressionAccess().getGroup_0()); 
                    }
                    // InternalLTLFormula.g:2562:3: ( rule__NegExpression__Group_0__0 )
                    // InternalLTLFormula.g:2562:4: rule__NegExpression__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NegExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNegExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2566:2: ( ruleTernaryOperation )
                    {
                    // InternalLTLFormula.g:2566:2: ( ruleTernaryOperation )
                    // InternalLTLFormula.g:2567:3: ruleTernaryOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNegExpressionAccess().getTernaryOperationParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNegExpressionAccess().getTernaryOperationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NegExpression__Alternatives"


    // $ANTLR start "rule__TernaryOperation__Alternatives"
    // InternalLTLFormula.g:2576:1: rule__TernaryOperation__Alternatives : ( ( ( rule__TernaryOperation__Group_0__0 ) ) | ( ruleInitExpression ) );
    public final void rule__TernaryOperation__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2580:1: ( ( ( rule__TernaryOperation__Group_0__0 ) ) | ( ruleInitExpression ) )
            int alt12=2;
            alt12 = dfa12.predict(input);
            switch (alt12) {
                case 1 :
                    // InternalLTLFormula.g:2581:2: ( ( rule__TernaryOperation__Group_0__0 ) )
                    {
                    // InternalLTLFormula.g:2581:2: ( ( rule__TernaryOperation__Group_0__0 ) )
                    // InternalLTLFormula.g:2582:3: ( rule__TernaryOperation__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTernaryOperationAccess().getGroup_0()); 
                    }
                    // InternalLTLFormula.g:2583:3: ( rule__TernaryOperation__Group_0__0 )
                    // InternalLTLFormula.g:2583:4: rule__TernaryOperation__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TernaryOperation__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTernaryOperationAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2587:2: ( ruleInitExpression )
                    {
                    // InternalLTLFormula.g:2587:2: ( ruleInitExpression )
                    // InternalLTLFormula.g:2588:3: ruleInitExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTernaryOperationAccess().getInitExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleInitExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTernaryOperationAccess().getInitExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__Alternatives"


    // $ANTLR start "rule__AtomicValuedExpression__Alternatives"
    // InternalLTLFormula.g:2597:1: rule__AtomicValuedExpression__Alternatives : ( ( ruleIntValue ) | ( ruleFloatValue ) | ( ruleStringValue ) | ( ruleVectorValue ) | ( ruleNullValue ) | ( ( rule__AtomicValuedExpression__Group_5__0 ) ) | ( ruleAtomicExpression ) );
    public final void rule__AtomicValuedExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2601:1: ( ( ruleIntValue ) | ( ruleFloatValue ) | ( ruleStringValue ) | ( ruleVectorValue ) | ( ruleNullValue ) | ( ( rule__AtomicValuedExpression__Group_5__0 ) ) | ( ruleAtomicExpression ) )
            int alt13=7;
            alt13 = dfa13.predict(input);
            switch (alt13) {
                case 1 :
                    // InternalLTLFormula.g:2602:2: ( ruleIntValue )
                    {
                    // InternalLTLFormula.g:2602:2: ( ruleIntValue )
                    // InternalLTLFormula.g:2603:3: ruleIntValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2608:2: ( ruleFloatValue )
                    {
                    // InternalLTLFormula.g:2608:2: ( ruleFloatValue )
                    // InternalLTLFormula.g:2609:3: ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLTLFormula.g:2614:2: ( ruleStringValue )
                    {
                    // InternalLTLFormula.g:2614:2: ( ruleStringValue )
                    // InternalLTLFormula.g:2615:3: ruleStringValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLTLFormula.g:2620:2: ( ruleVectorValue )
                    {
                    // InternalLTLFormula.g:2620:2: ( ruleVectorValue )
                    // InternalLTLFormula.g:2621:3: ruleVectorValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicValuedExpressionAccess().getVectorValueParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleVectorValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicValuedExpressionAccess().getVectorValueParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLTLFormula.g:2626:2: ( ruleNullValue )
                    {
                    // InternalLTLFormula.g:2626:2: ( ruleNullValue )
                    // InternalLTLFormula.g:2627:3: ruleNullValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicValuedExpressionAccess().getNullValueParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNullValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicValuedExpressionAccess().getNullValueParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLTLFormula.g:2632:2: ( ( rule__AtomicValuedExpression__Group_5__0 ) )
                    {
                    // InternalLTLFormula.g:2632:2: ( ( rule__AtomicValuedExpression__Group_5__0 ) )
                    // InternalLTLFormula.g:2633:3: ( rule__AtomicValuedExpression__Group_5__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicValuedExpressionAccess().getGroup_5()); 
                    }
                    // InternalLTLFormula.g:2634:3: ( rule__AtomicValuedExpression__Group_5__0 )
                    // InternalLTLFormula.g:2634:4: rule__AtomicValuedExpression__Group_5__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AtomicValuedExpression__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicValuedExpressionAccess().getGroup_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalLTLFormula.g:2638:2: ( ruleAtomicExpression )
                    {
                    // InternalLTLFormula.g:2638:2: ( ruleAtomicExpression )
                    // InternalLTLFormula.g:2639:3: ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AtomicValuedExpression__Alternatives"


    // $ANTLR start "rule__ValuedObjectTestExpression__Alternatives"
    // InternalLTLFormula.g:2648:1: rule__ValuedObjectTestExpression__Alternatives : ( ( ( rule__ValuedObjectTestExpression__Group_0__0 ) ) | ( ruleValuedObjectReference ) );
    public final void rule__ValuedObjectTestExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2652:1: ( ( ( rule__ValuedObjectTestExpression__Group_0__0 ) ) | ( ruleValuedObjectReference ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==21||LA14_0==32) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_ID) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalLTLFormula.g:2653:2: ( ( rule__ValuedObjectTestExpression__Group_0__0 ) )
                    {
                    // InternalLTLFormula.g:2653:2: ( ( rule__ValuedObjectTestExpression__Group_0__0 ) )
                    // InternalLTLFormula.g:2654:3: ( rule__ValuedObjectTestExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0()); 
                    }
                    // InternalLTLFormula.g:2655:3: ( rule__ValuedObjectTestExpression__Group_0__0 )
                    // InternalLTLFormula.g:2655:4: rule__ValuedObjectTestExpression__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ValuedObjectTestExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2659:2: ( ruleValuedObjectReference )
                    {
                    // InternalLTLFormula.g:2659:2: ( ruleValuedObjectReference )
                    // InternalLTLFormula.g:2660:3: ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Alternatives"


    // $ANTLR start "rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0"
    // InternalLTLFormula.g:2669:1: rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0 : ( ( rulePreOperator ) | ( ruleValOperator ) );
    public final void rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2673:1: ( ( rulePreOperator ) | ( ruleValOperator ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==21) ) {
                alt15=1;
            }
            else if ( (LA15_0==32) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalLTLFormula.g:2674:2: ( rulePreOperator )
                    {
                    // InternalLTLFormula.g:2674:2: ( rulePreOperator )
                    // InternalLTLFormula.g:2675:3: rulePreOperator
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePreOperator();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2680:2: ( ruleValOperator )
                    {
                    // InternalLTLFormula.g:2680:2: ( ruleValOperator )
                    // InternalLTLFormula.g:2681:3: ruleValOperator
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValOperator();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0"


    // $ANTLR start "rule__ReferenceCall__Alternatives_3"
    // InternalLTLFormula.g:2690:1: rule__ReferenceCall__Alternatives_3 : ( ( ( rule__ReferenceCall__Group_3_0__0 ) ) | ( '()' ) );
    public final void rule__ReferenceCall__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2694:1: ( ( ( rule__ReferenceCall__Group_3_0__0 ) ) | ( '()' ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==51) ) {
                alt16=1;
            }
            else if ( (LA16_0==42) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalLTLFormula.g:2695:2: ( ( rule__ReferenceCall__Group_3_0__0 ) )
                    {
                    // InternalLTLFormula.g:2695:2: ( ( rule__ReferenceCall__Group_3_0__0 ) )
                    // InternalLTLFormula.g:2696:3: ( rule__ReferenceCall__Group_3_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getReferenceCallAccess().getGroup_3_0()); 
                    }
                    // InternalLTLFormula.g:2697:3: ( rule__ReferenceCall__Group_3_0__0 )
                    // InternalLTLFormula.g:2697:4: rule__ReferenceCall__Group_3_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ReferenceCall__Group_3_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getReferenceCallAccess().getGroup_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2701:2: ( '()' )
                    {
                    // InternalLTLFormula.g:2701:2: ( '()' )
                    // InternalLTLFormula.g:2702:3: '()'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getReferenceCallAccess().getLeftParenthesisRightParenthesisKeyword_3_1()); 
                    }
                    match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getReferenceCallAccess().getLeftParenthesisRightParenthesisKeyword_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Alternatives_3"


    // $ANTLR start "rule__FunctionCall__Alternatives_2"
    // InternalLTLFormula.g:2711:1: rule__FunctionCall__Alternatives_2 : ( ( ( rule__FunctionCall__Group_2_0__0 ) ) | ( '()' ) );
    public final void rule__FunctionCall__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2715:1: ( ( ( rule__FunctionCall__Group_2_0__0 ) ) | ( '()' ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==51) ) {
                alt17=1;
            }
            else if ( (LA17_0==42) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalLTLFormula.g:2716:2: ( ( rule__FunctionCall__Group_2_0__0 ) )
                    {
                    // InternalLTLFormula.g:2716:2: ( ( rule__FunctionCall__Group_2_0__0 ) )
                    // InternalLTLFormula.g:2717:3: ( rule__FunctionCall__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionCallAccess().getGroup_2_0()); 
                    }
                    // InternalLTLFormula.g:2718:3: ( rule__FunctionCall__Group_2_0__0 )
                    // InternalLTLFormula.g:2718:4: rule__FunctionCall__Group_2_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__FunctionCall__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionCallAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2722:2: ( '()' )
                    {
                    // InternalLTLFormula.g:2722:2: ( '()' )
                    // InternalLTLFormula.g:2723:3: '()'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1()); 
                    }
                    match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Alternatives_2"


    // $ANTLR start "rule__Parameter__Alternatives"
    // InternalLTLFormula.g:2732:1: rule__Parameter__Alternatives : ( ( ( rule__Parameter__Group_0__0 ) ) | ( ( rule__Parameter__ExpressionAssignment_1 ) ) );
    public final void rule__Parameter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2736:1: ( ( ( rule__Parameter__Group_0__0 ) ) | ( ( rule__Parameter__ExpressionAssignment_1 ) ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==25||LA18_0==50) ) {
                alt18=1;
            }
            else if ( ((LA18_0>=RULE_STRING && LA18_0<=RULE_COMMENT_ANNOTATION)||(LA18_0>=21 && LA18_0<=22)||LA18_0==26||LA18_0==28||LA18_0==32||LA18_0==51||(LA18_0>=58 && LA18_0<=61)||LA18_0==64||(LA18_0>=66 && LA18_0<=67)) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalLTLFormula.g:2737:2: ( ( rule__Parameter__Group_0__0 ) )
                    {
                    // InternalLTLFormula.g:2737:2: ( ( rule__Parameter__Group_0__0 ) )
                    // InternalLTLFormula.g:2738:3: ( rule__Parameter__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterAccess().getGroup_0()); 
                    }
                    // InternalLTLFormula.g:2739:3: ( rule__Parameter__Group_0__0 )
                    // InternalLTLFormula.g:2739:4: rule__Parameter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Parameter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2743:2: ( ( rule__Parameter__ExpressionAssignment_1 ) )
                    {
                    // InternalLTLFormula.g:2743:2: ( ( rule__Parameter__ExpressionAssignment_1 ) )
                    // InternalLTLFormula.g:2744:3: ( rule__Parameter__ExpressionAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterAccess().getExpressionAssignment_1()); 
                    }
                    // InternalLTLFormula.g:2745:3: ( rule__Parameter__ExpressionAssignment_1 )
                    // InternalLTLFormula.g:2745:4: rule__Parameter__ExpressionAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Parameter__ExpressionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterAccess().getExpressionAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter__Alternatives"


    // $ANTLR start "rule__VectorValue__Alternatives_1"
    // InternalLTLFormula.g:2753:1: rule__VectorValue__Alternatives_1 : ( ( ( rule__VectorValue__Group_1_0__0 ) ) | ( ( rule__VectorValue__Group_1_1__0 ) ) );
    public final void rule__VectorValue__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2757:1: ( ( ( rule__VectorValue__Group_1_0__0 ) ) | ( ( rule__VectorValue__Group_1_1__0 ) ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( ((LA19_0>=RULE_STRING && LA19_0<=RULE_ID)||(LA19_0>=RULE_FLOAT && LA19_0<=RULE_COMMENT_ANNOTATION)||(LA19_0>=21 && LA19_0<=22)||LA19_0==26||LA19_0==28||LA19_0==32||LA19_0==51||(LA19_0>=58 && LA19_0<=61)||(LA19_0>=63 && LA19_0<=64)||(LA19_0>=66 && LA19_0<=67)) ) {
                alt19=1;
            }
            else if ( (LA19_0==RULE_INT) ) {
                int LA19_2 = input.LA(2);

                if ( (LA19_2==68) ) {
                    alt19=2;
                }
                else if ( ((LA19_2>=23 && LA19_2<=25)||(LA19_2>=27 && LA19_2<=31)||(LA19_2>=33 && LA19_2<=41)||(LA19_2>=44 && LA19_2<=49)||LA19_2==54||LA19_2==62) ) {
                    alt19=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalLTLFormula.g:2758:2: ( ( rule__VectorValue__Group_1_0__0 ) )
                    {
                    // InternalLTLFormula.g:2758:2: ( ( rule__VectorValue__Group_1_0__0 ) )
                    // InternalLTLFormula.g:2759:3: ( rule__VectorValue__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVectorValueAccess().getGroup_1_0()); 
                    }
                    // InternalLTLFormula.g:2760:3: ( rule__VectorValue__Group_1_0__0 )
                    // InternalLTLFormula.g:2760:4: rule__VectorValue__Group_1_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__VectorValue__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVectorValueAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2764:2: ( ( rule__VectorValue__Group_1_1__0 ) )
                    {
                    // InternalLTLFormula.g:2764:2: ( ( rule__VectorValue__Group_1_1__0 ) )
                    // InternalLTLFormula.g:2765:3: ( rule__VectorValue__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVectorValueAccess().getGroup_1_1()); 
                    }
                    // InternalLTLFormula.g:2766:3: ( rule__VectorValue__Group_1_1__0 )
                    // InternalLTLFormula.g:2766:4: rule__VectorValue__Group_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__VectorValue__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVectorValueAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Alternatives_1"


    // $ANTLR start "rule__VectorValue__ValuesAlternatives_1_1_2_0"
    // InternalLTLFormula.g:2774:1: rule__VectorValue__ValuesAlternatives_1_1_2_0 : ( ( ruleIntValue ) | ( ruleValuedObjectReference ) );
    public final void rule__VectorValue__ValuesAlternatives_1_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2778:1: ( ( ruleIntValue ) | ( ruleValuedObjectReference ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_INT) ) {
                alt20=1;
            }
            else if ( (LA20_0==RULE_ID) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalLTLFormula.g:2779:2: ( ruleIntValue )
                    {
                    // InternalLTLFormula.g:2779:2: ( ruleIntValue )
                    // InternalLTLFormula.g:2780:3: ruleIntValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVectorValueAccess().getValuesIntValueParserRuleCall_1_1_2_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVectorValueAccess().getValuesIntValueParserRuleCall_1_1_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2785:2: ( ruleValuedObjectReference )
                    {
                    // InternalLTLFormula.g:2785:2: ( ruleValuedObjectReference )
                    // InternalLTLFormula.g:2786:3: ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVectorValueAccess().getValuesValuedObjectReferenceParserRuleCall_1_1_2_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVectorValueAccess().getValuesValuedObjectReferenceParserRuleCall_1_1_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__ValuesAlternatives_1_1_2_0"


    // $ANTLR start "rule__VectorValueMember__Alternatives"
    // InternalLTLFormula.g:2795:1: rule__VectorValueMember__Alternatives : ( ( ruleBoolExpression ) | ( ruleValuedExpression ) | ( ruleIgnoreValue ) );
    public final void rule__VectorValueMember__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2799:1: ( ( ruleBoolExpression ) | ( ruleValuedExpression ) | ( ruleIgnoreValue ) )
            int alt21=3;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // InternalLTLFormula.g:2800:2: ( ruleBoolExpression )
                    {
                    // InternalLTLFormula.g:2800:2: ( ruleBoolExpression )
                    // InternalLTLFormula.g:2801:3: ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVectorValueMemberAccess().getBoolExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVectorValueMemberAccess().getBoolExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2806:2: ( ruleValuedExpression )
                    {
                    // InternalLTLFormula.g:2806:2: ( ruleValuedExpression )
                    // InternalLTLFormula.g:2807:3: ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVectorValueMemberAccess().getValuedExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVectorValueMemberAccess().getValuedExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLTLFormula.g:2812:2: ( ruleIgnoreValue )
                    {
                    // InternalLTLFormula.g:2812:2: ( ruleIgnoreValue )
                    // InternalLTLFormula.g:2813:3: ruleIgnoreValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVectorValueMemberAccess().getIgnoreValueParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIgnoreValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVectorValueMemberAccess().getIgnoreValueParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValueMember__Alternatives"


    // $ANTLR start "rule__AnyValue__Alternatives"
    // InternalLTLFormula.g:2822:1: rule__AnyValue__Alternatives : ( ( ruleIntValue ) | ( ruleFloatValue ) | ( ruleBoolValue ) | ( ruleStringValue ) );
    public final void rule__AnyValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2826:1: ( ( ruleIntValue ) | ( ruleFloatValue ) | ( ruleBoolValue ) | ( ruleStringValue ) )
            int alt22=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt22=1;
                }
                break;
            case RULE_FLOAT:
                {
                alt22=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt22=3;
                }
                break;
            case RULE_STRING:
                {
                alt22=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalLTLFormula.g:2827:2: ( ruleIntValue )
                    {
                    // InternalLTLFormula.g:2827:2: ( ruleIntValue )
                    // InternalLTLFormula.g:2828:3: ruleIntValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnyValueAccess().getIntValueParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnyValueAccess().getIntValueParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2833:2: ( ruleFloatValue )
                    {
                    // InternalLTLFormula.g:2833:2: ( ruleFloatValue )
                    // InternalLTLFormula.g:2834:3: ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnyValueAccess().getFloatValueParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnyValueAccess().getFloatValueParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLTLFormula.g:2839:2: ( ruleBoolValue )
                    {
                    // InternalLTLFormula.g:2839:2: ( ruleBoolValue )
                    // InternalLTLFormula.g:2840:3: ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnyValueAccess().getBoolValueParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnyValueAccess().getBoolValueParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLTLFormula.g:2845:2: ( ruleStringValue )
                    {
                    // InternalLTLFormula.g:2845:2: ( ruleStringValue )
                    // InternalLTLFormula.g:2846:3: ruleStringValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnyValueAccess().getStringValueParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnyValueAccess().getStringValueParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnyValue__Alternatives"


    // $ANTLR start "rule__JsonValue__Alternatives"
    // InternalLTLFormula.g:2855:1: rule__JsonValue__Alternatives : ( ( ruleJsonObjectValue ) | ( ruleJsonArrayValue ) | ( ruleNullValue ) | ( ruleAnyValue ) );
    public final void rule__JsonValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2859:1: ( ( ruleJsonObjectValue ) | ( ruleJsonArrayValue ) | ( ruleNullValue ) | ( ruleAnyValue ) )
            int alt23=4;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt23=1;
                }
                break;
            case 56:
                {
                alt23=2;
                }
                break;
            case 64:
                {
                alt23=3;
                }
                break;
            case RULE_STRING:
            case RULE_BOOLEAN:
            case RULE_INT:
            case RULE_FLOAT:
                {
                alt23=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalLTLFormula.g:2860:2: ( ruleJsonObjectValue )
                    {
                    // InternalLTLFormula.g:2860:2: ( ruleJsonObjectValue )
                    // InternalLTLFormula.g:2861:3: ruleJsonObjectValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJsonValueAccess().getJsonObjectValueParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleJsonObjectValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJsonValueAccess().getJsonObjectValueParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2866:2: ( ruleJsonArrayValue )
                    {
                    // InternalLTLFormula.g:2866:2: ( ruleJsonArrayValue )
                    // InternalLTLFormula.g:2867:3: ruleJsonArrayValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJsonValueAccess().getJsonArrayValueParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleJsonArrayValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJsonValueAccess().getJsonArrayValueParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLTLFormula.g:2872:2: ( ruleNullValue )
                    {
                    // InternalLTLFormula.g:2872:2: ( ruleNullValue )
                    // InternalLTLFormula.g:2873:3: ruleNullValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJsonValueAccess().getNullValueParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNullValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJsonValueAccess().getNullValueParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLTLFormula.g:2878:2: ( ruleAnyValue )
                    {
                    // InternalLTLFormula.g:2878:2: ( ruleAnyValue )
                    // InternalLTLFormula.g:2879:3: ruleAnyValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJsonValueAccess().getAnyValueParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAnyValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJsonValueAccess().getAnyValueParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonValue__Alternatives"


    // $ANTLR start "rule__Annotation__Alternatives"
    // InternalLTLFormula.g:2888:1: rule__Annotation__Alternatives : ( ( superAnnotation ) | ( ruleJsonAnnotation ) );
    public final void rule__Annotation__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2892:1: ( ( superAnnotation ) | ( ruleJsonAnnotation ) )
            int alt24=2;
            alt24 = dfa24.predict(input);
            switch (alt24) {
                case 1 :
                    // InternalLTLFormula.g:2893:2: ( superAnnotation )
                    {
                    // InternalLTLFormula.g:2893:2: ( superAnnotation )
                    // InternalLTLFormula.g:2894:3: superAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationAccess().getAnnotationParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    superAnnotation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationAccess().getAnnotationParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2899:2: ( ruleJsonAnnotation )
                    {
                    // InternalLTLFormula.g:2899:2: ( ruleJsonAnnotation )
                    // InternalLTLFormula.g:2900:3: ruleJsonAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationAccess().getJsonAnnotationParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleJsonAnnotation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationAccess().getJsonAnnotationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Annotation__Alternatives"


    // $ANTLR start "superAnnotation__Alternatives"
    // InternalLTLFormula.g:2909:1: superAnnotation__Alternatives : ( ( ruleCommentAnnotation ) | ( ruleKeyStringValueAnnotation ) | ( ruleTypedKeyStringValueAnnotation ) | ( ruleTagAnnotation ) );
    public final void superAnnotation__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2913:1: ( ( ruleCommentAnnotation ) | ( ruleKeyStringValueAnnotation ) | ( ruleTypedKeyStringValueAnnotation ) | ( ruleTagAnnotation ) )
            int alt25=4;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    // InternalLTLFormula.g:2914:2: ( ruleCommentAnnotation )
                    {
                    // InternalLTLFormula.g:2914:2: ( ruleCommentAnnotation )
                    // InternalLTLFormula.g:2915:3: ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationsAnnotationAccess().getCommentAnnotationParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationsAnnotationAccess().getCommentAnnotationParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2920:2: ( ruleKeyStringValueAnnotation )
                    {
                    // InternalLTLFormula.g:2920:2: ( ruleKeyStringValueAnnotation )
                    // InternalLTLFormula.g:2921:3: ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationsAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationsAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLTLFormula.g:2926:2: ( ruleTypedKeyStringValueAnnotation )
                    {
                    // InternalLTLFormula.g:2926:2: ( ruleTypedKeyStringValueAnnotation )
                    // InternalLTLFormula.g:2927:3: ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationsAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationsAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLTLFormula.g:2932:2: ( ruleTagAnnotation )
                    {
                    // InternalLTLFormula.g:2932:2: ( ruleTagAnnotation )
                    // InternalLTLFormula.g:2933:3: ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationsAnnotationAccess().getTagAnnotationParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationsAnnotationAccess().getTagAnnotationParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "superAnnotation__Alternatives"


    // $ANTLR start "superPragma__Alternatives"
    // InternalLTLFormula.g:2942:1: superPragma__Alternatives : ( ( ruleStringPragma ) | ( rulePragmaTag ) );
    public final void superPragma__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2946:1: ( ( ruleStringPragma ) | ( rulePragmaTag ) )
            int alt26=2;
            alt26 = dfa26.predict(input);
            switch (alt26) {
                case 1 :
                    // InternalLTLFormula.g:2947:2: ( ruleStringPragma )
                    {
                    // InternalLTLFormula.g:2947:2: ( ruleStringPragma )
                    // InternalLTLFormula.g:2948:3: ruleStringPragma
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationsPragmaAccess().getStringPragmaParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringPragma();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationsPragmaAccess().getStringPragmaParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2953:2: ( rulePragmaTag )
                    {
                    // InternalLTLFormula.g:2953:2: ( rulePragmaTag )
                    // InternalLTLFormula.g:2954:3: rulePragmaTag
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationsPragmaAccess().getPragmaTagParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePragmaTag();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationsPragmaAccess().getPragmaTagParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "superPragma__Alternatives"


    // $ANTLR start "superValuedAnnotation__Alternatives"
    // InternalLTLFormula.g:2963:1: superValuedAnnotation__Alternatives : ( ( ruleCommentAnnotation ) | ( ruleKeyStringValueAnnotation ) | ( ruleTypedKeyStringValueAnnotation ) );
    public final void superValuedAnnotation__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2967:1: ( ( ruleCommentAnnotation ) | ( ruleKeyStringValueAnnotation ) | ( ruleTypedKeyStringValueAnnotation ) )
            int alt27=3;
            alt27 = dfa27.predict(input);
            switch (alt27) {
                case 1 :
                    // InternalLTLFormula.g:2968:2: ( ruleCommentAnnotation )
                    {
                    // InternalLTLFormula.g:2968:2: ( ruleCommentAnnotation )
                    // InternalLTLFormula.g:2969:3: ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationsValuedAnnotationAccess().getCommentAnnotationParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationsValuedAnnotationAccess().getCommentAnnotationParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:2974:2: ( ruleKeyStringValueAnnotation )
                    {
                    // InternalLTLFormula.g:2974:2: ( ruleKeyStringValueAnnotation )
                    // InternalLTLFormula.g:2975:3: ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationsValuedAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationsValuedAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLTLFormula.g:2980:2: ( ruleTypedKeyStringValueAnnotation )
                    {
                    // InternalLTLFormula.g:2980:2: ( ruleTypedKeyStringValueAnnotation )
                    // InternalLTLFormula.g:2981:3: ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationsValuedAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationsValuedAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "superValuedAnnotation__Alternatives"


    // $ANTLR start "superQuotedStringAnnotation__Alternatives"
    // InternalLTLFormula.g:2990:1: superQuotedStringAnnotation__Alternatives : ( ( ruleCommentAnnotation ) | ( ruleQuotedKeyStringValueAnnotation ) | ( ruleQuotedTypedKeyStringValueAnnotation ) | ( ruleTagAnnotation ) );
    public final void superQuotedStringAnnotation__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:2994:1: ( ( ruleCommentAnnotation ) | ( ruleQuotedKeyStringValueAnnotation ) | ( ruleQuotedTypedKeyStringValueAnnotation ) | ( ruleTagAnnotation ) )
            int alt28=4;
            alt28 = dfa28.predict(input);
            switch (alt28) {
                case 1 :
                    // InternalLTLFormula.g:2995:2: ( ruleCommentAnnotation )
                    {
                    // InternalLTLFormula.g:2995:2: ( ruleCommentAnnotation )
                    // InternalLTLFormula.g:2996:3: ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:3001:2: ( ruleQuotedKeyStringValueAnnotation )
                    {
                    // InternalLTLFormula.g:3001:2: ( ruleQuotedKeyStringValueAnnotation )
                    // InternalLTLFormula.g:3002:3: ruleQuotedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleQuotedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLTLFormula.g:3007:2: ( ruleQuotedTypedKeyStringValueAnnotation )
                    {
                    // InternalLTLFormula.g:3007:2: ( ruleQuotedTypedKeyStringValueAnnotation )
                    // InternalLTLFormula.g:3008:3: ruleQuotedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleQuotedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLTLFormula.g:3013:2: ( ruleTagAnnotation )
                    {
                    // InternalLTLFormula.g:3013:2: ( ruleTagAnnotation )
                    // InternalLTLFormula.g:3014:3: ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "superQuotedStringAnnotation__Alternatives"


    // $ANTLR start "rule__EStringBoolean__Alternatives"
    // InternalLTLFormula.g:3023:1: rule__EStringBoolean__Alternatives : ( ( RULE_STRING ) | ( ruleExtendedID ) | ( RULE_BOOLEAN ) );
    public final void rule__EStringBoolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3027:1: ( ( RULE_STRING ) | ( ruleExtendedID ) | ( RULE_BOOLEAN ) )
            int alt29=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt29=1;
                }
                break;
            case RULE_ID:
                {
                alt29=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt29=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalLTLFormula.g:3028:2: ( RULE_STRING )
                    {
                    // InternalLTLFormula.g:3028:2: ( RULE_STRING )
                    // InternalLTLFormula.g:3029:3: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0()); 
                    }
                    match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:3034:2: ( ruleExtendedID )
                    {
                    // InternalLTLFormula.g:3034:2: ( ruleExtendedID )
                    // InternalLTLFormula.g:3035:3: ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLTLFormula.g:3040:2: ( RULE_BOOLEAN )
                    {
                    // InternalLTLFormula.g:3040:2: ( RULE_BOOLEAN )
                    // InternalLTLFormula.g:3041:3: RULE_BOOLEAN
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2()); 
                    }
                    match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EStringBoolean__Alternatives"


    // $ANTLR start "rule__EStringAllTypes__Alternatives"
    // InternalLTLFormula.g:3050:1: rule__EStringAllTypes__Alternatives : ( ( RULE_STRING ) | ( ruleExtendedID ) | ( RULE_BOOLEAN ) | ( ruleInteger ) | ( ruleFloateger ) );
    public final void rule__EStringAllTypes__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3054:1: ( ( RULE_STRING ) | ( ruleExtendedID ) | ( RULE_BOOLEAN ) | ( ruleInteger ) | ( ruleFloateger ) )
            int alt30=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt30=1;
                }
                break;
            case RULE_ID:
                {
                alt30=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt30=3;
                }
                break;
            case 28:
                {
                int LA30_4 = input.LA(2);

                if ( (LA30_4==RULE_INT) ) {
                    alt30=4;
                }
                else if ( (LA30_4==RULE_FLOAT) ) {
                    alt30=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                alt30=4;
                }
                break;
            case RULE_FLOAT:
                {
                alt30=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalLTLFormula.g:3055:2: ( RULE_STRING )
                    {
                    // InternalLTLFormula.g:3055:2: ( RULE_STRING )
                    // InternalLTLFormula.g:3056:3: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0()); 
                    }
                    match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:3061:2: ( ruleExtendedID )
                    {
                    // InternalLTLFormula.g:3061:2: ( ruleExtendedID )
                    // InternalLTLFormula.g:3062:3: ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLTLFormula.g:3067:2: ( RULE_BOOLEAN )
                    {
                    // InternalLTLFormula.g:3067:2: ( RULE_BOOLEAN )
                    // InternalLTLFormula.g:3068:3: RULE_BOOLEAN
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2()); 
                    }
                    match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLTLFormula.g:3073:2: ( ruleInteger )
                    {
                    // InternalLTLFormula.g:3073:2: ( ruleInteger )
                    // InternalLTLFormula.g:3074:3: ruleInteger
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleInteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLTLFormula.g:3079:2: ( ruleFloateger )
                    {
                    // InternalLTLFormula.g:3079:2: ( ruleFloateger )
                    // InternalLTLFormula.g:3080:3: ruleFloateger
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFloateger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EStringAllTypes__Alternatives"


    // $ANTLR start "rule__ExtendedID__Alternatives_1_0"
    // InternalLTLFormula.g:3089:1: rule__ExtendedID__Alternatives_1_0 : ( ( '.' ) | ( '-' ) );
    public final void rule__ExtendedID__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3093:1: ( ( '.' ) | ( '-' ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==43) ) {
                alt31=1;
            }
            else if ( (LA31_0==28) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalLTLFormula.g:3094:2: ( '.' )
                    {
                    // InternalLTLFormula.g:3094:2: ( '.' )
                    // InternalLTLFormula.g:3095:3: '.'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0_0()); 
                    }
                    match(input,43,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:3100:2: ( '-' )
                    {
                    // InternalLTLFormula.g:3100:2: ( '-' )
                    // InternalLTLFormula.g:3101:3: '-'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExtendedIDAccess().getHyphenMinusKeyword_1_0_1()); 
                    }
                    match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExtendedIDAccess().getHyphenMinusKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtendedID__Alternatives_1_0"


    // $ANTLR start "rule__CompareOperator__Alternatives"
    // InternalLTLFormula.g:3110:1: rule__CompareOperator__Alternatives : ( ( ( '==' ) ) | ( ( '<' ) ) | ( ( '<=' ) ) | ( ( '>' ) ) | ( ( '>=' ) ) | ( ( '!=' ) ) );
    public final void rule__CompareOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3114:1: ( ( ( '==' ) ) | ( ( '<' ) ) | ( ( '<=' ) ) | ( ( '>' ) ) | ( ( '>=' ) ) | ( ( '!=' ) ) )
            int alt32=6;
            switch ( input.LA(1) ) {
            case 44:
                {
                alt32=1;
                }
                break;
            case 45:
                {
                alt32=2;
                }
                break;
            case 46:
                {
                alt32=3;
                }
                break;
            case 47:
                {
                alt32=4;
                }
                break;
            case 48:
                {
                alt32=5;
                }
                break;
            case 49:
                {
                alt32=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }

            switch (alt32) {
                case 1 :
                    // InternalLTLFormula.g:3115:2: ( ( '==' ) )
                    {
                    // InternalLTLFormula.g:3115:2: ( ( '==' ) )
                    // InternalLTLFormula.g:3116:3: ( '==' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }
                    // InternalLTLFormula.g:3117:3: ( '==' )
                    // InternalLTLFormula.g:3117:4: '=='
                    {
                    match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:3121:2: ( ( '<' ) )
                    {
                    // InternalLTLFormula.g:3121:2: ( ( '<' ) )
                    // InternalLTLFormula.g:3122:3: ( '<' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1()); 
                    }
                    // InternalLTLFormula.g:3123:3: ( '<' )
                    // InternalLTLFormula.g:3123:4: '<'
                    {
                    match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLTLFormula.g:3127:2: ( ( '<=' ) )
                    {
                    // InternalLTLFormula.g:3127:2: ( ( '<=' ) )
                    // InternalLTLFormula.g:3128:3: ( '<=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); 
                    }
                    // InternalLTLFormula.g:3129:3: ( '<=' )
                    // InternalLTLFormula.g:3129:4: '<='
                    {
                    match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLTLFormula.g:3133:2: ( ( '>' ) )
                    {
                    // InternalLTLFormula.g:3133:2: ( ( '>' ) )
                    // InternalLTLFormula.g:3134:3: ( '>' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3()); 
                    }
                    // InternalLTLFormula.g:3135:3: ( '>' )
                    // InternalLTLFormula.g:3135:4: '>'
                    {
                    match(input,47,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLTLFormula.g:3139:2: ( ( '>=' ) )
                    {
                    // InternalLTLFormula.g:3139:2: ( ( '>=' ) )
                    // InternalLTLFormula.g:3140:3: ( '>=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); 
                    }
                    // InternalLTLFormula.g:3141:3: ( '>=' )
                    // InternalLTLFormula.g:3141:4: '>='
                    {
                    match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLTLFormula.g:3145:2: ( ( '!=' ) )
                    {
                    // InternalLTLFormula.g:3145:2: ( ( '!=' ) )
                    // InternalLTLFormula.g:3146:3: ( '!=' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5()); 
                    }
                    // InternalLTLFormula.g:3147:3: ( '!=' )
                    // InternalLTLFormula.g:3147:4: '!='
                    {
                    match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperator__Alternatives"


    // $ANTLR start "rule__ParameterAccessType__Alternatives"
    // InternalLTLFormula.g:3155:1: rule__ParameterAccessType__Alternatives : ( ( ( '&' ) ) | ( ( '!&' ) ) );
    public final void rule__ParameterAccessType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3159:1: ( ( ( '&' ) ) | ( ( '!&' ) ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==25) ) {
                alt33=1;
            }
            else if ( (LA33_0==50) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalLTLFormula.g:3160:2: ( ( '&' ) )
                    {
                    // InternalLTLFormula.g:3160:2: ( ( '&' ) )
                    // InternalLTLFormula.g:3161:3: ( '&' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterAccessTypeAccess().getCALL_BY_REFERENCEEnumLiteralDeclaration_0()); 
                    }
                    // InternalLTLFormula.g:3162:3: ( '&' )
                    // InternalLTLFormula.g:3162:4: '&'
                    {
                    match(input,25,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterAccessTypeAccess().getCALL_BY_REFERENCEEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLTLFormula.g:3166:2: ( ( '!&' ) )
                    {
                    // InternalLTLFormula.g:3166:2: ( ( '!&' ) )
                    // InternalLTLFormula.g:3167:3: ( '!&' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getParameterAccessTypeAccess().getPURE_OUTPUTEnumLiteralDeclaration_1()); 
                    }
                    // InternalLTLFormula.g:3168:3: ( '!&' )
                    // InternalLTLFormula.g:3168:4: '!&'
                    {
                    match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getParameterAccessTypeAccess().getPURE_OUTPUTEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterAccessType__Alternatives"


    // $ANTLR start "rule__LTLExpression__Group_0__0"
    // InternalLTLFormula.g:3176:1: rule__LTLExpression__Group_0__0 : rule__LTLExpression__Group_0__0__Impl rule__LTLExpression__Group_0__1 ;
    public final void rule__LTLExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3180:1: ( rule__LTLExpression__Group_0__0__Impl rule__LTLExpression__Group_0__1 )
            // InternalLTLFormula.g:3181:2: rule__LTLExpression__Group_0__0__Impl rule__LTLExpression__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__LTLExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_0__0"


    // $ANTLR start "rule__LTLExpression__Group_0__0__Impl"
    // InternalLTLFormula.g:3188:1: rule__LTLExpression__Group_0__0__Impl : ( () ) ;
    public final void rule__LTLExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3192:1: ( ( () ) )
            // InternalLTLFormula.g:3193:1: ( () )
            {
            // InternalLTLFormula.g:3193:1: ( () )
            // InternalLTLFormula.g:3194:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getLTLExpressionAction_0_0()); 
            }
            // InternalLTLFormula.g:3195:2: ()
            // InternalLTLFormula.g:3195:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getLTLExpressionAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_0__0__Impl"


    // $ANTLR start "rule__LTLExpression__Group_0__1"
    // InternalLTLFormula.g:3203:1: rule__LTLExpression__Group_0__1 : rule__LTLExpression__Group_0__1__Impl rule__LTLExpression__Group_0__2 ;
    public final void rule__LTLExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3207:1: ( rule__LTLExpression__Group_0__1__Impl rule__LTLExpression__Group_0__2 )
            // InternalLTLFormula.g:3208:2: rule__LTLExpression__Group_0__1__Impl rule__LTLExpression__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__LTLExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_0__1"


    // $ANTLR start "rule__LTLExpression__Group_0__1__Impl"
    // InternalLTLFormula.g:3215:1: rule__LTLExpression__Group_0__1__Impl : ( ( rule__LTLExpression__OperatorAssignment_0_1 ) ) ;
    public final void rule__LTLExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3219:1: ( ( ( rule__LTLExpression__OperatorAssignment_0_1 ) ) )
            // InternalLTLFormula.g:3220:1: ( ( rule__LTLExpression__OperatorAssignment_0_1 ) )
            {
            // InternalLTLFormula.g:3220:1: ( ( rule__LTLExpression__OperatorAssignment_0_1 ) )
            // InternalLTLFormula.g:3221:2: ( rule__LTLExpression__OperatorAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getOperatorAssignment_0_1()); 
            }
            // InternalLTLFormula.g:3222:2: ( rule__LTLExpression__OperatorAssignment_0_1 )
            // InternalLTLFormula.g:3222:3: rule__LTLExpression__OperatorAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__OperatorAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getOperatorAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_0__1__Impl"


    // $ANTLR start "rule__LTLExpression__Group_0__2"
    // InternalLTLFormula.g:3230:1: rule__LTLExpression__Group_0__2 : rule__LTLExpression__Group_0__2__Impl rule__LTLExpression__Group_0__3 ;
    public final void rule__LTLExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3234:1: ( rule__LTLExpression__Group_0__2__Impl rule__LTLExpression__Group_0__3 )
            // InternalLTLFormula.g:3235:2: rule__LTLExpression__Group_0__2__Impl rule__LTLExpression__Group_0__3
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__LTLExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_0__2"


    // $ANTLR start "rule__LTLExpression__Group_0__2__Impl"
    // InternalLTLFormula.g:3242:1: rule__LTLExpression__Group_0__2__Impl : ( '(' ) ;
    public final void rule__LTLExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3246:1: ( ( '(' ) )
            // InternalLTLFormula.g:3247:1: ( '(' )
            {
            // InternalLTLFormula.g:3247:1: ( '(' )
            // InternalLTLFormula.g:3248:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getLeftParenthesisKeyword_0_2()); 
            }
            match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getLeftParenthesisKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_0__2__Impl"


    // $ANTLR start "rule__LTLExpression__Group_0__3"
    // InternalLTLFormula.g:3257:1: rule__LTLExpression__Group_0__3 : rule__LTLExpression__Group_0__3__Impl rule__LTLExpression__Group_0__4 ;
    public final void rule__LTLExpression__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3261:1: ( rule__LTLExpression__Group_0__3__Impl rule__LTLExpression__Group_0__4 )
            // InternalLTLFormula.g:3262:2: rule__LTLExpression__Group_0__3__Impl rule__LTLExpression__Group_0__4
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__LTLExpression__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_0__3"


    // $ANTLR start "rule__LTLExpression__Group_0__3__Impl"
    // InternalLTLFormula.g:3269:1: rule__LTLExpression__Group_0__3__Impl : ( ( rule__LTLExpression__SubExpressionsAssignment_0_3 ) ) ;
    public final void rule__LTLExpression__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3273:1: ( ( ( rule__LTLExpression__SubExpressionsAssignment_0_3 ) ) )
            // InternalLTLFormula.g:3274:1: ( ( rule__LTLExpression__SubExpressionsAssignment_0_3 ) )
            {
            // InternalLTLFormula.g:3274:1: ( ( rule__LTLExpression__SubExpressionsAssignment_0_3 ) )
            // InternalLTLFormula.g:3275:2: ( rule__LTLExpression__SubExpressionsAssignment_0_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getSubExpressionsAssignment_0_3()); 
            }
            // InternalLTLFormula.g:3276:2: ( rule__LTLExpression__SubExpressionsAssignment_0_3 )
            // InternalLTLFormula.g:3276:3: rule__LTLExpression__SubExpressionsAssignment_0_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__SubExpressionsAssignment_0_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getSubExpressionsAssignment_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_0__3__Impl"


    // $ANTLR start "rule__LTLExpression__Group_0__4"
    // InternalLTLFormula.g:3284:1: rule__LTLExpression__Group_0__4 : rule__LTLExpression__Group_0__4__Impl ;
    public final void rule__LTLExpression__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3288:1: ( rule__LTLExpression__Group_0__4__Impl )
            // InternalLTLFormula.g:3289:2: rule__LTLExpression__Group_0__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_0__4"


    // $ANTLR start "rule__LTLExpression__Group_0__4__Impl"
    // InternalLTLFormula.g:3295:1: rule__LTLExpression__Group_0__4__Impl : ( ')' ) ;
    public final void rule__LTLExpression__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3299:1: ( ( ')' ) )
            // InternalLTLFormula.g:3300:1: ( ')' )
            {
            // InternalLTLFormula.g:3300:1: ( ')' )
            // InternalLTLFormula.g:3301:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getRightParenthesisKeyword_0_4()); 
            }
            match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getRightParenthesisKeyword_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_0__4__Impl"


    // $ANTLR start "rule__LTLExpression__Group_1__0"
    // InternalLTLFormula.g:3311:1: rule__LTLExpression__Group_1__0 : rule__LTLExpression__Group_1__0__Impl rule__LTLExpression__Group_1__1 ;
    public final void rule__LTLExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3315:1: ( rule__LTLExpression__Group_1__0__Impl rule__LTLExpression__Group_1__1 )
            // InternalLTLFormula.g:3316:2: rule__LTLExpression__Group_1__0__Impl rule__LTLExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__LTLExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1__0"


    // $ANTLR start "rule__LTLExpression__Group_1__0__Impl"
    // InternalLTLFormula.g:3323:1: rule__LTLExpression__Group_1__0__Impl : ( ruleBoolExpression ) ;
    public final void rule__LTLExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3327:1: ( ( ruleBoolExpression ) )
            // InternalLTLFormula.g:3328:1: ( ruleBoolExpression )
            {
            // InternalLTLFormula.g:3328:1: ( ruleBoolExpression )
            // InternalLTLFormula.g:3329:2: ruleBoolExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getBoolExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getBoolExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1__0__Impl"


    // $ANTLR start "rule__LTLExpression__Group_1__1"
    // InternalLTLFormula.g:3338:1: rule__LTLExpression__Group_1__1 : rule__LTLExpression__Group_1__1__Impl ;
    public final void rule__LTLExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3342:1: ( rule__LTLExpression__Group_1__1__Impl )
            // InternalLTLFormula.g:3343:2: rule__LTLExpression__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1__1"


    // $ANTLR start "rule__LTLExpression__Group_1__1__Impl"
    // InternalLTLFormula.g:3349:1: rule__LTLExpression__Group_1__1__Impl : ( ( rule__LTLExpression__Group_1_1__0 )? ) ;
    public final void rule__LTLExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3353:1: ( ( ( rule__LTLExpression__Group_1_1__0 )? ) )
            // InternalLTLFormula.g:3354:1: ( ( rule__LTLExpression__Group_1_1__0 )? )
            {
            // InternalLTLFormula.g:3354:1: ( ( rule__LTLExpression__Group_1_1__0 )? )
            // InternalLTLFormula.g:3355:2: ( rule__LTLExpression__Group_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getGroup_1_1()); 
            }
            // InternalLTLFormula.g:3356:2: ( rule__LTLExpression__Group_1_1__0 )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==20) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalLTLFormula.g:3356:3: rule__LTLExpression__Group_1_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LTLExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1__1__Impl"


    // $ANTLR start "rule__LTLExpression__Group_1_1__0"
    // InternalLTLFormula.g:3365:1: rule__LTLExpression__Group_1_1__0 : rule__LTLExpression__Group_1_1__0__Impl rule__LTLExpression__Group_1_1__1 ;
    public final void rule__LTLExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3369:1: ( rule__LTLExpression__Group_1_1__0__Impl rule__LTLExpression__Group_1_1__1 )
            // InternalLTLFormula.g:3370:2: rule__LTLExpression__Group_1_1__0__Impl rule__LTLExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__LTLExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1__0"


    // $ANTLR start "rule__LTLExpression__Group_1_1__0__Impl"
    // InternalLTLFormula.g:3377:1: rule__LTLExpression__Group_1_1__0__Impl : ( () ) ;
    public final void rule__LTLExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3381:1: ( ( () ) )
            // InternalLTLFormula.g:3382:1: ( () )
            {
            // InternalLTLFormula.g:3382:1: ( () )
            // InternalLTLFormula.g:3383:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0()); 
            }
            // InternalLTLFormula.g:3384:2: ()
            // InternalLTLFormula.g:3384:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__LTLExpression__Group_1_1__1"
    // InternalLTLFormula.g:3392:1: rule__LTLExpression__Group_1_1__1 : rule__LTLExpression__Group_1_1__1__Impl rule__LTLExpression__Group_1_1__2 ;
    public final void rule__LTLExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3396:1: ( rule__LTLExpression__Group_1_1__1__Impl rule__LTLExpression__Group_1_1__2 )
            // InternalLTLFormula.g:3397:2: rule__LTLExpression__Group_1_1__1__Impl rule__LTLExpression__Group_1_1__2
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__LTLExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1__1"


    // $ANTLR start "rule__LTLExpression__Group_1_1__1__Impl"
    // InternalLTLFormula.g:3404:1: rule__LTLExpression__Group_1_1__1__Impl : ( ( rule__LTLExpression__Group_1_1_1__0 ) ) ;
    public final void rule__LTLExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3408:1: ( ( ( rule__LTLExpression__Group_1_1_1__0 ) ) )
            // InternalLTLFormula.g:3409:1: ( ( rule__LTLExpression__Group_1_1_1__0 ) )
            {
            // InternalLTLFormula.g:3409:1: ( ( rule__LTLExpression__Group_1_1_1__0 ) )
            // InternalLTLFormula.g:3410:2: ( rule__LTLExpression__Group_1_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getGroup_1_1_1()); 
            }
            // InternalLTLFormula.g:3411:2: ( rule__LTLExpression__Group_1_1_1__0 )
            // InternalLTLFormula.g:3411:3: rule__LTLExpression__Group_1_1_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_1_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getGroup_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__LTLExpression__Group_1_1__2"
    // InternalLTLFormula.g:3419:1: rule__LTLExpression__Group_1_1__2 : rule__LTLExpression__Group_1_1__2__Impl ;
    public final void rule__LTLExpression__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3423:1: ( rule__LTLExpression__Group_1_1__2__Impl )
            // InternalLTLFormula.g:3424:2: rule__LTLExpression__Group_1_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1__2"


    // $ANTLR start "rule__LTLExpression__Group_1_1__2__Impl"
    // InternalLTLFormula.g:3430:1: rule__LTLExpression__Group_1_1__2__Impl : ( ( rule__LTLExpression__Group_1_1_2__0 )* ) ;
    public final void rule__LTLExpression__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3434:1: ( ( ( rule__LTLExpression__Group_1_1_2__0 )* ) )
            // InternalLTLFormula.g:3435:1: ( ( rule__LTLExpression__Group_1_1_2__0 )* )
            {
            // InternalLTLFormula.g:3435:1: ( ( rule__LTLExpression__Group_1_1_2__0 )* )
            // InternalLTLFormula.g:3436:2: ( rule__LTLExpression__Group_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getGroup_1_1_2()); 
            }
            // InternalLTLFormula.g:3437:2: ( rule__LTLExpression__Group_1_1_2__0 )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==20) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalLTLFormula.g:3437:3: rule__LTLExpression__Group_1_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_8);
            	    rule__LTLExpression__Group_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getGroup_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1__2__Impl"


    // $ANTLR start "rule__LTLExpression__Group_1_1_1__0"
    // InternalLTLFormula.g:3446:1: rule__LTLExpression__Group_1_1_1__0 : rule__LTLExpression__Group_1_1_1__0__Impl rule__LTLExpression__Group_1_1_1__1 ;
    public final void rule__LTLExpression__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3450:1: ( rule__LTLExpression__Group_1_1_1__0__Impl rule__LTLExpression__Group_1_1_1__1 )
            // InternalLTLFormula.g:3451:2: rule__LTLExpression__Group_1_1_1__0__Impl rule__LTLExpression__Group_1_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__LTLExpression__Group_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1_1__0"


    // $ANTLR start "rule__LTLExpression__Group_1_1_1__0__Impl"
    // InternalLTLFormula.g:3458:1: rule__LTLExpression__Group_1_1_1__0__Impl : ( ( rule__LTLExpression__OperatorAssignment_1_1_1_0 ) ) ;
    public final void rule__LTLExpression__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3462:1: ( ( ( rule__LTLExpression__OperatorAssignment_1_1_1_0 ) ) )
            // InternalLTLFormula.g:3463:1: ( ( rule__LTLExpression__OperatorAssignment_1_1_1_0 ) )
            {
            // InternalLTLFormula.g:3463:1: ( ( rule__LTLExpression__OperatorAssignment_1_1_1_0 ) )
            // InternalLTLFormula.g:3464:2: ( rule__LTLExpression__OperatorAssignment_1_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getOperatorAssignment_1_1_1_0()); 
            }
            // InternalLTLFormula.g:3465:2: ( rule__LTLExpression__OperatorAssignment_1_1_1_0 )
            // InternalLTLFormula.g:3465:3: rule__LTLExpression__OperatorAssignment_1_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__OperatorAssignment_1_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getOperatorAssignment_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__LTLExpression__Group_1_1_1__1"
    // InternalLTLFormula.g:3473:1: rule__LTLExpression__Group_1_1_1__1 : rule__LTLExpression__Group_1_1_1__1__Impl ;
    public final void rule__LTLExpression__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3477:1: ( rule__LTLExpression__Group_1_1_1__1__Impl )
            // InternalLTLFormula.g:3478:2: rule__LTLExpression__Group_1_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1_1__1"


    // $ANTLR start "rule__LTLExpression__Group_1_1_1__1__Impl"
    // InternalLTLFormula.g:3484:1: rule__LTLExpression__Group_1_1_1__1__Impl : ( ( rule__LTLExpression__SubExpressionsAssignment_1_1_1_1 ) ) ;
    public final void rule__LTLExpression__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3488:1: ( ( ( rule__LTLExpression__SubExpressionsAssignment_1_1_1_1 ) ) )
            // InternalLTLFormula.g:3489:1: ( ( rule__LTLExpression__SubExpressionsAssignment_1_1_1_1 ) )
            {
            // InternalLTLFormula.g:3489:1: ( ( rule__LTLExpression__SubExpressionsAssignment_1_1_1_1 ) )
            // InternalLTLFormula.g:3490:2: ( rule__LTLExpression__SubExpressionsAssignment_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getSubExpressionsAssignment_1_1_1_1()); 
            }
            // InternalLTLFormula.g:3491:2: ( rule__LTLExpression__SubExpressionsAssignment_1_1_1_1 )
            // InternalLTLFormula.g:3491:3: rule__LTLExpression__SubExpressionsAssignment_1_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__SubExpressionsAssignment_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getSubExpressionsAssignment_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__LTLExpression__Group_1_1_2__0"
    // InternalLTLFormula.g:3500:1: rule__LTLExpression__Group_1_1_2__0 : rule__LTLExpression__Group_1_1_2__0__Impl rule__LTLExpression__Group_1_1_2__1 ;
    public final void rule__LTLExpression__Group_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3504:1: ( rule__LTLExpression__Group_1_1_2__0__Impl rule__LTLExpression__Group_1_1_2__1 )
            // InternalLTLFormula.g:3505:2: rule__LTLExpression__Group_1_1_2__0__Impl rule__LTLExpression__Group_1_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__LTLExpression__Group_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1_2__0"


    // $ANTLR start "rule__LTLExpression__Group_1_1_2__0__Impl"
    // InternalLTLFormula.g:3512:1: rule__LTLExpression__Group_1_1_2__0__Impl : ( 'U' ) ;
    public final void rule__LTLExpression__Group_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3516:1: ( ( 'U' ) )
            // InternalLTLFormula.g:3517:1: ( 'U' )
            {
            // InternalLTLFormula.g:3517:1: ( 'U' )
            // InternalLTLFormula.g:3518:2: 'U'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getUKeyword_1_1_2_0()); 
            }
            match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getUKeyword_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1_2__0__Impl"


    // $ANTLR start "rule__LTLExpression__Group_1_1_2__1"
    // InternalLTLFormula.g:3527:1: rule__LTLExpression__Group_1_1_2__1 : rule__LTLExpression__Group_1_1_2__1__Impl rule__LTLExpression__Group_1_1_2__2 ;
    public final void rule__LTLExpression__Group_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3531:1: ( rule__LTLExpression__Group_1_1_2__1__Impl rule__LTLExpression__Group_1_1_2__2 )
            // InternalLTLFormula.g:3532:2: rule__LTLExpression__Group_1_1_2__1__Impl rule__LTLExpression__Group_1_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__LTLExpression__Group_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_1_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1_2__1"


    // $ANTLR start "rule__LTLExpression__Group_1_1_2__1__Impl"
    // InternalLTLFormula.g:3539:1: rule__LTLExpression__Group_1_1_2__1__Impl : ( '(' ) ;
    public final void rule__LTLExpression__Group_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3543:1: ( ( '(' ) )
            // InternalLTLFormula.g:3544:1: ( '(' )
            {
            // InternalLTLFormula.g:3544:1: ( '(' )
            // InternalLTLFormula.g:3545:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getLeftParenthesisKeyword_1_1_2_1()); 
            }
            match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getLeftParenthesisKeyword_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1_2__1__Impl"


    // $ANTLR start "rule__LTLExpression__Group_1_1_2__2"
    // InternalLTLFormula.g:3554:1: rule__LTLExpression__Group_1_1_2__2 : rule__LTLExpression__Group_1_1_2__2__Impl rule__LTLExpression__Group_1_1_2__3 ;
    public final void rule__LTLExpression__Group_1_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3558:1: ( rule__LTLExpression__Group_1_1_2__2__Impl rule__LTLExpression__Group_1_1_2__3 )
            // InternalLTLFormula.g:3559:2: rule__LTLExpression__Group_1_1_2__2__Impl rule__LTLExpression__Group_1_1_2__3
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__LTLExpression__Group_1_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_1_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1_2__2"


    // $ANTLR start "rule__LTLExpression__Group_1_1_2__2__Impl"
    // InternalLTLFormula.g:3566:1: rule__LTLExpression__Group_1_1_2__2__Impl : ( ( rule__LTLExpression__SubExpressionsAssignment_1_1_2_2 ) ) ;
    public final void rule__LTLExpression__Group_1_1_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3570:1: ( ( ( rule__LTLExpression__SubExpressionsAssignment_1_1_2_2 ) ) )
            // InternalLTLFormula.g:3571:1: ( ( rule__LTLExpression__SubExpressionsAssignment_1_1_2_2 ) )
            {
            // InternalLTLFormula.g:3571:1: ( ( rule__LTLExpression__SubExpressionsAssignment_1_1_2_2 ) )
            // InternalLTLFormula.g:3572:2: ( rule__LTLExpression__SubExpressionsAssignment_1_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getSubExpressionsAssignment_1_1_2_2()); 
            }
            // InternalLTLFormula.g:3573:2: ( rule__LTLExpression__SubExpressionsAssignment_1_1_2_2 )
            // InternalLTLFormula.g:3573:3: rule__LTLExpression__SubExpressionsAssignment_1_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__SubExpressionsAssignment_1_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getSubExpressionsAssignment_1_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1_2__2__Impl"


    // $ANTLR start "rule__LTLExpression__Group_1_1_2__3"
    // InternalLTLFormula.g:3581:1: rule__LTLExpression__Group_1_1_2__3 : rule__LTLExpression__Group_1_1_2__3__Impl ;
    public final void rule__LTLExpression__Group_1_1_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3585:1: ( rule__LTLExpression__Group_1_1_2__3__Impl )
            // InternalLTLFormula.g:3586:2: rule__LTLExpression__Group_1_1_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__Group_1_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1_2__3"


    // $ANTLR start "rule__LTLExpression__Group_1_1_2__3__Impl"
    // InternalLTLFormula.g:3592:1: rule__LTLExpression__Group_1_1_2__3__Impl : ( ')' ) ;
    public final void rule__LTLExpression__Group_1_1_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3596:1: ( ( ')' ) )
            // InternalLTLFormula.g:3597:1: ( ')' )
            {
            // InternalLTLFormula.g:3597:1: ( ')' )
            // InternalLTLFormula.g:3598:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getRightParenthesisKeyword_1_1_2_3()); 
            }
            match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getRightParenthesisKeyword_1_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__Group_1_1_2__3__Impl"


    // $ANTLR start "rule__AtomicExpression__Group_1__0"
    // InternalLTLFormula.g:3608:1: rule__AtomicExpression__Group_1__0 : rule__AtomicExpression__Group_1__0__Impl rule__AtomicExpression__Group_1__1 ;
    public final void rule__AtomicExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3612:1: ( rule__AtomicExpression__Group_1__0__Impl rule__AtomicExpression__Group_1__1 )
            // InternalLTLFormula.g:3613:2: rule__AtomicExpression__Group_1__0__Impl rule__AtomicExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AtomicExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AtomicExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AtomicExpression__Group_1__0"


    // $ANTLR start "rule__AtomicExpression__Group_1__0__Impl"
    // InternalLTLFormula.g:3620:1: rule__AtomicExpression__Group_1__0__Impl : ( '(' ) ;
    public final void rule__AtomicExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3624:1: ( ( '(' ) )
            // InternalLTLFormula.g:3625:1: ( '(' )
            {
            // InternalLTLFormula.g:3625:1: ( '(' )
            // InternalLTLFormula.g:3626:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AtomicExpression__Group_1__0__Impl"


    // $ANTLR start "rule__AtomicExpression__Group_1__1"
    // InternalLTLFormula.g:3635:1: rule__AtomicExpression__Group_1__1 : rule__AtomicExpression__Group_1__1__Impl rule__AtomicExpression__Group_1__2 ;
    public final void rule__AtomicExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3639:1: ( rule__AtomicExpression__Group_1__1__Impl rule__AtomicExpression__Group_1__2 )
            // InternalLTLFormula.g:3640:2: rule__AtomicExpression__Group_1__1__Impl rule__AtomicExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__AtomicExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AtomicExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AtomicExpression__Group_1__1"


    // $ANTLR start "rule__AtomicExpression__Group_1__1__Impl"
    // InternalLTLFormula.g:3647:1: rule__AtomicExpression__Group_1__1__Impl : ( ruleLTLExpression ) ;
    public final void rule__AtomicExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3651:1: ( ( ruleLTLExpression ) )
            // InternalLTLFormula.g:3652:1: ( ruleLTLExpression )
            {
            // InternalLTLFormula.g:3652:1: ( ruleLTLExpression )
            // InternalLTLFormula.g:3653:2: ruleLTLExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicExpressionAccess().getLTLExpressionParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLTLExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicExpressionAccess().getLTLExpressionParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AtomicExpression__Group_1__1__Impl"


    // $ANTLR start "rule__AtomicExpression__Group_1__2"
    // InternalLTLFormula.g:3662:1: rule__AtomicExpression__Group_1__2 : rule__AtomicExpression__Group_1__2__Impl ;
    public final void rule__AtomicExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3666:1: ( rule__AtomicExpression__Group_1__2__Impl )
            // InternalLTLFormula.g:3667:2: rule__AtomicExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AtomicExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AtomicExpression__Group_1__2"


    // $ANTLR start "rule__AtomicExpression__Group_1__2__Impl"
    // InternalLTLFormula.g:3673:1: rule__AtomicExpression__Group_1__2__Impl : ( ')' ) ;
    public final void rule__AtomicExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3677:1: ( ( ')' ) )
            // InternalLTLFormula.g:3678:1: ( ')' )
            {
            // InternalLTLFormula.g:3678:1: ( ')' )
            // InternalLTLFormula.g:3679:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AtomicExpression__Group_1__2__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group__0"
    // InternalLTLFormula.g:3689:1: rule__LogicalOrExpression__Group__0 : rule__LogicalOrExpression__Group__0__Impl rule__LogicalOrExpression__Group__1 ;
    public final void rule__LogicalOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3693:1: ( rule__LogicalOrExpression__Group__0__Impl rule__LogicalOrExpression__Group__1 )
            // InternalLTLFormula.g:3694:2: rule__LogicalOrExpression__Group__0__Impl rule__LogicalOrExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__LogicalOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group__0"


    // $ANTLR start "rule__LogicalOrExpression__Group__0__Impl"
    // InternalLTLFormula.g:3701:1: rule__LogicalOrExpression__Group__0__Impl : ( ruleLogicalAndExpression ) ;
    public final void rule__LogicalOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3705:1: ( ( ruleLogicalAndExpression ) )
            // InternalLTLFormula.g:3706:1: ( ruleLogicalAndExpression )
            {
            // InternalLTLFormula.g:3706:1: ( ruleLogicalAndExpression )
            // InternalLTLFormula.g:3707:2: ruleLogicalAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group__0__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group__1"
    // InternalLTLFormula.g:3716:1: rule__LogicalOrExpression__Group__1 : rule__LogicalOrExpression__Group__1__Impl ;
    public final void rule__LogicalOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3720:1: ( rule__LogicalOrExpression__Group__1__Impl )
            // InternalLTLFormula.g:3721:2: rule__LogicalOrExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group__1"


    // $ANTLR start "rule__LogicalOrExpression__Group__1__Impl"
    // InternalLTLFormula.g:3727:1: rule__LogicalOrExpression__Group__1__Impl : ( ( rule__LogicalOrExpression__Group_1__0 )? ) ;
    public final void rule__LogicalOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3731:1: ( ( ( rule__LogicalOrExpression__Group_1__0 )? ) )
            // InternalLTLFormula.g:3732:1: ( ( rule__LogicalOrExpression__Group_1__0 )? )
            {
            // InternalLTLFormula.g:3732:1: ( ( rule__LogicalOrExpression__Group_1__0 )? )
            // InternalLTLFormula.g:3733:2: ( rule__LogicalOrExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); 
            }
            // InternalLTLFormula.g:3734:2: ( rule__LogicalOrExpression__Group_1__0 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==33) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalLTLFormula.g:3734:3: rule__LogicalOrExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LogicalOrExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group__1__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__0"
    // InternalLTLFormula.g:3743:1: rule__LogicalOrExpression__Group_1__0 : rule__LogicalOrExpression__Group_1__0__Impl rule__LogicalOrExpression__Group_1__1 ;
    public final void rule__LogicalOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3747:1: ( rule__LogicalOrExpression__Group_1__0__Impl rule__LogicalOrExpression__Group_1__1 )
            // InternalLTLFormula.g:3748:2: rule__LogicalOrExpression__Group_1__0__Impl rule__LogicalOrExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__LogicalOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__0"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__0__Impl"
    // InternalLTLFormula.g:3755:1: rule__LogicalOrExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__LogicalOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3759:1: ( ( () ) )
            // InternalLTLFormula.g:3760:1: ( () )
            {
            // InternalLTLFormula.g:3760:1: ( () )
            // InternalLTLFormula.g:3761:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }
            // InternalLTLFormula.g:3762:2: ()
            // InternalLTLFormula.g:3762:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__1"
    // InternalLTLFormula.g:3770:1: rule__LogicalOrExpression__Group_1__1 : rule__LogicalOrExpression__Group_1__1__Impl rule__LogicalOrExpression__Group_1__2 ;
    public final void rule__LogicalOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3774:1: ( rule__LogicalOrExpression__Group_1__1__Impl rule__LogicalOrExpression__Group_1__2 )
            // InternalLTLFormula.g:3775:2: rule__LogicalOrExpression__Group_1__1__Impl rule__LogicalOrExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__LogicalOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalOrExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__1"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__1__Impl"
    // InternalLTLFormula.g:3782:1: rule__LogicalOrExpression__Group_1__1__Impl : ( ( rule__LogicalOrExpression__Group_1_1__0 ) ) ;
    public final void rule__LogicalOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3786:1: ( ( ( rule__LogicalOrExpression__Group_1_1__0 ) ) )
            // InternalLTLFormula.g:3787:1: ( ( rule__LogicalOrExpression__Group_1_1__0 ) )
            {
            // InternalLTLFormula.g:3787:1: ( ( rule__LogicalOrExpression__Group_1_1__0 ) )
            // InternalLTLFormula.g:3788:2: ( rule__LogicalOrExpression__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_1()); 
            }
            // InternalLTLFormula.g:3789:2: ( rule__LogicalOrExpression__Group_1_1__0 )
            // InternalLTLFormula.g:3789:3: rule__LogicalOrExpression__Group_1_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalOrExpression__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__2"
    // InternalLTLFormula.g:3797:1: rule__LogicalOrExpression__Group_1__2 : rule__LogicalOrExpression__Group_1__2__Impl ;
    public final void rule__LogicalOrExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3801:1: ( rule__LogicalOrExpression__Group_1__2__Impl )
            // InternalLTLFormula.g:3802:2: rule__LogicalOrExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalOrExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__2"


    // $ANTLR start "rule__LogicalOrExpression__Group_1__2__Impl"
    // InternalLTLFormula.g:3808:1: rule__LogicalOrExpression__Group_1__2__Impl : ( ( rule__LogicalOrExpression__Group_1_2__0 )* ) ;
    public final void rule__LogicalOrExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3812:1: ( ( ( rule__LogicalOrExpression__Group_1_2__0 )* ) )
            // InternalLTLFormula.g:3813:1: ( ( rule__LogicalOrExpression__Group_1_2__0 )* )
            {
            // InternalLTLFormula.g:3813:1: ( ( rule__LogicalOrExpression__Group_1_2__0 )* )
            // InternalLTLFormula.g:3814:2: ( rule__LogicalOrExpression__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_2()); 
            }
            // InternalLTLFormula.g:3815:2: ( rule__LogicalOrExpression__Group_1_2__0 )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==33) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // InternalLTLFormula.g:3815:3: rule__LogicalOrExpression__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    rule__LogicalOrExpression__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1__2__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group_1_1__0"
    // InternalLTLFormula.g:3824:1: rule__LogicalOrExpression__Group_1_1__0 : rule__LogicalOrExpression__Group_1_1__0__Impl rule__LogicalOrExpression__Group_1_1__1 ;
    public final void rule__LogicalOrExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3828:1: ( rule__LogicalOrExpression__Group_1_1__0__Impl rule__LogicalOrExpression__Group_1_1__1 )
            // InternalLTLFormula.g:3829:2: rule__LogicalOrExpression__Group_1_1__0__Impl rule__LogicalOrExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__LogicalOrExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalOrExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1_1__0"


    // $ANTLR start "rule__LogicalOrExpression__Group_1_1__0__Impl"
    // InternalLTLFormula.g:3836:1: rule__LogicalOrExpression__Group_1_1__0__Impl : ( ( rule__LogicalOrExpression__OperatorAssignment_1_1_0 ) ) ;
    public final void rule__LogicalOrExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3840:1: ( ( ( rule__LogicalOrExpression__OperatorAssignment_1_1_0 ) ) )
            // InternalLTLFormula.g:3841:1: ( ( rule__LogicalOrExpression__OperatorAssignment_1_1_0 ) )
            {
            // InternalLTLFormula.g:3841:1: ( ( rule__LogicalOrExpression__OperatorAssignment_1_1_0 ) )
            // InternalLTLFormula.g:3842:2: ( rule__LogicalOrExpression__OperatorAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getOperatorAssignment_1_1_0()); 
            }
            // InternalLTLFormula.g:3843:2: ( rule__LogicalOrExpression__OperatorAssignment_1_1_0 )
            // InternalLTLFormula.g:3843:3: rule__LogicalOrExpression__OperatorAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalOrExpression__OperatorAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getOperatorAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group_1_1__1"
    // InternalLTLFormula.g:3851:1: rule__LogicalOrExpression__Group_1_1__1 : rule__LogicalOrExpression__Group_1_1__1__Impl ;
    public final void rule__LogicalOrExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3855:1: ( rule__LogicalOrExpression__Group_1_1__1__Impl )
            // InternalLTLFormula.g:3856:2: rule__LogicalOrExpression__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalOrExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1_1__1"


    // $ANTLR start "rule__LogicalOrExpression__Group_1_1__1__Impl"
    // InternalLTLFormula.g:3862:1: rule__LogicalOrExpression__Group_1_1__1__Impl : ( ( rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1 ) ) ;
    public final void rule__LogicalOrExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3866:1: ( ( ( rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1 ) ) )
            // InternalLTLFormula.g:3867:1: ( ( rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1 ) )
            {
            // InternalLTLFormula.g:3867:1: ( ( rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1 ) )
            // InternalLTLFormula.g:3868:2: ( rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }
            // InternalLTLFormula.g:3869:2: ( rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1 )
            // InternalLTLFormula.g:3869:3: rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group_1_2__0"
    // InternalLTLFormula.g:3878:1: rule__LogicalOrExpression__Group_1_2__0 : rule__LogicalOrExpression__Group_1_2__0__Impl rule__LogicalOrExpression__Group_1_2__1 ;
    public final void rule__LogicalOrExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3882:1: ( rule__LogicalOrExpression__Group_1_2__0__Impl rule__LogicalOrExpression__Group_1_2__1 )
            // InternalLTLFormula.g:3883:2: rule__LogicalOrExpression__Group_1_2__0__Impl rule__LogicalOrExpression__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__LogicalOrExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalOrExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1_2__0"


    // $ANTLR start "rule__LogicalOrExpression__Group_1_2__0__Impl"
    // InternalLTLFormula.g:3890:1: rule__LogicalOrExpression__Group_1_2__0__Impl : ( '||' ) ;
    public final void rule__LogicalOrExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3894:1: ( ( '||' ) )
            // InternalLTLFormula.g:3895:1: ( '||' )
            {
            // InternalLTLFormula.g:3895:1: ( '||' )
            // InternalLTLFormula.g:3896:2: '||'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_2_0()); 
            }
            match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__LogicalOrExpression__Group_1_2__1"
    // InternalLTLFormula.g:3905:1: rule__LogicalOrExpression__Group_1_2__1 : rule__LogicalOrExpression__Group_1_2__1__Impl ;
    public final void rule__LogicalOrExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3909:1: ( rule__LogicalOrExpression__Group_1_2__1__Impl )
            // InternalLTLFormula.g:3910:2: rule__LogicalOrExpression__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalOrExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1_2__1"


    // $ANTLR start "rule__LogicalOrExpression__Group_1_2__1__Impl"
    // InternalLTLFormula.g:3916:1: rule__LogicalOrExpression__Group_1_2__1__Impl : ( ( rule__LogicalOrExpression__SubExpressionsAssignment_1_2_1 ) ) ;
    public final void rule__LogicalOrExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3920:1: ( ( ( rule__LogicalOrExpression__SubExpressionsAssignment_1_2_1 ) ) )
            // InternalLTLFormula.g:3921:1: ( ( rule__LogicalOrExpression__SubExpressionsAssignment_1_2_1 ) )
            {
            // InternalLTLFormula.g:3921:1: ( ( rule__LogicalOrExpression__SubExpressionsAssignment_1_2_1 ) )
            // InternalLTLFormula.g:3922:2: ( rule__LogicalOrExpression__SubExpressionsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }
            // InternalLTLFormula.g:3923:2: ( rule__LogicalOrExpression__SubExpressionsAssignment_1_2_1 )
            // InternalLTLFormula.g:3923:3: rule__LogicalOrExpression__SubExpressionsAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalOrExpression__SubExpressionsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group__0"
    // InternalLTLFormula.g:3932:1: rule__LogicalAndExpression__Group__0 : rule__LogicalAndExpression__Group__0__Impl rule__LogicalAndExpression__Group__1 ;
    public final void rule__LogicalAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3936:1: ( rule__LogicalAndExpression__Group__0__Impl rule__LogicalAndExpression__Group__1 )
            // InternalLTLFormula.g:3937:2: rule__LogicalAndExpression__Group__0__Impl rule__LogicalAndExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__LogicalAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group__0"


    // $ANTLR start "rule__LogicalAndExpression__Group__0__Impl"
    // InternalLTLFormula.g:3944:1: rule__LogicalAndExpression__Group__0__Impl : ( ruleBitwiseOrExpression ) ;
    public final void rule__LogicalAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3948:1: ( ( ruleBitwiseOrExpression ) )
            // InternalLTLFormula.g:3949:1: ( ruleBitwiseOrExpression )
            {
            // InternalLTLFormula.g:3949:1: ( ruleBitwiseOrExpression )
            // InternalLTLFormula.g:3950:2: ruleBitwiseOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group__0__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group__1"
    // InternalLTLFormula.g:3959:1: rule__LogicalAndExpression__Group__1 : rule__LogicalAndExpression__Group__1__Impl ;
    public final void rule__LogicalAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3963:1: ( rule__LogicalAndExpression__Group__1__Impl )
            // InternalLTLFormula.g:3964:2: rule__LogicalAndExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group__1"


    // $ANTLR start "rule__LogicalAndExpression__Group__1__Impl"
    // InternalLTLFormula.g:3970:1: rule__LogicalAndExpression__Group__1__Impl : ( ( rule__LogicalAndExpression__Group_1__0 )? ) ;
    public final void rule__LogicalAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3974:1: ( ( ( rule__LogicalAndExpression__Group_1__0 )? ) )
            // InternalLTLFormula.g:3975:1: ( ( rule__LogicalAndExpression__Group_1__0 )? )
            {
            // InternalLTLFormula.g:3975:1: ( ( rule__LogicalAndExpression__Group_1__0 )? )
            // InternalLTLFormula.g:3976:2: ( rule__LogicalAndExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); 
            }
            // InternalLTLFormula.g:3977:2: ( rule__LogicalAndExpression__Group_1__0 )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==34) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalLTLFormula.g:3977:3: rule__LogicalAndExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LogicalAndExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group__1__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__0"
    // InternalLTLFormula.g:3986:1: rule__LogicalAndExpression__Group_1__0 : rule__LogicalAndExpression__Group_1__0__Impl rule__LogicalAndExpression__Group_1__1 ;
    public final void rule__LogicalAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:3990:1: ( rule__LogicalAndExpression__Group_1__0__Impl rule__LogicalAndExpression__Group_1__1 )
            // InternalLTLFormula.g:3991:2: rule__LogicalAndExpression__Group_1__0__Impl rule__LogicalAndExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__LogicalAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__0"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__0__Impl"
    // InternalLTLFormula.g:3998:1: rule__LogicalAndExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__LogicalAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4002:1: ( ( () ) )
            // InternalLTLFormula.g:4003:1: ( () )
            {
            // InternalLTLFormula.g:4003:1: ( () )
            // InternalLTLFormula.g:4004:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }
            // InternalLTLFormula.g:4005:2: ()
            // InternalLTLFormula.g:4005:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__1"
    // InternalLTLFormula.g:4013:1: rule__LogicalAndExpression__Group_1__1 : rule__LogicalAndExpression__Group_1__1__Impl rule__LogicalAndExpression__Group_1__2 ;
    public final void rule__LogicalAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4017:1: ( rule__LogicalAndExpression__Group_1__1__Impl rule__LogicalAndExpression__Group_1__2 )
            // InternalLTLFormula.g:4018:2: rule__LogicalAndExpression__Group_1__1__Impl rule__LogicalAndExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__LogicalAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalAndExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__1"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__1__Impl"
    // InternalLTLFormula.g:4025:1: rule__LogicalAndExpression__Group_1__1__Impl : ( ( rule__LogicalAndExpression__Group_1_1__0 ) ) ;
    public final void rule__LogicalAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4029:1: ( ( ( rule__LogicalAndExpression__Group_1_1__0 ) ) )
            // InternalLTLFormula.g:4030:1: ( ( rule__LogicalAndExpression__Group_1_1__0 ) )
            {
            // InternalLTLFormula.g:4030:1: ( ( rule__LogicalAndExpression__Group_1_1__0 ) )
            // InternalLTLFormula.g:4031:2: ( rule__LogicalAndExpression__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_1()); 
            }
            // InternalLTLFormula.g:4032:2: ( rule__LogicalAndExpression__Group_1_1__0 )
            // InternalLTLFormula.g:4032:3: rule__LogicalAndExpression__Group_1_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalAndExpression__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__2"
    // InternalLTLFormula.g:4040:1: rule__LogicalAndExpression__Group_1__2 : rule__LogicalAndExpression__Group_1__2__Impl ;
    public final void rule__LogicalAndExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4044:1: ( rule__LogicalAndExpression__Group_1__2__Impl )
            // InternalLTLFormula.g:4045:2: rule__LogicalAndExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalAndExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__2"


    // $ANTLR start "rule__LogicalAndExpression__Group_1__2__Impl"
    // InternalLTLFormula.g:4051:1: rule__LogicalAndExpression__Group_1__2__Impl : ( ( rule__LogicalAndExpression__Group_1_2__0 )* ) ;
    public final void rule__LogicalAndExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4055:1: ( ( ( rule__LogicalAndExpression__Group_1_2__0 )* ) )
            // InternalLTLFormula.g:4056:1: ( ( rule__LogicalAndExpression__Group_1_2__0 )* )
            {
            // InternalLTLFormula.g:4056:1: ( ( rule__LogicalAndExpression__Group_1_2__0 )* )
            // InternalLTLFormula.g:4057:2: ( rule__LogicalAndExpression__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_2()); 
            }
            // InternalLTLFormula.g:4058:2: ( rule__LogicalAndExpression__Group_1_2__0 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==34) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalLTLFormula.g:4058:3: rule__LogicalAndExpression__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    rule__LogicalAndExpression__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1__2__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group_1_1__0"
    // InternalLTLFormula.g:4067:1: rule__LogicalAndExpression__Group_1_1__0 : rule__LogicalAndExpression__Group_1_1__0__Impl rule__LogicalAndExpression__Group_1_1__1 ;
    public final void rule__LogicalAndExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4071:1: ( rule__LogicalAndExpression__Group_1_1__0__Impl rule__LogicalAndExpression__Group_1_1__1 )
            // InternalLTLFormula.g:4072:2: rule__LogicalAndExpression__Group_1_1__0__Impl rule__LogicalAndExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__LogicalAndExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalAndExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1_1__0"


    // $ANTLR start "rule__LogicalAndExpression__Group_1_1__0__Impl"
    // InternalLTLFormula.g:4079:1: rule__LogicalAndExpression__Group_1_1__0__Impl : ( ( rule__LogicalAndExpression__OperatorAssignment_1_1_0 ) ) ;
    public final void rule__LogicalAndExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4083:1: ( ( ( rule__LogicalAndExpression__OperatorAssignment_1_1_0 ) ) )
            // InternalLTLFormula.g:4084:1: ( ( rule__LogicalAndExpression__OperatorAssignment_1_1_0 ) )
            {
            // InternalLTLFormula.g:4084:1: ( ( rule__LogicalAndExpression__OperatorAssignment_1_1_0 ) )
            // InternalLTLFormula.g:4085:2: ( rule__LogicalAndExpression__OperatorAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getOperatorAssignment_1_1_0()); 
            }
            // InternalLTLFormula.g:4086:2: ( rule__LogicalAndExpression__OperatorAssignment_1_1_0 )
            // InternalLTLFormula.g:4086:3: rule__LogicalAndExpression__OperatorAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalAndExpression__OperatorAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getOperatorAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group_1_1__1"
    // InternalLTLFormula.g:4094:1: rule__LogicalAndExpression__Group_1_1__1 : rule__LogicalAndExpression__Group_1_1__1__Impl ;
    public final void rule__LogicalAndExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4098:1: ( rule__LogicalAndExpression__Group_1_1__1__Impl )
            // InternalLTLFormula.g:4099:2: rule__LogicalAndExpression__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalAndExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1_1__1"


    // $ANTLR start "rule__LogicalAndExpression__Group_1_1__1__Impl"
    // InternalLTLFormula.g:4105:1: rule__LogicalAndExpression__Group_1_1__1__Impl : ( ( rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1 ) ) ;
    public final void rule__LogicalAndExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4109:1: ( ( ( rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1 ) ) )
            // InternalLTLFormula.g:4110:1: ( ( rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1 ) )
            {
            // InternalLTLFormula.g:4110:1: ( ( rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1 ) )
            // InternalLTLFormula.g:4111:2: ( rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }
            // InternalLTLFormula.g:4112:2: ( rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1 )
            // InternalLTLFormula.g:4112:3: rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group_1_2__0"
    // InternalLTLFormula.g:4121:1: rule__LogicalAndExpression__Group_1_2__0 : rule__LogicalAndExpression__Group_1_2__0__Impl rule__LogicalAndExpression__Group_1_2__1 ;
    public final void rule__LogicalAndExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4125:1: ( rule__LogicalAndExpression__Group_1_2__0__Impl rule__LogicalAndExpression__Group_1_2__1 )
            // InternalLTLFormula.g:4126:2: rule__LogicalAndExpression__Group_1_2__0__Impl rule__LogicalAndExpression__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__LogicalAndExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalAndExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1_2__0"


    // $ANTLR start "rule__LogicalAndExpression__Group_1_2__0__Impl"
    // InternalLTLFormula.g:4133:1: rule__LogicalAndExpression__Group_1_2__0__Impl : ( '&&' ) ;
    public final void rule__LogicalAndExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4137:1: ( ( '&&' ) )
            // InternalLTLFormula.g:4138:1: ( '&&' )
            {
            // InternalLTLFormula.g:4138:1: ( '&&' )
            // InternalLTLFormula.g:4139:2: '&&'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_2_0()); 
            }
            match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__LogicalAndExpression__Group_1_2__1"
    // InternalLTLFormula.g:4148:1: rule__LogicalAndExpression__Group_1_2__1 : rule__LogicalAndExpression__Group_1_2__1__Impl ;
    public final void rule__LogicalAndExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4152:1: ( rule__LogicalAndExpression__Group_1_2__1__Impl )
            // InternalLTLFormula.g:4153:2: rule__LogicalAndExpression__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalAndExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1_2__1"


    // $ANTLR start "rule__LogicalAndExpression__Group_1_2__1__Impl"
    // InternalLTLFormula.g:4159:1: rule__LogicalAndExpression__Group_1_2__1__Impl : ( ( rule__LogicalAndExpression__SubExpressionsAssignment_1_2_1 ) ) ;
    public final void rule__LogicalAndExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4163:1: ( ( ( rule__LogicalAndExpression__SubExpressionsAssignment_1_2_1 ) ) )
            // InternalLTLFormula.g:4164:1: ( ( rule__LogicalAndExpression__SubExpressionsAssignment_1_2_1 ) )
            {
            // InternalLTLFormula.g:4164:1: ( ( rule__LogicalAndExpression__SubExpressionsAssignment_1_2_1 ) )
            // InternalLTLFormula.g:4165:2: ( rule__LogicalAndExpression__SubExpressionsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }
            // InternalLTLFormula.g:4166:2: ( rule__LogicalAndExpression__SubExpressionsAssignment_1_2_1 )
            // InternalLTLFormula.g:4166:3: rule__LogicalAndExpression__SubExpressionsAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LogicalAndExpression__SubExpressionsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__BitwiseOrExpression__Group__0"
    // InternalLTLFormula.g:4175:1: rule__BitwiseOrExpression__Group__0 : rule__BitwiseOrExpression__Group__0__Impl rule__BitwiseOrExpression__Group__1 ;
    public final void rule__BitwiseOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4179:1: ( rule__BitwiseOrExpression__Group__0__Impl rule__BitwiseOrExpression__Group__1 )
            // InternalLTLFormula.g:4180:2: rule__BitwiseOrExpression__Group__0__Impl rule__BitwiseOrExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__BitwiseOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group__0"


    // $ANTLR start "rule__BitwiseOrExpression__Group__0__Impl"
    // InternalLTLFormula.g:4187:1: rule__BitwiseOrExpression__Group__0__Impl : ( ruleBitwiseXOrExpression ) ;
    public final void rule__BitwiseOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4191:1: ( ( ruleBitwiseXOrExpression ) )
            // InternalLTLFormula.g:4192:1: ( ruleBitwiseXOrExpression )
            {
            // InternalLTLFormula.g:4192:1: ( ruleBitwiseXOrExpression )
            // InternalLTLFormula.g:4193:2: ruleBitwiseXOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXOrExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXOrExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group__0__Impl"


    // $ANTLR start "rule__BitwiseOrExpression__Group__1"
    // InternalLTLFormula.g:4202:1: rule__BitwiseOrExpression__Group__1 : rule__BitwiseOrExpression__Group__1__Impl ;
    public final void rule__BitwiseOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4206:1: ( rule__BitwiseOrExpression__Group__1__Impl )
            // InternalLTLFormula.g:4207:2: rule__BitwiseOrExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group__1"


    // $ANTLR start "rule__BitwiseOrExpression__Group__1__Impl"
    // InternalLTLFormula.g:4213:1: rule__BitwiseOrExpression__Group__1__Impl : ( ( rule__BitwiseOrExpression__Group_1__0 )? ) ;
    public final void rule__BitwiseOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4217:1: ( ( ( rule__BitwiseOrExpression__Group_1__0 )? ) )
            // InternalLTLFormula.g:4218:1: ( ( rule__BitwiseOrExpression__Group_1__0 )? )
            {
            // InternalLTLFormula.g:4218:1: ( ( rule__BitwiseOrExpression__Group_1__0 )? )
            // InternalLTLFormula.g:4219:2: ( rule__BitwiseOrExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1()); 
            }
            // InternalLTLFormula.g:4220:2: ( rule__BitwiseOrExpression__Group_1__0 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==24) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalLTLFormula.g:4220:3: rule__BitwiseOrExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__BitwiseOrExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group__1__Impl"


    // $ANTLR start "rule__BitwiseOrExpression__Group_1__0"
    // InternalLTLFormula.g:4229:1: rule__BitwiseOrExpression__Group_1__0 : rule__BitwiseOrExpression__Group_1__0__Impl rule__BitwiseOrExpression__Group_1__1 ;
    public final void rule__BitwiseOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4233:1: ( rule__BitwiseOrExpression__Group_1__0__Impl rule__BitwiseOrExpression__Group_1__1 )
            // InternalLTLFormula.g:4234:2: rule__BitwiseOrExpression__Group_1__0__Impl rule__BitwiseOrExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__BitwiseOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group_1__0"


    // $ANTLR start "rule__BitwiseOrExpression__Group_1__0__Impl"
    // InternalLTLFormula.g:4241:1: rule__BitwiseOrExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__BitwiseOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4245:1: ( ( () ) )
            // InternalLTLFormula.g:4246:1: ( () )
            {
            // InternalLTLFormula.g:4246:1: ( () )
            // InternalLTLFormula.g:4247:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }
            // InternalLTLFormula.g:4248:2: ()
            // InternalLTLFormula.g:4248:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__BitwiseOrExpression__Group_1__1"
    // InternalLTLFormula.g:4256:1: rule__BitwiseOrExpression__Group_1__1 : rule__BitwiseOrExpression__Group_1__1__Impl rule__BitwiseOrExpression__Group_1__2 ;
    public final void rule__BitwiseOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4260:1: ( rule__BitwiseOrExpression__Group_1__1__Impl rule__BitwiseOrExpression__Group_1__2 )
            // InternalLTLFormula.g:4261:2: rule__BitwiseOrExpression__Group_1__1__Impl rule__BitwiseOrExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__BitwiseOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseOrExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group_1__1"


    // $ANTLR start "rule__BitwiseOrExpression__Group_1__1__Impl"
    // InternalLTLFormula.g:4268:1: rule__BitwiseOrExpression__Group_1__1__Impl : ( ( rule__BitwiseOrExpression__Group_1_1__0 ) ) ;
    public final void rule__BitwiseOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4272:1: ( ( ( rule__BitwiseOrExpression__Group_1_1__0 ) ) )
            // InternalLTLFormula.g:4273:1: ( ( rule__BitwiseOrExpression__Group_1_1__0 ) )
            {
            // InternalLTLFormula.g:4273:1: ( ( rule__BitwiseOrExpression__Group_1_1__0 ) )
            // InternalLTLFormula.g:4274:2: ( rule__BitwiseOrExpression__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1_1()); 
            }
            // InternalLTLFormula.g:4275:2: ( rule__BitwiseOrExpression__Group_1_1__0 )
            // InternalLTLFormula.g:4275:3: rule__BitwiseOrExpression__Group_1_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseOrExpression__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__BitwiseOrExpression__Group_1__2"
    // InternalLTLFormula.g:4283:1: rule__BitwiseOrExpression__Group_1__2 : rule__BitwiseOrExpression__Group_1__2__Impl ;
    public final void rule__BitwiseOrExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4287:1: ( rule__BitwiseOrExpression__Group_1__2__Impl )
            // InternalLTLFormula.g:4288:2: rule__BitwiseOrExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseOrExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group_1__2"


    // $ANTLR start "rule__BitwiseOrExpression__Group_1__2__Impl"
    // InternalLTLFormula.g:4294:1: rule__BitwiseOrExpression__Group_1__2__Impl : ( ( rule__BitwiseOrExpression__Group_1_2__0 )* ) ;
    public final void rule__BitwiseOrExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4298:1: ( ( ( rule__BitwiseOrExpression__Group_1_2__0 )* ) )
            // InternalLTLFormula.g:4299:1: ( ( rule__BitwiseOrExpression__Group_1_2__0 )* )
            {
            // InternalLTLFormula.g:4299:1: ( ( rule__BitwiseOrExpression__Group_1_2__0 )* )
            // InternalLTLFormula.g:4300:2: ( rule__BitwiseOrExpression__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1_2()); 
            }
            // InternalLTLFormula.g:4301:2: ( rule__BitwiseOrExpression__Group_1_2__0 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==24) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalLTLFormula.g:4301:3: rule__BitwiseOrExpression__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_14);
            	    rule__BitwiseOrExpression__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group_1__2__Impl"


    // $ANTLR start "rule__BitwiseOrExpression__Group_1_1__0"
    // InternalLTLFormula.g:4310:1: rule__BitwiseOrExpression__Group_1_1__0 : rule__BitwiseOrExpression__Group_1_1__0__Impl rule__BitwiseOrExpression__Group_1_1__1 ;
    public final void rule__BitwiseOrExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4314:1: ( rule__BitwiseOrExpression__Group_1_1__0__Impl rule__BitwiseOrExpression__Group_1_1__1 )
            // InternalLTLFormula.g:4315:2: rule__BitwiseOrExpression__Group_1_1__0__Impl rule__BitwiseOrExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__BitwiseOrExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseOrExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group_1_1__0"


    // $ANTLR start "rule__BitwiseOrExpression__Group_1_1__0__Impl"
    // InternalLTLFormula.g:4322:1: rule__BitwiseOrExpression__Group_1_1__0__Impl : ( ( rule__BitwiseOrExpression__OperatorAssignment_1_1_0 ) ) ;
    public final void rule__BitwiseOrExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4326:1: ( ( ( rule__BitwiseOrExpression__OperatorAssignment_1_1_0 ) ) )
            // InternalLTLFormula.g:4327:1: ( ( rule__BitwiseOrExpression__OperatorAssignment_1_1_0 ) )
            {
            // InternalLTLFormula.g:4327:1: ( ( rule__BitwiseOrExpression__OperatorAssignment_1_1_0 ) )
            // InternalLTLFormula.g:4328:2: ( rule__BitwiseOrExpression__OperatorAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseOrExpressionAccess().getOperatorAssignment_1_1_0()); 
            }
            // InternalLTLFormula.g:4329:2: ( rule__BitwiseOrExpression__OperatorAssignment_1_1_0 )
            // InternalLTLFormula.g:4329:3: rule__BitwiseOrExpression__OperatorAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseOrExpression__OperatorAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseOrExpressionAccess().getOperatorAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__BitwiseOrExpression__Group_1_1__1"
    // InternalLTLFormula.g:4337:1: rule__BitwiseOrExpression__Group_1_1__1 : rule__BitwiseOrExpression__Group_1_1__1__Impl ;
    public final void rule__BitwiseOrExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4341:1: ( rule__BitwiseOrExpression__Group_1_1__1__Impl )
            // InternalLTLFormula.g:4342:2: rule__BitwiseOrExpression__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseOrExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group_1_1__1"


    // $ANTLR start "rule__BitwiseOrExpression__Group_1_1__1__Impl"
    // InternalLTLFormula.g:4348:1: rule__BitwiseOrExpression__Group_1_1__1__Impl : ( ( rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1 ) ) ;
    public final void rule__BitwiseOrExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4352:1: ( ( ( rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1 ) ) )
            // InternalLTLFormula.g:4353:1: ( ( rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1 ) )
            {
            // InternalLTLFormula.g:4353:1: ( ( rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1 ) )
            // InternalLTLFormula.g:4354:2: ( rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }
            // InternalLTLFormula.g:4355:2: ( rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1 )
            // InternalLTLFormula.g:4355:3: rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__BitwiseOrExpression__Group_1_2__0"
    // InternalLTLFormula.g:4364:1: rule__BitwiseOrExpression__Group_1_2__0 : rule__BitwiseOrExpression__Group_1_2__0__Impl rule__BitwiseOrExpression__Group_1_2__1 ;
    public final void rule__BitwiseOrExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4368:1: ( rule__BitwiseOrExpression__Group_1_2__0__Impl rule__BitwiseOrExpression__Group_1_2__1 )
            // InternalLTLFormula.g:4369:2: rule__BitwiseOrExpression__Group_1_2__0__Impl rule__BitwiseOrExpression__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__BitwiseOrExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseOrExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group_1_2__0"


    // $ANTLR start "rule__BitwiseOrExpression__Group_1_2__0__Impl"
    // InternalLTLFormula.g:4376:1: rule__BitwiseOrExpression__Group_1_2__0__Impl : ( '|' ) ;
    public final void rule__BitwiseOrExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4380:1: ( ( '|' ) )
            // InternalLTLFormula.g:4381:1: ( '|' )
            {
            // InternalLTLFormula.g:4381:1: ( '|' )
            // InternalLTLFormula.g:4382:2: '|'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_2_0()); 
            }
            match(input,24,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__BitwiseOrExpression__Group_1_2__1"
    // InternalLTLFormula.g:4391:1: rule__BitwiseOrExpression__Group_1_2__1 : rule__BitwiseOrExpression__Group_1_2__1__Impl ;
    public final void rule__BitwiseOrExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4395:1: ( rule__BitwiseOrExpression__Group_1_2__1__Impl )
            // InternalLTLFormula.g:4396:2: rule__BitwiseOrExpression__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseOrExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group_1_2__1"


    // $ANTLR start "rule__BitwiseOrExpression__Group_1_2__1__Impl"
    // InternalLTLFormula.g:4402:1: rule__BitwiseOrExpression__Group_1_2__1__Impl : ( ( rule__BitwiseOrExpression__SubExpressionsAssignment_1_2_1 ) ) ;
    public final void rule__BitwiseOrExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4406:1: ( ( ( rule__BitwiseOrExpression__SubExpressionsAssignment_1_2_1 ) ) )
            // InternalLTLFormula.g:4407:1: ( ( rule__BitwiseOrExpression__SubExpressionsAssignment_1_2_1 ) )
            {
            // InternalLTLFormula.g:4407:1: ( ( rule__BitwiseOrExpression__SubExpressionsAssignment_1_2_1 ) )
            // InternalLTLFormula.g:4408:2: ( rule__BitwiseOrExpression__SubExpressionsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }
            // InternalLTLFormula.g:4409:2: ( rule__BitwiseOrExpression__SubExpressionsAssignment_1_2_1 )
            // InternalLTLFormula.g:4409:3: rule__BitwiseOrExpression__SubExpressionsAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseOrExpression__SubExpressionsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__BitwiseXOrExpression__Group__0"
    // InternalLTLFormula.g:4418:1: rule__BitwiseXOrExpression__Group__0 : rule__BitwiseXOrExpression__Group__0__Impl rule__BitwiseXOrExpression__Group__1 ;
    public final void rule__BitwiseXOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4422:1: ( rule__BitwiseXOrExpression__Group__0__Impl rule__BitwiseXOrExpression__Group__1 )
            // InternalLTLFormula.g:4423:2: rule__BitwiseXOrExpression__Group__0__Impl rule__BitwiseXOrExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__BitwiseXOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseXOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group__0"


    // $ANTLR start "rule__BitwiseXOrExpression__Group__0__Impl"
    // InternalLTLFormula.g:4430:1: rule__BitwiseXOrExpression__Group__0__Impl : ( ruleBitwiseAndExpression ) ;
    public final void rule__BitwiseXOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4434:1: ( ( ruleBitwiseAndExpression ) )
            // InternalLTLFormula.g:4435:1: ( ruleBitwiseAndExpression )
            {
            // InternalLTLFormula.g:4435:1: ( ruleBitwiseAndExpression )
            // InternalLTLFormula.g:4436:2: ruleBitwiseAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseXOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseXOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group__0__Impl"


    // $ANTLR start "rule__BitwiseXOrExpression__Group__1"
    // InternalLTLFormula.g:4445:1: rule__BitwiseXOrExpression__Group__1 : rule__BitwiseXOrExpression__Group__1__Impl ;
    public final void rule__BitwiseXOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4449:1: ( rule__BitwiseXOrExpression__Group__1__Impl )
            // InternalLTLFormula.g:4450:2: rule__BitwiseXOrExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseXOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group__1"


    // $ANTLR start "rule__BitwiseXOrExpression__Group__1__Impl"
    // InternalLTLFormula.g:4456:1: rule__BitwiseXOrExpression__Group__1__Impl : ( ( rule__BitwiseXOrExpression__Group_1__0 )? ) ;
    public final void rule__BitwiseXOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4460:1: ( ( ( rule__BitwiseXOrExpression__Group_1__0 )? ) )
            // InternalLTLFormula.g:4461:1: ( ( rule__BitwiseXOrExpression__Group_1__0 )? )
            {
            // InternalLTLFormula.g:4461:1: ( ( rule__BitwiseXOrExpression__Group_1__0 )? )
            // InternalLTLFormula.g:4462:2: ( rule__BitwiseXOrExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseXOrExpressionAccess().getGroup_1()); 
            }
            // InternalLTLFormula.g:4463:2: ( rule__BitwiseXOrExpression__Group_1__0 )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==23) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalLTLFormula.g:4463:3: rule__BitwiseXOrExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__BitwiseXOrExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseXOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group__1__Impl"


    // $ANTLR start "rule__BitwiseXOrExpression__Group_1__0"
    // InternalLTLFormula.g:4472:1: rule__BitwiseXOrExpression__Group_1__0 : rule__BitwiseXOrExpression__Group_1__0__Impl rule__BitwiseXOrExpression__Group_1__1 ;
    public final void rule__BitwiseXOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4476:1: ( rule__BitwiseXOrExpression__Group_1__0__Impl rule__BitwiseXOrExpression__Group_1__1 )
            // InternalLTLFormula.g:4477:2: rule__BitwiseXOrExpression__Group_1__0__Impl rule__BitwiseXOrExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__BitwiseXOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseXOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group_1__0"


    // $ANTLR start "rule__BitwiseXOrExpression__Group_1__0__Impl"
    // InternalLTLFormula.g:4484:1: rule__BitwiseXOrExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__BitwiseXOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4488:1: ( ( () ) )
            // InternalLTLFormula.g:4489:1: ( () )
            {
            // InternalLTLFormula.g:4489:1: ( () )
            // InternalLTLFormula.g:4490:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }
            // InternalLTLFormula.g:4491:2: ()
            // InternalLTLFormula.g:4491:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__BitwiseXOrExpression__Group_1__1"
    // InternalLTLFormula.g:4499:1: rule__BitwiseXOrExpression__Group_1__1 : rule__BitwiseXOrExpression__Group_1__1__Impl rule__BitwiseXOrExpression__Group_1__2 ;
    public final void rule__BitwiseXOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4503:1: ( rule__BitwiseXOrExpression__Group_1__1__Impl rule__BitwiseXOrExpression__Group_1__2 )
            // InternalLTLFormula.g:4504:2: rule__BitwiseXOrExpression__Group_1__1__Impl rule__BitwiseXOrExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__BitwiseXOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseXOrExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group_1__1"


    // $ANTLR start "rule__BitwiseXOrExpression__Group_1__1__Impl"
    // InternalLTLFormula.g:4511:1: rule__BitwiseXOrExpression__Group_1__1__Impl : ( ( rule__BitwiseXOrExpression__Group_1_1__0 ) ) ;
    public final void rule__BitwiseXOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4515:1: ( ( ( rule__BitwiseXOrExpression__Group_1_1__0 ) ) )
            // InternalLTLFormula.g:4516:1: ( ( rule__BitwiseXOrExpression__Group_1_1__0 ) )
            {
            // InternalLTLFormula.g:4516:1: ( ( rule__BitwiseXOrExpression__Group_1_1__0 ) )
            // InternalLTLFormula.g:4517:2: ( rule__BitwiseXOrExpression__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseXOrExpressionAccess().getGroup_1_1()); 
            }
            // InternalLTLFormula.g:4518:2: ( rule__BitwiseXOrExpression__Group_1_1__0 )
            // InternalLTLFormula.g:4518:3: rule__BitwiseXOrExpression__Group_1_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseXOrExpression__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseXOrExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__BitwiseXOrExpression__Group_1__2"
    // InternalLTLFormula.g:4526:1: rule__BitwiseXOrExpression__Group_1__2 : rule__BitwiseXOrExpression__Group_1__2__Impl ;
    public final void rule__BitwiseXOrExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4530:1: ( rule__BitwiseXOrExpression__Group_1__2__Impl )
            // InternalLTLFormula.g:4531:2: rule__BitwiseXOrExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseXOrExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group_1__2"


    // $ANTLR start "rule__BitwiseXOrExpression__Group_1__2__Impl"
    // InternalLTLFormula.g:4537:1: rule__BitwiseXOrExpression__Group_1__2__Impl : ( ( rule__BitwiseXOrExpression__Group_1_2__0 )* ) ;
    public final void rule__BitwiseXOrExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4541:1: ( ( ( rule__BitwiseXOrExpression__Group_1_2__0 )* ) )
            // InternalLTLFormula.g:4542:1: ( ( rule__BitwiseXOrExpression__Group_1_2__0 )* )
            {
            // InternalLTLFormula.g:4542:1: ( ( rule__BitwiseXOrExpression__Group_1_2__0 )* )
            // InternalLTLFormula.g:4543:2: ( rule__BitwiseXOrExpression__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseXOrExpressionAccess().getGroup_1_2()); 
            }
            // InternalLTLFormula.g:4544:2: ( rule__BitwiseXOrExpression__Group_1_2__0 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==23) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalLTLFormula.g:4544:3: rule__BitwiseXOrExpression__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_16);
            	    rule__BitwiseXOrExpression__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseXOrExpressionAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group_1__2__Impl"


    // $ANTLR start "rule__BitwiseXOrExpression__Group_1_1__0"
    // InternalLTLFormula.g:4553:1: rule__BitwiseXOrExpression__Group_1_1__0 : rule__BitwiseXOrExpression__Group_1_1__0__Impl rule__BitwiseXOrExpression__Group_1_1__1 ;
    public final void rule__BitwiseXOrExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4557:1: ( rule__BitwiseXOrExpression__Group_1_1__0__Impl rule__BitwiseXOrExpression__Group_1_1__1 )
            // InternalLTLFormula.g:4558:2: rule__BitwiseXOrExpression__Group_1_1__0__Impl rule__BitwiseXOrExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__BitwiseXOrExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseXOrExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group_1_1__0"


    // $ANTLR start "rule__BitwiseXOrExpression__Group_1_1__0__Impl"
    // InternalLTLFormula.g:4565:1: rule__BitwiseXOrExpression__Group_1_1__0__Impl : ( ( rule__BitwiseXOrExpression__OperatorAssignment_1_1_0 ) ) ;
    public final void rule__BitwiseXOrExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4569:1: ( ( ( rule__BitwiseXOrExpression__OperatorAssignment_1_1_0 ) ) )
            // InternalLTLFormula.g:4570:1: ( ( rule__BitwiseXOrExpression__OperatorAssignment_1_1_0 ) )
            {
            // InternalLTLFormula.g:4570:1: ( ( rule__BitwiseXOrExpression__OperatorAssignment_1_1_0 ) )
            // InternalLTLFormula.g:4571:2: ( rule__BitwiseXOrExpression__OperatorAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorAssignment_1_1_0()); 
            }
            // InternalLTLFormula.g:4572:2: ( rule__BitwiseXOrExpression__OperatorAssignment_1_1_0 )
            // InternalLTLFormula.g:4572:3: rule__BitwiseXOrExpression__OperatorAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseXOrExpression__OperatorAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__BitwiseXOrExpression__Group_1_1__1"
    // InternalLTLFormula.g:4580:1: rule__BitwiseXOrExpression__Group_1_1__1 : rule__BitwiseXOrExpression__Group_1_1__1__Impl ;
    public final void rule__BitwiseXOrExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4584:1: ( rule__BitwiseXOrExpression__Group_1_1__1__Impl )
            // InternalLTLFormula.g:4585:2: rule__BitwiseXOrExpression__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseXOrExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group_1_1__1"


    // $ANTLR start "rule__BitwiseXOrExpression__Group_1_1__1__Impl"
    // InternalLTLFormula.g:4591:1: rule__BitwiseXOrExpression__Group_1_1__1__Impl : ( ( rule__BitwiseXOrExpression__SubExpressionsAssignment_1_1_1 ) ) ;
    public final void rule__BitwiseXOrExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4595:1: ( ( ( rule__BitwiseXOrExpression__SubExpressionsAssignment_1_1_1 ) ) )
            // InternalLTLFormula.g:4596:1: ( ( rule__BitwiseXOrExpression__SubExpressionsAssignment_1_1_1 ) )
            {
            // InternalLTLFormula.g:4596:1: ( ( rule__BitwiseXOrExpression__SubExpressionsAssignment_1_1_1 ) )
            // InternalLTLFormula.g:4597:2: ( rule__BitwiseXOrExpression__SubExpressionsAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }
            // InternalLTLFormula.g:4598:2: ( rule__BitwiseXOrExpression__SubExpressionsAssignment_1_1_1 )
            // InternalLTLFormula.g:4598:3: rule__BitwiseXOrExpression__SubExpressionsAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseXOrExpression__SubExpressionsAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__BitwiseXOrExpression__Group_1_2__0"
    // InternalLTLFormula.g:4607:1: rule__BitwiseXOrExpression__Group_1_2__0 : rule__BitwiseXOrExpression__Group_1_2__0__Impl rule__BitwiseXOrExpression__Group_1_2__1 ;
    public final void rule__BitwiseXOrExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4611:1: ( rule__BitwiseXOrExpression__Group_1_2__0__Impl rule__BitwiseXOrExpression__Group_1_2__1 )
            // InternalLTLFormula.g:4612:2: rule__BitwiseXOrExpression__Group_1_2__0__Impl rule__BitwiseXOrExpression__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__BitwiseXOrExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseXOrExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group_1_2__0"


    // $ANTLR start "rule__BitwiseXOrExpression__Group_1_2__0__Impl"
    // InternalLTLFormula.g:4619:1: rule__BitwiseXOrExpression__Group_1_2__0__Impl : ( '^' ) ;
    public final void rule__BitwiseXOrExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4623:1: ( ( '^' ) )
            // InternalLTLFormula.g:4624:1: ( '^' )
            {
            // InternalLTLFormula.g:4624:1: ( '^' )
            // InternalLTLFormula.g:4625:2: '^'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseXOrExpressionAccess().getCircumflexAccentKeyword_1_2_0()); 
            }
            match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseXOrExpressionAccess().getCircumflexAccentKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__BitwiseXOrExpression__Group_1_2__1"
    // InternalLTLFormula.g:4634:1: rule__BitwiseXOrExpression__Group_1_2__1 : rule__BitwiseXOrExpression__Group_1_2__1__Impl ;
    public final void rule__BitwiseXOrExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4638:1: ( rule__BitwiseXOrExpression__Group_1_2__1__Impl )
            // InternalLTLFormula.g:4639:2: rule__BitwiseXOrExpression__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseXOrExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group_1_2__1"


    // $ANTLR start "rule__BitwiseXOrExpression__Group_1_2__1__Impl"
    // InternalLTLFormula.g:4645:1: rule__BitwiseXOrExpression__Group_1_2__1__Impl : ( ( rule__BitwiseXOrExpression__SubExpressionsAssignment_1_2_1 ) ) ;
    public final void rule__BitwiseXOrExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4649:1: ( ( ( rule__BitwiseXOrExpression__SubExpressionsAssignment_1_2_1 ) ) )
            // InternalLTLFormula.g:4650:1: ( ( rule__BitwiseXOrExpression__SubExpressionsAssignment_1_2_1 ) )
            {
            // InternalLTLFormula.g:4650:1: ( ( rule__BitwiseXOrExpression__SubExpressionsAssignment_1_2_1 ) )
            // InternalLTLFormula.g:4651:2: ( rule__BitwiseXOrExpression__SubExpressionsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }
            // InternalLTLFormula.g:4652:2: ( rule__BitwiseXOrExpression__SubExpressionsAssignment_1_2_1 )
            // InternalLTLFormula.g:4652:3: rule__BitwiseXOrExpression__SubExpressionsAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseXOrExpression__SubExpressionsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__BitwiseAndExpression__Group__0"
    // InternalLTLFormula.g:4661:1: rule__BitwiseAndExpression__Group__0 : rule__BitwiseAndExpression__Group__0__Impl rule__BitwiseAndExpression__Group__1 ;
    public final void rule__BitwiseAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4665:1: ( rule__BitwiseAndExpression__Group__0__Impl rule__BitwiseAndExpression__Group__1 )
            // InternalLTLFormula.g:4666:2: rule__BitwiseAndExpression__Group__0__Impl rule__BitwiseAndExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__BitwiseAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group__0"


    // $ANTLR start "rule__BitwiseAndExpression__Group__0__Impl"
    // InternalLTLFormula.g:4673:1: rule__BitwiseAndExpression__Group__0__Impl : ( ruleCompareOperation ) ;
    public final void rule__BitwiseAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4677:1: ( ( ruleCompareOperation ) )
            // InternalLTLFormula.g:4678:1: ( ruleCompareOperation )
            {
            // InternalLTLFormula.g:4678:1: ( ruleCompareOperation )
            // InternalLTLFormula.g:4679:2: ruleCompareOperation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCompareOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group__0__Impl"


    // $ANTLR start "rule__BitwiseAndExpression__Group__1"
    // InternalLTLFormula.g:4688:1: rule__BitwiseAndExpression__Group__1 : rule__BitwiseAndExpression__Group__1__Impl ;
    public final void rule__BitwiseAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4692:1: ( rule__BitwiseAndExpression__Group__1__Impl )
            // InternalLTLFormula.g:4693:2: rule__BitwiseAndExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group__1"


    // $ANTLR start "rule__BitwiseAndExpression__Group__1__Impl"
    // InternalLTLFormula.g:4699:1: rule__BitwiseAndExpression__Group__1__Impl : ( ( rule__BitwiseAndExpression__Group_1__0 )? ) ;
    public final void rule__BitwiseAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4703:1: ( ( ( rule__BitwiseAndExpression__Group_1__0 )? ) )
            // InternalLTLFormula.g:4704:1: ( ( rule__BitwiseAndExpression__Group_1__0 )? )
            {
            // InternalLTLFormula.g:4704:1: ( ( rule__BitwiseAndExpression__Group_1__0 )? )
            // InternalLTLFormula.g:4705:2: ( rule__BitwiseAndExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1()); 
            }
            // InternalLTLFormula.g:4706:2: ( rule__BitwiseAndExpression__Group_1__0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==25) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalLTLFormula.g:4706:3: rule__BitwiseAndExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__BitwiseAndExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group__1__Impl"


    // $ANTLR start "rule__BitwiseAndExpression__Group_1__0"
    // InternalLTLFormula.g:4715:1: rule__BitwiseAndExpression__Group_1__0 : rule__BitwiseAndExpression__Group_1__0__Impl rule__BitwiseAndExpression__Group_1__1 ;
    public final void rule__BitwiseAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4719:1: ( rule__BitwiseAndExpression__Group_1__0__Impl rule__BitwiseAndExpression__Group_1__1 )
            // InternalLTLFormula.g:4720:2: rule__BitwiseAndExpression__Group_1__0__Impl rule__BitwiseAndExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__BitwiseAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group_1__0"


    // $ANTLR start "rule__BitwiseAndExpression__Group_1__0__Impl"
    // InternalLTLFormula.g:4727:1: rule__BitwiseAndExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__BitwiseAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4731:1: ( ( () ) )
            // InternalLTLFormula.g:4732:1: ( () )
            {
            // InternalLTLFormula.g:4732:1: ( () )
            // InternalLTLFormula.g:4733:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }
            // InternalLTLFormula.g:4734:2: ()
            // InternalLTLFormula.g:4734:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__BitwiseAndExpression__Group_1__1"
    // InternalLTLFormula.g:4742:1: rule__BitwiseAndExpression__Group_1__1 : rule__BitwiseAndExpression__Group_1__1__Impl rule__BitwiseAndExpression__Group_1__2 ;
    public final void rule__BitwiseAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4746:1: ( rule__BitwiseAndExpression__Group_1__1__Impl rule__BitwiseAndExpression__Group_1__2 )
            // InternalLTLFormula.g:4747:2: rule__BitwiseAndExpression__Group_1__1__Impl rule__BitwiseAndExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__BitwiseAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseAndExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group_1__1"


    // $ANTLR start "rule__BitwiseAndExpression__Group_1__1__Impl"
    // InternalLTLFormula.g:4754:1: rule__BitwiseAndExpression__Group_1__1__Impl : ( ( rule__BitwiseAndExpression__Group_1_1__0 ) ) ;
    public final void rule__BitwiseAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4758:1: ( ( ( rule__BitwiseAndExpression__Group_1_1__0 ) ) )
            // InternalLTLFormula.g:4759:1: ( ( rule__BitwiseAndExpression__Group_1_1__0 ) )
            {
            // InternalLTLFormula.g:4759:1: ( ( rule__BitwiseAndExpression__Group_1_1__0 ) )
            // InternalLTLFormula.g:4760:2: ( rule__BitwiseAndExpression__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1_1()); 
            }
            // InternalLTLFormula.g:4761:2: ( rule__BitwiseAndExpression__Group_1_1__0 )
            // InternalLTLFormula.g:4761:3: rule__BitwiseAndExpression__Group_1_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseAndExpression__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__BitwiseAndExpression__Group_1__2"
    // InternalLTLFormula.g:4769:1: rule__BitwiseAndExpression__Group_1__2 : rule__BitwiseAndExpression__Group_1__2__Impl ;
    public final void rule__BitwiseAndExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4773:1: ( rule__BitwiseAndExpression__Group_1__2__Impl )
            // InternalLTLFormula.g:4774:2: rule__BitwiseAndExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseAndExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group_1__2"


    // $ANTLR start "rule__BitwiseAndExpression__Group_1__2__Impl"
    // InternalLTLFormula.g:4780:1: rule__BitwiseAndExpression__Group_1__2__Impl : ( ( rule__BitwiseAndExpression__Group_1_2__0 )* ) ;
    public final void rule__BitwiseAndExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4784:1: ( ( ( rule__BitwiseAndExpression__Group_1_2__0 )* ) )
            // InternalLTLFormula.g:4785:1: ( ( rule__BitwiseAndExpression__Group_1_2__0 )* )
            {
            // InternalLTLFormula.g:4785:1: ( ( rule__BitwiseAndExpression__Group_1_2__0 )* )
            // InternalLTLFormula.g:4786:2: ( rule__BitwiseAndExpression__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1_2()); 
            }
            // InternalLTLFormula.g:4787:2: ( rule__BitwiseAndExpression__Group_1_2__0 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==25) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalLTLFormula.g:4787:3: rule__BitwiseAndExpression__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_18);
            	    rule__BitwiseAndExpression__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group_1__2__Impl"


    // $ANTLR start "rule__BitwiseAndExpression__Group_1_1__0"
    // InternalLTLFormula.g:4796:1: rule__BitwiseAndExpression__Group_1_1__0 : rule__BitwiseAndExpression__Group_1_1__0__Impl rule__BitwiseAndExpression__Group_1_1__1 ;
    public final void rule__BitwiseAndExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4800:1: ( rule__BitwiseAndExpression__Group_1_1__0__Impl rule__BitwiseAndExpression__Group_1_1__1 )
            // InternalLTLFormula.g:4801:2: rule__BitwiseAndExpression__Group_1_1__0__Impl rule__BitwiseAndExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__BitwiseAndExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseAndExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group_1_1__0"


    // $ANTLR start "rule__BitwiseAndExpression__Group_1_1__0__Impl"
    // InternalLTLFormula.g:4808:1: rule__BitwiseAndExpression__Group_1_1__0__Impl : ( ( rule__BitwiseAndExpression__OperatorAssignment_1_1_0 ) ) ;
    public final void rule__BitwiseAndExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4812:1: ( ( ( rule__BitwiseAndExpression__OperatorAssignment_1_1_0 ) ) )
            // InternalLTLFormula.g:4813:1: ( ( rule__BitwiseAndExpression__OperatorAssignment_1_1_0 ) )
            {
            // InternalLTLFormula.g:4813:1: ( ( rule__BitwiseAndExpression__OperatorAssignment_1_1_0 ) )
            // InternalLTLFormula.g:4814:2: ( rule__BitwiseAndExpression__OperatorAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseAndExpressionAccess().getOperatorAssignment_1_1_0()); 
            }
            // InternalLTLFormula.g:4815:2: ( rule__BitwiseAndExpression__OperatorAssignment_1_1_0 )
            // InternalLTLFormula.g:4815:3: rule__BitwiseAndExpression__OperatorAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseAndExpression__OperatorAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseAndExpressionAccess().getOperatorAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__BitwiseAndExpression__Group_1_1__1"
    // InternalLTLFormula.g:4823:1: rule__BitwiseAndExpression__Group_1_1__1 : rule__BitwiseAndExpression__Group_1_1__1__Impl ;
    public final void rule__BitwiseAndExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4827:1: ( rule__BitwiseAndExpression__Group_1_1__1__Impl )
            // InternalLTLFormula.g:4828:2: rule__BitwiseAndExpression__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseAndExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group_1_1__1"


    // $ANTLR start "rule__BitwiseAndExpression__Group_1_1__1__Impl"
    // InternalLTLFormula.g:4834:1: rule__BitwiseAndExpression__Group_1_1__1__Impl : ( ( rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1 ) ) ;
    public final void rule__BitwiseAndExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4838:1: ( ( ( rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1 ) ) )
            // InternalLTLFormula.g:4839:1: ( ( rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1 ) )
            {
            // InternalLTLFormula.g:4839:1: ( ( rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1 ) )
            // InternalLTLFormula.g:4840:2: ( rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }
            // InternalLTLFormula.g:4841:2: ( rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1 )
            // InternalLTLFormula.g:4841:3: rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__BitwiseAndExpression__Group_1_2__0"
    // InternalLTLFormula.g:4850:1: rule__BitwiseAndExpression__Group_1_2__0 : rule__BitwiseAndExpression__Group_1_2__0__Impl rule__BitwiseAndExpression__Group_1_2__1 ;
    public final void rule__BitwiseAndExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4854:1: ( rule__BitwiseAndExpression__Group_1_2__0__Impl rule__BitwiseAndExpression__Group_1_2__1 )
            // InternalLTLFormula.g:4855:2: rule__BitwiseAndExpression__Group_1_2__0__Impl rule__BitwiseAndExpression__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__BitwiseAndExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseAndExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group_1_2__0"


    // $ANTLR start "rule__BitwiseAndExpression__Group_1_2__0__Impl"
    // InternalLTLFormula.g:4862:1: rule__BitwiseAndExpression__Group_1_2__0__Impl : ( '&' ) ;
    public final void rule__BitwiseAndExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4866:1: ( ( '&' ) )
            // InternalLTLFormula.g:4867:1: ( '&' )
            {
            // InternalLTLFormula.g:4867:1: ( '&' )
            // InternalLTLFormula.g:4868:2: '&'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0()); 
            }
            match(input,25,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__BitwiseAndExpression__Group_1_2__1"
    // InternalLTLFormula.g:4877:1: rule__BitwiseAndExpression__Group_1_2__1 : rule__BitwiseAndExpression__Group_1_2__1__Impl ;
    public final void rule__BitwiseAndExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4881:1: ( rule__BitwiseAndExpression__Group_1_2__1__Impl )
            // InternalLTLFormula.g:4882:2: rule__BitwiseAndExpression__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseAndExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group_1_2__1"


    // $ANTLR start "rule__BitwiseAndExpression__Group_1_2__1__Impl"
    // InternalLTLFormula.g:4888:1: rule__BitwiseAndExpression__Group_1_2__1__Impl : ( ( rule__BitwiseAndExpression__SubExpressionsAssignment_1_2_1 ) ) ;
    public final void rule__BitwiseAndExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4892:1: ( ( ( rule__BitwiseAndExpression__SubExpressionsAssignment_1_2_1 ) ) )
            // InternalLTLFormula.g:4893:1: ( ( rule__BitwiseAndExpression__SubExpressionsAssignment_1_2_1 ) )
            {
            // InternalLTLFormula.g:4893:1: ( ( rule__BitwiseAndExpression__SubExpressionsAssignment_1_2_1 ) )
            // InternalLTLFormula.g:4894:2: ( rule__BitwiseAndExpression__SubExpressionsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }
            // InternalLTLFormula.g:4895:2: ( rule__BitwiseAndExpression__SubExpressionsAssignment_1_2_1 )
            // InternalLTLFormula.g:4895:3: rule__BitwiseAndExpression__SubExpressionsAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseAndExpression__SubExpressionsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__CompareOperation__Group__0"
    // InternalLTLFormula.g:4904:1: rule__CompareOperation__Group__0 : rule__CompareOperation__Group__0__Impl rule__CompareOperation__Group__1 ;
    public final void rule__CompareOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4908:1: ( rule__CompareOperation__Group__0__Impl rule__CompareOperation__Group__1 )
            // InternalLTLFormula.g:4909:2: rule__CompareOperation__Group__0__Impl rule__CompareOperation__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__CompareOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CompareOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperation__Group__0"


    // $ANTLR start "rule__CompareOperation__Group__0__Impl"
    // InternalLTLFormula.g:4916:1: rule__CompareOperation__Group__0__Impl : ( ruleNotOrValuedExpression ) ;
    public final void rule__CompareOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4920:1: ( ( ruleNotOrValuedExpression ) )
            // InternalLTLFormula.g:4921:1: ( ruleNotOrValuedExpression )
            {
            // InternalLTLFormula.g:4921:1: ( ruleNotOrValuedExpression )
            // InternalLTLFormula.g:4922:2: ruleNotOrValuedExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperation__Group__0__Impl"


    // $ANTLR start "rule__CompareOperation__Group__1"
    // InternalLTLFormula.g:4931:1: rule__CompareOperation__Group__1 : rule__CompareOperation__Group__1__Impl ;
    public final void rule__CompareOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4935:1: ( rule__CompareOperation__Group__1__Impl )
            // InternalLTLFormula.g:4936:2: rule__CompareOperation__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CompareOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperation__Group__1"


    // $ANTLR start "rule__CompareOperation__Group__1__Impl"
    // InternalLTLFormula.g:4942:1: rule__CompareOperation__Group__1__Impl : ( ( rule__CompareOperation__Group_1__0 )? ) ;
    public final void rule__CompareOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4946:1: ( ( ( rule__CompareOperation__Group_1__0 )? ) )
            // InternalLTLFormula.g:4947:1: ( ( rule__CompareOperation__Group_1__0 )? )
            {
            // InternalLTLFormula.g:4947:1: ( ( rule__CompareOperation__Group_1__0 )? )
            // InternalLTLFormula.g:4948:2: ( rule__CompareOperation__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperationAccess().getGroup_1()); 
            }
            // InternalLTLFormula.g:4949:2: ( rule__CompareOperation__Group_1__0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( ((LA46_0>=44 && LA46_0<=49)) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalLTLFormula.g:4949:3: rule__CompareOperation__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__CompareOperation__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperationAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperation__Group__1__Impl"


    // $ANTLR start "rule__CompareOperation__Group_1__0"
    // InternalLTLFormula.g:4958:1: rule__CompareOperation__Group_1__0 : rule__CompareOperation__Group_1__0__Impl rule__CompareOperation__Group_1__1 ;
    public final void rule__CompareOperation__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4962:1: ( rule__CompareOperation__Group_1__0__Impl rule__CompareOperation__Group_1__1 )
            // InternalLTLFormula.g:4963:2: rule__CompareOperation__Group_1__0__Impl rule__CompareOperation__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__CompareOperation__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CompareOperation__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperation__Group_1__0"


    // $ANTLR start "rule__CompareOperation__Group_1__0__Impl"
    // InternalLTLFormula.g:4970:1: rule__CompareOperation__Group_1__0__Impl : ( () ) ;
    public final void rule__CompareOperation__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4974:1: ( ( () ) )
            // InternalLTLFormula.g:4975:1: ( () )
            {
            // InternalLTLFormula.g:4975:1: ( () )
            // InternalLTLFormula.g:4976:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }
            // InternalLTLFormula.g:4977:2: ()
            // InternalLTLFormula.g:4977:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperation__Group_1__0__Impl"


    // $ANTLR start "rule__CompareOperation__Group_1__1"
    // InternalLTLFormula.g:4985:1: rule__CompareOperation__Group_1__1 : rule__CompareOperation__Group_1__1__Impl rule__CompareOperation__Group_1__2 ;
    public final void rule__CompareOperation__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:4989:1: ( rule__CompareOperation__Group_1__1__Impl rule__CompareOperation__Group_1__2 )
            // InternalLTLFormula.g:4990:2: rule__CompareOperation__Group_1__1__Impl rule__CompareOperation__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__CompareOperation__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CompareOperation__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperation__Group_1__1"


    // $ANTLR start "rule__CompareOperation__Group_1__1__Impl"
    // InternalLTLFormula.g:4997:1: rule__CompareOperation__Group_1__1__Impl : ( ( rule__CompareOperation__OperatorAssignment_1_1 ) ) ;
    public final void rule__CompareOperation__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5001:1: ( ( ( rule__CompareOperation__OperatorAssignment_1_1 ) ) )
            // InternalLTLFormula.g:5002:1: ( ( rule__CompareOperation__OperatorAssignment_1_1 ) )
            {
            // InternalLTLFormula.g:5002:1: ( ( rule__CompareOperation__OperatorAssignment_1_1 ) )
            // InternalLTLFormula.g:5003:2: ( rule__CompareOperation__OperatorAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperationAccess().getOperatorAssignment_1_1()); 
            }
            // InternalLTLFormula.g:5004:2: ( rule__CompareOperation__OperatorAssignment_1_1 )
            // InternalLTLFormula.g:5004:3: rule__CompareOperation__OperatorAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CompareOperation__OperatorAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperationAccess().getOperatorAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperation__Group_1__1__Impl"


    // $ANTLR start "rule__CompareOperation__Group_1__2"
    // InternalLTLFormula.g:5012:1: rule__CompareOperation__Group_1__2 : rule__CompareOperation__Group_1__2__Impl ;
    public final void rule__CompareOperation__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5016:1: ( rule__CompareOperation__Group_1__2__Impl )
            // InternalLTLFormula.g:5017:2: rule__CompareOperation__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CompareOperation__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperation__Group_1__2"


    // $ANTLR start "rule__CompareOperation__Group_1__2__Impl"
    // InternalLTLFormula.g:5023:1: rule__CompareOperation__Group_1__2__Impl : ( ( rule__CompareOperation__SubExpressionsAssignment_1_2 ) ) ;
    public final void rule__CompareOperation__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5027:1: ( ( ( rule__CompareOperation__SubExpressionsAssignment_1_2 ) ) )
            // InternalLTLFormula.g:5028:1: ( ( rule__CompareOperation__SubExpressionsAssignment_1_2 ) )
            {
            // InternalLTLFormula.g:5028:1: ( ( rule__CompareOperation__SubExpressionsAssignment_1_2 ) )
            // InternalLTLFormula.g:5029:2: ( rule__CompareOperation__SubExpressionsAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_1_2()); 
            }
            // InternalLTLFormula.g:5030:2: ( rule__CompareOperation__SubExpressionsAssignment_1_2 )
            // InternalLTLFormula.g:5030:3: rule__CompareOperation__SubExpressionsAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CompareOperation__SubExpressionsAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperation__Group_1__2__Impl"


    // $ANTLR start "rule__BitwiseNotExpression__Group_0__0"
    // InternalLTLFormula.g:5039:1: rule__BitwiseNotExpression__Group_0__0 : rule__BitwiseNotExpression__Group_0__0__Impl rule__BitwiseNotExpression__Group_0__1 ;
    public final void rule__BitwiseNotExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5043:1: ( rule__BitwiseNotExpression__Group_0__0__Impl rule__BitwiseNotExpression__Group_0__1 )
            // InternalLTLFormula.g:5044:2: rule__BitwiseNotExpression__Group_0__0__Impl rule__BitwiseNotExpression__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__BitwiseNotExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseNotExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseNotExpression__Group_0__0"


    // $ANTLR start "rule__BitwiseNotExpression__Group_0__0__Impl"
    // InternalLTLFormula.g:5051:1: rule__BitwiseNotExpression__Group_0__0__Impl : ( () ) ;
    public final void rule__BitwiseNotExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5055:1: ( ( () ) )
            // InternalLTLFormula.g:5056:1: ( () )
            {
            // InternalLTLFormula.g:5056:1: ( () )
            // InternalLTLFormula.g:5057:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseNotExpressionAccess().getOperatorExpressionAction_0_0()); 
            }
            // InternalLTLFormula.g:5058:2: ()
            // InternalLTLFormula.g:5058:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseNotExpressionAccess().getOperatorExpressionAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseNotExpression__Group_0__0__Impl"


    // $ANTLR start "rule__BitwiseNotExpression__Group_0__1"
    // InternalLTLFormula.g:5066:1: rule__BitwiseNotExpression__Group_0__1 : rule__BitwiseNotExpression__Group_0__1__Impl rule__BitwiseNotExpression__Group_0__2 ;
    public final void rule__BitwiseNotExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5070:1: ( rule__BitwiseNotExpression__Group_0__1__Impl rule__BitwiseNotExpression__Group_0__2 )
            // InternalLTLFormula.g:5071:2: rule__BitwiseNotExpression__Group_0__1__Impl rule__BitwiseNotExpression__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__BitwiseNotExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseNotExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseNotExpression__Group_0__1"


    // $ANTLR start "rule__BitwiseNotExpression__Group_0__1__Impl"
    // InternalLTLFormula.g:5078:1: rule__BitwiseNotExpression__Group_0__1__Impl : ( ( rule__BitwiseNotExpression__OperatorAssignment_0_1 ) ) ;
    public final void rule__BitwiseNotExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5082:1: ( ( ( rule__BitwiseNotExpression__OperatorAssignment_0_1 ) ) )
            // InternalLTLFormula.g:5083:1: ( ( rule__BitwiseNotExpression__OperatorAssignment_0_1 ) )
            {
            // InternalLTLFormula.g:5083:1: ( ( rule__BitwiseNotExpression__OperatorAssignment_0_1 ) )
            // InternalLTLFormula.g:5084:2: ( rule__BitwiseNotExpression__OperatorAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseNotExpressionAccess().getOperatorAssignment_0_1()); 
            }
            // InternalLTLFormula.g:5085:2: ( rule__BitwiseNotExpression__OperatorAssignment_0_1 )
            // InternalLTLFormula.g:5085:3: rule__BitwiseNotExpression__OperatorAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseNotExpression__OperatorAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseNotExpressionAccess().getOperatorAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseNotExpression__Group_0__1__Impl"


    // $ANTLR start "rule__BitwiseNotExpression__Group_0__2"
    // InternalLTLFormula.g:5093:1: rule__BitwiseNotExpression__Group_0__2 : rule__BitwiseNotExpression__Group_0__2__Impl ;
    public final void rule__BitwiseNotExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5097:1: ( rule__BitwiseNotExpression__Group_0__2__Impl )
            // InternalLTLFormula.g:5098:2: rule__BitwiseNotExpression__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseNotExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseNotExpression__Group_0__2"


    // $ANTLR start "rule__BitwiseNotExpression__Group_0__2__Impl"
    // InternalLTLFormula.g:5104:1: rule__BitwiseNotExpression__Group_0__2__Impl : ( ( rule__BitwiseNotExpression__SubExpressionsAssignment_0_2 ) ) ;
    public final void rule__BitwiseNotExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5108:1: ( ( ( rule__BitwiseNotExpression__SubExpressionsAssignment_0_2 ) ) )
            // InternalLTLFormula.g:5109:1: ( ( rule__BitwiseNotExpression__SubExpressionsAssignment_0_2 ) )
            {
            // InternalLTLFormula.g:5109:1: ( ( rule__BitwiseNotExpression__SubExpressionsAssignment_0_2 ) )
            // InternalLTLFormula.g:5110:2: ( rule__BitwiseNotExpression__SubExpressionsAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseNotExpressionAccess().getSubExpressionsAssignment_0_2()); 
            }
            // InternalLTLFormula.g:5111:2: ( rule__BitwiseNotExpression__SubExpressionsAssignment_0_2 )
            // InternalLTLFormula.g:5111:3: rule__BitwiseNotExpression__SubExpressionsAssignment_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BitwiseNotExpression__SubExpressionsAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseNotExpressionAccess().getSubExpressionsAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseNotExpression__Group_0__2__Impl"


    // $ANTLR start "rule__NotExpression__Group_0__0"
    // InternalLTLFormula.g:5120:1: rule__NotExpression__Group_0__0 : rule__NotExpression__Group_0__0__Impl rule__NotExpression__Group_0__1 ;
    public final void rule__NotExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5124:1: ( rule__NotExpression__Group_0__0__Impl rule__NotExpression__Group_0__1 )
            // InternalLTLFormula.g:5125:2: rule__NotExpression__Group_0__0__Impl rule__NotExpression__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__NotExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NotExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NotExpression__Group_0__0"


    // $ANTLR start "rule__NotExpression__Group_0__0__Impl"
    // InternalLTLFormula.g:5132:1: rule__NotExpression__Group_0__0__Impl : ( () ) ;
    public final void rule__NotExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5136:1: ( ( () ) )
            // InternalLTLFormula.g:5137:1: ( () )
            {
            // InternalLTLFormula.g:5137:1: ( () )
            // InternalLTLFormula.g:5138:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0()); 
            }
            // InternalLTLFormula.g:5139:2: ()
            // InternalLTLFormula.g:5139:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NotExpression__Group_0__0__Impl"


    // $ANTLR start "rule__NotExpression__Group_0__1"
    // InternalLTLFormula.g:5147:1: rule__NotExpression__Group_0__1 : rule__NotExpression__Group_0__1__Impl rule__NotExpression__Group_0__2 ;
    public final void rule__NotExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5151:1: ( rule__NotExpression__Group_0__1__Impl rule__NotExpression__Group_0__2 )
            // InternalLTLFormula.g:5152:2: rule__NotExpression__Group_0__1__Impl rule__NotExpression__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__NotExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NotExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NotExpression__Group_0__1"


    // $ANTLR start "rule__NotExpression__Group_0__1__Impl"
    // InternalLTLFormula.g:5159:1: rule__NotExpression__Group_0__1__Impl : ( ( rule__NotExpression__OperatorAssignment_0_1 ) ) ;
    public final void rule__NotExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5163:1: ( ( ( rule__NotExpression__OperatorAssignment_0_1 ) ) )
            // InternalLTLFormula.g:5164:1: ( ( rule__NotExpression__OperatorAssignment_0_1 ) )
            {
            // InternalLTLFormula.g:5164:1: ( ( rule__NotExpression__OperatorAssignment_0_1 ) )
            // InternalLTLFormula.g:5165:2: ( rule__NotExpression__OperatorAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1()); 
            }
            // InternalLTLFormula.g:5166:2: ( rule__NotExpression__OperatorAssignment_0_1 )
            // InternalLTLFormula.g:5166:3: rule__NotExpression__OperatorAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NotExpression__OperatorAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NotExpression__Group_0__1__Impl"


    // $ANTLR start "rule__NotExpression__Group_0__2"
    // InternalLTLFormula.g:5174:1: rule__NotExpression__Group_0__2 : rule__NotExpression__Group_0__2__Impl ;
    public final void rule__NotExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5178:1: ( rule__NotExpression__Group_0__2__Impl )
            // InternalLTLFormula.g:5179:2: rule__NotExpression__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NotExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NotExpression__Group_0__2"


    // $ANTLR start "rule__NotExpression__Group_0__2__Impl"
    // InternalLTLFormula.g:5185:1: rule__NotExpression__Group_0__2__Impl : ( ( rule__NotExpression__SubExpressionsAssignment_0_2 ) ) ;
    public final void rule__NotExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5189:1: ( ( ( rule__NotExpression__SubExpressionsAssignment_0_2 ) ) )
            // InternalLTLFormula.g:5190:1: ( ( rule__NotExpression__SubExpressionsAssignment_0_2 ) )
            {
            // InternalLTLFormula.g:5190:1: ( ( rule__NotExpression__SubExpressionsAssignment_0_2 ) )
            // InternalLTLFormula.g:5191:2: ( rule__NotExpression__SubExpressionsAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2()); 
            }
            // InternalLTLFormula.g:5192:2: ( rule__NotExpression__SubExpressionsAssignment_0_2 )
            // InternalLTLFormula.g:5192:3: rule__NotExpression__SubExpressionsAssignment_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NotExpression__SubExpressionsAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NotExpression__Group_0__2__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group__0"
    // InternalLTLFormula.g:5201:1: rule__ShiftExpressions__Group__0 : rule__ShiftExpressions__Group__0__Impl rule__ShiftExpressions__Group__1 ;
    public final void rule__ShiftExpressions__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5205:1: ( rule__ShiftExpressions__Group__0__Impl rule__ShiftExpressions__Group__1 )
            // InternalLTLFormula.g:5206:2: rule__ShiftExpressions__Group__0__Impl rule__ShiftExpressions__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ShiftExpressions__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group__0"


    // $ANTLR start "rule__ShiftExpressions__Group__0__Impl"
    // InternalLTLFormula.g:5213:1: rule__ShiftExpressions__Group__0__Impl : ( ruleSumExpression ) ;
    public final void rule__ShiftExpressions__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5217:1: ( ( ruleSumExpression ) )
            // InternalLTLFormula.g:5218:1: ( ruleSumExpression )
            {
            // InternalLTLFormula.g:5218:1: ( ruleSumExpression )
            // InternalLTLFormula.g:5219:2: ruleSumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getSumExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getSumExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group__0__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group__1"
    // InternalLTLFormula.g:5228:1: rule__ShiftExpressions__Group__1 : rule__ShiftExpressions__Group__1__Impl ;
    public final void rule__ShiftExpressions__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5232:1: ( rule__ShiftExpressions__Group__1__Impl )
            // InternalLTLFormula.g:5233:2: rule__ShiftExpressions__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group__1"


    // $ANTLR start "rule__ShiftExpressions__Group__1__Impl"
    // InternalLTLFormula.g:5239:1: rule__ShiftExpressions__Group__1__Impl : ( ( rule__ShiftExpressions__Alternatives_1 )* ) ;
    public final void rule__ShiftExpressions__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5243:1: ( ( ( rule__ShiftExpressions__Alternatives_1 )* ) )
            // InternalLTLFormula.g:5244:1: ( ( rule__ShiftExpressions__Alternatives_1 )* )
            {
            // InternalLTLFormula.g:5244:1: ( ( rule__ShiftExpressions__Alternatives_1 )* )
            // InternalLTLFormula.g:5245:2: ( rule__ShiftExpressions__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getAlternatives_1()); 
            }
            // InternalLTLFormula.g:5246:2: ( rule__ShiftExpressions__Alternatives_1 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( ((LA47_0>=35 && LA47_0<=37)) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalLTLFormula.g:5246:3: rule__ShiftExpressions__Alternatives_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_23);
            	    rule__ShiftExpressions__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group__1__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_0__0"
    // InternalLTLFormula.g:5255:1: rule__ShiftExpressions__Group_1_0__0 : rule__ShiftExpressions__Group_1_0__0__Impl rule__ShiftExpressions__Group_1_0__1 ;
    public final void rule__ShiftExpressions__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5259:1: ( rule__ShiftExpressions__Group_1_0__0__Impl rule__ShiftExpressions__Group_1_0__1 )
            // InternalLTLFormula.g:5260:2: rule__ShiftExpressions__Group_1_0__0__Impl rule__ShiftExpressions__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__ShiftExpressions__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_0__0"


    // $ANTLR start "rule__ShiftExpressions__Group_1_0__0__Impl"
    // InternalLTLFormula.g:5267:1: rule__ShiftExpressions__Group_1_0__0__Impl : ( () ) ;
    public final void rule__ShiftExpressions__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5271:1: ( ( () ) )
            // InternalLTLFormula.g:5272:1: ( () )
            {
            // InternalLTLFormula.g:5272:1: ( () )
            // InternalLTLFormula.g:5273:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_0_0()); 
            }
            // InternalLTLFormula.g:5274:2: ()
            // InternalLTLFormula.g:5274:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_0__0__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_0__1"
    // InternalLTLFormula.g:5282:1: rule__ShiftExpressions__Group_1_0__1 : rule__ShiftExpressions__Group_1_0__1__Impl rule__ShiftExpressions__Group_1_0__2 ;
    public final void rule__ShiftExpressions__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5286:1: ( rule__ShiftExpressions__Group_1_0__1__Impl rule__ShiftExpressions__Group_1_0__2 )
            // InternalLTLFormula.g:5287:2: rule__ShiftExpressions__Group_1_0__1__Impl rule__ShiftExpressions__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ShiftExpressions__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_0__1"


    // $ANTLR start "rule__ShiftExpressions__Group_1_0__1__Impl"
    // InternalLTLFormula.g:5294:1: rule__ShiftExpressions__Group_1_0__1__Impl : ( ( rule__ShiftExpressions__OperatorAssignment_1_0_1 ) ) ;
    public final void rule__ShiftExpressions__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5298:1: ( ( ( rule__ShiftExpressions__OperatorAssignment_1_0_1 ) ) )
            // InternalLTLFormula.g:5299:1: ( ( rule__ShiftExpressions__OperatorAssignment_1_0_1 ) )
            {
            // InternalLTLFormula.g:5299:1: ( ( rule__ShiftExpressions__OperatorAssignment_1_0_1 ) )
            // InternalLTLFormula.g:5300:2: ( rule__ShiftExpressions__OperatorAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getOperatorAssignment_1_0_1()); 
            }
            // InternalLTLFormula.g:5301:2: ( rule__ShiftExpressions__OperatorAssignment_1_0_1 )
            // InternalLTLFormula.g:5301:3: rule__ShiftExpressions__OperatorAssignment_1_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__OperatorAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getOperatorAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_0__1__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_0__2"
    // InternalLTLFormula.g:5309:1: rule__ShiftExpressions__Group_1_0__2 : rule__ShiftExpressions__Group_1_0__2__Impl rule__ShiftExpressions__Group_1_0__3 ;
    public final void rule__ShiftExpressions__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5313:1: ( rule__ShiftExpressions__Group_1_0__2__Impl rule__ShiftExpressions__Group_1_0__3 )
            // InternalLTLFormula.g:5314:2: rule__ShiftExpressions__Group_1_0__2__Impl rule__ShiftExpressions__Group_1_0__3
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__ShiftExpressions__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_0__2"


    // $ANTLR start "rule__ShiftExpressions__Group_1_0__2__Impl"
    // InternalLTLFormula.g:5321:1: rule__ShiftExpressions__Group_1_0__2__Impl : ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_0_2 ) ) ;
    public final void rule__ShiftExpressions__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5325:1: ( ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_0_2 ) ) )
            // InternalLTLFormula.g:5326:1: ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_0_2 ) )
            {
            // InternalLTLFormula.g:5326:1: ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_0_2 ) )
            // InternalLTLFormula.g:5327:2: ( rule__ShiftExpressions__SubExpressionsAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getSubExpressionsAssignment_1_0_2()); 
            }
            // InternalLTLFormula.g:5328:2: ( rule__ShiftExpressions__SubExpressionsAssignment_1_0_2 )
            // InternalLTLFormula.g:5328:3: rule__ShiftExpressions__SubExpressionsAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__SubExpressionsAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getSubExpressionsAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_0__2__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_0__3"
    // InternalLTLFormula.g:5336:1: rule__ShiftExpressions__Group_1_0__3 : rule__ShiftExpressions__Group_1_0__3__Impl ;
    public final void rule__ShiftExpressions__Group_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5340:1: ( rule__ShiftExpressions__Group_1_0__3__Impl )
            // InternalLTLFormula.g:5341:2: rule__ShiftExpressions__Group_1_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_0__3"


    // $ANTLR start "rule__ShiftExpressions__Group_1_0__3__Impl"
    // InternalLTLFormula.g:5347:1: rule__ShiftExpressions__Group_1_0__3__Impl : ( ( rule__ShiftExpressions__Group_1_0_3__0 )* ) ;
    public final void rule__ShiftExpressions__Group_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5351:1: ( ( ( rule__ShiftExpressions__Group_1_0_3__0 )* ) )
            // InternalLTLFormula.g:5352:1: ( ( rule__ShiftExpressions__Group_1_0_3__0 )* )
            {
            // InternalLTLFormula.g:5352:1: ( ( rule__ShiftExpressions__Group_1_0_3__0 )* )
            // InternalLTLFormula.g:5353:2: ( rule__ShiftExpressions__Group_1_0_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getGroup_1_0_3()); 
            }
            // InternalLTLFormula.g:5354:2: ( rule__ShiftExpressions__Group_1_0_3__0 )*
            loop48:
            do {
                int alt48=2;
                alt48 = dfa48.predict(input);
                switch (alt48) {
            	case 1 :
            	    // InternalLTLFormula.g:5354:3: rule__ShiftExpressions__Group_1_0_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    rule__ShiftExpressions__Group_1_0_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getGroup_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_0__3__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_0_3__0"
    // InternalLTLFormula.g:5363:1: rule__ShiftExpressions__Group_1_0_3__0 : rule__ShiftExpressions__Group_1_0_3__0__Impl rule__ShiftExpressions__Group_1_0_3__1 ;
    public final void rule__ShiftExpressions__Group_1_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5367:1: ( rule__ShiftExpressions__Group_1_0_3__0__Impl rule__ShiftExpressions__Group_1_0_3__1 )
            // InternalLTLFormula.g:5368:2: rule__ShiftExpressions__Group_1_0_3__0__Impl rule__ShiftExpressions__Group_1_0_3__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ShiftExpressions__Group_1_0_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_0_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_0_3__0"


    // $ANTLR start "rule__ShiftExpressions__Group_1_0_3__0__Impl"
    // InternalLTLFormula.g:5375:1: rule__ShiftExpressions__Group_1_0_3__0__Impl : ( '<<' ) ;
    public final void rule__ShiftExpressions__Group_1_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5379:1: ( ( '<<' ) )
            // InternalLTLFormula.g:5380:1: ( '<<' )
            {
            // InternalLTLFormula.g:5380:1: ( '<<' )
            // InternalLTLFormula.g:5381:2: '<<'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getLessThanSignLessThanSignKeyword_1_0_3_0()); 
            }
            match(input,35,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getLessThanSignLessThanSignKeyword_1_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_0_3__0__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_0_3__1"
    // InternalLTLFormula.g:5390:1: rule__ShiftExpressions__Group_1_0_3__1 : rule__ShiftExpressions__Group_1_0_3__1__Impl ;
    public final void rule__ShiftExpressions__Group_1_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5394:1: ( rule__ShiftExpressions__Group_1_0_3__1__Impl )
            // InternalLTLFormula.g:5395:2: rule__ShiftExpressions__Group_1_0_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_0_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_0_3__1"


    // $ANTLR start "rule__ShiftExpressions__Group_1_0_3__1__Impl"
    // InternalLTLFormula.g:5401:1: rule__ShiftExpressions__Group_1_0_3__1__Impl : ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_0_3_1 ) ) ;
    public final void rule__ShiftExpressions__Group_1_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5405:1: ( ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_0_3_1 ) ) )
            // InternalLTLFormula.g:5406:1: ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_0_3_1 ) )
            {
            // InternalLTLFormula.g:5406:1: ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_0_3_1 ) )
            // InternalLTLFormula.g:5407:2: ( rule__ShiftExpressions__SubExpressionsAssignment_1_0_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getSubExpressionsAssignment_1_0_3_1()); 
            }
            // InternalLTLFormula.g:5408:2: ( rule__ShiftExpressions__SubExpressionsAssignment_1_0_3_1 )
            // InternalLTLFormula.g:5408:3: rule__ShiftExpressions__SubExpressionsAssignment_1_0_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__SubExpressionsAssignment_1_0_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getSubExpressionsAssignment_1_0_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_0_3__1__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_1__0"
    // InternalLTLFormula.g:5417:1: rule__ShiftExpressions__Group_1_1__0 : rule__ShiftExpressions__Group_1_1__0__Impl rule__ShiftExpressions__Group_1_1__1 ;
    public final void rule__ShiftExpressions__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5421:1: ( rule__ShiftExpressions__Group_1_1__0__Impl rule__ShiftExpressions__Group_1_1__1 )
            // InternalLTLFormula.g:5422:2: rule__ShiftExpressions__Group_1_1__0__Impl rule__ShiftExpressions__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__ShiftExpressions__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_1__0"


    // $ANTLR start "rule__ShiftExpressions__Group_1_1__0__Impl"
    // InternalLTLFormula.g:5429:1: rule__ShiftExpressions__Group_1_1__0__Impl : ( () ) ;
    public final void rule__ShiftExpressions__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5433:1: ( ( () ) )
            // InternalLTLFormula.g:5434:1: ( () )
            {
            // InternalLTLFormula.g:5434:1: ( () )
            // InternalLTLFormula.g:5435:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_1_0()); 
            }
            // InternalLTLFormula.g:5436:2: ()
            // InternalLTLFormula.g:5436:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_1__0__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_1__1"
    // InternalLTLFormula.g:5444:1: rule__ShiftExpressions__Group_1_1__1 : rule__ShiftExpressions__Group_1_1__1__Impl rule__ShiftExpressions__Group_1_1__2 ;
    public final void rule__ShiftExpressions__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5448:1: ( rule__ShiftExpressions__Group_1_1__1__Impl rule__ShiftExpressions__Group_1_1__2 )
            // InternalLTLFormula.g:5449:2: rule__ShiftExpressions__Group_1_1__1__Impl rule__ShiftExpressions__Group_1_1__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ShiftExpressions__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_1__1"


    // $ANTLR start "rule__ShiftExpressions__Group_1_1__1__Impl"
    // InternalLTLFormula.g:5456:1: rule__ShiftExpressions__Group_1_1__1__Impl : ( ( rule__ShiftExpressions__OperatorAssignment_1_1_1 ) ) ;
    public final void rule__ShiftExpressions__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5460:1: ( ( ( rule__ShiftExpressions__OperatorAssignment_1_1_1 ) ) )
            // InternalLTLFormula.g:5461:1: ( ( rule__ShiftExpressions__OperatorAssignment_1_1_1 ) )
            {
            // InternalLTLFormula.g:5461:1: ( ( rule__ShiftExpressions__OperatorAssignment_1_1_1 ) )
            // InternalLTLFormula.g:5462:2: ( rule__ShiftExpressions__OperatorAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getOperatorAssignment_1_1_1()); 
            }
            // InternalLTLFormula.g:5463:2: ( rule__ShiftExpressions__OperatorAssignment_1_1_1 )
            // InternalLTLFormula.g:5463:3: rule__ShiftExpressions__OperatorAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__OperatorAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getOperatorAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_1__1__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_1__2"
    // InternalLTLFormula.g:5471:1: rule__ShiftExpressions__Group_1_1__2 : rule__ShiftExpressions__Group_1_1__2__Impl rule__ShiftExpressions__Group_1_1__3 ;
    public final void rule__ShiftExpressions__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5475:1: ( rule__ShiftExpressions__Group_1_1__2__Impl rule__ShiftExpressions__Group_1_1__3 )
            // InternalLTLFormula.g:5476:2: rule__ShiftExpressions__Group_1_1__2__Impl rule__ShiftExpressions__Group_1_1__3
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__ShiftExpressions__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_1__2"


    // $ANTLR start "rule__ShiftExpressions__Group_1_1__2__Impl"
    // InternalLTLFormula.g:5483:1: rule__ShiftExpressions__Group_1_1__2__Impl : ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_1_2 ) ) ;
    public final void rule__ShiftExpressions__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5487:1: ( ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_1_2 ) ) )
            // InternalLTLFormula.g:5488:1: ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_1_2 ) )
            {
            // InternalLTLFormula.g:5488:1: ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_1_2 ) )
            // InternalLTLFormula.g:5489:2: ( rule__ShiftExpressions__SubExpressionsAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getSubExpressionsAssignment_1_1_2()); 
            }
            // InternalLTLFormula.g:5490:2: ( rule__ShiftExpressions__SubExpressionsAssignment_1_1_2 )
            // InternalLTLFormula.g:5490:3: rule__ShiftExpressions__SubExpressionsAssignment_1_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__SubExpressionsAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getSubExpressionsAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_1__2__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_1__3"
    // InternalLTLFormula.g:5498:1: rule__ShiftExpressions__Group_1_1__3 : rule__ShiftExpressions__Group_1_1__3__Impl ;
    public final void rule__ShiftExpressions__Group_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5502:1: ( rule__ShiftExpressions__Group_1_1__3__Impl )
            // InternalLTLFormula.g:5503:2: rule__ShiftExpressions__Group_1_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_1__3"


    // $ANTLR start "rule__ShiftExpressions__Group_1_1__3__Impl"
    // InternalLTLFormula.g:5509:1: rule__ShiftExpressions__Group_1_1__3__Impl : ( ( rule__ShiftExpressions__Group_1_1_3__0 )* ) ;
    public final void rule__ShiftExpressions__Group_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5513:1: ( ( ( rule__ShiftExpressions__Group_1_1_3__0 )* ) )
            // InternalLTLFormula.g:5514:1: ( ( rule__ShiftExpressions__Group_1_1_3__0 )* )
            {
            // InternalLTLFormula.g:5514:1: ( ( rule__ShiftExpressions__Group_1_1_3__0 )* )
            // InternalLTLFormula.g:5515:2: ( rule__ShiftExpressions__Group_1_1_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getGroup_1_1_3()); 
            }
            // InternalLTLFormula.g:5516:2: ( rule__ShiftExpressions__Group_1_1_3__0 )*
            loop49:
            do {
                int alt49=2;
                alt49 = dfa49.predict(input);
                switch (alt49) {
            	case 1 :
            	    // InternalLTLFormula.g:5516:3: rule__ShiftExpressions__Group_1_1_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    rule__ShiftExpressions__Group_1_1_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getGroup_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_1__3__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_1_3__0"
    // InternalLTLFormula.g:5525:1: rule__ShiftExpressions__Group_1_1_3__0 : rule__ShiftExpressions__Group_1_1_3__0__Impl rule__ShiftExpressions__Group_1_1_3__1 ;
    public final void rule__ShiftExpressions__Group_1_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5529:1: ( rule__ShiftExpressions__Group_1_1_3__0__Impl rule__ShiftExpressions__Group_1_1_3__1 )
            // InternalLTLFormula.g:5530:2: rule__ShiftExpressions__Group_1_1_3__0__Impl rule__ShiftExpressions__Group_1_1_3__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ShiftExpressions__Group_1_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_1_3__0"


    // $ANTLR start "rule__ShiftExpressions__Group_1_1_3__0__Impl"
    // InternalLTLFormula.g:5537:1: rule__ShiftExpressions__Group_1_1_3__0__Impl : ( '>>' ) ;
    public final void rule__ShiftExpressions__Group_1_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5541:1: ( ( '>>' ) )
            // InternalLTLFormula.g:5542:1: ( '>>' )
            {
            // InternalLTLFormula.g:5542:1: ( '>>' )
            // InternalLTLFormula.g:5543:2: '>>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getGreaterThanSignGreaterThanSignKeyword_1_1_3_0()); 
            }
            match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getGreaterThanSignGreaterThanSignKeyword_1_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_1_3__0__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_1_3__1"
    // InternalLTLFormula.g:5552:1: rule__ShiftExpressions__Group_1_1_3__1 : rule__ShiftExpressions__Group_1_1_3__1__Impl ;
    public final void rule__ShiftExpressions__Group_1_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5556:1: ( rule__ShiftExpressions__Group_1_1_3__1__Impl )
            // InternalLTLFormula.g:5557:2: rule__ShiftExpressions__Group_1_1_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_1_3__1"


    // $ANTLR start "rule__ShiftExpressions__Group_1_1_3__1__Impl"
    // InternalLTLFormula.g:5563:1: rule__ShiftExpressions__Group_1_1_3__1__Impl : ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_1_3_1 ) ) ;
    public final void rule__ShiftExpressions__Group_1_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5567:1: ( ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_1_3_1 ) ) )
            // InternalLTLFormula.g:5568:1: ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_1_3_1 ) )
            {
            // InternalLTLFormula.g:5568:1: ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_1_3_1 ) )
            // InternalLTLFormula.g:5569:2: ( rule__ShiftExpressions__SubExpressionsAssignment_1_1_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getSubExpressionsAssignment_1_1_3_1()); 
            }
            // InternalLTLFormula.g:5570:2: ( rule__ShiftExpressions__SubExpressionsAssignment_1_1_3_1 )
            // InternalLTLFormula.g:5570:3: rule__ShiftExpressions__SubExpressionsAssignment_1_1_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__SubExpressionsAssignment_1_1_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getSubExpressionsAssignment_1_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_1_3__1__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_2__0"
    // InternalLTLFormula.g:5579:1: rule__ShiftExpressions__Group_1_2__0 : rule__ShiftExpressions__Group_1_2__0__Impl rule__ShiftExpressions__Group_1_2__1 ;
    public final void rule__ShiftExpressions__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5583:1: ( rule__ShiftExpressions__Group_1_2__0__Impl rule__ShiftExpressions__Group_1_2__1 )
            // InternalLTLFormula.g:5584:2: rule__ShiftExpressions__Group_1_2__0__Impl rule__ShiftExpressions__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ShiftExpressions__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_2__0"


    // $ANTLR start "rule__ShiftExpressions__Group_1_2__0__Impl"
    // InternalLTLFormula.g:5591:1: rule__ShiftExpressions__Group_1_2__0__Impl : ( () ) ;
    public final void rule__ShiftExpressions__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5595:1: ( ( () ) )
            // InternalLTLFormula.g:5596:1: ( () )
            {
            // InternalLTLFormula.g:5596:1: ( () )
            // InternalLTLFormula.g:5597:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_2_0()); 
            }
            // InternalLTLFormula.g:5598:2: ()
            // InternalLTLFormula.g:5598:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_2__0__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_2__1"
    // InternalLTLFormula.g:5606:1: rule__ShiftExpressions__Group_1_2__1 : rule__ShiftExpressions__Group_1_2__1__Impl rule__ShiftExpressions__Group_1_2__2 ;
    public final void rule__ShiftExpressions__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5610:1: ( rule__ShiftExpressions__Group_1_2__1__Impl rule__ShiftExpressions__Group_1_2__2 )
            // InternalLTLFormula.g:5611:2: rule__ShiftExpressions__Group_1_2__1__Impl rule__ShiftExpressions__Group_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ShiftExpressions__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_2__1"


    // $ANTLR start "rule__ShiftExpressions__Group_1_2__1__Impl"
    // InternalLTLFormula.g:5618:1: rule__ShiftExpressions__Group_1_2__1__Impl : ( ( rule__ShiftExpressions__OperatorAssignment_1_2_1 ) ) ;
    public final void rule__ShiftExpressions__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5622:1: ( ( ( rule__ShiftExpressions__OperatorAssignment_1_2_1 ) ) )
            // InternalLTLFormula.g:5623:1: ( ( rule__ShiftExpressions__OperatorAssignment_1_2_1 ) )
            {
            // InternalLTLFormula.g:5623:1: ( ( rule__ShiftExpressions__OperatorAssignment_1_2_1 ) )
            // InternalLTLFormula.g:5624:2: ( rule__ShiftExpressions__OperatorAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getOperatorAssignment_1_2_1()); 
            }
            // InternalLTLFormula.g:5625:2: ( rule__ShiftExpressions__OperatorAssignment_1_2_1 )
            // InternalLTLFormula.g:5625:3: rule__ShiftExpressions__OperatorAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__OperatorAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getOperatorAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_2__1__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_2__2"
    // InternalLTLFormula.g:5633:1: rule__ShiftExpressions__Group_1_2__2 : rule__ShiftExpressions__Group_1_2__2__Impl rule__ShiftExpressions__Group_1_2__3 ;
    public final void rule__ShiftExpressions__Group_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5637:1: ( rule__ShiftExpressions__Group_1_2__2__Impl rule__ShiftExpressions__Group_1_2__3 )
            // InternalLTLFormula.g:5638:2: rule__ShiftExpressions__Group_1_2__2__Impl rule__ShiftExpressions__Group_1_2__3
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__ShiftExpressions__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_2__2"


    // $ANTLR start "rule__ShiftExpressions__Group_1_2__2__Impl"
    // InternalLTLFormula.g:5645:1: rule__ShiftExpressions__Group_1_2__2__Impl : ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_2_2 ) ) ;
    public final void rule__ShiftExpressions__Group_1_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5649:1: ( ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_2_2 ) ) )
            // InternalLTLFormula.g:5650:1: ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_2_2 ) )
            {
            // InternalLTLFormula.g:5650:1: ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_2_2 ) )
            // InternalLTLFormula.g:5651:2: ( rule__ShiftExpressions__SubExpressionsAssignment_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getSubExpressionsAssignment_1_2_2()); 
            }
            // InternalLTLFormula.g:5652:2: ( rule__ShiftExpressions__SubExpressionsAssignment_1_2_2 )
            // InternalLTLFormula.g:5652:3: rule__ShiftExpressions__SubExpressionsAssignment_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__SubExpressionsAssignment_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getSubExpressionsAssignment_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_2__2__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_2__3"
    // InternalLTLFormula.g:5660:1: rule__ShiftExpressions__Group_1_2__3 : rule__ShiftExpressions__Group_1_2__3__Impl ;
    public final void rule__ShiftExpressions__Group_1_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5664:1: ( rule__ShiftExpressions__Group_1_2__3__Impl )
            // InternalLTLFormula.g:5665:2: rule__ShiftExpressions__Group_1_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_2__3"


    // $ANTLR start "rule__ShiftExpressions__Group_1_2__3__Impl"
    // InternalLTLFormula.g:5671:1: rule__ShiftExpressions__Group_1_2__3__Impl : ( ( rule__ShiftExpressions__Group_1_2_3__0 )* ) ;
    public final void rule__ShiftExpressions__Group_1_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5675:1: ( ( ( rule__ShiftExpressions__Group_1_2_3__0 )* ) )
            // InternalLTLFormula.g:5676:1: ( ( rule__ShiftExpressions__Group_1_2_3__0 )* )
            {
            // InternalLTLFormula.g:5676:1: ( ( rule__ShiftExpressions__Group_1_2_3__0 )* )
            // InternalLTLFormula.g:5677:2: ( rule__ShiftExpressions__Group_1_2_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getGroup_1_2_3()); 
            }
            // InternalLTLFormula.g:5678:2: ( rule__ShiftExpressions__Group_1_2_3__0 )*
            loop50:
            do {
                int alt50=2;
                alt50 = dfa50.predict(input);
                switch (alt50) {
            	case 1 :
            	    // InternalLTLFormula.g:5678:3: rule__ShiftExpressions__Group_1_2_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_30);
            	    rule__ShiftExpressions__Group_1_2_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getGroup_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_2__3__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_2_3__0"
    // InternalLTLFormula.g:5687:1: rule__ShiftExpressions__Group_1_2_3__0 : rule__ShiftExpressions__Group_1_2_3__0__Impl rule__ShiftExpressions__Group_1_2_3__1 ;
    public final void rule__ShiftExpressions__Group_1_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5691:1: ( rule__ShiftExpressions__Group_1_2_3__0__Impl rule__ShiftExpressions__Group_1_2_3__1 )
            // InternalLTLFormula.g:5692:2: rule__ShiftExpressions__Group_1_2_3__0__Impl rule__ShiftExpressions__Group_1_2_3__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ShiftExpressions__Group_1_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_2_3__0"


    // $ANTLR start "rule__ShiftExpressions__Group_1_2_3__0__Impl"
    // InternalLTLFormula.g:5699:1: rule__ShiftExpressions__Group_1_2_3__0__Impl : ( '>>>' ) ;
    public final void rule__ShiftExpressions__Group_1_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5703:1: ( ( '>>>' ) )
            // InternalLTLFormula.g:5704:1: ( '>>>' )
            {
            // InternalLTLFormula.g:5704:1: ( '>>>' )
            // InternalLTLFormula.g:5705:2: '>>>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_3_0()); 
            }
            match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_2_3__0__Impl"


    // $ANTLR start "rule__ShiftExpressions__Group_1_2_3__1"
    // InternalLTLFormula.g:5714:1: rule__ShiftExpressions__Group_1_2_3__1 : rule__ShiftExpressions__Group_1_2_3__1__Impl ;
    public final void rule__ShiftExpressions__Group_1_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5718:1: ( rule__ShiftExpressions__Group_1_2_3__1__Impl )
            // InternalLTLFormula.g:5719:2: rule__ShiftExpressions__Group_1_2_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__Group_1_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_2_3__1"


    // $ANTLR start "rule__ShiftExpressions__Group_1_2_3__1__Impl"
    // InternalLTLFormula.g:5725:1: rule__ShiftExpressions__Group_1_2_3__1__Impl : ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_2_3_1 ) ) ;
    public final void rule__ShiftExpressions__Group_1_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5729:1: ( ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_2_3_1 ) ) )
            // InternalLTLFormula.g:5730:1: ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_2_3_1 ) )
            {
            // InternalLTLFormula.g:5730:1: ( ( rule__ShiftExpressions__SubExpressionsAssignment_1_2_3_1 ) )
            // InternalLTLFormula.g:5731:2: ( rule__ShiftExpressions__SubExpressionsAssignment_1_2_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getSubExpressionsAssignment_1_2_3_1()); 
            }
            // InternalLTLFormula.g:5732:2: ( rule__ShiftExpressions__SubExpressionsAssignment_1_2_3_1 )
            // InternalLTLFormula.g:5732:3: rule__ShiftExpressions__SubExpressionsAssignment_1_2_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftExpressions__SubExpressionsAssignment_1_2_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getSubExpressionsAssignment_1_2_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__Group_1_2_3__1__Impl"


    // $ANTLR start "rule__ShiftRightExpression__Group__0"
    // InternalLTLFormula.g:5741:1: rule__ShiftRightExpression__Group__0 : rule__ShiftRightExpression__Group__0__Impl rule__ShiftRightExpression__Group__1 ;
    public final void rule__ShiftRightExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5745:1: ( rule__ShiftRightExpression__Group__0__Impl rule__ShiftRightExpression__Group__1 )
            // InternalLTLFormula.g:5746:2: rule__ShiftRightExpression__Group__0__Impl rule__ShiftRightExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__ShiftRightExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group__0"


    // $ANTLR start "rule__ShiftRightExpression__Group__0__Impl"
    // InternalLTLFormula.g:5753:1: rule__ShiftRightExpression__Group__0__Impl : ( ruleSumExpression ) ;
    public final void rule__ShiftRightExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5757:1: ( ( ruleSumExpression ) )
            // InternalLTLFormula.g:5758:1: ( ruleSumExpression )
            {
            // InternalLTLFormula.g:5758:1: ( ruleSumExpression )
            // InternalLTLFormula.g:5759:2: ruleSumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightExpressionAccess().getSumExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightExpressionAccess().getSumExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group__0__Impl"


    // $ANTLR start "rule__ShiftRightExpression__Group__1"
    // InternalLTLFormula.g:5768:1: rule__ShiftRightExpression__Group__1 : rule__ShiftRightExpression__Group__1__Impl ;
    public final void rule__ShiftRightExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5772:1: ( rule__ShiftRightExpression__Group__1__Impl )
            // InternalLTLFormula.g:5773:2: rule__ShiftRightExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group__1"


    // $ANTLR start "rule__ShiftRightExpression__Group__1__Impl"
    // InternalLTLFormula.g:5779:1: rule__ShiftRightExpression__Group__1__Impl : ( ( rule__ShiftRightExpression__Group_1__0 )? ) ;
    public final void rule__ShiftRightExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5783:1: ( ( ( rule__ShiftRightExpression__Group_1__0 )? ) )
            // InternalLTLFormula.g:5784:1: ( ( rule__ShiftRightExpression__Group_1__0 )? )
            {
            // InternalLTLFormula.g:5784:1: ( ( rule__ShiftRightExpression__Group_1__0 )? )
            // InternalLTLFormula.g:5785:2: ( rule__ShiftRightExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightExpressionAccess().getGroup_1()); 
            }
            // InternalLTLFormula.g:5786:2: ( rule__ShiftRightExpression__Group_1__0 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==36) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalLTLFormula.g:5786:3: rule__ShiftRightExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ShiftRightExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group__1__Impl"


    // $ANTLR start "rule__ShiftRightExpression__Group_1__0"
    // InternalLTLFormula.g:5795:1: rule__ShiftRightExpression__Group_1__0 : rule__ShiftRightExpression__Group_1__0__Impl rule__ShiftRightExpression__Group_1__1 ;
    public final void rule__ShiftRightExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5799:1: ( rule__ShiftRightExpression__Group_1__0__Impl rule__ShiftRightExpression__Group_1__1 )
            // InternalLTLFormula.g:5800:2: rule__ShiftRightExpression__Group_1__0__Impl rule__ShiftRightExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__ShiftRightExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group_1__0"


    // $ANTLR start "rule__ShiftRightExpression__Group_1__0__Impl"
    // InternalLTLFormula.g:5807:1: rule__ShiftRightExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__ShiftRightExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5811:1: ( ( () ) )
            // InternalLTLFormula.g:5812:1: ( () )
            {
            // InternalLTLFormula.g:5812:1: ( () )
            // InternalLTLFormula.g:5813:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }
            // InternalLTLFormula.g:5814:2: ()
            // InternalLTLFormula.g:5814:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group_1__0__Impl"


    // $ANTLR start "rule__ShiftRightExpression__Group_1__1"
    // InternalLTLFormula.g:5822:1: rule__ShiftRightExpression__Group_1__1 : rule__ShiftRightExpression__Group_1__1__Impl rule__ShiftRightExpression__Group_1__2 ;
    public final void rule__ShiftRightExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5826:1: ( rule__ShiftRightExpression__Group_1__1__Impl rule__ShiftRightExpression__Group_1__2 )
            // InternalLTLFormula.g:5827:2: rule__ShiftRightExpression__Group_1__1__Impl rule__ShiftRightExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__ShiftRightExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group_1__1"


    // $ANTLR start "rule__ShiftRightExpression__Group_1__1__Impl"
    // InternalLTLFormula.g:5834:1: rule__ShiftRightExpression__Group_1__1__Impl : ( ( rule__ShiftRightExpression__Group_1_1__0 ) ) ;
    public final void rule__ShiftRightExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5838:1: ( ( ( rule__ShiftRightExpression__Group_1_1__0 ) ) )
            // InternalLTLFormula.g:5839:1: ( ( rule__ShiftRightExpression__Group_1_1__0 ) )
            {
            // InternalLTLFormula.g:5839:1: ( ( rule__ShiftRightExpression__Group_1_1__0 ) )
            // InternalLTLFormula.g:5840:2: ( rule__ShiftRightExpression__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightExpressionAccess().getGroup_1_1()); 
            }
            // InternalLTLFormula.g:5841:2: ( rule__ShiftRightExpression__Group_1_1__0 )
            // InternalLTLFormula.g:5841:3: rule__ShiftRightExpression__Group_1_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightExpression__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group_1__1__Impl"


    // $ANTLR start "rule__ShiftRightExpression__Group_1__2"
    // InternalLTLFormula.g:5849:1: rule__ShiftRightExpression__Group_1__2 : rule__ShiftRightExpression__Group_1__2__Impl ;
    public final void rule__ShiftRightExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5853:1: ( rule__ShiftRightExpression__Group_1__2__Impl )
            // InternalLTLFormula.g:5854:2: rule__ShiftRightExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group_1__2"


    // $ANTLR start "rule__ShiftRightExpression__Group_1__2__Impl"
    // InternalLTLFormula.g:5860:1: rule__ShiftRightExpression__Group_1__2__Impl : ( ( rule__ShiftRightExpression__Group_1_2__0 )* ) ;
    public final void rule__ShiftRightExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5864:1: ( ( ( rule__ShiftRightExpression__Group_1_2__0 )* ) )
            // InternalLTLFormula.g:5865:1: ( ( rule__ShiftRightExpression__Group_1_2__0 )* )
            {
            // InternalLTLFormula.g:5865:1: ( ( rule__ShiftRightExpression__Group_1_2__0 )* )
            // InternalLTLFormula.g:5866:2: ( rule__ShiftRightExpression__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightExpressionAccess().getGroup_1_2()); 
            }
            // InternalLTLFormula.g:5867:2: ( rule__ShiftRightExpression__Group_1_2__0 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==36) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalLTLFormula.g:5867:3: rule__ShiftRightExpression__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_28);
            	    rule__ShiftRightExpression__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightExpressionAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group_1__2__Impl"


    // $ANTLR start "rule__ShiftRightExpression__Group_1_1__0"
    // InternalLTLFormula.g:5876:1: rule__ShiftRightExpression__Group_1_1__0 : rule__ShiftRightExpression__Group_1_1__0__Impl rule__ShiftRightExpression__Group_1_1__1 ;
    public final void rule__ShiftRightExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5880:1: ( rule__ShiftRightExpression__Group_1_1__0__Impl rule__ShiftRightExpression__Group_1_1__1 )
            // InternalLTLFormula.g:5881:2: rule__ShiftRightExpression__Group_1_1__0__Impl rule__ShiftRightExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ShiftRightExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group_1_1__0"


    // $ANTLR start "rule__ShiftRightExpression__Group_1_1__0__Impl"
    // InternalLTLFormula.g:5888:1: rule__ShiftRightExpression__Group_1_1__0__Impl : ( ( rule__ShiftRightExpression__OperatorAssignment_1_1_0 ) ) ;
    public final void rule__ShiftRightExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5892:1: ( ( ( rule__ShiftRightExpression__OperatorAssignment_1_1_0 ) ) )
            // InternalLTLFormula.g:5893:1: ( ( rule__ShiftRightExpression__OperatorAssignment_1_1_0 ) )
            {
            // InternalLTLFormula.g:5893:1: ( ( rule__ShiftRightExpression__OperatorAssignment_1_1_0 ) )
            // InternalLTLFormula.g:5894:2: ( rule__ShiftRightExpression__OperatorAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightExpressionAccess().getOperatorAssignment_1_1_0()); 
            }
            // InternalLTLFormula.g:5895:2: ( rule__ShiftRightExpression__OperatorAssignment_1_1_0 )
            // InternalLTLFormula.g:5895:3: rule__ShiftRightExpression__OperatorAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightExpression__OperatorAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightExpressionAccess().getOperatorAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__ShiftRightExpression__Group_1_1__1"
    // InternalLTLFormula.g:5903:1: rule__ShiftRightExpression__Group_1_1__1 : rule__ShiftRightExpression__Group_1_1__1__Impl ;
    public final void rule__ShiftRightExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5907:1: ( rule__ShiftRightExpression__Group_1_1__1__Impl )
            // InternalLTLFormula.g:5908:2: rule__ShiftRightExpression__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group_1_1__1"


    // $ANTLR start "rule__ShiftRightExpression__Group_1_1__1__Impl"
    // InternalLTLFormula.g:5914:1: rule__ShiftRightExpression__Group_1_1__1__Impl : ( ( rule__ShiftRightExpression__SubExpressionsAssignment_1_1_1 ) ) ;
    public final void rule__ShiftRightExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5918:1: ( ( ( rule__ShiftRightExpression__SubExpressionsAssignment_1_1_1 ) ) )
            // InternalLTLFormula.g:5919:1: ( ( rule__ShiftRightExpression__SubExpressionsAssignment_1_1_1 ) )
            {
            // InternalLTLFormula.g:5919:1: ( ( rule__ShiftRightExpression__SubExpressionsAssignment_1_1_1 ) )
            // InternalLTLFormula.g:5920:2: ( rule__ShiftRightExpression__SubExpressionsAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }
            // InternalLTLFormula.g:5921:2: ( rule__ShiftRightExpression__SubExpressionsAssignment_1_1_1 )
            // InternalLTLFormula.g:5921:3: rule__ShiftRightExpression__SubExpressionsAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightExpression__SubExpressionsAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__ShiftRightExpression__Group_1_2__0"
    // InternalLTLFormula.g:5930:1: rule__ShiftRightExpression__Group_1_2__0 : rule__ShiftRightExpression__Group_1_2__0__Impl rule__ShiftRightExpression__Group_1_2__1 ;
    public final void rule__ShiftRightExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5934:1: ( rule__ShiftRightExpression__Group_1_2__0__Impl rule__ShiftRightExpression__Group_1_2__1 )
            // InternalLTLFormula.g:5935:2: rule__ShiftRightExpression__Group_1_2__0__Impl rule__ShiftRightExpression__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ShiftRightExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group_1_2__0"


    // $ANTLR start "rule__ShiftRightExpression__Group_1_2__0__Impl"
    // InternalLTLFormula.g:5942:1: rule__ShiftRightExpression__Group_1_2__0__Impl : ( '>>' ) ;
    public final void rule__ShiftRightExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5946:1: ( ( '>>' ) )
            // InternalLTLFormula.g:5947:1: ( '>>' )
            {
            // InternalLTLFormula.g:5947:1: ( '>>' )
            // InternalLTLFormula.g:5948:2: '>>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_2_0()); 
            }
            match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__ShiftRightExpression__Group_1_2__1"
    // InternalLTLFormula.g:5957:1: rule__ShiftRightExpression__Group_1_2__1 : rule__ShiftRightExpression__Group_1_2__1__Impl ;
    public final void rule__ShiftRightExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5961:1: ( rule__ShiftRightExpression__Group_1_2__1__Impl )
            // InternalLTLFormula.g:5962:2: rule__ShiftRightExpression__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group_1_2__1"


    // $ANTLR start "rule__ShiftRightExpression__Group_1_2__1__Impl"
    // InternalLTLFormula.g:5968:1: rule__ShiftRightExpression__Group_1_2__1__Impl : ( ( rule__ShiftRightExpression__SubExpressionsAssignment_1_2_1 ) ) ;
    public final void rule__ShiftRightExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5972:1: ( ( ( rule__ShiftRightExpression__SubExpressionsAssignment_1_2_1 ) ) )
            // InternalLTLFormula.g:5973:1: ( ( rule__ShiftRightExpression__SubExpressionsAssignment_1_2_1 ) )
            {
            // InternalLTLFormula.g:5973:1: ( ( rule__ShiftRightExpression__SubExpressionsAssignment_1_2_1 ) )
            // InternalLTLFormula.g:5974:2: ( rule__ShiftRightExpression__SubExpressionsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }
            // InternalLTLFormula.g:5975:2: ( rule__ShiftRightExpression__SubExpressionsAssignment_1_2_1 )
            // InternalLTLFormula.g:5975:3: rule__ShiftRightExpression__SubExpressionsAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightExpression__SubExpressionsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group__0"
    // InternalLTLFormula.g:5984:1: rule__ShiftRightUnsignedExpression__Group__0 : rule__ShiftRightUnsignedExpression__Group__0__Impl rule__ShiftRightUnsignedExpression__Group__1 ;
    public final void rule__ShiftRightUnsignedExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:5988:1: ( rule__ShiftRightUnsignedExpression__Group__0__Impl rule__ShiftRightUnsignedExpression__Group__1 )
            // InternalLTLFormula.g:5989:2: rule__ShiftRightUnsignedExpression__Group__0__Impl rule__ShiftRightUnsignedExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ShiftRightUnsignedExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightUnsignedExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group__0"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group__0__Impl"
    // InternalLTLFormula.g:5996:1: rule__ShiftRightUnsignedExpression__Group__0__Impl : ( ruleSumExpression ) ;
    public final void rule__ShiftRightUnsignedExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6000:1: ( ( ruleSumExpression ) )
            // InternalLTLFormula.g:6001:1: ( ruleSumExpression )
            {
            // InternalLTLFormula.g:6001:1: ( ruleSumExpression )
            // InternalLTLFormula.g:6002:2: ruleSumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightUnsignedExpressionAccess().getSumExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightUnsignedExpressionAccess().getSumExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group__0__Impl"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group__1"
    // InternalLTLFormula.g:6011:1: rule__ShiftRightUnsignedExpression__Group__1 : rule__ShiftRightUnsignedExpression__Group__1__Impl ;
    public final void rule__ShiftRightUnsignedExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6015:1: ( rule__ShiftRightUnsignedExpression__Group__1__Impl )
            // InternalLTLFormula.g:6016:2: rule__ShiftRightUnsignedExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightUnsignedExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group__1"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group__1__Impl"
    // InternalLTLFormula.g:6022:1: rule__ShiftRightUnsignedExpression__Group__1__Impl : ( ( rule__ShiftRightUnsignedExpression__Group_1__0 )? ) ;
    public final void rule__ShiftRightUnsignedExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6026:1: ( ( ( rule__ShiftRightUnsignedExpression__Group_1__0 )? ) )
            // InternalLTLFormula.g:6027:1: ( ( rule__ShiftRightUnsignedExpression__Group_1__0 )? )
            {
            // InternalLTLFormula.g:6027:1: ( ( rule__ShiftRightUnsignedExpression__Group_1__0 )? )
            // InternalLTLFormula.g:6028:2: ( rule__ShiftRightUnsignedExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightUnsignedExpressionAccess().getGroup_1()); 
            }
            // InternalLTLFormula.g:6029:2: ( rule__ShiftRightUnsignedExpression__Group_1__0 )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==37) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalLTLFormula.g:6029:3: rule__ShiftRightUnsignedExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ShiftRightUnsignedExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightUnsignedExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group__1__Impl"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group_1__0"
    // InternalLTLFormula.g:6038:1: rule__ShiftRightUnsignedExpression__Group_1__0 : rule__ShiftRightUnsignedExpression__Group_1__0__Impl rule__ShiftRightUnsignedExpression__Group_1__1 ;
    public final void rule__ShiftRightUnsignedExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6042:1: ( rule__ShiftRightUnsignedExpression__Group_1__0__Impl rule__ShiftRightUnsignedExpression__Group_1__1 )
            // InternalLTLFormula.g:6043:2: rule__ShiftRightUnsignedExpression__Group_1__0__Impl rule__ShiftRightUnsignedExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__ShiftRightUnsignedExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightUnsignedExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group_1__0"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group_1__0__Impl"
    // InternalLTLFormula.g:6050:1: rule__ShiftRightUnsignedExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__ShiftRightUnsignedExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6054:1: ( ( () ) )
            // InternalLTLFormula.g:6055:1: ( () )
            {
            // InternalLTLFormula.g:6055:1: ( () )
            // InternalLTLFormula.g:6056:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }
            // InternalLTLFormula.g:6057:2: ()
            // InternalLTLFormula.g:6057:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group_1__0__Impl"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group_1__1"
    // InternalLTLFormula.g:6065:1: rule__ShiftRightUnsignedExpression__Group_1__1 : rule__ShiftRightUnsignedExpression__Group_1__1__Impl rule__ShiftRightUnsignedExpression__Group_1__2 ;
    public final void rule__ShiftRightUnsignedExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6069:1: ( rule__ShiftRightUnsignedExpression__Group_1__1__Impl rule__ShiftRightUnsignedExpression__Group_1__2 )
            // InternalLTLFormula.g:6070:2: rule__ShiftRightUnsignedExpression__Group_1__1__Impl rule__ShiftRightUnsignedExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__ShiftRightUnsignedExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightUnsignedExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group_1__1"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group_1__1__Impl"
    // InternalLTLFormula.g:6077:1: rule__ShiftRightUnsignedExpression__Group_1__1__Impl : ( ( rule__ShiftRightUnsignedExpression__Group_1_1__0 ) ) ;
    public final void rule__ShiftRightUnsignedExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6081:1: ( ( ( rule__ShiftRightUnsignedExpression__Group_1_1__0 ) ) )
            // InternalLTLFormula.g:6082:1: ( ( rule__ShiftRightUnsignedExpression__Group_1_1__0 ) )
            {
            // InternalLTLFormula.g:6082:1: ( ( rule__ShiftRightUnsignedExpression__Group_1_1__0 ) )
            // InternalLTLFormula.g:6083:2: ( rule__ShiftRightUnsignedExpression__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightUnsignedExpressionAccess().getGroup_1_1()); 
            }
            // InternalLTLFormula.g:6084:2: ( rule__ShiftRightUnsignedExpression__Group_1_1__0 )
            // InternalLTLFormula.g:6084:3: rule__ShiftRightUnsignedExpression__Group_1_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightUnsignedExpression__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightUnsignedExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group_1__1__Impl"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group_1__2"
    // InternalLTLFormula.g:6092:1: rule__ShiftRightUnsignedExpression__Group_1__2 : rule__ShiftRightUnsignedExpression__Group_1__2__Impl ;
    public final void rule__ShiftRightUnsignedExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6096:1: ( rule__ShiftRightUnsignedExpression__Group_1__2__Impl )
            // InternalLTLFormula.g:6097:2: rule__ShiftRightUnsignedExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightUnsignedExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group_1__2"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group_1__2__Impl"
    // InternalLTLFormula.g:6103:1: rule__ShiftRightUnsignedExpression__Group_1__2__Impl : ( ( rule__ShiftRightUnsignedExpression__Group_1_2__0 )* ) ;
    public final void rule__ShiftRightUnsignedExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6107:1: ( ( ( rule__ShiftRightUnsignedExpression__Group_1_2__0 )* ) )
            // InternalLTLFormula.g:6108:1: ( ( rule__ShiftRightUnsignedExpression__Group_1_2__0 )* )
            {
            // InternalLTLFormula.g:6108:1: ( ( rule__ShiftRightUnsignedExpression__Group_1_2__0 )* )
            // InternalLTLFormula.g:6109:2: ( rule__ShiftRightUnsignedExpression__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightUnsignedExpressionAccess().getGroup_1_2()); 
            }
            // InternalLTLFormula.g:6110:2: ( rule__ShiftRightUnsignedExpression__Group_1_2__0 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==37) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalLTLFormula.g:6110:3: rule__ShiftRightUnsignedExpression__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_30);
            	    rule__ShiftRightUnsignedExpression__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightUnsignedExpressionAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group_1__2__Impl"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group_1_1__0"
    // InternalLTLFormula.g:6119:1: rule__ShiftRightUnsignedExpression__Group_1_1__0 : rule__ShiftRightUnsignedExpression__Group_1_1__0__Impl rule__ShiftRightUnsignedExpression__Group_1_1__1 ;
    public final void rule__ShiftRightUnsignedExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6123:1: ( rule__ShiftRightUnsignedExpression__Group_1_1__0__Impl rule__ShiftRightUnsignedExpression__Group_1_1__1 )
            // InternalLTLFormula.g:6124:2: rule__ShiftRightUnsignedExpression__Group_1_1__0__Impl rule__ShiftRightUnsignedExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ShiftRightUnsignedExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightUnsignedExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group_1_1__0"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group_1_1__0__Impl"
    // InternalLTLFormula.g:6131:1: rule__ShiftRightUnsignedExpression__Group_1_1__0__Impl : ( ( rule__ShiftRightUnsignedExpression__OperatorAssignment_1_1_0 ) ) ;
    public final void rule__ShiftRightUnsignedExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6135:1: ( ( ( rule__ShiftRightUnsignedExpression__OperatorAssignment_1_1_0 ) ) )
            // InternalLTLFormula.g:6136:1: ( ( rule__ShiftRightUnsignedExpression__OperatorAssignment_1_1_0 ) )
            {
            // InternalLTLFormula.g:6136:1: ( ( rule__ShiftRightUnsignedExpression__OperatorAssignment_1_1_0 ) )
            // InternalLTLFormula.g:6137:2: ( rule__ShiftRightUnsignedExpression__OperatorAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorAssignment_1_1_0()); 
            }
            // InternalLTLFormula.g:6138:2: ( rule__ShiftRightUnsignedExpression__OperatorAssignment_1_1_0 )
            // InternalLTLFormula.g:6138:3: rule__ShiftRightUnsignedExpression__OperatorAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightUnsignedExpression__OperatorAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group_1_1__1"
    // InternalLTLFormula.g:6146:1: rule__ShiftRightUnsignedExpression__Group_1_1__1 : rule__ShiftRightUnsignedExpression__Group_1_1__1__Impl ;
    public final void rule__ShiftRightUnsignedExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6150:1: ( rule__ShiftRightUnsignedExpression__Group_1_1__1__Impl )
            // InternalLTLFormula.g:6151:2: rule__ShiftRightUnsignedExpression__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightUnsignedExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group_1_1__1"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group_1_1__1__Impl"
    // InternalLTLFormula.g:6157:1: rule__ShiftRightUnsignedExpression__Group_1_1__1__Impl : ( ( rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_1_1 ) ) ;
    public final void rule__ShiftRightUnsignedExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6161:1: ( ( ( rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_1_1 ) ) )
            // InternalLTLFormula.g:6162:1: ( ( rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_1_1 ) )
            {
            // InternalLTLFormula.g:6162:1: ( ( rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_1_1 ) )
            // InternalLTLFormula.g:6163:2: ( rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }
            // InternalLTLFormula.g:6164:2: ( rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_1_1 )
            // InternalLTLFormula.g:6164:3: rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group_1_2__0"
    // InternalLTLFormula.g:6173:1: rule__ShiftRightUnsignedExpression__Group_1_2__0 : rule__ShiftRightUnsignedExpression__Group_1_2__0__Impl rule__ShiftRightUnsignedExpression__Group_1_2__1 ;
    public final void rule__ShiftRightUnsignedExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6177:1: ( rule__ShiftRightUnsignedExpression__Group_1_2__0__Impl rule__ShiftRightUnsignedExpression__Group_1_2__1 )
            // InternalLTLFormula.g:6178:2: rule__ShiftRightUnsignedExpression__Group_1_2__0__Impl rule__ShiftRightUnsignedExpression__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ShiftRightUnsignedExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightUnsignedExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group_1_2__0"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group_1_2__0__Impl"
    // InternalLTLFormula.g:6185:1: rule__ShiftRightUnsignedExpression__Group_1_2__0__Impl : ( '>>>' ) ;
    public final void rule__ShiftRightUnsignedExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6189:1: ( ( '>>>' ) )
            // InternalLTLFormula.g:6190:1: ( '>>>' )
            {
            // InternalLTLFormula.g:6190:1: ( '>>>' )
            // InternalLTLFormula.g:6191:2: '>>>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightUnsignedExpressionAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_0()); 
            }
            match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightUnsignedExpressionAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group_1_2__1"
    // InternalLTLFormula.g:6200:1: rule__ShiftRightUnsignedExpression__Group_1_2__1 : rule__ShiftRightUnsignedExpression__Group_1_2__1__Impl ;
    public final void rule__ShiftRightUnsignedExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6204:1: ( rule__ShiftRightUnsignedExpression__Group_1_2__1__Impl )
            // InternalLTLFormula.g:6205:2: rule__ShiftRightUnsignedExpression__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightUnsignedExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group_1_2__1"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__Group_1_2__1__Impl"
    // InternalLTLFormula.g:6211:1: rule__ShiftRightUnsignedExpression__Group_1_2__1__Impl : ( ( rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_2_1 ) ) ;
    public final void rule__ShiftRightUnsignedExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6215:1: ( ( ( rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_2_1 ) ) )
            // InternalLTLFormula.g:6216:1: ( ( rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_2_1 ) )
            {
            // InternalLTLFormula.g:6216:1: ( ( rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_2_1 ) )
            // InternalLTLFormula.g:6217:2: ( rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }
            // InternalLTLFormula.g:6218:2: ( rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_2_1 )
            // InternalLTLFormula.g:6218:3: rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__SumExpression__Group__0"
    // InternalLTLFormula.g:6227:1: rule__SumExpression__Group__0 : rule__SumExpression__Group__0__Impl rule__SumExpression__Group__1 ;
    public final void rule__SumExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6231:1: ( rule__SumExpression__Group__0__Impl rule__SumExpression__Group__1 )
            // InternalLTLFormula.g:6232:2: rule__SumExpression__Group__0__Impl rule__SumExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__SumExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group__0"


    // $ANTLR start "rule__SumExpression__Group__0__Impl"
    // InternalLTLFormula.g:6239:1: rule__SumExpression__Group__0__Impl : ( ruleProductExpression ) ;
    public final void rule__SumExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6243:1: ( ( ruleProductExpression ) )
            // InternalLTLFormula.g:6244:1: ( ruleProductExpression )
            {
            // InternalLTLFormula.g:6244:1: ( ruleProductExpression )
            // InternalLTLFormula.g:6245:2: ruleProductExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getProductExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleProductExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getProductExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group__0__Impl"


    // $ANTLR start "rule__SumExpression__Group__1"
    // InternalLTLFormula.g:6254:1: rule__SumExpression__Group__1 : rule__SumExpression__Group__1__Impl ;
    public final void rule__SumExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6258:1: ( rule__SumExpression__Group__1__Impl )
            // InternalLTLFormula.g:6259:2: rule__SumExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group__1"


    // $ANTLR start "rule__SumExpression__Group__1__Impl"
    // InternalLTLFormula.g:6265:1: rule__SumExpression__Group__1__Impl : ( ( rule__SumExpression__Alternatives_1 )* ) ;
    public final void rule__SumExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6269:1: ( ( ( rule__SumExpression__Alternatives_1 )* ) )
            // InternalLTLFormula.g:6270:1: ( ( rule__SumExpression__Alternatives_1 )* )
            {
            // InternalLTLFormula.g:6270:1: ( ( rule__SumExpression__Alternatives_1 )* )
            // InternalLTLFormula.g:6271:2: ( rule__SumExpression__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getAlternatives_1()); 
            }
            // InternalLTLFormula.g:6272:2: ( rule__SumExpression__Alternatives_1 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( ((LA55_0>=27 && LA55_0<=28)) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalLTLFormula.g:6272:3: rule__SumExpression__Alternatives_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    rule__SumExpression__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group__1__Impl"


    // $ANTLR start "rule__SumExpression__Group_1_0__0"
    // InternalLTLFormula.g:6281:1: rule__SumExpression__Group_1_0__0 : rule__SumExpression__Group_1_0__0__Impl rule__SumExpression__Group_1_0__1 ;
    public final void rule__SumExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6285:1: ( rule__SumExpression__Group_1_0__0__Impl rule__SumExpression__Group_1_0__1 )
            // InternalLTLFormula.g:6286:2: rule__SumExpression__Group_1_0__0__Impl rule__SumExpression__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__SumExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_0__0"


    // $ANTLR start "rule__SumExpression__Group_1_0__0__Impl"
    // InternalLTLFormula.g:6293:1: rule__SumExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__SumExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6297:1: ( ( () ) )
            // InternalLTLFormula.g:6298:1: ( () )
            {
            // InternalLTLFormula.g:6298:1: ( () )
            // InternalLTLFormula.g:6299:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0()); 
            }
            // InternalLTLFormula.g:6300:2: ()
            // InternalLTLFormula.g:6300:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__SumExpression__Group_1_0__1"
    // InternalLTLFormula.g:6308:1: rule__SumExpression__Group_1_0__1 : rule__SumExpression__Group_1_0__1__Impl rule__SumExpression__Group_1_0__2 ;
    public final void rule__SumExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6312:1: ( rule__SumExpression__Group_1_0__1__Impl rule__SumExpression__Group_1_0__2 )
            // InternalLTLFormula.g:6313:2: rule__SumExpression__Group_1_0__1__Impl rule__SumExpression__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__SumExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_0__1"


    // $ANTLR start "rule__SumExpression__Group_1_0__1__Impl"
    // InternalLTLFormula.g:6320:1: rule__SumExpression__Group_1_0__1__Impl : ( ( rule__SumExpression__OperatorAssignment_1_0_1 ) ) ;
    public final void rule__SumExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6324:1: ( ( ( rule__SumExpression__OperatorAssignment_1_0_1 ) ) )
            // InternalLTLFormula.g:6325:1: ( ( rule__SumExpression__OperatorAssignment_1_0_1 ) )
            {
            // InternalLTLFormula.g:6325:1: ( ( rule__SumExpression__OperatorAssignment_1_0_1 ) )
            // InternalLTLFormula.g:6326:2: ( rule__SumExpression__OperatorAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getOperatorAssignment_1_0_1()); 
            }
            // InternalLTLFormula.g:6327:2: ( rule__SumExpression__OperatorAssignment_1_0_1 )
            // InternalLTLFormula.g:6327:3: rule__SumExpression__OperatorAssignment_1_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__OperatorAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getOperatorAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__SumExpression__Group_1_0__2"
    // InternalLTLFormula.g:6335:1: rule__SumExpression__Group_1_0__2 : rule__SumExpression__Group_1_0__2__Impl rule__SumExpression__Group_1_0__3 ;
    public final void rule__SumExpression__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6339:1: ( rule__SumExpression__Group_1_0__2__Impl rule__SumExpression__Group_1_0__3 )
            // InternalLTLFormula.g:6340:2: rule__SumExpression__Group_1_0__2__Impl rule__SumExpression__Group_1_0__3
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__SumExpression__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__Group_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_0__2"


    // $ANTLR start "rule__SumExpression__Group_1_0__2__Impl"
    // InternalLTLFormula.g:6347:1: rule__SumExpression__Group_1_0__2__Impl : ( ( rule__SumExpression__SubExpressionsAssignment_1_0_2 ) ) ;
    public final void rule__SumExpression__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6351:1: ( ( ( rule__SumExpression__SubExpressionsAssignment_1_0_2 ) ) )
            // InternalLTLFormula.g:6352:1: ( ( rule__SumExpression__SubExpressionsAssignment_1_0_2 ) )
            {
            // InternalLTLFormula.g:6352:1: ( ( rule__SumExpression__SubExpressionsAssignment_1_0_2 ) )
            // InternalLTLFormula.g:6353:2: ( rule__SumExpression__SubExpressionsAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getSubExpressionsAssignment_1_0_2()); 
            }
            // InternalLTLFormula.g:6354:2: ( rule__SumExpression__SubExpressionsAssignment_1_0_2 )
            // InternalLTLFormula.g:6354:3: rule__SumExpression__SubExpressionsAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__SubExpressionsAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getSubExpressionsAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_0__2__Impl"


    // $ANTLR start "rule__SumExpression__Group_1_0__3"
    // InternalLTLFormula.g:6362:1: rule__SumExpression__Group_1_0__3 : rule__SumExpression__Group_1_0__3__Impl ;
    public final void rule__SumExpression__Group_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6366:1: ( rule__SumExpression__Group_1_0__3__Impl )
            // InternalLTLFormula.g:6367:2: rule__SumExpression__Group_1_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__Group_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_0__3"


    // $ANTLR start "rule__SumExpression__Group_1_0__3__Impl"
    // InternalLTLFormula.g:6373:1: rule__SumExpression__Group_1_0__3__Impl : ( ( rule__SumExpression__Group_1_0_3__0 )* ) ;
    public final void rule__SumExpression__Group_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6377:1: ( ( ( rule__SumExpression__Group_1_0_3__0 )* ) )
            // InternalLTLFormula.g:6378:1: ( ( rule__SumExpression__Group_1_0_3__0 )* )
            {
            // InternalLTLFormula.g:6378:1: ( ( rule__SumExpression__Group_1_0_3__0 )* )
            // InternalLTLFormula.g:6379:2: ( rule__SumExpression__Group_1_0_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getGroup_1_0_3()); 
            }
            // InternalLTLFormula.g:6380:2: ( rule__SumExpression__Group_1_0_3__0 )*
            loop56:
            do {
                int alt56=2;
                alt56 = dfa56.predict(input);
                switch (alt56) {
            	case 1 :
            	    // InternalLTLFormula.g:6380:3: rule__SumExpression__Group_1_0_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    rule__SumExpression__Group_1_0_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getGroup_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_0__3__Impl"


    // $ANTLR start "rule__SumExpression__Group_1_0_3__0"
    // InternalLTLFormula.g:6389:1: rule__SumExpression__Group_1_0_3__0 : rule__SumExpression__Group_1_0_3__0__Impl rule__SumExpression__Group_1_0_3__1 ;
    public final void rule__SumExpression__Group_1_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6393:1: ( rule__SumExpression__Group_1_0_3__0__Impl rule__SumExpression__Group_1_0_3__1 )
            // InternalLTLFormula.g:6394:2: rule__SumExpression__Group_1_0_3__0__Impl rule__SumExpression__Group_1_0_3__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__SumExpression__Group_1_0_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__Group_1_0_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_0_3__0"


    // $ANTLR start "rule__SumExpression__Group_1_0_3__0__Impl"
    // InternalLTLFormula.g:6401:1: rule__SumExpression__Group_1_0_3__0__Impl : ( '+' ) ;
    public final void rule__SumExpression__Group_1_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6405:1: ( ( '+' ) )
            // InternalLTLFormula.g:6406:1: ( '+' )
            {
            // InternalLTLFormula.g:6406:1: ( '+' )
            // InternalLTLFormula.g:6407:2: '+'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getPlusSignKeyword_1_0_3_0()); 
            }
            match(input,27,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getPlusSignKeyword_1_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_0_3__0__Impl"


    // $ANTLR start "rule__SumExpression__Group_1_0_3__1"
    // InternalLTLFormula.g:6416:1: rule__SumExpression__Group_1_0_3__1 : rule__SumExpression__Group_1_0_3__1__Impl ;
    public final void rule__SumExpression__Group_1_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6420:1: ( rule__SumExpression__Group_1_0_3__1__Impl )
            // InternalLTLFormula.g:6421:2: rule__SumExpression__Group_1_0_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__Group_1_0_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_0_3__1"


    // $ANTLR start "rule__SumExpression__Group_1_0_3__1__Impl"
    // InternalLTLFormula.g:6427:1: rule__SumExpression__Group_1_0_3__1__Impl : ( ( rule__SumExpression__SubExpressionsAssignment_1_0_3_1 ) ) ;
    public final void rule__SumExpression__Group_1_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6431:1: ( ( ( rule__SumExpression__SubExpressionsAssignment_1_0_3_1 ) ) )
            // InternalLTLFormula.g:6432:1: ( ( rule__SumExpression__SubExpressionsAssignment_1_0_3_1 ) )
            {
            // InternalLTLFormula.g:6432:1: ( ( rule__SumExpression__SubExpressionsAssignment_1_0_3_1 ) )
            // InternalLTLFormula.g:6433:2: ( rule__SumExpression__SubExpressionsAssignment_1_0_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getSubExpressionsAssignment_1_0_3_1()); 
            }
            // InternalLTLFormula.g:6434:2: ( rule__SumExpression__SubExpressionsAssignment_1_0_3_1 )
            // InternalLTLFormula.g:6434:3: rule__SumExpression__SubExpressionsAssignment_1_0_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__SubExpressionsAssignment_1_0_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getSubExpressionsAssignment_1_0_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_0_3__1__Impl"


    // $ANTLR start "rule__SumExpression__Group_1_1__0"
    // InternalLTLFormula.g:6443:1: rule__SumExpression__Group_1_1__0 : rule__SumExpression__Group_1_1__0__Impl rule__SumExpression__Group_1_1__1 ;
    public final void rule__SumExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6447:1: ( rule__SumExpression__Group_1_1__0__Impl rule__SumExpression__Group_1_1__1 )
            // InternalLTLFormula.g:6448:2: rule__SumExpression__Group_1_1__0__Impl rule__SumExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__SumExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_1__0"


    // $ANTLR start "rule__SumExpression__Group_1_1__0__Impl"
    // InternalLTLFormula.g:6455:1: rule__SumExpression__Group_1_1__0__Impl : ( () ) ;
    public final void rule__SumExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6459:1: ( ( () ) )
            // InternalLTLFormula.g:6460:1: ( () )
            {
            // InternalLTLFormula.g:6460:1: ( () )
            // InternalLTLFormula.g:6461:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0()); 
            }
            // InternalLTLFormula.g:6462:2: ()
            // InternalLTLFormula.g:6462:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__SumExpression__Group_1_1__1"
    // InternalLTLFormula.g:6470:1: rule__SumExpression__Group_1_1__1 : rule__SumExpression__Group_1_1__1__Impl rule__SumExpression__Group_1_1__2 ;
    public final void rule__SumExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6474:1: ( rule__SumExpression__Group_1_1__1__Impl rule__SumExpression__Group_1_1__2 )
            // InternalLTLFormula.g:6475:2: rule__SumExpression__Group_1_1__1__Impl rule__SumExpression__Group_1_1__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__SumExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_1__1"


    // $ANTLR start "rule__SumExpression__Group_1_1__1__Impl"
    // InternalLTLFormula.g:6482:1: rule__SumExpression__Group_1_1__1__Impl : ( ( rule__SumExpression__OperatorAssignment_1_1_1 ) ) ;
    public final void rule__SumExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6486:1: ( ( ( rule__SumExpression__OperatorAssignment_1_1_1 ) ) )
            // InternalLTLFormula.g:6487:1: ( ( rule__SumExpression__OperatorAssignment_1_1_1 ) )
            {
            // InternalLTLFormula.g:6487:1: ( ( rule__SumExpression__OperatorAssignment_1_1_1 ) )
            // InternalLTLFormula.g:6488:2: ( rule__SumExpression__OperatorAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getOperatorAssignment_1_1_1()); 
            }
            // InternalLTLFormula.g:6489:2: ( rule__SumExpression__OperatorAssignment_1_1_1 )
            // InternalLTLFormula.g:6489:3: rule__SumExpression__OperatorAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__OperatorAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getOperatorAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__SumExpression__Group_1_1__2"
    // InternalLTLFormula.g:6497:1: rule__SumExpression__Group_1_1__2 : rule__SumExpression__Group_1_1__2__Impl rule__SumExpression__Group_1_1__3 ;
    public final void rule__SumExpression__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6501:1: ( rule__SumExpression__Group_1_1__2__Impl rule__SumExpression__Group_1_1__3 )
            // InternalLTLFormula.g:6502:2: rule__SumExpression__Group_1_1__2__Impl rule__SumExpression__Group_1_1__3
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__SumExpression__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_1__2"


    // $ANTLR start "rule__SumExpression__Group_1_1__2__Impl"
    // InternalLTLFormula.g:6509:1: rule__SumExpression__Group_1_1__2__Impl : ( ( rule__SumExpression__SubExpressionsAssignment_1_1_2 ) ) ;
    public final void rule__SumExpression__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6513:1: ( ( ( rule__SumExpression__SubExpressionsAssignment_1_1_2 ) ) )
            // InternalLTLFormula.g:6514:1: ( ( rule__SumExpression__SubExpressionsAssignment_1_1_2 ) )
            {
            // InternalLTLFormula.g:6514:1: ( ( rule__SumExpression__SubExpressionsAssignment_1_1_2 ) )
            // InternalLTLFormula.g:6515:2: ( rule__SumExpression__SubExpressionsAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getSubExpressionsAssignment_1_1_2()); 
            }
            // InternalLTLFormula.g:6516:2: ( rule__SumExpression__SubExpressionsAssignment_1_1_2 )
            // InternalLTLFormula.g:6516:3: rule__SumExpression__SubExpressionsAssignment_1_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__SubExpressionsAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getSubExpressionsAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_1__2__Impl"


    // $ANTLR start "rule__SumExpression__Group_1_1__3"
    // InternalLTLFormula.g:6524:1: rule__SumExpression__Group_1_1__3 : rule__SumExpression__Group_1_1__3__Impl ;
    public final void rule__SumExpression__Group_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6528:1: ( rule__SumExpression__Group_1_1__3__Impl )
            // InternalLTLFormula.g:6529:2: rule__SumExpression__Group_1_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_1__3"


    // $ANTLR start "rule__SumExpression__Group_1_1__3__Impl"
    // InternalLTLFormula.g:6535:1: rule__SumExpression__Group_1_1__3__Impl : ( ( rule__SumExpression__Group_1_1_3__0 )* ) ;
    public final void rule__SumExpression__Group_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6539:1: ( ( ( rule__SumExpression__Group_1_1_3__0 )* ) )
            // InternalLTLFormula.g:6540:1: ( ( rule__SumExpression__Group_1_1_3__0 )* )
            {
            // InternalLTLFormula.g:6540:1: ( ( rule__SumExpression__Group_1_1_3__0 )* )
            // InternalLTLFormula.g:6541:2: ( rule__SumExpression__Group_1_1_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getGroup_1_1_3()); 
            }
            // InternalLTLFormula.g:6542:2: ( rule__SumExpression__Group_1_1_3__0 )*
            loop57:
            do {
                int alt57=2;
                alt57 = dfa57.predict(input);
                switch (alt57) {
            	case 1 :
            	    // InternalLTLFormula.g:6542:3: rule__SumExpression__Group_1_1_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    rule__SumExpression__Group_1_1_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getGroup_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_1__3__Impl"


    // $ANTLR start "rule__SumExpression__Group_1_1_3__0"
    // InternalLTLFormula.g:6551:1: rule__SumExpression__Group_1_1_3__0 : rule__SumExpression__Group_1_1_3__0__Impl rule__SumExpression__Group_1_1_3__1 ;
    public final void rule__SumExpression__Group_1_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6555:1: ( rule__SumExpression__Group_1_1_3__0__Impl rule__SumExpression__Group_1_1_3__1 )
            // InternalLTLFormula.g:6556:2: rule__SumExpression__Group_1_1_3__0__Impl rule__SumExpression__Group_1_1_3__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__SumExpression__Group_1_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__Group_1_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_1_3__0"


    // $ANTLR start "rule__SumExpression__Group_1_1_3__0__Impl"
    // InternalLTLFormula.g:6563:1: rule__SumExpression__Group_1_1_3__0__Impl : ( '-' ) ;
    public final void rule__SumExpression__Group_1_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6567:1: ( ( '-' ) )
            // InternalLTLFormula.g:6568:1: ( '-' )
            {
            // InternalLTLFormula.g:6568:1: ( '-' )
            // InternalLTLFormula.g:6569:2: '-'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getHyphenMinusKeyword_1_1_3_0()); 
            }
            match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getHyphenMinusKeyword_1_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_1_3__0__Impl"


    // $ANTLR start "rule__SumExpression__Group_1_1_3__1"
    // InternalLTLFormula.g:6578:1: rule__SumExpression__Group_1_1_3__1 : rule__SumExpression__Group_1_1_3__1__Impl ;
    public final void rule__SumExpression__Group_1_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6582:1: ( rule__SumExpression__Group_1_1_3__1__Impl )
            // InternalLTLFormula.g:6583:2: rule__SumExpression__Group_1_1_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__Group_1_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_1_3__1"


    // $ANTLR start "rule__SumExpression__Group_1_1_3__1__Impl"
    // InternalLTLFormula.g:6589:1: rule__SumExpression__Group_1_1_3__1__Impl : ( ( rule__SumExpression__SubExpressionsAssignment_1_1_3_1 ) ) ;
    public final void rule__SumExpression__Group_1_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6593:1: ( ( ( rule__SumExpression__SubExpressionsAssignment_1_1_3_1 ) ) )
            // InternalLTLFormula.g:6594:1: ( ( rule__SumExpression__SubExpressionsAssignment_1_1_3_1 ) )
            {
            // InternalLTLFormula.g:6594:1: ( ( rule__SumExpression__SubExpressionsAssignment_1_1_3_1 ) )
            // InternalLTLFormula.g:6595:2: ( rule__SumExpression__SubExpressionsAssignment_1_1_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getSubExpressionsAssignment_1_1_3_1()); 
            }
            // InternalLTLFormula.g:6596:2: ( rule__SumExpression__SubExpressionsAssignment_1_1_3_1 )
            // InternalLTLFormula.g:6596:3: rule__SumExpression__SubExpressionsAssignment_1_1_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SumExpression__SubExpressionsAssignment_1_1_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getSubExpressionsAssignment_1_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__Group_1_1_3__1__Impl"


    // $ANTLR start "rule__ProductExpression__Group__0"
    // InternalLTLFormula.g:6605:1: rule__ProductExpression__Group__0 : rule__ProductExpression__Group__0__Impl rule__ProductExpression__Group__1 ;
    public final void rule__ProductExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6609:1: ( rule__ProductExpression__Group__0__Impl rule__ProductExpression__Group__1 )
            // InternalLTLFormula.g:6610:2: rule__ProductExpression__Group__0__Impl rule__ProductExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__ProductExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group__0"


    // $ANTLR start "rule__ProductExpression__Group__0__Impl"
    // InternalLTLFormula.g:6617:1: rule__ProductExpression__Group__0__Impl : ( ruleNegExpression ) ;
    public final void rule__ProductExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6621:1: ( ( ruleNegExpression ) )
            // InternalLTLFormula.g:6622:1: ( ruleNegExpression )
            {
            // InternalLTLFormula.g:6622:1: ( ruleNegExpression )
            // InternalLTLFormula.g:6623:2: ruleNegExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getNegExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNegExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getNegExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group__0__Impl"


    // $ANTLR start "rule__ProductExpression__Group__1"
    // InternalLTLFormula.g:6632:1: rule__ProductExpression__Group__1 : rule__ProductExpression__Group__1__Impl ;
    public final void rule__ProductExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6636:1: ( rule__ProductExpression__Group__1__Impl )
            // InternalLTLFormula.g:6637:2: rule__ProductExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group__1"


    // $ANTLR start "rule__ProductExpression__Group__1__Impl"
    // InternalLTLFormula.g:6643:1: rule__ProductExpression__Group__1__Impl : ( ( rule__ProductExpression__Alternatives_1 )* ) ;
    public final void rule__ProductExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6647:1: ( ( ( rule__ProductExpression__Alternatives_1 )* ) )
            // InternalLTLFormula.g:6648:1: ( ( rule__ProductExpression__Alternatives_1 )* )
            {
            // InternalLTLFormula.g:6648:1: ( ( rule__ProductExpression__Alternatives_1 )* )
            // InternalLTLFormula.g:6649:2: ( rule__ProductExpression__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getAlternatives_1()); 
            }
            // InternalLTLFormula.g:6650:2: ( rule__ProductExpression__Alternatives_1 )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( ((LA58_0>=29 && LA58_0<=31)) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalLTLFormula.g:6650:3: rule__ProductExpression__Alternatives_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_38);
            	    rule__ProductExpression__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group__1__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_0__0"
    // InternalLTLFormula.g:6659:1: rule__ProductExpression__Group_1_0__0 : rule__ProductExpression__Group_1_0__0__Impl rule__ProductExpression__Group_1_0__1 ;
    public final void rule__ProductExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6663:1: ( rule__ProductExpression__Group_1_0__0__Impl rule__ProductExpression__Group_1_0__1 )
            // InternalLTLFormula.g:6664:2: rule__ProductExpression__Group_1_0__0__Impl rule__ProductExpression__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__ProductExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_0__0"


    // $ANTLR start "rule__ProductExpression__Group_1_0__0__Impl"
    // InternalLTLFormula.g:6671:1: rule__ProductExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__ProductExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6675:1: ( ( () ) )
            // InternalLTLFormula.g:6676:1: ( () )
            {
            // InternalLTLFormula.g:6676:1: ( () )
            // InternalLTLFormula.g:6677:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0()); 
            }
            // InternalLTLFormula.g:6678:2: ()
            // InternalLTLFormula.g:6678:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_0__1"
    // InternalLTLFormula.g:6686:1: rule__ProductExpression__Group_1_0__1 : rule__ProductExpression__Group_1_0__1__Impl rule__ProductExpression__Group_1_0__2 ;
    public final void rule__ProductExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6690:1: ( rule__ProductExpression__Group_1_0__1__Impl rule__ProductExpression__Group_1_0__2 )
            // InternalLTLFormula.g:6691:2: rule__ProductExpression__Group_1_0__1__Impl rule__ProductExpression__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ProductExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_0__1"


    // $ANTLR start "rule__ProductExpression__Group_1_0__1__Impl"
    // InternalLTLFormula.g:6698:1: rule__ProductExpression__Group_1_0__1__Impl : ( ( rule__ProductExpression__OperatorAssignment_1_0_1 ) ) ;
    public final void rule__ProductExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6702:1: ( ( ( rule__ProductExpression__OperatorAssignment_1_0_1 ) ) )
            // InternalLTLFormula.g:6703:1: ( ( rule__ProductExpression__OperatorAssignment_1_0_1 ) )
            {
            // InternalLTLFormula.g:6703:1: ( ( rule__ProductExpression__OperatorAssignment_1_0_1 ) )
            // InternalLTLFormula.g:6704:2: ( rule__ProductExpression__OperatorAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getOperatorAssignment_1_0_1()); 
            }
            // InternalLTLFormula.g:6705:2: ( rule__ProductExpression__OperatorAssignment_1_0_1 )
            // InternalLTLFormula.g:6705:3: rule__ProductExpression__OperatorAssignment_1_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__OperatorAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getOperatorAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_0__2"
    // InternalLTLFormula.g:6713:1: rule__ProductExpression__Group_1_0__2 : rule__ProductExpression__Group_1_0__2__Impl rule__ProductExpression__Group_1_0__3 ;
    public final void rule__ProductExpression__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6717:1: ( rule__ProductExpression__Group_1_0__2__Impl rule__ProductExpression__Group_1_0__3 )
            // InternalLTLFormula.g:6718:2: rule__ProductExpression__Group_1_0__2__Impl rule__ProductExpression__Group_1_0__3
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__ProductExpression__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_0__2"


    // $ANTLR start "rule__ProductExpression__Group_1_0__2__Impl"
    // InternalLTLFormula.g:6725:1: rule__ProductExpression__Group_1_0__2__Impl : ( ( rule__ProductExpression__SubExpressionsAssignment_1_0_2 ) ) ;
    public final void rule__ProductExpression__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6729:1: ( ( ( rule__ProductExpression__SubExpressionsAssignment_1_0_2 ) ) )
            // InternalLTLFormula.g:6730:1: ( ( rule__ProductExpression__SubExpressionsAssignment_1_0_2 ) )
            {
            // InternalLTLFormula.g:6730:1: ( ( rule__ProductExpression__SubExpressionsAssignment_1_0_2 ) )
            // InternalLTLFormula.g:6731:2: ( rule__ProductExpression__SubExpressionsAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getSubExpressionsAssignment_1_0_2()); 
            }
            // InternalLTLFormula.g:6732:2: ( rule__ProductExpression__SubExpressionsAssignment_1_0_2 )
            // InternalLTLFormula.g:6732:3: rule__ProductExpression__SubExpressionsAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__SubExpressionsAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getSubExpressionsAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_0__2__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_0__3"
    // InternalLTLFormula.g:6740:1: rule__ProductExpression__Group_1_0__3 : rule__ProductExpression__Group_1_0__3__Impl ;
    public final void rule__ProductExpression__Group_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6744:1: ( rule__ProductExpression__Group_1_0__3__Impl )
            // InternalLTLFormula.g:6745:2: rule__ProductExpression__Group_1_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_0__3"


    // $ANTLR start "rule__ProductExpression__Group_1_0__3__Impl"
    // InternalLTLFormula.g:6751:1: rule__ProductExpression__Group_1_0__3__Impl : ( ( rule__ProductExpression__Group_1_0_3__0 )* ) ;
    public final void rule__ProductExpression__Group_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6755:1: ( ( ( rule__ProductExpression__Group_1_0_3__0 )* ) )
            // InternalLTLFormula.g:6756:1: ( ( rule__ProductExpression__Group_1_0_3__0 )* )
            {
            // InternalLTLFormula.g:6756:1: ( ( rule__ProductExpression__Group_1_0_3__0 )* )
            // InternalLTLFormula.g:6757:2: ( rule__ProductExpression__Group_1_0_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getGroup_1_0_3()); 
            }
            // InternalLTLFormula.g:6758:2: ( rule__ProductExpression__Group_1_0_3__0 )*
            loop59:
            do {
                int alt59=2;
                alt59 = dfa59.predict(input);
                switch (alt59) {
            	case 1 :
            	    // InternalLTLFormula.g:6758:3: rule__ProductExpression__Group_1_0_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_40);
            	    rule__ProductExpression__Group_1_0_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getGroup_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_0__3__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_0_3__0"
    // InternalLTLFormula.g:6767:1: rule__ProductExpression__Group_1_0_3__0 : rule__ProductExpression__Group_1_0_3__0__Impl rule__ProductExpression__Group_1_0_3__1 ;
    public final void rule__ProductExpression__Group_1_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6771:1: ( rule__ProductExpression__Group_1_0_3__0__Impl rule__ProductExpression__Group_1_0_3__1 )
            // InternalLTLFormula.g:6772:2: rule__ProductExpression__Group_1_0_3__0__Impl rule__ProductExpression__Group_1_0_3__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ProductExpression__Group_1_0_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_0_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_0_3__0"


    // $ANTLR start "rule__ProductExpression__Group_1_0_3__0__Impl"
    // InternalLTLFormula.g:6779:1: rule__ProductExpression__Group_1_0_3__0__Impl : ( '*' ) ;
    public final void rule__ProductExpression__Group_1_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6783:1: ( ( '*' ) )
            // InternalLTLFormula.g:6784:1: ( '*' )
            {
            // InternalLTLFormula.g:6784:1: ( '*' )
            // InternalLTLFormula.g:6785:2: '*'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getAsteriskKeyword_1_0_3_0()); 
            }
            match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getAsteriskKeyword_1_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_0_3__0__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_0_3__1"
    // InternalLTLFormula.g:6794:1: rule__ProductExpression__Group_1_0_3__1 : rule__ProductExpression__Group_1_0_3__1__Impl ;
    public final void rule__ProductExpression__Group_1_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6798:1: ( rule__ProductExpression__Group_1_0_3__1__Impl )
            // InternalLTLFormula.g:6799:2: rule__ProductExpression__Group_1_0_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_0_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_0_3__1"


    // $ANTLR start "rule__ProductExpression__Group_1_0_3__1__Impl"
    // InternalLTLFormula.g:6805:1: rule__ProductExpression__Group_1_0_3__1__Impl : ( ( rule__ProductExpression__SubExpressionsAssignment_1_0_3_1 ) ) ;
    public final void rule__ProductExpression__Group_1_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6809:1: ( ( ( rule__ProductExpression__SubExpressionsAssignment_1_0_3_1 ) ) )
            // InternalLTLFormula.g:6810:1: ( ( rule__ProductExpression__SubExpressionsAssignment_1_0_3_1 ) )
            {
            // InternalLTLFormula.g:6810:1: ( ( rule__ProductExpression__SubExpressionsAssignment_1_0_3_1 ) )
            // InternalLTLFormula.g:6811:2: ( rule__ProductExpression__SubExpressionsAssignment_1_0_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getSubExpressionsAssignment_1_0_3_1()); 
            }
            // InternalLTLFormula.g:6812:2: ( rule__ProductExpression__SubExpressionsAssignment_1_0_3_1 )
            // InternalLTLFormula.g:6812:3: rule__ProductExpression__SubExpressionsAssignment_1_0_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__SubExpressionsAssignment_1_0_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getSubExpressionsAssignment_1_0_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_0_3__1__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_1__0"
    // InternalLTLFormula.g:6821:1: rule__ProductExpression__Group_1_1__0 : rule__ProductExpression__Group_1_1__0__Impl rule__ProductExpression__Group_1_1__1 ;
    public final void rule__ProductExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6825:1: ( rule__ProductExpression__Group_1_1__0__Impl rule__ProductExpression__Group_1_1__1 )
            // InternalLTLFormula.g:6826:2: rule__ProductExpression__Group_1_1__0__Impl rule__ProductExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__ProductExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_1__0"


    // $ANTLR start "rule__ProductExpression__Group_1_1__0__Impl"
    // InternalLTLFormula.g:6833:1: rule__ProductExpression__Group_1_1__0__Impl : ( () ) ;
    public final void rule__ProductExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6837:1: ( ( () ) )
            // InternalLTLFormula.g:6838:1: ( () )
            {
            // InternalLTLFormula.g:6838:1: ( () )
            // InternalLTLFormula.g:6839:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0()); 
            }
            // InternalLTLFormula.g:6840:2: ()
            // InternalLTLFormula.g:6840:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_1__1"
    // InternalLTLFormula.g:6848:1: rule__ProductExpression__Group_1_1__1 : rule__ProductExpression__Group_1_1__1__Impl rule__ProductExpression__Group_1_1__2 ;
    public final void rule__ProductExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6852:1: ( rule__ProductExpression__Group_1_1__1__Impl rule__ProductExpression__Group_1_1__2 )
            // InternalLTLFormula.g:6853:2: rule__ProductExpression__Group_1_1__1__Impl rule__ProductExpression__Group_1_1__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ProductExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_1__1"


    // $ANTLR start "rule__ProductExpression__Group_1_1__1__Impl"
    // InternalLTLFormula.g:6860:1: rule__ProductExpression__Group_1_1__1__Impl : ( ( rule__ProductExpression__OperatorAssignment_1_1_1 ) ) ;
    public final void rule__ProductExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6864:1: ( ( ( rule__ProductExpression__OperatorAssignment_1_1_1 ) ) )
            // InternalLTLFormula.g:6865:1: ( ( rule__ProductExpression__OperatorAssignment_1_1_1 ) )
            {
            // InternalLTLFormula.g:6865:1: ( ( rule__ProductExpression__OperatorAssignment_1_1_1 ) )
            // InternalLTLFormula.g:6866:2: ( rule__ProductExpression__OperatorAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getOperatorAssignment_1_1_1()); 
            }
            // InternalLTLFormula.g:6867:2: ( rule__ProductExpression__OperatorAssignment_1_1_1 )
            // InternalLTLFormula.g:6867:3: rule__ProductExpression__OperatorAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__OperatorAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getOperatorAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_1__2"
    // InternalLTLFormula.g:6875:1: rule__ProductExpression__Group_1_1__2 : rule__ProductExpression__Group_1_1__2__Impl rule__ProductExpression__Group_1_1__3 ;
    public final void rule__ProductExpression__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6879:1: ( rule__ProductExpression__Group_1_1__2__Impl rule__ProductExpression__Group_1_1__3 )
            // InternalLTLFormula.g:6880:2: rule__ProductExpression__Group_1_1__2__Impl rule__ProductExpression__Group_1_1__3
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__ProductExpression__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_1__2"


    // $ANTLR start "rule__ProductExpression__Group_1_1__2__Impl"
    // InternalLTLFormula.g:6887:1: rule__ProductExpression__Group_1_1__2__Impl : ( ( rule__ProductExpression__SubExpressionsAssignment_1_1_2 ) ) ;
    public final void rule__ProductExpression__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6891:1: ( ( ( rule__ProductExpression__SubExpressionsAssignment_1_1_2 ) ) )
            // InternalLTLFormula.g:6892:1: ( ( rule__ProductExpression__SubExpressionsAssignment_1_1_2 ) )
            {
            // InternalLTLFormula.g:6892:1: ( ( rule__ProductExpression__SubExpressionsAssignment_1_1_2 ) )
            // InternalLTLFormula.g:6893:2: ( rule__ProductExpression__SubExpressionsAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getSubExpressionsAssignment_1_1_2()); 
            }
            // InternalLTLFormula.g:6894:2: ( rule__ProductExpression__SubExpressionsAssignment_1_1_2 )
            // InternalLTLFormula.g:6894:3: rule__ProductExpression__SubExpressionsAssignment_1_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__SubExpressionsAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getSubExpressionsAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_1__2__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_1__3"
    // InternalLTLFormula.g:6902:1: rule__ProductExpression__Group_1_1__3 : rule__ProductExpression__Group_1_1__3__Impl ;
    public final void rule__ProductExpression__Group_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6906:1: ( rule__ProductExpression__Group_1_1__3__Impl )
            // InternalLTLFormula.g:6907:2: rule__ProductExpression__Group_1_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_1__3"


    // $ANTLR start "rule__ProductExpression__Group_1_1__3__Impl"
    // InternalLTLFormula.g:6913:1: rule__ProductExpression__Group_1_1__3__Impl : ( ( rule__ProductExpression__Group_1_1_3__0 )* ) ;
    public final void rule__ProductExpression__Group_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6917:1: ( ( ( rule__ProductExpression__Group_1_1_3__0 )* ) )
            // InternalLTLFormula.g:6918:1: ( ( rule__ProductExpression__Group_1_1_3__0 )* )
            {
            // InternalLTLFormula.g:6918:1: ( ( rule__ProductExpression__Group_1_1_3__0 )* )
            // InternalLTLFormula.g:6919:2: ( rule__ProductExpression__Group_1_1_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getGroup_1_1_3()); 
            }
            // InternalLTLFormula.g:6920:2: ( rule__ProductExpression__Group_1_1_3__0 )*
            loop60:
            do {
                int alt60=2;
                alt60 = dfa60.predict(input);
                switch (alt60) {
            	case 1 :
            	    // InternalLTLFormula.g:6920:3: rule__ProductExpression__Group_1_1_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_42);
            	    rule__ProductExpression__Group_1_1_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getGroup_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_1__3__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_1_3__0"
    // InternalLTLFormula.g:6929:1: rule__ProductExpression__Group_1_1_3__0 : rule__ProductExpression__Group_1_1_3__0__Impl rule__ProductExpression__Group_1_1_3__1 ;
    public final void rule__ProductExpression__Group_1_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6933:1: ( rule__ProductExpression__Group_1_1_3__0__Impl rule__ProductExpression__Group_1_1_3__1 )
            // InternalLTLFormula.g:6934:2: rule__ProductExpression__Group_1_1_3__0__Impl rule__ProductExpression__Group_1_1_3__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ProductExpression__Group_1_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_1_3__0"


    // $ANTLR start "rule__ProductExpression__Group_1_1_3__0__Impl"
    // InternalLTLFormula.g:6941:1: rule__ProductExpression__Group_1_1_3__0__Impl : ( '/' ) ;
    public final void rule__ProductExpression__Group_1_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6945:1: ( ( '/' ) )
            // InternalLTLFormula.g:6946:1: ( '/' )
            {
            // InternalLTLFormula.g:6946:1: ( '/' )
            // InternalLTLFormula.g:6947:2: '/'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getSolidusKeyword_1_1_3_0()); 
            }
            match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getSolidusKeyword_1_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_1_3__0__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_1_3__1"
    // InternalLTLFormula.g:6956:1: rule__ProductExpression__Group_1_1_3__1 : rule__ProductExpression__Group_1_1_3__1__Impl ;
    public final void rule__ProductExpression__Group_1_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6960:1: ( rule__ProductExpression__Group_1_1_3__1__Impl )
            // InternalLTLFormula.g:6961:2: rule__ProductExpression__Group_1_1_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_1_3__1"


    // $ANTLR start "rule__ProductExpression__Group_1_1_3__1__Impl"
    // InternalLTLFormula.g:6967:1: rule__ProductExpression__Group_1_1_3__1__Impl : ( ( rule__ProductExpression__SubExpressionsAssignment_1_1_3_1 ) ) ;
    public final void rule__ProductExpression__Group_1_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6971:1: ( ( ( rule__ProductExpression__SubExpressionsAssignment_1_1_3_1 ) ) )
            // InternalLTLFormula.g:6972:1: ( ( rule__ProductExpression__SubExpressionsAssignment_1_1_3_1 ) )
            {
            // InternalLTLFormula.g:6972:1: ( ( rule__ProductExpression__SubExpressionsAssignment_1_1_3_1 ) )
            // InternalLTLFormula.g:6973:2: ( rule__ProductExpression__SubExpressionsAssignment_1_1_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getSubExpressionsAssignment_1_1_3_1()); 
            }
            // InternalLTLFormula.g:6974:2: ( rule__ProductExpression__SubExpressionsAssignment_1_1_3_1 )
            // InternalLTLFormula.g:6974:3: rule__ProductExpression__SubExpressionsAssignment_1_1_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__SubExpressionsAssignment_1_1_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getSubExpressionsAssignment_1_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_1_3__1__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_2__0"
    // InternalLTLFormula.g:6983:1: rule__ProductExpression__Group_1_2__0 : rule__ProductExpression__Group_1_2__0__Impl rule__ProductExpression__Group_1_2__1 ;
    public final void rule__ProductExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6987:1: ( rule__ProductExpression__Group_1_2__0__Impl rule__ProductExpression__Group_1_2__1 )
            // InternalLTLFormula.g:6988:2: rule__ProductExpression__Group_1_2__0__Impl rule__ProductExpression__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__ProductExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_2__0"


    // $ANTLR start "rule__ProductExpression__Group_1_2__0__Impl"
    // InternalLTLFormula.g:6995:1: rule__ProductExpression__Group_1_2__0__Impl : ( () ) ;
    public final void rule__ProductExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:6999:1: ( ( () ) )
            // InternalLTLFormula.g:7000:1: ( () )
            {
            // InternalLTLFormula.g:7000:1: ( () )
            // InternalLTLFormula.g:7001:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_2_0()); 
            }
            // InternalLTLFormula.g:7002:2: ()
            // InternalLTLFormula.g:7002:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_2__1"
    // InternalLTLFormula.g:7010:1: rule__ProductExpression__Group_1_2__1 : rule__ProductExpression__Group_1_2__1__Impl rule__ProductExpression__Group_1_2__2 ;
    public final void rule__ProductExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7014:1: ( rule__ProductExpression__Group_1_2__1__Impl rule__ProductExpression__Group_1_2__2 )
            // InternalLTLFormula.g:7015:2: rule__ProductExpression__Group_1_2__1__Impl rule__ProductExpression__Group_1_2__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ProductExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_2__1"


    // $ANTLR start "rule__ProductExpression__Group_1_2__1__Impl"
    // InternalLTLFormula.g:7022:1: rule__ProductExpression__Group_1_2__1__Impl : ( ( rule__ProductExpression__OperatorAssignment_1_2_1 ) ) ;
    public final void rule__ProductExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7026:1: ( ( ( rule__ProductExpression__OperatorAssignment_1_2_1 ) ) )
            // InternalLTLFormula.g:7027:1: ( ( rule__ProductExpression__OperatorAssignment_1_2_1 ) )
            {
            // InternalLTLFormula.g:7027:1: ( ( rule__ProductExpression__OperatorAssignment_1_2_1 ) )
            // InternalLTLFormula.g:7028:2: ( rule__ProductExpression__OperatorAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getOperatorAssignment_1_2_1()); 
            }
            // InternalLTLFormula.g:7029:2: ( rule__ProductExpression__OperatorAssignment_1_2_1 )
            // InternalLTLFormula.g:7029:3: rule__ProductExpression__OperatorAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__OperatorAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getOperatorAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_2__2"
    // InternalLTLFormula.g:7037:1: rule__ProductExpression__Group_1_2__2 : rule__ProductExpression__Group_1_2__2__Impl rule__ProductExpression__Group_1_2__3 ;
    public final void rule__ProductExpression__Group_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7041:1: ( rule__ProductExpression__Group_1_2__2__Impl rule__ProductExpression__Group_1_2__3 )
            // InternalLTLFormula.g:7042:2: rule__ProductExpression__Group_1_2__2__Impl rule__ProductExpression__Group_1_2__3
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__ProductExpression__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_2__2"


    // $ANTLR start "rule__ProductExpression__Group_1_2__2__Impl"
    // InternalLTLFormula.g:7049:1: rule__ProductExpression__Group_1_2__2__Impl : ( ( rule__ProductExpression__SubExpressionsAssignment_1_2_2 ) ) ;
    public final void rule__ProductExpression__Group_1_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7053:1: ( ( ( rule__ProductExpression__SubExpressionsAssignment_1_2_2 ) ) )
            // InternalLTLFormula.g:7054:1: ( ( rule__ProductExpression__SubExpressionsAssignment_1_2_2 ) )
            {
            // InternalLTLFormula.g:7054:1: ( ( rule__ProductExpression__SubExpressionsAssignment_1_2_2 ) )
            // InternalLTLFormula.g:7055:2: ( rule__ProductExpression__SubExpressionsAssignment_1_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getSubExpressionsAssignment_1_2_2()); 
            }
            // InternalLTLFormula.g:7056:2: ( rule__ProductExpression__SubExpressionsAssignment_1_2_2 )
            // InternalLTLFormula.g:7056:3: rule__ProductExpression__SubExpressionsAssignment_1_2_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__SubExpressionsAssignment_1_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getSubExpressionsAssignment_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_2__2__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_2__3"
    // InternalLTLFormula.g:7064:1: rule__ProductExpression__Group_1_2__3 : rule__ProductExpression__Group_1_2__3__Impl ;
    public final void rule__ProductExpression__Group_1_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7068:1: ( rule__ProductExpression__Group_1_2__3__Impl )
            // InternalLTLFormula.g:7069:2: rule__ProductExpression__Group_1_2__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_2__3"


    // $ANTLR start "rule__ProductExpression__Group_1_2__3__Impl"
    // InternalLTLFormula.g:7075:1: rule__ProductExpression__Group_1_2__3__Impl : ( ( rule__ProductExpression__Group_1_2_3__0 )* ) ;
    public final void rule__ProductExpression__Group_1_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7079:1: ( ( ( rule__ProductExpression__Group_1_2_3__0 )* ) )
            // InternalLTLFormula.g:7080:1: ( ( rule__ProductExpression__Group_1_2_3__0 )* )
            {
            // InternalLTLFormula.g:7080:1: ( ( rule__ProductExpression__Group_1_2_3__0 )* )
            // InternalLTLFormula.g:7081:2: ( rule__ProductExpression__Group_1_2_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getGroup_1_2_3()); 
            }
            // InternalLTLFormula.g:7082:2: ( rule__ProductExpression__Group_1_2_3__0 )*
            loop61:
            do {
                int alt61=2;
                alt61 = dfa61.predict(input);
                switch (alt61) {
            	case 1 :
            	    // InternalLTLFormula.g:7082:3: rule__ProductExpression__Group_1_2_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    rule__ProductExpression__Group_1_2_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getGroup_1_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_2__3__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_2_3__0"
    // InternalLTLFormula.g:7091:1: rule__ProductExpression__Group_1_2_3__0 : rule__ProductExpression__Group_1_2_3__0__Impl rule__ProductExpression__Group_1_2_3__1 ;
    public final void rule__ProductExpression__Group_1_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7095:1: ( rule__ProductExpression__Group_1_2_3__0__Impl rule__ProductExpression__Group_1_2_3__1 )
            // InternalLTLFormula.g:7096:2: rule__ProductExpression__Group_1_2_3__0__Impl rule__ProductExpression__Group_1_2_3__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__ProductExpression__Group_1_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_2_3__0"


    // $ANTLR start "rule__ProductExpression__Group_1_2_3__0__Impl"
    // InternalLTLFormula.g:7103:1: rule__ProductExpression__Group_1_2_3__0__Impl : ( '%' ) ;
    public final void rule__ProductExpression__Group_1_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7107:1: ( ( '%' ) )
            // InternalLTLFormula.g:7108:1: ( '%' )
            {
            // InternalLTLFormula.g:7108:1: ( '%' )
            // InternalLTLFormula.g:7109:2: '%'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getPercentSignKeyword_1_2_3_0()); 
            }
            match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getPercentSignKeyword_1_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_2_3__0__Impl"


    // $ANTLR start "rule__ProductExpression__Group_1_2_3__1"
    // InternalLTLFormula.g:7118:1: rule__ProductExpression__Group_1_2_3__1 : rule__ProductExpression__Group_1_2_3__1__Impl ;
    public final void rule__ProductExpression__Group_1_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7122:1: ( rule__ProductExpression__Group_1_2_3__1__Impl )
            // InternalLTLFormula.g:7123:2: rule__ProductExpression__Group_1_2_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__Group_1_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_2_3__1"


    // $ANTLR start "rule__ProductExpression__Group_1_2_3__1__Impl"
    // InternalLTLFormula.g:7129:1: rule__ProductExpression__Group_1_2_3__1__Impl : ( ( rule__ProductExpression__SubExpressionsAssignment_1_2_3_1 ) ) ;
    public final void rule__ProductExpression__Group_1_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7133:1: ( ( ( rule__ProductExpression__SubExpressionsAssignment_1_2_3_1 ) ) )
            // InternalLTLFormula.g:7134:1: ( ( rule__ProductExpression__SubExpressionsAssignment_1_2_3_1 ) )
            {
            // InternalLTLFormula.g:7134:1: ( ( rule__ProductExpression__SubExpressionsAssignment_1_2_3_1 ) )
            // InternalLTLFormula.g:7135:2: ( rule__ProductExpression__SubExpressionsAssignment_1_2_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getSubExpressionsAssignment_1_2_3_1()); 
            }
            // InternalLTLFormula.g:7136:2: ( rule__ProductExpression__SubExpressionsAssignment_1_2_3_1 )
            // InternalLTLFormula.g:7136:3: rule__ProductExpression__SubExpressionsAssignment_1_2_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ProductExpression__SubExpressionsAssignment_1_2_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getSubExpressionsAssignment_1_2_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__Group_1_2_3__1__Impl"


    // $ANTLR start "rule__NegExpression__Group_0__0"
    // InternalLTLFormula.g:7145:1: rule__NegExpression__Group_0__0 : rule__NegExpression__Group_0__0__Impl rule__NegExpression__Group_0__1 ;
    public final void rule__NegExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7149:1: ( rule__NegExpression__Group_0__0__Impl rule__NegExpression__Group_0__1 )
            // InternalLTLFormula.g:7150:2: rule__NegExpression__Group_0__0__Impl rule__NegExpression__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__NegExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NegExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NegExpression__Group_0__0"


    // $ANTLR start "rule__NegExpression__Group_0__0__Impl"
    // InternalLTLFormula.g:7157:1: rule__NegExpression__Group_0__0__Impl : ( () ) ;
    public final void rule__NegExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7161:1: ( ( () ) )
            // InternalLTLFormula.g:7162:1: ( () )
            {
            // InternalLTLFormula.g:7162:1: ( () )
            // InternalLTLFormula.g:7163:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0()); 
            }
            // InternalLTLFormula.g:7164:2: ()
            // InternalLTLFormula.g:7164:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NegExpression__Group_0__0__Impl"


    // $ANTLR start "rule__NegExpression__Group_0__1"
    // InternalLTLFormula.g:7172:1: rule__NegExpression__Group_0__1 : rule__NegExpression__Group_0__1__Impl rule__NegExpression__Group_0__2 ;
    public final void rule__NegExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7176:1: ( rule__NegExpression__Group_0__1__Impl rule__NegExpression__Group_0__2 )
            // InternalLTLFormula.g:7177:2: rule__NegExpression__Group_0__1__Impl rule__NegExpression__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__NegExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NegExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NegExpression__Group_0__1"


    // $ANTLR start "rule__NegExpression__Group_0__1__Impl"
    // InternalLTLFormula.g:7184:1: rule__NegExpression__Group_0__1__Impl : ( ( rule__NegExpression__OperatorAssignment_0_1 ) ) ;
    public final void rule__NegExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7188:1: ( ( ( rule__NegExpression__OperatorAssignment_0_1 ) ) )
            // InternalLTLFormula.g:7189:1: ( ( rule__NegExpression__OperatorAssignment_0_1 ) )
            {
            // InternalLTLFormula.g:7189:1: ( ( rule__NegExpression__OperatorAssignment_0_1 ) )
            // InternalLTLFormula.g:7190:2: ( rule__NegExpression__OperatorAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1()); 
            }
            // InternalLTLFormula.g:7191:2: ( rule__NegExpression__OperatorAssignment_0_1 )
            // InternalLTLFormula.g:7191:3: rule__NegExpression__OperatorAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NegExpression__OperatorAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NegExpression__Group_0__1__Impl"


    // $ANTLR start "rule__NegExpression__Group_0__2"
    // InternalLTLFormula.g:7199:1: rule__NegExpression__Group_0__2 : rule__NegExpression__Group_0__2__Impl ;
    public final void rule__NegExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7203:1: ( rule__NegExpression__Group_0__2__Impl )
            // InternalLTLFormula.g:7204:2: rule__NegExpression__Group_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NegExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NegExpression__Group_0__2"


    // $ANTLR start "rule__NegExpression__Group_0__2__Impl"
    // InternalLTLFormula.g:7210:1: rule__NegExpression__Group_0__2__Impl : ( ( rule__NegExpression__SubExpressionsAssignment_0_2 ) ) ;
    public final void rule__NegExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7214:1: ( ( ( rule__NegExpression__SubExpressionsAssignment_0_2 ) ) )
            // InternalLTLFormula.g:7215:1: ( ( rule__NegExpression__SubExpressionsAssignment_0_2 ) )
            {
            // InternalLTLFormula.g:7215:1: ( ( rule__NegExpression__SubExpressionsAssignment_0_2 ) )
            // InternalLTLFormula.g:7216:2: ( rule__NegExpression__SubExpressionsAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2()); 
            }
            // InternalLTLFormula.g:7217:2: ( rule__NegExpression__SubExpressionsAssignment_0_2 )
            // InternalLTLFormula.g:7217:3: rule__NegExpression__SubExpressionsAssignment_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NegExpression__SubExpressionsAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NegExpression__Group_0__2__Impl"


    // $ANTLR start "rule__TernaryOperation__Group_0__0"
    // InternalLTLFormula.g:7226:1: rule__TernaryOperation__Group_0__0 : rule__TernaryOperation__Group_0__0__Impl rule__TernaryOperation__Group_0__1 ;
    public final void rule__TernaryOperation__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7230:1: ( rule__TernaryOperation__Group_0__0__Impl rule__TernaryOperation__Group_0__1 )
            // InternalLTLFormula.g:7231:2: rule__TernaryOperation__Group_0__0__Impl rule__TernaryOperation__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__TernaryOperation__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TernaryOperation__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__Group_0__0"


    // $ANTLR start "rule__TernaryOperation__Group_0__0__Impl"
    // InternalLTLFormula.g:7238:1: rule__TernaryOperation__Group_0__0__Impl : ( () ) ;
    public final void rule__TernaryOperation__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7242:1: ( ( () ) )
            // InternalLTLFormula.g:7243:1: ( () )
            {
            // InternalLTLFormula.g:7243:1: ( () )
            // InternalLTLFormula.g:7244:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTernaryOperationAccess().getOperatorExpressionAction_0_0()); 
            }
            // InternalLTLFormula.g:7245:2: ()
            // InternalLTLFormula.g:7245:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTernaryOperationAccess().getOperatorExpressionAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__Group_0__0__Impl"


    // $ANTLR start "rule__TernaryOperation__Group_0__1"
    // InternalLTLFormula.g:7253:1: rule__TernaryOperation__Group_0__1 : rule__TernaryOperation__Group_0__1__Impl rule__TernaryOperation__Group_0__2 ;
    public final void rule__TernaryOperation__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7257:1: ( rule__TernaryOperation__Group_0__1__Impl rule__TernaryOperation__Group_0__2 )
            // InternalLTLFormula.g:7258:2: rule__TernaryOperation__Group_0__1__Impl rule__TernaryOperation__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__TernaryOperation__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TernaryOperation__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__Group_0__1"


    // $ANTLR start "rule__TernaryOperation__Group_0__1__Impl"
    // InternalLTLFormula.g:7265:1: rule__TernaryOperation__Group_0__1__Impl : ( ( rule__TernaryOperation__SubExpressionsAssignment_0_1 ) ) ;
    public final void rule__TernaryOperation__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7269:1: ( ( ( rule__TernaryOperation__SubExpressionsAssignment_0_1 ) ) )
            // InternalLTLFormula.g:7270:1: ( ( rule__TernaryOperation__SubExpressionsAssignment_0_1 ) )
            {
            // InternalLTLFormula.g:7270:1: ( ( rule__TernaryOperation__SubExpressionsAssignment_0_1 ) )
            // InternalLTLFormula.g:7271:2: ( rule__TernaryOperation__SubExpressionsAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTernaryOperationAccess().getSubExpressionsAssignment_0_1()); 
            }
            // InternalLTLFormula.g:7272:2: ( rule__TernaryOperation__SubExpressionsAssignment_0_1 )
            // InternalLTLFormula.g:7272:3: rule__TernaryOperation__SubExpressionsAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TernaryOperation__SubExpressionsAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTernaryOperationAccess().getSubExpressionsAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__Group_0__1__Impl"


    // $ANTLR start "rule__TernaryOperation__Group_0__2"
    // InternalLTLFormula.g:7280:1: rule__TernaryOperation__Group_0__2 : rule__TernaryOperation__Group_0__2__Impl rule__TernaryOperation__Group_0__3 ;
    public final void rule__TernaryOperation__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7284:1: ( rule__TernaryOperation__Group_0__2__Impl rule__TernaryOperation__Group_0__3 )
            // InternalLTLFormula.g:7285:2: rule__TernaryOperation__Group_0__2__Impl rule__TernaryOperation__Group_0__3
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__TernaryOperation__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TernaryOperation__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__Group_0__2"


    // $ANTLR start "rule__TernaryOperation__Group_0__2__Impl"
    // InternalLTLFormula.g:7292:1: rule__TernaryOperation__Group_0__2__Impl : ( ( rule__TernaryOperation__OperatorAssignment_0_2 ) ) ;
    public final void rule__TernaryOperation__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7296:1: ( ( ( rule__TernaryOperation__OperatorAssignment_0_2 ) ) )
            // InternalLTLFormula.g:7297:1: ( ( rule__TernaryOperation__OperatorAssignment_0_2 ) )
            {
            // InternalLTLFormula.g:7297:1: ( ( rule__TernaryOperation__OperatorAssignment_0_2 ) )
            // InternalLTLFormula.g:7298:2: ( rule__TernaryOperation__OperatorAssignment_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTernaryOperationAccess().getOperatorAssignment_0_2()); 
            }
            // InternalLTLFormula.g:7299:2: ( rule__TernaryOperation__OperatorAssignment_0_2 )
            // InternalLTLFormula.g:7299:3: rule__TernaryOperation__OperatorAssignment_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TernaryOperation__OperatorAssignment_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTernaryOperationAccess().getOperatorAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__Group_0__2__Impl"


    // $ANTLR start "rule__TernaryOperation__Group_0__3"
    // InternalLTLFormula.g:7307:1: rule__TernaryOperation__Group_0__3 : rule__TernaryOperation__Group_0__3__Impl rule__TernaryOperation__Group_0__4 ;
    public final void rule__TernaryOperation__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7311:1: ( rule__TernaryOperation__Group_0__3__Impl rule__TernaryOperation__Group_0__4 )
            // InternalLTLFormula.g:7312:2: rule__TernaryOperation__Group_0__3__Impl rule__TernaryOperation__Group_0__4
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__TernaryOperation__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TernaryOperation__Group_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__Group_0__3"


    // $ANTLR start "rule__TernaryOperation__Group_0__3__Impl"
    // InternalLTLFormula.g:7319:1: rule__TernaryOperation__Group_0__3__Impl : ( ( rule__TernaryOperation__SubExpressionsAssignment_0_3 ) ) ;
    public final void rule__TernaryOperation__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7323:1: ( ( ( rule__TernaryOperation__SubExpressionsAssignment_0_3 ) ) )
            // InternalLTLFormula.g:7324:1: ( ( rule__TernaryOperation__SubExpressionsAssignment_0_3 ) )
            {
            // InternalLTLFormula.g:7324:1: ( ( rule__TernaryOperation__SubExpressionsAssignment_0_3 ) )
            // InternalLTLFormula.g:7325:2: ( rule__TernaryOperation__SubExpressionsAssignment_0_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTernaryOperationAccess().getSubExpressionsAssignment_0_3()); 
            }
            // InternalLTLFormula.g:7326:2: ( rule__TernaryOperation__SubExpressionsAssignment_0_3 )
            // InternalLTLFormula.g:7326:3: rule__TernaryOperation__SubExpressionsAssignment_0_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TernaryOperation__SubExpressionsAssignment_0_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTernaryOperationAccess().getSubExpressionsAssignment_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__Group_0__3__Impl"


    // $ANTLR start "rule__TernaryOperation__Group_0__4"
    // InternalLTLFormula.g:7334:1: rule__TernaryOperation__Group_0__4 : rule__TernaryOperation__Group_0__4__Impl ;
    public final void rule__TernaryOperation__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7338:1: ( rule__TernaryOperation__Group_0__4__Impl )
            // InternalLTLFormula.g:7339:2: rule__TernaryOperation__Group_0__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TernaryOperation__Group_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__Group_0__4"


    // $ANTLR start "rule__TernaryOperation__Group_0__4__Impl"
    // InternalLTLFormula.g:7345:1: rule__TernaryOperation__Group_0__4__Impl : ( ( rule__TernaryOperation__Group_0_4__0 )? ) ;
    public final void rule__TernaryOperation__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7349:1: ( ( ( rule__TernaryOperation__Group_0_4__0 )? ) )
            // InternalLTLFormula.g:7350:1: ( ( rule__TernaryOperation__Group_0_4__0 )? )
            {
            // InternalLTLFormula.g:7350:1: ( ( rule__TernaryOperation__Group_0_4__0 )? )
            // InternalLTLFormula.g:7351:2: ( rule__TernaryOperation__Group_0_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTernaryOperationAccess().getGroup_0_4()); 
            }
            // InternalLTLFormula.g:7352:2: ( rule__TernaryOperation__Group_0_4__0 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==53) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalLTLFormula.g:7352:3: rule__TernaryOperation__Group_0_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TernaryOperation__Group_0_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTernaryOperationAccess().getGroup_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__Group_0__4__Impl"


    // $ANTLR start "rule__TernaryOperation__Group_0_4__0"
    // InternalLTLFormula.g:7361:1: rule__TernaryOperation__Group_0_4__0 : rule__TernaryOperation__Group_0_4__0__Impl rule__TernaryOperation__Group_0_4__1 ;
    public final void rule__TernaryOperation__Group_0_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7365:1: ( rule__TernaryOperation__Group_0_4__0__Impl rule__TernaryOperation__Group_0_4__1 )
            // InternalLTLFormula.g:7366:2: rule__TernaryOperation__Group_0_4__0__Impl rule__TernaryOperation__Group_0_4__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__TernaryOperation__Group_0_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TernaryOperation__Group_0_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__Group_0_4__0"


    // $ANTLR start "rule__TernaryOperation__Group_0_4__0__Impl"
    // InternalLTLFormula.g:7373:1: rule__TernaryOperation__Group_0_4__0__Impl : ( ':' ) ;
    public final void rule__TernaryOperation__Group_0_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7377:1: ( ( ':' ) )
            // InternalLTLFormula.g:7378:1: ( ':' )
            {
            // InternalLTLFormula.g:7378:1: ( ':' )
            // InternalLTLFormula.g:7379:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTernaryOperationAccess().getColonKeyword_0_4_0()); 
            }
            match(input,53,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTernaryOperationAccess().getColonKeyword_0_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__Group_0_4__0__Impl"


    // $ANTLR start "rule__TernaryOperation__Group_0_4__1"
    // InternalLTLFormula.g:7388:1: rule__TernaryOperation__Group_0_4__1 : rule__TernaryOperation__Group_0_4__1__Impl ;
    public final void rule__TernaryOperation__Group_0_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7392:1: ( rule__TernaryOperation__Group_0_4__1__Impl )
            // InternalLTLFormula.g:7393:2: rule__TernaryOperation__Group_0_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TernaryOperation__Group_0_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__Group_0_4__1"


    // $ANTLR start "rule__TernaryOperation__Group_0_4__1__Impl"
    // InternalLTLFormula.g:7399:1: rule__TernaryOperation__Group_0_4__1__Impl : ( ( rule__TernaryOperation__SubExpressionsAssignment_0_4_1 ) ) ;
    public final void rule__TernaryOperation__Group_0_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7403:1: ( ( ( rule__TernaryOperation__SubExpressionsAssignment_0_4_1 ) ) )
            // InternalLTLFormula.g:7404:1: ( ( rule__TernaryOperation__SubExpressionsAssignment_0_4_1 ) )
            {
            // InternalLTLFormula.g:7404:1: ( ( rule__TernaryOperation__SubExpressionsAssignment_0_4_1 ) )
            // InternalLTLFormula.g:7405:2: ( rule__TernaryOperation__SubExpressionsAssignment_0_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTernaryOperationAccess().getSubExpressionsAssignment_0_4_1()); 
            }
            // InternalLTLFormula.g:7406:2: ( rule__TernaryOperation__SubExpressionsAssignment_0_4_1 )
            // InternalLTLFormula.g:7406:3: rule__TernaryOperation__SubExpressionsAssignment_0_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TernaryOperation__SubExpressionsAssignment_0_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTernaryOperationAccess().getSubExpressionsAssignment_0_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__Group_0_4__1__Impl"


    // $ANTLR start "rule__InitExpression__Group__0"
    // InternalLTLFormula.g:7415:1: rule__InitExpression__Group__0 : rule__InitExpression__Group__0__Impl rule__InitExpression__Group__1 ;
    public final void rule__InitExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7419:1: ( rule__InitExpression__Group__0__Impl rule__InitExpression__Group__1 )
            // InternalLTLFormula.g:7420:2: rule__InitExpression__Group__0__Impl rule__InitExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__InitExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group__0"


    // $ANTLR start "rule__InitExpression__Group__0__Impl"
    // InternalLTLFormula.g:7427:1: rule__InitExpression__Group__0__Impl : ( ruleFbyExpression ) ;
    public final void rule__InitExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7431:1: ( ( ruleFbyExpression ) )
            // InternalLTLFormula.g:7432:1: ( ruleFbyExpression )
            {
            // InternalLTLFormula.g:7432:1: ( ruleFbyExpression )
            // InternalLTLFormula.g:7433:2: ruleFbyExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitExpressionAccess().getFbyExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFbyExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitExpressionAccess().getFbyExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group__0__Impl"


    // $ANTLR start "rule__InitExpression__Group__1"
    // InternalLTLFormula.g:7442:1: rule__InitExpression__Group__1 : rule__InitExpression__Group__1__Impl ;
    public final void rule__InitExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7446:1: ( rule__InitExpression__Group__1__Impl )
            // InternalLTLFormula.g:7447:2: rule__InitExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group__1"


    // $ANTLR start "rule__InitExpression__Group__1__Impl"
    // InternalLTLFormula.g:7453:1: rule__InitExpression__Group__1__Impl : ( ( rule__InitExpression__Group_1__0 )? ) ;
    public final void rule__InitExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7457:1: ( ( ( rule__InitExpression__Group_1__0 )? ) )
            // InternalLTLFormula.g:7458:1: ( ( rule__InitExpression__Group_1__0 )? )
            {
            // InternalLTLFormula.g:7458:1: ( ( rule__InitExpression__Group_1__0 )? )
            // InternalLTLFormula.g:7459:2: ( rule__InitExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitExpressionAccess().getGroup_1()); 
            }
            // InternalLTLFormula.g:7460:2: ( rule__InitExpression__Group_1__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==39) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalLTLFormula.g:7460:3: rule__InitExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__InitExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group__1__Impl"


    // $ANTLR start "rule__InitExpression__Group_1__0"
    // InternalLTLFormula.g:7469:1: rule__InitExpression__Group_1__0 : rule__InitExpression__Group_1__0__Impl rule__InitExpression__Group_1__1 ;
    public final void rule__InitExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7473:1: ( rule__InitExpression__Group_1__0__Impl rule__InitExpression__Group_1__1 )
            // InternalLTLFormula.g:7474:2: rule__InitExpression__Group_1__0__Impl rule__InitExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__InitExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group_1__0"


    // $ANTLR start "rule__InitExpression__Group_1__0__Impl"
    // InternalLTLFormula.g:7481:1: rule__InitExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__InitExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7485:1: ( ( () ) )
            // InternalLTLFormula.g:7486:1: ( () )
            {
            // InternalLTLFormula.g:7486:1: ( () )
            // InternalLTLFormula.g:7487:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }
            // InternalLTLFormula.g:7488:2: ()
            // InternalLTLFormula.g:7488:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group_1__0__Impl"


    // $ANTLR start "rule__InitExpression__Group_1__1"
    // InternalLTLFormula.g:7496:1: rule__InitExpression__Group_1__1 : rule__InitExpression__Group_1__1__Impl rule__InitExpression__Group_1__2 ;
    public final void rule__InitExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7500:1: ( rule__InitExpression__Group_1__1__Impl rule__InitExpression__Group_1__2 )
            // InternalLTLFormula.g:7501:2: rule__InitExpression__Group_1__1__Impl rule__InitExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__InitExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group_1__1"


    // $ANTLR start "rule__InitExpression__Group_1__1__Impl"
    // InternalLTLFormula.g:7508:1: rule__InitExpression__Group_1__1__Impl : ( ( rule__InitExpression__Group_1_1__0 ) ) ;
    public final void rule__InitExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7512:1: ( ( ( rule__InitExpression__Group_1_1__0 ) ) )
            // InternalLTLFormula.g:7513:1: ( ( rule__InitExpression__Group_1_1__0 ) )
            {
            // InternalLTLFormula.g:7513:1: ( ( rule__InitExpression__Group_1_1__0 ) )
            // InternalLTLFormula.g:7514:2: ( rule__InitExpression__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitExpressionAccess().getGroup_1_1()); 
            }
            // InternalLTLFormula.g:7515:2: ( rule__InitExpression__Group_1_1__0 )
            // InternalLTLFormula.g:7515:3: rule__InitExpression__Group_1_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitExpression__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group_1__1__Impl"


    // $ANTLR start "rule__InitExpression__Group_1__2"
    // InternalLTLFormula.g:7523:1: rule__InitExpression__Group_1__2 : rule__InitExpression__Group_1__2__Impl ;
    public final void rule__InitExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7527:1: ( rule__InitExpression__Group_1__2__Impl )
            // InternalLTLFormula.g:7528:2: rule__InitExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group_1__2"


    // $ANTLR start "rule__InitExpression__Group_1__2__Impl"
    // InternalLTLFormula.g:7534:1: rule__InitExpression__Group_1__2__Impl : ( ( rule__InitExpression__Group_1_2__0 )* ) ;
    public final void rule__InitExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7538:1: ( ( ( rule__InitExpression__Group_1_2__0 )* ) )
            // InternalLTLFormula.g:7539:1: ( ( rule__InitExpression__Group_1_2__0 )* )
            {
            // InternalLTLFormula.g:7539:1: ( ( rule__InitExpression__Group_1_2__0 )* )
            // InternalLTLFormula.g:7540:2: ( rule__InitExpression__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitExpressionAccess().getGroup_1_2()); 
            }
            // InternalLTLFormula.g:7541:2: ( rule__InitExpression__Group_1_2__0 )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==39) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalLTLFormula.g:7541:3: rule__InitExpression__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    rule__InitExpression__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitExpressionAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group_1__2__Impl"


    // $ANTLR start "rule__InitExpression__Group_1_1__0"
    // InternalLTLFormula.g:7550:1: rule__InitExpression__Group_1_1__0 : rule__InitExpression__Group_1_1__0__Impl rule__InitExpression__Group_1_1__1 ;
    public final void rule__InitExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7554:1: ( rule__InitExpression__Group_1_1__0__Impl rule__InitExpression__Group_1_1__1 )
            // InternalLTLFormula.g:7555:2: rule__InitExpression__Group_1_1__0__Impl rule__InitExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__InitExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group_1_1__0"


    // $ANTLR start "rule__InitExpression__Group_1_1__0__Impl"
    // InternalLTLFormula.g:7562:1: rule__InitExpression__Group_1_1__0__Impl : ( ( rule__InitExpression__OperatorAssignment_1_1_0 ) ) ;
    public final void rule__InitExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7566:1: ( ( ( rule__InitExpression__OperatorAssignment_1_1_0 ) ) )
            // InternalLTLFormula.g:7567:1: ( ( rule__InitExpression__OperatorAssignment_1_1_0 ) )
            {
            // InternalLTLFormula.g:7567:1: ( ( rule__InitExpression__OperatorAssignment_1_1_0 ) )
            // InternalLTLFormula.g:7568:2: ( rule__InitExpression__OperatorAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitExpressionAccess().getOperatorAssignment_1_1_0()); 
            }
            // InternalLTLFormula.g:7569:2: ( rule__InitExpression__OperatorAssignment_1_1_0 )
            // InternalLTLFormula.g:7569:3: rule__InitExpression__OperatorAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitExpression__OperatorAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitExpressionAccess().getOperatorAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__InitExpression__Group_1_1__1"
    // InternalLTLFormula.g:7577:1: rule__InitExpression__Group_1_1__1 : rule__InitExpression__Group_1_1__1__Impl ;
    public final void rule__InitExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7581:1: ( rule__InitExpression__Group_1_1__1__Impl )
            // InternalLTLFormula.g:7582:2: rule__InitExpression__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group_1_1__1"


    // $ANTLR start "rule__InitExpression__Group_1_1__1__Impl"
    // InternalLTLFormula.g:7588:1: rule__InitExpression__Group_1_1__1__Impl : ( ( rule__InitExpression__SubExpressionsAssignment_1_1_1 ) ) ;
    public final void rule__InitExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7592:1: ( ( ( rule__InitExpression__SubExpressionsAssignment_1_1_1 ) ) )
            // InternalLTLFormula.g:7593:1: ( ( rule__InitExpression__SubExpressionsAssignment_1_1_1 ) )
            {
            // InternalLTLFormula.g:7593:1: ( ( rule__InitExpression__SubExpressionsAssignment_1_1_1 ) )
            // InternalLTLFormula.g:7594:2: ( rule__InitExpression__SubExpressionsAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }
            // InternalLTLFormula.g:7595:2: ( rule__InitExpression__SubExpressionsAssignment_1_1_1 )
            // InternalLTLFormula.g:7595:3: rule__InitExpression__SubExpressionsAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitExpression__SubExpressionsAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__InitExpression__Group_1_2__0"
    // InternalLTLFormula.g:7604:1: rule__InitExpression__Group_1_2__0 : rule__InitExpression__Group_1_2__0__Impl rule__InitExpression__Group_1_2__1 ;
    public final void rule__InitExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7608:1: ( rule__InitExpression__Group_1_2__0__Impl rule__InitExpression__Group_1_2__1 )
            // InternalLTLFormula.g:7609:2: rule__InitExpression__Group_1_2__0__Impl rule__InitExpression__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__InitExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group_1_2__0"


    // $ANTLR start "rule__InitExpression__Group_1_2__0__Impl"
    // InternalLTLFormula.g:7616:1: rule__InitExpression__Group_1_2__0__Impl : ( '->' ) ;
    public final void rule__InitExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7620:1: ( ( '->' ) )
            // InternalLTLFormula.g:7621:1: ( '->' )
            {
            // InternalLTLFormula.g:7621:1: ( '->' )
            // InternalLTLFormula.g:7622:2: '->'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_2_0()); 
            }
            match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__InitExpression__Group_1_2__1"
    // InternalLTLFormula.g:7631:1: rule__InitExpression__Group_1_2__1 : rule__InitExpression__Group_1_2__1__Impl ;
    public final void rule__InitExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7635:1: ( rule__InitExpression__Group_1_2__1__Impl )
            // InternalLTLFormula.g:7636:2: rule__InitExpression__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group_1_2__1"


    // $ANTLR start "rule__InitExpression__Group_1_2__1__Impl"
    // InternalLTLFormula.g:7642:1: rule__InitExpression__Group_1_2__1__Impl : ( ( rule__InitExpression__SubExpressionsAssignment_1_2_1 ) ) ;
    public final void rule__InitExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7646:1: ( ( ( rule__InitExpression__SubExpressionsAssignment_1_2_1 ) ) )
            // InternalLTLFormula.g:7647:1: ( ( rule__InitExpression__SubExpressionsAssignment_1_2_1 ) )
            {
            // InternalLTLFormula.g:7647:1: ( ( rule__InitExpression__SubExpressionsAssignment_1_2_1 ) )
            // InternalLTLFormula.g:7648:2: ( rule__InitExpression__SubExpressionsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }
            // InternalLTLFormula.g:7649:2: ( rule__InitExpression__SubExpressionsAssignment_1_2_1 )
            // InternalLTLFormula.g:7649:3: rule__InitExpression__SubExpressionsAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__InitExpression__SubExpressionsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__FbyExpression__Group__0"
    // InternalLTLFormula.g:7658:1: rule__FbyExpression__Group__0 : rule__FbyExpression__Group__0__Impl rule__FbyExpression__Group__1 ;
    public final void rule__FbyExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7662:1: ( rule__FbyExpression__Group__0__Impl rule__FbyExpression__Group__1 )
            // InternalLTLFormula.g:7663:2: rule__FbyExpression__Group__0__Impl rule__FbyExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__FbyExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FbyExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group__0"


    // $ANTLR start "rule__FbyExpression__Group__0__Impl"
    // InternalLTLFormula.g:7670:1: rule__FbyExpression__Group__0__Impl : ( ruleSfbyExpression ) ;
    public final void rule__FbyExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7674:1: ( ( ruleSfbyExpression ) )
            // InternalLTLFormula.g:7675:1: ( ruleSfbyExpression )
            {
            // InternalLTLFormula.g:7675:1: ( ruleSfbyExpression )
            // InternalLTLFormula.g:7676:2: ruleSfbyExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFbyExpressionAccess().getSfbyExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSfbyExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFbyExpressionAccess().getSfbyExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group__0__Impl"


    // $ANTLR start "rule__FbyExpression__Group__1"
    // InternalLTLFormula.g:7685:1: rule__FbyExpression__Group__1 : rule__FbyExpression__Group__1__Impl ;
    public final void rule__FbyExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7689:1: ( rule__FbyExpression__Group__1__Impl )
            // InternalLTLFormula.g:7690:2: rule__FbyExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FbyExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group__1"


    // $ANTLR start "rule__FbyExpression__Group__1__Impl"
    // InternalLTLFormula.g:7696:1: rule__FbyExpression__Group__1__Impl : ( ( rule__FbyExpression__Group_1__0 )? ) ;
    public final void rule__FbyExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7700:1: ( ( ( rule__FbyExpression__Group_1__0 )? ) )
            // InternalLTLFormula.g:7701:1: ( ( rule__FbyExpression__Group_1__0 )? )
            {
            // InternalLTLFormula.g:7701:1: ( ( rule__FbyExpression__Group_1__0 )? )
            // InternalLTLFormula.g:7702:2: ( rule__FbyExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFbyExpressionAccess().getGroup_1()); 
            }
            // InternalLTLFormula.g:7703:2: ( rule__FbyExpression__Group_1__0 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==40) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalLTLFormula.g:7703:3: rule__FbyExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__FbyExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFbyExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group__1__Impl"


    // $ANTLR start "rule__FbyExpression__Group_1__0"
    // InternalLTLFormula.g:7712:1: rule__FbyExpression__Group_1__0 : rule__FbyExpression__Group_1__0__Impl rule__FbyExpression__Group_1__1 ;
    public final void rule__FbyExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7716:1: ( rule__FbyExpression__Group_1__0__Impl rule__FbyExpression__Group_1__1 )
            // InternalLTLFormula.g:7717:2: rule__FbyExpression__Group_1__0__Impl rule__FbyExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__FbyExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FbyExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group_1__0"


    // $ANTLR start "rule__FbyExpression__Group_1__0__Impl"
    // InternalLTLFormula.g:7724:1: rule__FbyExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__FbyExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7728:1: ( ( () ) )
            // InternalLTLFormula.g:7729:1: ( () )
            {
            // InternalLTLFormula.g:7729:1: ( () )
            // InternalLTLFormula.g:7730:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFbyExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }
            // InternalLTLFormula.g:7731:2: ()
            // InternalLTLFormula.g:7731:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFbyExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group_1__0__Impl"


    // $ANTLR start "rule__FbyExpression__Group_1__1"
    // InternalLTLFormula.g:7739:1: rule__FbyExpression__Group_1__1 : rule__FbyExpression__Group_1__1__Impl rule__FbyExpression__Group_1__2 ;
    public final void rule__FbyExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7743:1: ( rule__FbyExpression__Group_1__1__Impl rule__FbyExpression__Group_1__2 )
            // InternalLTLFormula.g:7744:2: rule__FbyExpression__Group_1__1__Impl rule__FbyExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__FbyExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FbyExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group_1__1"


    // $ANTLR start "rule__FbyExpression__Group_1__1__Impl"
    // InternalLTLFormula.g:7751:1: rule__FbyExpression__Group_1__1__Impl : ( ( rule__FbyExpression__Group_1_1__0 ) ) ;
    public final void rule__FbyExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7755:1: ( ( ( rule__FbyExpression__Group_1_1__0 ) ) )
            // InternalLTLFormula.g:7756:1: ( ( rule__FbyExpression__Group_1_1__0 ) )
            {
            // InternalLTLFormula.g:7756:1: ( ( rule__FbyExpression__Group_1_1__0 ) )
            // InternalLTLFormula.g:7757:2: ( rule__FbyExpression__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFbyExpressionAccess().getGroup_1_1()); 
            }
            // InternalLTLFormula.g:7758:2: ( rule__FbyExpression__Group_1_1__0 )
            // InternalLTLFormula.g:7758:3: rule__FbyExpression__Group_1_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FbyExpression__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFbyExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group_1__1__Impl"


    // $ANTLR start "rule__FbyExpression__Group_1__2"
    // InternalLTLFormula.g:7766:1: rule__FbyExpression__Group_1__2 : rule__FbyExpression__Group_1__2__Impl ;
    public final void rule__FbyExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7770:1: ( rule__FbyExpression__Group_1__2__Impl )
            // InternalLTLFormula.g:7771:2: rule__FbyExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FbyExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group_1__2"


    // $ANTLR start "rule__FbyExpression__Group_1__2__Impl"
    // InternalLTLFormula.g:7777:1: rule__FbyExpression__Group_1__2__Impl : ( ( rule__FbyExpression__Group_1_2__0 )* ) ;
    public final void rule__FbyExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7781:1: ( ( ( rule__FbyExpression__Group_1_2__0 )* ) )
            // InternalLTLFormula.g:7782:1: ( ( rule__FbyExpression__Group_1_2__0 )* )
            {
            // InternalLTLFormula.g:7782:1: ( ( rule__FbyExpression__Group_1_2__0 )* )
            // InternalLTLFormula.g:7783:2: ( rule__FbyExpression__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFbyExpressionAccess().getGroup_1_2()); 
            }
            // InternalLTLFormula.g:7784:2: ( rule__FbyExpression__Group_1_2__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==40) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalLTLFormula.g:7784:3: rule__FbyExpression__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_51);
            	    rule__FbyExpression__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFbyExpressionAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group_1__2__Impl"


    // $ANTLR start "rule__FbyExpression__Group_1_1__0"
    // InternalLTLFormula.g:7793:1: rule__FbyExpression__Group_1_1__0 : rule__FbyExpression__Group_1_1__0__Impl rule__FbyExpression__Group_1_1__1 ;
    public final void rule__FbyExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7797:1: ( rule__FbyExpression__Group_1_1__0__Impl rule__FbyExpression__Group_1_1__1 )
            // InternalLTLFormula.g:7798:2: rule__FbyExpression__Group_1_1__0__Impl rule__FbyExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__FbyExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FbyExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group_1_1__0"


    // $ANTLR start "rule__FbyExpression__Group_1_1__0__Impl"
    // InternalLTLFormula.g:7805:1: rule__FbyExpression__Group_1_1__0__Impl : ( ( rule__FbyExpression__OperatorAssignment_1_1_0 ) ) ;
    public final void rule__FbyExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7809:1: ( ( ( rule__FbyExpression__OperatorAssignment_1_1_0 ) ) )
            // InternalLTLFormula.g:7810:1: ( ( rule__FbyExpression__OperatorAssignment_1_1_0 ) )
            {
            // InternalLTLFormula.g:7810:1: ( ( rule__FbyExpression__OperatorAssignment_1_1_0 ) )
            // InternalLTLFormula.g:7811:2: ( rule__FbyExpression__OperatorAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFbyExpressionAccess().getOperatorAssignment_1_1_0()); 
            }
            // InternalLTLFormula.g:7812:2: ( rule__FbyExpression__OperatorAssignment_1_1_0 )
            // InternalLTLFormula.g:7812:3: rule__FbyExpression__OperatorAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FbyExpression__OperatorAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFbyExpressionAccess().getOperatorAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__FbyExpression__Group_1_1__1"
    // InternalLTLFormula.g:7820:1: rule__FbyExpression__Group_1_1__1 : rule__FbyExpression__Group_1_1__1__Impl ;
    public final void rule__FbyExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7824:1: ( rule__FbyExpression__Group_1_1__1__Impl )
            // InternalLTLFormula.g:7825:2: rule__FbyExpression__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FbyExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group_1_1__1"


    // $ANTLR start "rule__FbyExpression__Group_1_1__1__Impl"
    // InternalLTLFormula.g:7831:1: rule__FbyExpression__Group_1_1__1__Impl : ( ( rule__FbyExpression__SubExpressionsAssignment_1_1_1 ) ) ;
    public final void rule__FbyExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7835:1: ( ( ( rule__FbyExpression__SubExpressionsAssignment_1_1_1 ) ) )
            // InternalLTLFormula.g:7836:1: ( ( rule__FbyExpression__SubExpressionsAssignment_1_1_1 ) )
            {
            // InternalLTLFormula.g:7836:1: ( ( rule__FbyExpression__SubExpressionsAssignment_1_1_1 ) )
            // InternalLTLFormula.g:7837:2: ( rule__FbyExpression__SubExpressionsAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFbyExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }
            // InternalLTLFormula.g:7838:2: ( rule__FbyExpression__SubExpressionsAssignment_1_1_1 )
            // InternalLTLFormula.g:7838:3: rule__FbyExpression__SubExpressionsAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FbyExpression__SubExpressionsAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFbyExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__FbyExpression__Group_1_2__0"
    // InternalLTLFormula.g:7847:1: rule__FbyExpression__Group_1_2__0 : rule__FbyExpression__Group_1_2__0__Impl rule__FbyExpression__Group_1_2__1 ;
    public final void rule__FbyExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7851:1: ( rule__FbyExpression__Group_1_2__0__Impl rule__FbyExpression__Group_1_2__1 )
            // InternalLTLFormula.g:7852:2: rule__FbyExpression__Group_1_2__0__Impl rule__FbyExpression__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__FbyExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FbyExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group_1_2__0"


    // $ANTLR start "rule__FbyExpression__Group_1_2__0__Impl"
    // InternalLTLFormula.g:7859:1: rule__FbyExpression__Group_1_2__0__Impl : ( 'fby' ) ;
    public final void rule__FbyExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7863:1: ( ( 'fby' ) )
            // InternalLTLFormula.g:7864:1: ( 'fby' )
            {
            // InternalLTLFormula.g:7864:1: ( 'fby' )
            // InternalLTLFormula.g:7865:2: 'fby'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFbyExpressionAccess().getFbyKeyword_1_2_0()); 
            }
            match(input,40,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFbyExpressionAccess().getFbyKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__FbyExpression__Group_1_2__1"
    // InternalLTLFormula.g:7874:1: rule__FbyExpression__Group_1_2__1 : rule__FbyExpression__Group_1_2__1__Impl ;
    public final void rule__FbyExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7878:1: ( rule__FbyExpression__Group_1_2__1__Impl )
            // InternalLTLFormula.g:7879:2: rule__FbyExpression__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FbyExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group_1_2__1"


    // $ANTLR start "rule__FbyExpression__Group_1_2__1__Impl"
    // InternalLTLFormula.g:7885:1: rule__FbyExpression__Group_1_2__1__Impl : ( ( rule__FbyExpression__SubExpressionsAssignment_1_2_1 ) ) ;
    public final void rule__FbyExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7889:1: ( ( ( rule__FbyExpression__SubExpressionsAssignment_1_2_1 ) ) )
            // InternalLTLFormula.g:7890:1: ( ( rule__FbyExpression__SubExpressionsAssignment_1_2_1 ) )
            {
            // InternalLTLFormula.g:7890:1: ( ( rule__FbyExpression__SubExpressionsAssignment_1_2_1 ) )
            // InternalLTLFormula.g:7891:2: ( rule__FbyExpression__SubExpressionsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFbyExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }
            // InternalLTLFormula.g:7892:2: ( rule__FbyExpression__SubExpressionsAssignment_1_2_1 )
            // InternalLTLFormula.g:7892:3: rule__FbyExpression__SubExpressionsAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FbyExpression__SubExpressionsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFbyExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__SfbyExpression__Group__0"
    // InternalLTLFormula.g:7901:1: rule__SfbyExpression__Group__0 : rule__SfbyExpression__Group__0__Impl rule__SfbyExpression__Group__1 ;
    public final void rule__SfbyExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7905:1: ( rule__SfbyExpression__Group__0__Impl rule__SfbyExpression__Group__1 )
            // InternalLTLFormula.g:7906:2: rule__SfbyExpression__Group__0__Impl rule__SfbyExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__SfbyExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SfbyExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group__0"


    // $ANTLR start "rule__SfbyExpression__Group__0__Impl"
    // InternalLTLFormula.g:7913:1: rule__SfbyExpression__Group__0__Impl : ( ruleAtomicValuedExpression ) ;
    public final void rule__SfbyExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7917:1: ( ( ruleAtomicValuedExpression ) )
            // InternalLTLFormula.g:7918:1: ( ruleAtomicValuedExpression )
            {
            // InternalLTLFormula.g:7918:1: ( ruleAtomicValuedExpression )
            // InternalLTLFormula.g:7919:2: ruleAtomicValuedExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSfbyExpressionAccess().getAtomicValuedExpressionParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSfbyExpressionAccess().getAtomicValuedExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group__0__Impl"


    // $ANTLR start "rule__SfbyExpression__Group__1"
    // InternalLTLFormula.g:7928:1: rule__SfbyExpression__Group__1 : rule__SfbyExpression__Group__1__Impl ;
    public final void rule__SfbyExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7932:1: ( rule__SfbyExpression__Group__1__Impl )
            // InternalLTLFormula.g:7933:2: rule__SfbyExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SfbyExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group__1"


    // $ANTLR start "rule__SfbyExpression__Group__1__Impl"
    // InternalLTLFormula.g:7939:1: rule__SfbyExpression__Group__1__Impl : ( ( rule__SfbyExpression__Group_1__0 )? ) ;
    public final void rule__SfbyExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7943:1: ( ( ( rule__SfbyExpression__Group_1__0 )? ) )
            // InternalLTLFormula.g:7944:1: ( ( rule__SfbyExpression__Group_1__0 )? )
            {
            // InternalLTLFormula.g:7944:1: ( ( rule__SfbyExpression__Group_1__0 )? )
            // InternalLTLFormula.g:7945:2: ( rule__SfbyExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSfbyExpressionAccess().getGroup_1()); 
            }
            // InternalLTLFormula.g:7946:2: ( rule__SfbyExpression__Group_1__0 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==41) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalLTLFormula.g:7946:3: rule__SfbyExpression__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SfbyExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSfbyExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group__1__Impl"


    // $ANTLR start "rule__SfbyExpression__Group_1__0"
    // InternalLTLFormula.g:7955:1: rule__SfbyExpression__Group_1__0 : rule__SfbyExpression__Group_1__0__Impl rule__SfbyExpression__Group_1__1 ;
    public final void rule__SfbyExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7959:1: ( rule__SfbyExpression__Group_1__0__Impl rule__SfbyExpression__Group_1__1 )
            // InternalLTLFormula.g:7960:2: rule__SfbyExpression__Group_1__0__Impl rule__SfbyExpression__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__SfbyExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SfbyExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group_1__0"


    // $ANTLR start "rule__SfbyExpression__Group_1__0__Impl"
    // InternalLTLFormula.g:7967:1: rule__SfbyExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__SfbyExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7971:1: ( ( () ) )
            // InternalLTLFormula.g:7972:1: ( () )
            {
            // InternalLTLFormula.g:7972:1: ( () )
            // InternalLTLFormula.g:7973:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSfbyExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }
            // InternalLTLFormula.g:7974:2: ()
            // InternalLTLFormula.g:7974:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSfbyExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group_1__0__Impl"


    // $ANTLR start "rule__SfbyExpression__Group_1__1"
    // InternalLTLFormula.g:7982:1: rule__SfbyExpression__Group_1__1 : rule__SfbyExpression__Group_1__1__Impl rule__SfbyExpression__Group_1__2 ;
    public final void rule__SfbyExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7986:1: ( rule__SfbyExpression__Group_1__1__Impl rule__SfbyExpression__Group_1__2 )
            // InternalLTLFormula.g:7987:2: rule__SfbyExpression__Group_1__1__Impl rule__SfbyExpression__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__SfbyExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SfbyExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group_1__1"


    // $ANTLR start "rule__SfbyExpression__Group_1__1__Impl"
    // InternalLTLFormula.g:7994:1: rule__SfbyExpression__Group_1__1__Impl : ( ( rule__SfbyExpression__Group_1_1__0 ) ) ;
    public final void rule__SfbyExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:7998:1: ( ( ( rule__SfbyExpression__Group_1_1__0 ) ) )
            // InternalLTLFormula.g:7999:1: ( ( rule__SfbyExpression__Group_1_1__0 ) )
            {
            // InternalLTLFormula.g:7999:1: ( ( rule__SfbyExpression__Group_1_1__0 ) )
            // InternalLTLFormula.g:8000:2: ( rule__SfbyExpression__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSfbyExpressionAccess().getGroup_1_1()); 
            }
            // InternalLTLFormula.g:8001:2: ( rule__SfbyExpression__Group_1_1__0 )
            // InternalLTLFormula.g:8001:3: rule__SfbyExpression__Group_1_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SfbyExpression__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSfbyExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group_1__1__Impl"


    // $ANTLR start "rule__SfbyExpression__Group_1__2"
    // InternalLTLFormula.g:8009:1: rule__SfbyExpression__Group_1__2 : rule__SfbyExpression__Group_1__2__Impl ;
    public final void rule__SfbyExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8013:1: ( rule__SfbyExpression__Group_1__2__Impl )
            // InternalLTLFormula.g:8014:2: rule__SfbyExpression__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SfbyExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group_1__2"


    // $ANTLR start "rule__SfbyExpression__Group_1__2__Impl"
    // InternalLTLFormula.g:8020:1: rule__SfbyExpression__Group_1__2__Impl : ( ( rule__SfbyExpression__Group_1_2__0 )* ) ;
    public final void rule__SfbyExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8024:1: ( ( ( rule__SfbyExpression__Group_1_2__0 )* ) )
            // InternalLTLFormula.g:8025:1: ( ( rule__SfbyExpression__Group_1_2__0 )* )
            {
            // InternalLTLFormula.g:8025:1: ( ( rule__SfbyExpression__Group_1_2__0 )* )
            // InternalLTLFormula.g:8026:2: ( rule__SfbyExpression__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSfbyExpressionAccess().getGroup_1_2()); 
            }
            // InternalLTLFormula.g:8027:2: ( rule__SfbyExpression__Group_1_2__0 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==41) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalLTLFormula.g:8027:3: rule__SfbyExpression__Group_1_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_53);
            	    rule__SfbyExpression__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSfbyExpressionAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group_1__2__Impl"


    // $ANTLR start "rule__SfbyExpression__Group_1_1__0"
    // InternalLTLFormula.g:8036:1: rule__SfbyExpression__Group_1_1__0 : rule__SfbyExpression__Group_1_1__0__Impl rule__SfbyExpression__Group_1_1__1 ;
    public final void rule__SfbyExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8040:1: ( rule__SfbyExpression__Group_1_1__0__Impl rule__SfbyExpression__Group_1_1__1 )
            // InternalLTLFormula.g:8041:2: rule__SfbyExpression__Group_1_1__0__Impl rule__SfbyExpression__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__SfbyExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SfbyExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group_1_1__0"


    // $ANTLR start "rule__SfbyExpression__Group_1_1__0__Impl"
    // InternalLTLFormula.g:8048:1: rule__SfbyExpression__Group_1_1__0__Impl : ( ( rule__SfbyExpression__OperatorAssignment_1_1_0 ) ) ;
    public final void rule__SfbyExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8052:1: ( ( ( rule__SfbyExpression__OperatorAssignment_1_1_0 ) ) )
            // InternalLTLFormula.g:8053:1: ( ( rule__SfbyExpression__OperatorAssignment_1_1_0 ) )
            {
            // InternalLTLFormula.g:8053:1: ( ( rule__SfbyExpression__OperatorAssignment_1_1_0 ) )
            // InternalLTLFormula.g:8054:2: ( rule__SfbyExpression__OperatorAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSfbyExpressionAccess().getOperatorAssignment_1_1_0()); 
            }
            // InternalLTLFormula.g:8055:2: ( rule__SfbyExpression__OperatorAssignment_1_1_0 )
            // InternalLTLFormula.g:8055:3: rule__SfbyExpression__OperatorAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SfbyExpression__OperatorAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSfbyExpressionAccess().getOperatorAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__SfbyExpression__Group_1_1__1"
    // InternalLTLFormula.g:8063:1: rule__SfbyExpression__Group_1_1__1 : rule__SfbyExpression__Group_1_1__1__Impl ;
    public final void rule__SfbyExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8067:1: ( rule__SfbyExpression__Group_1_1__1__Impl )
            // InternalLTLFormula.g:8068:2: rule__SfbyExpression__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SfbyExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group_1_1__1"


    // $ANTLR start "rule__SfbyExpression__Group_1_1__1__Impl"
    // InternalLTLFormula.g:8074:1: rule__SfbyExpression__Group_1_1__1__Impl : ( ( rule__SfbyExpression__SubExpressionsAssignment_1_1_1 ) ) ;
    public final void rule__SfbyExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8078:1: ( ( ( rule__SfbyExpression__SubExpressionsAssignment_1_1_1 ) ) )
            // InternalLTLFormula.g:8079:1: ( ( rule__SfbyExpression__SubExpressionsAssignment_1_1_1 ) )
            {
            // InternalLTLFormula.g:8079:1: ( ( rule__SfbyExpression__SubExpressionsAssignment_1_1_1 ) )
            // InternalLTLFormula.g:8080:2: ( rule__SfbyExpression__SubExpressionsAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSfbyExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }
            // InternalLTLFormula.g:8081:2: ( rule__SfbyExpression__SubExpressionsAssignment_1_1_1 )
            // InternalLTLFormula.g:8081:3: rule__SfbyExpression__SubExpressionsAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SfbyExpression__SubExpressionsAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSfbyExpressionAccess().getSubExpressionsAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__SfbyExpression__Group_1_2__0"
    // InternalLTLFormula.g:8090:1: rule__SfbyExpression__Group_1_2__0 : rule__SfbyExpression__Group_1_2__0__Impl rule__SfbyExpression__Group_1_2__1 ;
    public final void rule__SfbyExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8094:1: ( rule__SfbyExpression__Group_1_2__0__Impl rule__SfbyExpression__Group_1_2__1 )
            // InternalLTLFormula.g:8095:2: rule__SfbyExpression__Group_1_2__0__Impl rule__SfbyExpression__Group_1_2__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__SfbyExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SfbyExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group_1_2__0"


    // $ANTLR start "rule__SfbyExpression__Group_1_2__0__Impl"
    // InternalLTLFormula.g:8102:1: rule__SfbyExpression__Group_1_2__0__Impl : ( 'sfby' ) ;
    public final void rule__SfbyExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8106:1: ( ( 'sfby' ) )
            // InternalLTLFormula.g:8107:1: ( 'sfby' )
            {
            // InternalLTLFormula.g:8107:1: ( 'sfby' )
            // InternalLTLFormula.g:8108:2: 'sfby'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSfbyExpressionAccess().getSfbyKeyword_1_2_0()); 
            }
            match(input,41,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSfbyExpressionAccess().getSfbyKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__SfbyExpression__Group_1_2__1"
    // InternalLTLFormula.g:8117:1: rule__SfbyExpression__Group_1_2__1 : rule__SfbyExpression__Group_1_2__1__Impl ;
    public final void rule__SfbyExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8121:1: ( rule__SfbyExpression__Group_1_2__1__Impl )
            // InternalLTLFormula.g:8122:2: rule__SfbyExpression__Group_1_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SfbyExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group_1_2__1"


    // $ANTLR start "rule__SfbyExpression__Group_1_2__1__Impl"
    // InternalLTLFormula.g:8128:1: rule__SfbyExpression__Group_1_2__1__Impl : ( ( rule__SfbyExpression__SubExpressionsAssignment_1_2_1 ) ) ;
    public final void rule__SfbyExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8132:1: ( ( ( rule__SfbyExpression__SubExpressionsAssignment_1_2_1 ) ) )
            // InternalLTLFormula.g:8133:1: ( ( rule__SfbyExpression__SubExpressionsAssignment_1_2_1 ) )
            {
            // InternalLTLFormula.g:8133:1: ( ( rule__SfbyExpression__SubExpressionsAssignment_1_2_1 ) )
            // InternalLTLFormula.g:8134:2: ( rule__SfbyExpression__SubExpressionsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSfbyExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }
            // InternalLTLFormula.g:8135:2: ( rule__SfbyExpression__SubExpressionsAssignment_1_2_1 )
            // InternalLTLFormula.g:8135:3: rule__SfbyExpression__SubExpressionsAssignment_1_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SfbyExpression__SubExpressionsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSfbyExpressionAccess().getSubExpressionsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__AtomicValuedExpression__Group_5__0"
    // InternalLTLFormula.g:8144:1: rule__AtomicValuedExpression__Group_5__0 : rule__AtomicValuedExpression__Group_5__0__Impl rule__AtomicValuedExpression__Group_5__1 ;
    public final void rule__AtomicValuedExpression__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8148:1: ( rule__AtomicValuedExpression__Group_5__0__Impl rule__AtomicValuedExpression__Group_5__1 )
            // InternalLTLFormula.g:8149:2: rule__AtomicValuedExpression__Group_5__0__Impl rule__AtomicValuedExpression__Group_5__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__AtomicValuedExpression__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AtomicValuedExpression__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AtomicValuedExpression__Group_5__0"


    // $ANTLR start "rule__AtomicValuedExpression__Group_5__0__Impl"
    // InternalLTLFormula.g:8156:1: rule__AtomicValuedExpression__Group_5__0__Impl : ( '(' ) ;
    public final void rule__AtomicValuedExpression__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8160:1: ( ( '(' ) )
            // InternalLTLFormula.g:8161:1: ( '(' )
            {
            // InternalLTLFormula.g:8161:1: ( '(' )
            // InternalLTLFormula.g:8162:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_5_0()); 
            }
            match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AtomicValuedExpression__Group_5__0__Impl"


    // $ANTLR start "rule__AtomicValuedExpression__Group_5__1"
    // InternalLTLFormula.g:8171:1: rule__AtomicValuedExpression__Group_5__1 : rule__AtomicValuedExpression__Group_5__1__Impl rule__AtomicValuedExpression__Group_5__2 ;
    public final void rule__AtomicValuedExpression__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8175:1: ( rule__AtomicValuedExpression__Group_5__1__Impl rule__AtomicValuedExpression__Group_5__2 )
            // InternalLTLFormula.g:8176:2: rule__AtomicValuedExpression__Group_5__1__Impl rule__AtomicValuedExpression__Group_5__2
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__AtomicValuedExpression__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AtomicValuedExpression__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AtomicValuedExpression__Group_5__1"


    // $ANTLR start "rule__AtomicValuedExpression__Group_5__1__Impl"
    // InternalLTLFormula.g:8183:1: rule__AtomicValuedExpression__Group_5__1__Impl : ( ruleValuedExpression ) ;
    public final void rule__AtomicValuedExpression__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8187:1: ( ( ruleValuedExpression ) )
            // InternalLTLFormula.g:8188:1: ( ruleValuedExpression )
            {
            // InternalLTLFormula.g:8188:1: ( ruleValuedExpression )
            // InternalLTLFormula.g:8189:2: ruleValuedExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_5_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleValuedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AtomicValuedExpression__Group_5__1__Impl"


    // $ANTLR start "rule__AtomicValuedExpression__Group_5__2"
    // InternalLTLFormula.g:8198:1: rule__AtomicValuedExpression__Group_5__2 : rule__AtomicValuedExpression__Group_5__2__Impl ;
    public final void rule__AtomicValuedExpression__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8202:1: ( rule__AtomicValuedExpression__Group_5__2__Impl )
            // InternalLTLFormula.g:8203:2: rule__AtomicValuedExpression__Group_5__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AtomicValuedExpression__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AtomicValuedExpression__Group_5__2"


    // $ANTLR start "rule__AtomicValuedExpression__Group_5__2__Impl"
    // InternalLTLFormula.g:8209:1: rule__AtomicValuedExpression__Group_5__2__Impl : ( ')' ) ;
    public final void rule__AtomicValuedExpression__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8213:1: ( ( ')' ) )
            // InternalLTLFormula.g:8214:1: ( ')' )
            {
            // InternalLTLFormula.g:8214:1: ( ')' )
            // InternalLTLFormula.g:8215:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_5_2()); 
            }
            match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AtomicValuedExpression__Group_5__2__Impl"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0__0"
    // InternalLTLFormula.g:8225:1: rule__ValuedObjectTestExpression__Group_0__0 : rule__ValuedObjectTestExpression__Group_0__0__Impl rule__ValuedObjectTestExpression__Group_0__1 ;
    public final void rule__ValuedObjectTestExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8229:1: ( rule__ValuedObjectTestExpression__Group_0__0__Impl rule__ValuedObjectTestExpression__Group_0__1 )
            // InternalLTLFormula.g:8230:2: rule__ValuedObjectTestExpression__Group_0__0__Impl rule__ValuedObjectTestExpression__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__ValuedObjectTestExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectTestExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0__0"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0__0__Impl"
    // InternalLTLFormula.g:8237:1: rule__ValuedObjectTestExpression__Group_0__0__Impl : ( () ) ;
    public final void rule__ValuedObjectTestExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8241:1: ( ( () ) )
            // InternalLTLFormula.g:8242:1: ( () )
            {
            // InternalLTLFormula.g:8242:1: ( () )
            // InternalLTLFormula.g:8243:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0()); 
            }
            // InternalLTLFormula.g:8244:2: ()
            // InternalLTLFormula.g:8244:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0__0__Impl"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0__1"
    // InternalLTLFormula.g:8252:1: rule__ValuedObjectTestExpression__Group_0__1 : rule__ValuedObjectTestExpression__Group_0__1__Impl rule__ValuedObjectTestExpression__Group_0__2 ;
    public final void rule__ValuedObjectTestExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8256:1: ( rule__ValuedObjectTestExpression__Group_0__1__Impl rule__ValuedObjectTestExpression__Group_0__2 )
            // InternalLTLFormula.g:8257:2: rule__ValuedObjectTestExpression__Group_0__1__Impl rule__ValuedObjectTestExpression__Group_0__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__ValuedObjectTestExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectTestExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0__1"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0__1__Impl"
    // InternalLTLFormula.g:8264:1: rule__ValuedObjectTestExpression__Group_0__1__Impl : ( ( rule__ValuedObjectTestExpression__OperatorAssignment_0_1 ) ) ;
    public final void rule__ValuedObjectTestExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8268:1: ( ( ( rule__ValuedObjectTestExpression__OperatorAssignment_0_1 ) ) )
            // InternalLTLFormula.g:8269:1: ( ( rule__ValuedObjectTestExpression__OperatorAssignment_0_1 ) )
            {
            // InternalLTLFormula.g:8269:1: ( ( rule__ValuedObjectTestExpression__OperatorAssignment_0_1 ) )
            // InternalLTLFormula.g:8270:2: ( rule__ValuedObjectTestExpression__OperatorAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1()); 
            }
            // InternalLTLFormula.g:8271:2: ( rule__ValuedObjectTestExpression__OperatorAssignment_0_1 )
            // InternalLTLFormula.g:8271:3: rule__ValuedObjectTestExpression__OperatorAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectTestExpression__OperatorAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0__1__Impl"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0__2"
    // InternalLTLFormula.g:8279:1: rule__ValuedObjectTestExpression__Group_0__2 : rule__ValuedObjectTestExpression__Group_0__2__Impl rule__ValuedObjectTestExpression__Group_0__3 ;
    public final void rule__ValuedObjectTestExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8283:1: ( rule__ValuedObjectTestExpression__Group_0__2__Impl rule__ValuedObjectTestExpression__Group_0__3 )
            // InternalLTLFormula.g:8284:2: rule__ValuedObjectTestExpression__Group_0__2__Impl rule__ValuedObjectTestExpression__Group_0__3
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__ValuedObjectTestExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectTestExpression__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0__2"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0__2__Impl"
    // InternalLTLFormula.g:8291:1: rule__ValuedObjectTestExpression__Group_0__2__Impl : ( '(' ) ;
    public final void rule__ValuedObjectTestExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8295:1: ( ( '(' ) )
            // InternalLTLFormula.g:8296:1: ( '(' )
            {
            // InternalLTLFormula.g:8296:1: ( '(' )
            // InternalLTLFormula.g:8297:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2()); 
            }
            match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0__2__Impl"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0__3"
    // InternalLTLFormula.g:8306:1: rule__ValuedObjectTestExpression__Group_0__3 : rule__ValuedObjectTestExpression__Group_0__3__Impl rule__ValuedObjectTestExpression__Group_0__4 ;
    public final void rule__ValuedObjectTestExpression__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8310:1: ( rule__ValuedObjectTestExpression__Group_0__3__Impl rule__ValuedObjectTestExpression__Group_0__4 )
            // InternalLTLFormula.g:8311:2: rule__ValuedObjectTestExpression__Group_0__3__Impl rule__ValuedObjectTestExpression__Group_0__4
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__ValuedObjectTestExpression__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectTestExpression__Group_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0__3"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0__3__Impl"
    // InternalLTLFormula.g:8318:1: rule__ValuedObjectTestExpression__Group_0__3__Impl : ( ( rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3 ) ) ;
    public final void rule__ValuedObjectTestExpression__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8322:1: ( ( ( rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3 ) ) )
            // InternalLTLFormula.g:8323:1: ( ( rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3 ) )
            {
            // InternalLTLFormula.g:8323:1: ( ( rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3 ) )
            // InternalLTLFormula.g:8324:2: ( rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3()); 
            }
            // InternalLTLFormula.g:8325:2: ( rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3 )
            // InternalLTLFormula.g:8325:3: rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0__3__Impl"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0__4"
    // InternalLTLFormula.g:8333:1: rule__ValuedObjectTestExpression__Group_0__4 : rule__ValuedObjectTestExpression__Group_0__4__Impl rule__ValuedObjectTestExpression__Group_0__5 ;
    public final void rule__ValuedObjectTestExpression__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8337:1: ( rule__ValuedObjectTestExpression__Group_0__4__Impl rule__ValuedObjectTestExpression__Group_0__5 )
            // InternalLTLFormula.g:8338:2: rule__ValuedObjectTestExpression__Group_0__4__Impl rule__ValuedObjectTestExpression__Group_0__5
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__ValuedObjectTestExpression__Group_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectTestExpression__Group_0__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0__4"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0__4__Impl"
    // InternalLTLFormula.g:8345:1: rule__ValuedObjectTestExpression__Group_0__4__Impl : ( ( rule__ValuedObjectTestExpression__Group_0_4__0 )? ) ;
    public final void rule__ValuedObjectTestExpression__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8349:1: ( ( ( rule__ValuedObjectTestExpression__Group_0_4__0 )? ) )
            // InternalLTLFormula.g:8350:1: ( ( rule__ValuedObjectTestExpression__Group_0_4__0 )? )
            {
            // InternalLTLFormula.g:8350:1: ( ( rule__ValuedObjectTestExpression__Group_0_4__0 )? )
            // InternalLTLFormula.g:8351:2: ( rule__ValuedObjectTestExpression__Group_0_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0_4()); 
            }
            // InternalLTLFormula.g:8352:2: ( rule__ValuedObjectTestExpression__Group_0_4__0 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==54) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalLTLFormula.g:8352:3: rule__ValuedObjectTestExpression__Group_0_4__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ValuedObjectTestExpression__Group_0_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0__4__Impl"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0__5"
    // InternalLTLFormula.g:8360:1: rule__ValuedObjectTestExpression__Group_0__5 : rule__ValuedObjectTestExpression__Group_0__5__Impl ;
    public final void rule__ValuedObjectTestExpression__Group_0__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8364:1: ( rule__ValuedObjectTestExpression__Group_0__5__Impl )
            // InternalLTLFormula.g:8365:2: rule__ValuedObjectTestExpression__Group_0__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectTestExpression__Group_0__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0__5"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0__5__Impl"
    // InternalLTLFormula.g:8371:1: rule__ValuedObjectTestExpression__Group_0__5__Impl : ( ')' ) ;
    public final void rule__ValuedObjectTestExpression__Group_0__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8375:1: ( ( ')' ) )
            // InternalLTLFormula.g:8376:1: ( ')' )
            {
            // InternalLTLFormula.g:8376:1: ( ')' )
            // InternalLTLFormula.g:8377:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_5()); 
            }
            match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0__5__Impl"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0_4__0"
    // InternalLTLFormula.g:8387:1: rule__ValuedObjectTestExpression__Group_0_4__0 : rule__ValuedObjectTestExpression__Group_0_4__0__Impl rule__ValuedObjectTestExpression__Group_0_4__1 ;
    public final void rule__ValuedObjectTestExpression__Group_0_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8391:1: ( rule__ValuedObjectTestExpression__Group_0_4__0__Impl rule__ValuedObjectTestExpression__Group_0_4__1 )
            // InternalLTLFormula.g:8392:2: rule__ValuedObjectTestExpression__Group_0_4__0__Impl rule__ValuedObjectTestExpression__Group_0_4__1
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__ValuedObjectTestExpression__Group_0_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectTestExpression__Group_0_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0_4__0"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0_4__0__Impl"
    // InternalLTLFormula.g:8399:1: rule__ValuedObjectTestExpression__Group_0_4__0__Impl : ( ',' ) ;
    public final void rule__ValuedObjectTestExpression__Group_0_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8403:1: ( ( ',' ) )
            // InternalLTLFormula.g:8404:1: ( ',' )
            {
            // InternalLTLFormula.g:8404:1: ( ',' )
            // InternalLTLFormula.g:8405:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectTestExpressionAccess().getCommaKeyword_0_4_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectTestExpressionAccess().getCommaKeyword_0_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0_4__0__Impl"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0_4__1"
    // InternalLTLFormula.g:8414:1: rule__ValuedObjectTestExpression__Group_0_4__1 : rule__ValuedObjectTestExpression__Group_0_4__1__Impl ;
    public final void rule__ValuedObjectTestExpression__Group_0_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8418:1: ( rule__ValuedObjectTestExpression__Group_0_4__1__Impl )
            // InternalLTLFormula.g:8419:2: rule__ValuedObjectTestExpression__Group_0_4__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectTestExpression__Group_0_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0_4__1"


    // $ANTLR start "rule__ValuedObjectTestExpression__Group_0_4__1__Impl"
    // InternalLTLFormula.g:8425:1: rule__ValuedObjectTestExpression__Group_0_4__1__Impl : ( ( rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_4_1 ) ) ;
    public final void rule__ValuedObjectTestExpression__Group_0_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8429:1: ( ( ( rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_4_1 ) ) )
            // InternalLTLFormula.g:8430:1: ( ( rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_4_1 ) )
            {
            // InternalLTLFormula.g:8430:1: ( ( rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_4_1 ) )
            // InternalLTLFormula.g:8431:2: ( rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_4_1()); 
            }
            // InternalLTLFormula.g:8432:2: ( rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_4_1 )
            // InternalLTLFormula.g:8432:3: rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_4_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__Group_0_4__1__Impl"


    // $ANTLR start "rule__SpecialAccessExpression__Group__0"
    // InternalLTLFormula.g:8441:1: rule__SpecialAccessExpression__Group__0 : rule__SpecialAccessExpression__Group__0__Impl rule__SpecialAccessExpression__Group__1 ;
    public final void rule__SpecialAccessExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8445:1: ( rule__SpecialAccessExpression__Group__0__Impl rule__SpecialAccessExpression__Group__1 )
            // InternalLTLFormula.g:8446:2: rule__SpecialAccessExpression__Group__0__Impl rule__SpecialAccessExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__SpecialAccessExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialAccessExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group__0"


    // $ANTLR start "rule__SpecialAccessExpression__Group__0__Impl"
    // InternalLTLFormula.g:8453:1: rule__SpecialAccessExpression__Group__0__Impl : ( ( rule__SpecialAccessExpression__AccessAssignment_0 ) ) ;
    public final void rule__SpecialAccessExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8457:1: ( ( ( rule__SpecialAccessExpression__AccessAssignment_0 ) ) )
            // InternalLTLFormula.g:8458:1: ( ( rule__SpecialAccessExpression__AccessAssignment_0 ) )
            {
            // InternalLTLFormula.g:8458:1: ( ( rule__SpecialAccessExpression__AccessAssignment_0 ) )
            // InternalLTLFormula.g:8459:2: ( rule__SpecialAccessExpression__AccessAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getAccessAssignment_0()); 
            }
            // InternalLTLFormula.g:8460:2: ( rule__SpecialAccessExpression__AccessAssignment_0 )
            // InternalLTLFormula.g:8460:3: rule__SpecialAccessExpression__AccessAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialAccessExpression__AccessAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getAccessAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group__0__Impl"


    // $ANTLR start "rule__SpecialAccessExpression__Group__1"
    // InternalLTLFormula.g:8468:1: rule__SpecialAccessExpression__Group__1 : rule__SpecialAccessExpression__Group__1__Impl rule__SpecialAccessExpression__Group__2 ;
    public final void rule__SpecialAccessExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8472:1: ( rule__SpecialAccessExpression__Group__1__Impl rule__SpecialAccessExpression__Group__2 )
            // InternalLTLFormula.g:8473:2: rule__SpecialAccessExpression__Group__1__Impl rule__SpecialAccessExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__SpecialAccessExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialAccessExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group__1"


    // $ANTLR start "rule__SpecialAccessExpression__Group__1__Impl"
    // InternalLTLFormula.g:8480:1: rule__SpecialAccessExpression__Group__1__Impl : ( '(' ) ;
    public final void rule__SpecialAccessExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8484:1: ( ( '(' ) )
            // InternalLTLFormula.g:8485:1: ( '(' )
            {
            // InternalLTLFormula.g:8485:1: ( '(' )
            // InternalLTLFormula.g:8486:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group__1__Impl"


    // $ANTLR start "rule__SpecialAccessExpression__Group__2"
    // InternalLTLFormula.g:8495:1: rule__SpecialAccessExpression__Group__2 : rule__SpecialAccessExpression__Group__2__Impl rule__SpecialAccessExpression__Group__3 ;
    public final void rule__SpecialAccessExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8499:1: ( rule__SpecialAccessExpression__Group__2__Impl rule__SpecialAccessExpression__Group__3 )
            // InternalLTLFormula.g:8500:2: rule__SpecialAccessExpression__Group__2__Impl rule__SpecialAccessExpression__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__SpecialAccessExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialAccessExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group__2"


    // $ANTLR start "rule__SpecialAccessExpression__Group__2__Impl"
    // InternalLTLFormula.g:8507:1: rule__SpecialAccessExpression__Group__2__Impl : ( ( rule__SpecialAccessExpression__Group_2__0 )? ) ;
    public final void rule__SpecialAccessExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8511:1: ( ( ( rule__SpecialAccessExpression__Group_2__0 )? ) )
            // InternalLTLFormula.g:8512:1: ( ( rule__SpecialAccessExpression__Group_2__0 )? )
            {
            // InternalLTLFormula.g:8512:1: ( ( rule__SpecialAccessExpression__Group_2__0 )? )
            // InternalLTLFormula.g:8513:2: ( rule__SpecialAccessExpression__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getGroup_2()); 
            }
            // InternalLTLFormula.g:8514:2: ( rule__SpecialAccessExpression__Group_2__0 )?
            int alt70=2;
            alt70 = dfa70.predict(input);
            switch (alt70) {
                case 1 :
                    // InternalLTLFormula.g:8514:3: rule__SpecialAccessExpression__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SpecialAccessExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group__2__Impl"


    // $ANTLR start "rule__SpecialAccessExpression__Group__3"
    // InternalLTLFormula.g:8522:1: rule__SpecialAccessExpression__Group__3 : rule__SpecialAccessExpression__Group__3__Impl rule__SpecialAccessExpression__Group__4 ;
    public final void rule__SpecialAccessExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8526:1: ( rule__SpecialAccessExpression__Group__3__Impl rule__SpecialAccessExpression__Group__4 )
            // InternalLTLFormula.g:8527:2: rule__SpecialAccessExpression__Group__3__Impl rule__SpecialAccessExpression__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__SpecialAccessExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialAccessExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group__3"


    // $ANTLR start "rule__SpecialAccessExpression__Group__3__Impl"
    // InternalLTLFormula.g:8534:1: rule__SpecialAccessExpression__Group__3__Impl : ( ( rule__SpecialAccessExpression__TargetAssignment_3 ) ) ;
    public final void rule__SpecialAccessExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8538:1: ( ( ( rule__SpecialAccessExpression__TargetAssignment_3 ) ) )
            // InternalLTLFormula.g:8539:1: ( ( rule__SpecialAccessExpression__TargetAssignment_3 ) )
            {
            // InternalLTLFormula.g:8539:1: ( ( rule__SpecialAccessExpression__TargetAssignment_3 ) )
            // InternalLTLFormula.g:8540:2: ( rule__SpecialAccessExpression__TargetAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getTargetAssignment_3()); 
            }
            // InternalLTLFormula.g:8541:2: ( rule__SpecialAccessExpression__TargetAssignment_3 )
            // InternalLTLFormula.g:8541:3: rule__SpecialAccessExpression__TargetAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialAccessExpression__TargetAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getTargetAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group__3__Impl"


    // $ANTLR start "rule__SpecialAccessExpression__Group__4"
    // InternalLTLFormula.g:8549:1: rule__SpecialAccessExpression__Group__4 : rule__SpecialAccessExpression__Group__4__Impl rule__SpecialAccessExpression__Group__5 ;
    public final void rule__SpecialAccessExpression__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8553:1: ( rule__SpecialAccessExpression__Group__4__Impl rule__SpecialAccessExpression__Group__5 )
            // InternalLTLFormula.g:8554:2: rule__SpecialAccessExpression__Group__4__Impl rule__SpecialAccessExpression__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__SpecialAccessExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialAccessExpression__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group__4"


    // $ANTLR start "rule__SpecialAccessExpression__Group__4__Impl"
    // InternalLTLFormula.g:8561:1: rule__SpecialAccessExpression__Group__4__Impl : ( ')' ) ;
    public final void rule__SpecialAccessExpression__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8565:1: ( ( ')' ) )
            // InternalLTLFormula.g:8566:1: ( ')' )
            {
            // InternalLTLFormula.g:8566:1: ( ')' )
            // InternalLTLFormula.g:8567:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group__4__Impl"


    // $ANTLR start "rule__SpecialAccessExpression__Group__5"
    // InternalLTLFormula.g:8576:1: rule__SpecialAccessExpression__Group__5 : rule__SpecialAccessExpression__Group__5__Impl rule__SpecialAccessExpression__Group__6 ;
    public final void rule__SpecialAccessExpression__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8580:1: ( rule__SpecialAccessExpression__Group__5__Impl rule__SpecialAccessExpression__Group__6 )
            // InternalLTLFormula.g:8581:2: rule__SpecialAccessExpression__Group__5__Impl rule__SpecialAccessExpression__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__SpecialAccessExpression__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialAccessExpression__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group__5"


    // $ANTLR start "rule__SpecialAccessExpression__Group__5__Impl"
    // InternalLTLFormula.g:8588:1: rule__SpecialAccessExpression__Group__5__Impl : ( '.' ) ;
    public final void rule__SpecialAccessExpression__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8592:1: ( ( '.' ) )
            // InternalLTLFormula.g:8593:1: ( '.' )
            {
            // InternalLTLFormula.g:8593:1: ( '.' )
            // InternalLTLFormula.g:8594:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getFullStopKeyword_5()); 
            }
            match(input,43,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getFullStopKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group__5__Impl"


    // $ANTLR start "rule__SpecialAccessExpression__Group__6"
    // InternalLTLFormula.g:8603:1: rule__SpecialAccessExpression__Group__6 : rule__SpecialAccessExpression__Group__6__Impl ;
    public final void rule__SpecialAccessExpression__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8607:1: ( rule__SpecialAccessExpression__Group__6__Impl )
            // InternalLTLFormula.g:8608:2: rule__SpecialAccessExpression__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialAccessExpression__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group__6"


    // $ANTLR start "rule__SpecialAccessExpression__Group__6__Impl"
    // InternalLTLFormula.g:8614:1: rule__SpecialAccessExpression__Group__6__Impl : ( ( rule__SpecialAccessExpression__SubReferenceAssignment_6 ) ) ;
    public final void rule__SpecialAccessExpression__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8618:1: ( ( ( rule__SpecialAccessExpression__SubReferenceAssignment_6 ) ) )
            // InternalLTLFormula.g:8619:1: ( ( rule__SpecialAccessExpression__SubReferenceAssignment_6 ) )
            {
            // InternalLTLFormula.g:8619:1: ( ( rule__SpecialAccessExpression__SubReferenceAssignment_6 ) )
            // InternalLTLFormula.g:8620:2: ( rule__SpecialAccessExpression__SubReferenceAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getSubReferenceAssignment_6()); 
            }
            // InternalLTLFormula.g:8621:2: ( rule__SpecialAccessExpression__SubReferenceAssignment_6 )
            // InternalLTLFormula.g:8621:3: rule__SpecialAccessExpression__SubReferenceAssignment_6
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialAccessExpression__SubReferenceAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getSubReferenceAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group__6__Impl"


    // $ANTLR start "rule__SpecialAccessExpression__Group_2__0"
    // InternalLTLFormula.g:8630:1: rule__SpecialAccessExpression__Group_2__0 : rule__SpecialAccessExpression__Group_2__0__Impl rule__SpecialAccessExpression__Group_2__1 ;
    public final void rule__SpecialAccessExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8634:1: ( rule__SpecialAccessExpression__Group_2__0__Impl rule__SpecialAccessExpression__Group_2__1 )
            // InternalLTLFormula.g:8635:2: rule__SpecialAccessExpression__Group_2__0__Impl rule__SpecialAccessExpression__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_58);
            rule__SpecialAccessExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialAccessExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group_2__0"


    // $ANTLR start "rule__SpecialAccessExpression__Group_2__0__Impl"
    // InternalLTLFormula.g:8642:1: rule__SpecialAccessExpression__Group_2__0__Impl : ( ( rule__SpecialAccessExpression__ContainerAssignment_2_0 ) ) ;
    public final void rule__SpecialAccessExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8646:1: ( ( ( rule__SpecialAccessExpression__ContainerAssignment_2_0 ) ) )
            // InternalLTLFormula.g:8647:1: ( ( rule__SpecialAccessExpression__ContainerAssignment_2_0 ) )
            {
            // InternalLTLFormula.g:8647:1: ( ( rule__SpecialAccessExpression__ContainerAssignment_2_0 ) )
            // InternalLTLFormula.g:8648:2: ( rule__SpecialAccessExpression__ContainerAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getContainerAssignment_2_0()); 
            }
            // InternalLTLFormula.g:8649:2: ( rule__SpecialAccessExpression__ContainerAssignment_2_0 )
            // InternalLTLFormula.g:8649:3: rule__SpecialAccessExpression__ContainerAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialAccessExpression__ContainerAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getContainerAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group_2__0__Impl"


    // $ANTLR start "rule__SpecialAccessExpression__Group_2__1"
    // InternalLTLFormula.g:8657:1: rule__SpecialAccessExpression__Group_2__1 : rule__SpecialAccessExpression__Group_2__1__Impl ;
    public final void rule__SpecialAccessExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8661:1: ( rule__SpecialAccessExpression__Group_2__1__Impl )
            // InternalLTLFormula.g:8662:2: rule__SpecialAccessExpression__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SpecialAccessExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group_2__1"


    // $ANTLR start "rule__SpecialAccessExpression__Group_2__1__Impl"
    // InternalLTLFormula.g:8668:1: rule__SpecialAccessExpression__Group_2__1__Impl : ( '.' ) ;
    public final void rule__SpecialAccessExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8672:1: ( ( '.' ) )
            // InternalLTLFormula.g:8673:1: ( '.' )
            {
            // InternalLTLFormula.g:8673:1: ( '.' )
            // InternalLTLFormula.g:8674:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getFullStopKeyword_2_1()); 
            }
            match(input,43,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getFullStopKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__Group_2__1__Impl"


    // $ANTLR start "rule__PrimeID__Group__0"
    // InternalLTLFormula.g:8684:1: rule__PrimeID__Group__0 : rule__PrimeID__Group__0__Impl rule__PrimeID__Group__1 ;
    public final void rule__PrimeID__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8688:1: ( rule__PrimeID__Group__0__Impl rule__PrimeID__Group__1 )
            // InternalLTLFormula.g:8689:2: rule__PrimeID__Group__0__Impl rule__PrimeID__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_59);
            rule__PrimeID__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrimeID__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimeID__Group__0"


    // $ANTLR start "rule__PrimeID__Group__0__Impl"
    // InternalLTLFormula.g:8696:1: rule__PrimeID__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__PrimeID__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8700:1: ( ( RULE_ID ) )
            // InternalLTLFormula.g:8701:1: ( RULE_ID )
            {
            // InternalLTLFormula.g:8701:1: ( RULE_ID )
            // InternalLTLFormula.g:8702:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimeID__Group__0__Impl"


    // $ANTLR start "rule__PrimeID__Group__1"
    // InternalLTLFormula.g:8711:1: rule__PrimeID__Group__1 : rule__PrimeID__Group__1__Impl ;
    public final void rule__PrimeID__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8715:1: ( rule__PrimeID__Group__1__Impl )
            // InternalLTLFormula.g:8716:2: rule__PrimeID__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PrimeID__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimeID__Group__1"


    // $ANTLR start "rule__PrimeID__Group__1__Impl"
    // InternalLTLFormula.g:8722:1: rule__PrimeID__Group__1__Impl : ( ( '\\'' )* ) ;
    public final void rule__PrimeID__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8726:1: ( ( ( '\\'' )* ) )
            // InternalLTLFormula.g:8727:1: ( ( '\\'' )* )
            {
            // InternalLTLFormula.g:8727:1: ( ( '\\'' )* )
            // InternalLTLFormula.g:8728:2: ( '\\'' )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimeIDAccess().getApostropheKeyword_1()); 
            }
            // InternalLTLFormula.g:8729:2: ( '\\'' )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==55) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalLTLFormula.g:8729:3: '\\''
            	    {
            	    match(input,55,FollowSets000.FOLLOW_60); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimeIDAccess().getApostropheKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimeID__Group__1__Impl"


    // $ANTLR start "rule__ValuedObjectReference__Group__0"
    // InternalLTLFormula.g:8738:1: rule__ValuedObjectReference__Group__0 : rule__ValuedObjectReference__Group__0__Impl rule__ValuedObjectReference__Group__1 ;
    public final void rule__ValuedObjectReference__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8742:1: ( rule__ValuedObjectReference__Group__0__Impl rule__ValuedObjectReference__Group__1 )
            // InternalLTLFormula.g:8743:2: rule__ValuedObjectReference__Group__0__Impl rule__ValuedObjectReference__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__ValuedObjectReference__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectReference__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group__0"


    // $ANTLR start "rule__ValuedObjectReference__Group__0__Impl"
    // InternalLTLFormula.g:8750:1: rule__ValuedObjectReference__Group__0__Impl : ( ( rule__ValuedObjectReference__ValuedObjectAssignment_0 ) ) ;
    public final void rule__ValuedObjectReference__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8754:1: ( ( ( rule__ValuedObjectReference__ValuedObjectAssignment_0 ) ) )
            // InternalLTLFormula.g:8755:1: ( ( rule__ValuedObjectReference__ValuedObjectAssignment_0 ) )
            {
            // InternalLTLFormula.g:8755:1: ( ( rule__ValuedObjectReference__ValuedObjectAssignment_0 ) )
            // InternalLTLFormula.g:8756:2: ( rule__ValuedObjectReference__ValuedObjectAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment_0()); 
            }
            // InternalLTLFormula.g:8757:2: ( rule__ValuedObjectReference__ValuedObjectAssignment_0 )
            // InternalLTLFormula.g:8757:3: rule__ValuedObjectReference__ValuedObjectAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectReference__ValuedObjectAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group__0__Impl"


    // $ANTLR start "rule__ValuedObjectReference__Group__1"
    // InternalLTLFormula.g:8765:1: rule__ValuedObjectReference__Group__1 : rule__ValuedObjectReference__Group__1__Impl rule__ValuedObjectReference__Group__2 ;
    public final void rule__ValuedObjectReference__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8769:1: ( rule__ValuedObjectReference__Group__1__Impl rule__ValuedObjectReference__Group__2 )
            // InternalLTLFormula.g:8770:2: rule__ValuedObjectReference__Group__1__Impl rule__ValuedObjectReference__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_61);
            rule__ValuedObjectReference__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectReference__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group__1"


    // $ANTLR start "rule__ValuedObjectReference__Group__1__Impl"
    // InternalLTLFormula.g:8777:1: rule__ValuedObjectReference__Group__1__Impl : ( ( rule__ValuedObjectReference__Group_1__0 )* ) ;
    public final void rule__ValuedObjectReference__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8781:1: ( ( ( rule__ValuedObjectReference__Group_1__0 )* ) )
            // InternalLTLFormula.g:8782:1: ( ( rule__ValuedObjectReference__Group_1__0 )* )
            {
            // InternalLTLFormula.g:8782:1: ( ( rule__ValuedObjectReference__Group_1__0 )* )
            // InternalLTLFormula.g:8783:2: ( rule__ValuedObjectReference__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectReferenceAccess().getGroup_1()); 
            }
            // InternalLTLFormula.g:8784:2: ( rule__ValuedObjectReference__Group_1__0 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==56) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalLTLFormula.g:8784:3: rule__ValuedObjectReference__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    rule__ValuedObjectReference__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectReferenceAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group__1__Impl"


    // $ANTLR start "rule__ValuedObjectReference__Group__2"
    // InternalLTLFormula.g:8792:1: rule__ValuedObjectReference__Group__2 : rule__ValuedObjectReference__Group__2__Impl ;
    public final void rule__ValuedObjectReference__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8796:1: ( rule__ValuedObjectReference__Group__2__Impl )
            // InternalLTLFormula.g:8797:2: rule__ValuedObjectReference__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectReference__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group__2"


    // $ANTLR start "rule__ValuedObjectReference__Group__2__Impl"
    // InternalLTLFormula.g:8803:1: rule__ValuedObjectReference__Group__2__Impl : ( ( rule__ValuedObjectReference__Group_2__0 )? ) ;
    public final void rule__ValuedObjectReference__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8807:1: ( ( ( rule__ValuedObjectReference__Group_2__0 )? ) )
            // InternalLTLFormula.g:8808:1: ( ( rule__ValuedObjectReference__Group_2__0 )? )
            {
            // InternalLTLFormula.g:8808:1: ( ( rule__ValuedObjectReference__Group_2__0 )? )
            // InternalLTLFormula.g:8809:2: ( rule__ValuedObjectReference__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectReferenceAccess().getGroup_2()); 
            }
            // InternalLTLFormula.g:8810:2: ( rule__ValuedObjectReference__Group_2__0 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==43) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalLTLFormula.g:8810:3: rule__ValuedObjectReference__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ValuedObjectReference__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectReferenceAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group__2__Impl"


    // $ANTLR start "rule__ValuedObjectReference__Group_1__0"
    // InternalLTLFormula.g:8819:1: rule__ValuedObjectReference__Group_1__0 : rule__ValuedObjectReference__Group_1__0__Impl rule__ValuedObjectReference__Group_1__1 ;
    public final void rule__ValuedObjectReference__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8823:1: ( rule__ValuedObjectReference__Group_1__0__Impl rule__ValuedObjectReference__Group_1__1 )
            // InternalLTLFormula.g:8824:2: rule__ValuedObjectReference__Group_1__0__Impl rule__ValuedObjectReference__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ValuedObjectReference__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectReference__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group_1__0"


    // $ANTLR start "rule__ValuedObjectReference__Group_1__0__Impl"
    // InternalLTLFormula.g:8831:1: rule__ValuedObjectReference__Group_1__0__Impl : ( '[' ) ;
    public final void rule__ValuedObjectReference__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8835:1: ( ( '[' ) )
            // InternalLTLFormula.g:8836:1: ( '[' )
            {
            // InternalLTLFormula.g:8836:1: ( '[' )
            // InternalLTLFormula.g:8837:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0()); 
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group_1__0__Impl"


    // $ANTLR start "rule__ValuedObjectReference__Group_1__1"
    // InternalLTLFormula.g:8846:1: rule__ValuedObjectReference__Group_1__1 : rule__ValuedObjectReference__Group_1__1__Impl rule__ValuedObjectReference__Group_1__2 ;
    public final void rule__ValuedObjectReference__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8850:1: ( rule__ValuedObjectReference__Group_1__1__Impl rule__ValuedObjectReference__Group_1__2 )
            // InternalLTLFormula.g:8851:2: rule__ValuedObjectReference__Group_1__1__Impl rule__ValuedObjectReference__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_63);
            rule__ValuedObjectReference__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectReference__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group_1__1"


    // $ANTLR start "rule__ValuedObjectReference__Group_1__1__Impl"
    // InternalLTLFormula.g:8858:1: rule__ValuedObjectReference__Group_1__1__Impl : ( ( rule__ValuedObjectReference__IndicesAssignment_1_1 ) ) ;
    public final void rule__ValuedObjectReference__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8862:1: ( ( ( rule__ValuedObjectReference__IndicesAssignment_1_1 ) ) )
            // InternalLTLFormula.g:8863:1: ( ( rule__ValuedObjectReference__IndicesAssignment_1_1 ) )
            {
            // InternalLTLFormula.g:8863:1: ( ( rule__ValuedObjectReference__IndicesAssignment_1_1 ) )
            // InternalLTLFormula.g:8864:2: ( rule__ValuedObjectReference__IndicesAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectReferenceAccess().getIndicesAssignment_1_1()); 
            }
            // InternalLTLFormula.g:8865:2: ( rule__ValuedObjectReference__IndicesAssignment_1_1 )
            // InternalLTLFormula.g:8865:3: rule__ValuedObjectReference__IndicesAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectReference__IndicesAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectReferenceAccess().getIndicesAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group_1__1__Impl"


    // $ANTLR start "rule__ValuedObjectReference__Group_1__2"
    // InternalLTLFormula.g:8873:1: rule__ValuedObjectReference__Group_1__2 : rule__ValuedObjectReference__Group_1__2__Impl ;
    public final void rule__ValuedObjectReference__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8877:1: ( rule__ValuedObjectReference__Group_1__2__Impl )
            // InternalLTLFormula.g:8878:2: rule__ValuedObjectReference__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectReference__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group_1__2"


    // $ANTLR start "rule__ValuedObjectReference__Group_1__2__Impl"
    // InternalLTLFormula.g:8884:1: rule__ValuedObjectReference__Group_1__2__Impl : ( ']' ) ;
    public final void rule__ValuedObjectReference__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8888:1: ( ( ']' ) )
            // InternalLTLFormula.g:8889:1: ( ']' )
            {
            // InternalLTLFormula.g:8889:1: ( ']' )
            // InternalLTLFormula.g:8890:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2()); 
            }
            match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group_1__2__Impl"


    // $ANTLR start "rule__ValuedObjectReference__Group_2__0"
    // InternalLTLFormula.g:8900:1: rule__ValuedObjectReference__Group_2__0 : rule__ValuedObjectReference__Group_2__0__Impl rule__ValuedObjectReference__Group_2__1 ;
    public final void rule__ValuedObjectReference__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8904:1: ( rule__ValuedObjectReference__Group_2__0__Impl rule__ValuedObjectReference__Group_2__1 )
            // InternalLTLFormula.g:8905:2: rule__ValuedObjectReference__Group_2__0__Impl rule__ValuedObjectReference__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__ValuedObjectReference__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectReference__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group_2__0"


    // $ANTLR start "rule__ValuedObjectReference__Group_2__0__Impl"
    // InternalLTLFormula.g:8912:1: rule__ValuedObjectReference__Group_2__0__Impl : ( '.' ) ;
    public final void rule__ValuedObjectReference__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8916:1: ( ( '.' ) )
            // InternalLTLFormula.g:8917:1: ( '.' )
            {
            // InternalLTLFormula.g:8917:1: ( '.' )
            // InternalLTLFormula.g:8918:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0()); 
            }
            match(input,43,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group_2__0__Impl"


    // $ANTLR start "rule__ValuedObjectReference__Group_2__1"
    // InternalLTLFormula.g:8927:1: rule__ValuedObjectReference__Group_2__1 : rule__ValuedObjectReference__Group_2__1__Impl ;
    public final void rule__ValuedObjectReference__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8931:1: ( rule__ValuedObjectReference__Group_2__1__Impl )
            // InternalLTLFormula.g:8932:2: rule__ValuedObjectReference__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectReference__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group_2__1"


    // $ANTLR start "rule__ValuedObjectReference__Group_2__1__Impl"
    // InternalLTLFormula.g:8938:1: rule__ValuedObjectReference__Group_2__1__Impl : ( ( rule__ValuedObjectReference__SubReferenceAssignment_2_1 ) ) ;
    public final void rule__ValuedObjectReference__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8942:1: ( ( ( rule__ValuedObjectReference__SubReferenceAssignment_2_1 ) ) )
            // InternalLTLFormula.g:8943:1: ( ( rule__ValuedObjectReference__SubReferenceAssignment_2_1 ) )
            {
            // InternalLTLFormula.g:8943:1: ( ( rule__ValuedObjectReference__SubReferenceAssignment_2_1 ) )
            // InternalLTLFormula.g:8944:2: ( rule__ValuedObjectReference__SubReferenceAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceAssignment_2_1()); 
            }
            // InternalLTLFormula.g:8945:2: ( rule__ValuedObjectReference__SubReferenceAssignment_2_1 )
            // InternalLTLFormula.g:8945:3: rule__ValuedObjectReference__SubReferenceAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectReference__SubReferenceAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__Group_2__1__Impl"


    // $ANTLR start "rule__ScheduleObjectReference__Group__0"
    // InternalLTLFormula.g:8954:1: rule__ScheduleObjectReference__Group__0 : rule__ScheduleObjectReference__Group__0__Impl rule__ScheduleObjectReference__Group__1 ;
    public final void rule__ScheduleObjectReference__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8958:1: ( rule__ScheduleObjectReference__Group__0__Impl rule__ScheduleObjectReference__Group__1 )
            // InternalLTLFormula.g:8959:2: rule__ScheduleObjectReference__Group__0__Impl rule__ScheduleObjectReference__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_64);
            rule__ScheduleObjectReference__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ScheduleObjectReference__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScheduleObjectReference__Group__0"


    // $ANTLR start "rule__ScheduleObjectReference__Group__0__Impl"
    // InternalLTLFormula.g:8966:1: rule__ScheduleObjectReference__Group__0__Impl : ( ( rule__ScheduleObjectReference__ValuedObjectAssignment_0 ) ) ;
    public final void rule__ScheduleObjectReference__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8970:1: ( ( ( rule__ScheduleObjectReference__ValuedObjectAssignment_0 ) ) )
            // InternalLTLFormula.g:8971:1: ( ( rule__ScheduleObjectReference__ValuedObjectAssignment_0 ) )
            {
            // InternalLTLFormula.g:8971:1: ( ( rule__ScheduleObjectReference__ValuedObjectAssignment_0 ) )
            // InternalLTLFormula.g:8972:2: ( rule__ScheduleObjectReference__ValuedObjectAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectAssignment_0()); 
            }
            // InternalLTLFormula.g:8973:2: ( rule__ScheduleObjectReference__ValuedObjectAssignment_0 )
            // InternalLTLFormula.g:8973:3: rule__ScheduleObjectReference__ValuedObjectAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ScheduleObjectReference__ValuedObjectAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScheduleObjectReference__Group__0__Impl"


    // $ANTLR start "rule__ScheduleObjectReference__Group__1"
    // InternalLTLFormula.g:8981:1: rule__ScheduleObjectReference__Group__1 : rule__ScheduleObjectReference__Group__1__Impl ;
    public final void rule__ScheduleObjectReference__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8985:1: ( rule__ScheduleObjectReference__Group__1__Impl )
            // InternalLTLFormula.g:8986:2: rule__ScheduleObjectReference__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ScheduleObjectReference__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScheduleObjectReference__Group__1"


    // $ANTLR start "rule__ScheduleObjectReference__Group__1__Impl"
    // InternalLTLFormula.g:8992:1: rule__ScheduleObjectReference__Group__1__Impl : ( ( rule__ScheduleObjectReference__PriorityAssignment_1 ) ) ;
    public final void rule__ScheduleObjectReference__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:8996:1: ( ( ( rule__ScheduleObjectReference__PriorityAssignment_1 ) ) )
            // InternalLTLFormula.g:8997:1: ( ( rule__ScheduleObjectReference__PriorityAssignment_1 ) )
            {
            // InternalLTLFormula.g:8997:1: ( ( rule__ScheduleObjectReference__PriorityAssignment_1 ) )
            // InternalLTLFormula.g:8998:2: ( rule__ScheduleObjectReference__PriorityAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScheduleObjectReferenceAccess().getPriorityAssignment_1()); 
            }
            // InternalLTLFormula.g:8999:2: ( rule__ScheduleObjectReference__PriorityAssignment_1 )
            // InternalLTLFormula.g:8999:3: rule__ScheduleObjectReference__PriorityAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ScheduleObjectReference__PriorityAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScheduleObjectReferenceAccess().getPriorityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScheduleObjectReference__Group__1__Impl"


    // $ANTLR start "rule__ReferenceCall__Group__0"
    // InternalLTLFormula.g:9008:1: rule__ReferenceCall__Group__0 : rule__ReferenceCall__Group__0__Impl rule__ReferenceCall__Group__1 ;
    public final void rule__ReferenceCall__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9012:1: ( rule__ReferenceCall__Group__0__Impl rule__ReferenceCall__Group__1 )
            // InternalLTLFormula.g:9013:2: rule__ReferenceCall__Group__0__Impl rule__ReferenceCall__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__ReferenceCall__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group__0"


    // $ANTLR start "rule__ReferenceCall__Group__0__Impl"
    // InternalLTLFormula.g:9020:1: rule__ReferenceCall__Group__0__Impl : ( ( rule__ReferenceCall__ValuedObjectAssignment_0 ) ) ;
    public final void rule__ReferenceCall__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9024:1: ( ( ( rule__ReferenceCall__ValuedObjectAssignment_0 ) ) )
            // InternalLTLFormula.g:9025:1: ( ( rule__ReferenceCall__ValuedObjectAssignment_0 ) )
            {
            // InternalLTLFormula.g:9025:1: ( ( rule__ReferenceCall__ValuedObjectAssignment_0 ) )
            // InternalLTLFormula.g:9026:2: ( rule__ReferenceCall__ValuedObjectAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getValuedObjectAssignment_0()); 
            }
            // InternalLTLFormula.g:9027:2: ( rule__ReferenceCall__ValuedObjectAssignment_0 )
            // InternalLTLFormula.g:9027:3: rule__ReferenceCall__ValuedObjectAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__ValuedObjectAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getValuedObjectAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group__0__Impl"


    // $ANTLR start "rule__ReferenceCall__Group__1"
    // InternalLTLFormula.g:9035:1: rule__ReferenceCall__Group__1 : rule__ReferenceCall__Group__1__Impl rule__ReferenceCall__Group__2 ;
    public final void rule__ReferenceCall__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9039:1: ( rule__ReferenceCall__Group__1__Impl rule__ReferenceCall__Group__2 )
            // InternalLTLFormula.g:9040:2: rule__ReferenceCall__Group__1__Impl rule__ReferenceCall__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__ReferenceCall__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group__1"


    // $ANTLR start "rule__ReferenceCall__Group__1__Impl"
    // InternalLTLFormula.g:9047:1: rule__ReferenceCall__Group__1__Impl : ( ( rule__ReferenceCall__Group_1__0 )* ) ;
    public final void rule__ReferenceCall__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9051:1: ( ( ( rule__ReferenceCall__Group_1__0 )* ) )
            // InternalLTLFormula.g:9052:1: ( ( rule__ReferenceCall__Group_1__0 )* )
            {
            // InternalLTLFormula.g:9052:1: ( ( rule__ReferenceCall__Group_1__0 )* )
            // InternalLTLFormula.g:9053:2: ( rule__ReferenceCall__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getGroup_1()); 
            }
            // InternalLTLFormula.g:9054:2: ( rule__ReferenceCall__Group_1__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==56) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalLTLFormula.g:9054:3: rule__ReferenceCall__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    rule__ReferenceCall__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group__1__Impl"


    // $ANTLR start "rule__ReferenceCall__Group__2"
    // InternalLTLFormula.g:9062:1: rule__ReferenceCall__Group__2 : rule__ReferenceCall__Group__2__Impl rule__ReferenceCall__Group__3 ;
    public final void rule__ReferenceCall__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9066:1: ( rule__ReferenceCall__Group__2__Impl rule__ReferenceCall__Group__3 )
            // InternalLTLFormula.g:9067:2: rule__ReferenceCall__Group__2__Impl rule__ReferenceCall__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_65);
            rule__ReferenceCall__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group__2"


    // $ANTLR start "rule__ReferenceCall__Group__2__Impl"
    // InternalLTLFormula.g:9074:1: rule__ReferenceCall__Group__2__Impl : ( ( rule__ReferenceCall__Group_2__0 )? ) ;
    public final void rule__ReferenceCall__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9078:1: ( ( ( rule__ReferenceCall__Group_2__0 )? ) )
            // InternalLTLFormula.g:9079:1: ( ( rule__ReferenceCall__Group_2__0 )? )
            {
            // InternalLTLFormula.g:9079:1: ( ( rule__ReferenceCall__Group_2__0 )? )
            // InternalLTLFormula.g:9080:2: ( rule__ReferenceCall__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getGroup_2()); 
            }
            // InternalLTLFormula.g:9081:2: ( rule__ReferenceCall__Group_2__0 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==43) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalLTLFormula.g:9081:3: rule__ReferenceCall__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ReferenceCall__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group__2__Impl"


    // $ANTLR start "rule__ReferenceCall__Group__3"
    // InternalLTLFormula.g:9089:1: rule__ReferenceCall__Group__3 : rule__ReferenceCall__Group__3__Impl ;
    public final void rule__ReferenceCall__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9093:1: ( rule__ReferenceCall__Group__3__Impl )
            // InternalLTLFormula.g:9094:2: rule__ReferenceCall__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group__3"


    // $ANTLR start "rule__ReferenceCall__Group__3__Impl"
    // InternalLTLFormula.g:9100:1: rule__ReferenceCall__Group__3__Impl : ( ( rule__ReferenceCall__Alternatives_3 ) ) ;
    public final void rule__ReferenceCall__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9104:1: ( ( ( rule__ReferenceCall__Alternatives_3 ) ) )
            // InternalLTLFormula.g:9105:1: ( ( rule__ReferenceCall__Alternatives_3 ) )
            {
            // InternalLTLFormula.g:9105:1: ( ( rule__ReferenceCall__Alternatives_3 ) )
            // InternalLTLFormula.g:9106:2: ( rule__ReferenceCall__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getAlternatives_3()); 
            }
            // InternalLTLFormula.g:9107:2: ( rule__ReferenceCall__Alternatives_3 )
            // InternalLTLFormula.g:9107:3: rule__ReferenceCall__Alternatives_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group__3__Impl"


    // $ANTLR start "rule__ReferenceCall__Group_1__0"
    // InternalLTLFormula.g:9116:1: rule__ReferenceCall__Group_1__0 : rule__ReferenceCall__Group_1__0__Impl rule__ReferenceCall__Group_1__1 ;
    public final void rule__ReferenceCall__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9120:1: ( rule__ReferenceCall__Group_1__0__Impl rule__ReferenceCall__Group_1__1 )
            // InternalLTLFormula.g:9121:2: rule__ReferenceCall__Group_1__0__Impl rule__ReferenceCall__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ReferenceCall__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_1__0"


    // $ANTLR start "rule__ReferenceCall__Group_1__0__Impl"
    // InternalLTLFormula.g:9128:1: rule__ReferenceCall__Group_1__0__Impl : ( '[' ) ;
    public final void rule__ReferenceCall__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9132:1: ( ( '[' ) )
            // InternalLTLFormula.g:9133:1: ( '[' )
            {
            // InternalLTLFormula.g:9133:1: ( '[' )
            // InternalLTLFormula.g:9134:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getLeftSquareBracketKeyword_1_0()); 
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getLeftSquareBracketKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_1__0__Impl"


    // $ANTLR start "rule__ReferenceCall__Group_1__1"
    // InternalLTLFormula.g:9143:1: rule__ReferenceCall__Group_1__1 : rule__ReferenceCall__Group_1__1__Impl rule__ReferenceCall__Group_1__2 ;
    public final void rule__ReferenceCall__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9147:1: ( rule__ReferenceCall__Group_1__1__Impl rule__ReferenceCall__Group_1__2 )
            // InternalLTLFormula.g:9148:2: rule__ReferenceCall__Group_1__1__Impl rule__ReferenceCall__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_63);
            rule__ReferenceCall__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_1__1"


    // $ANTLR start "rule__ReferenceCall__Group_1__1__Impl"
    // InternalLTLFormula.g:9155:1: rule__ReferenceCall__Group_1__1__Impl : ( ( rule__ReferenceCall__IndicesAssignment_1_1 ) ) ;
    public final void rule__ReferenceCall__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9159:1: ( ( ( rule__ReferenceCall__IndicesAssignment_1_1 ) ) )
            // InternalLTLFormula.g:9160:1: ( ( rule__ReferenceCall__IndicesAssignment_1_1 ) )
            {
            // InternalLTLFormula.g:9160:1: ( ( rule__ReferenceCall__IndicesAssignment_1_1 ) )
            // InternalLTLFormula.g:9161:2: ( rule__ReferenceCall__IndicesAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getIndicesAssignment_1_1()); 
            }
            // InternalLTLFormula.g:9162:2: ( rule__ReferenceCall__IndicesAssignment_1_1 )
            // InternalLTLFormula.g:9162:3: rule__ReferenceCall__IndicesAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__IndicesAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getIndicesAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_1__1__Impl"


    // $ANTLR start "rule__ReferenceCall__Group_1__2"
    // InternalLTLFormula.g:9170:1: rule__ReferenceCall__Group_1__2 : rule__ReferenceCall__Group_1__2__Impl ;
    public final void rule__ReferenceCall__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9174:1: ( rule__ReferenceCall__Group_1__2__Impl )
            // InternalLTLFormula.g:9175:2: rule__ReferenceCall__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_1__2"


    // $ANTLR start "rule__ReferenceCall__Group_1__2__Impl"
    // InternalLTLFormula.g:9181:1: rule__ReferenceCall__Group_1__2__Impl : ( ']' ) ;
    public final void rule__ReferenceCall__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9185:1: ( ( ']' ) )
            // InternalLTLFormula.g:9186:1: ( ']' )
            {
            // InternalLTLFormula.g:9186:1: ( ']' )
            // InternalLTLFormula.g:9187:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getRightSquareBracketKeyword_1_2()); 
            }
            match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getRightSquareBracketKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_1__2__Impl"


    // $ANTLR start "rule__ReferenceCall__Group_2__0"
    // InternalLTLFormula.g:9197:1: rule__ReferenceCall__Group_2__0 : rule__ReferenceCall__Group_2__0__Impl rule__ReferenceCall__Group_2__1 ;
    public final void rule__ReferenceCall__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9201:1: ( rule__ReferenceCall__Group_2__0__Impl rule__ReferenceCall__Group_2__1 )
            // InternalLTLFormula.g:9202:2: rule__ReferenceCall__Group_2__0__Impl rule__ReferenceCall__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__ReferenceCall__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_2__0"


    // $ANTLR start "rule__ReferenceCall__Group_2__0__Impl"
    // InternalLTLFormula.g:9209:1: rule__ReferenceCall__Group_2__0__Impl : ( '.' ) ;
    public final void rule__ReferenceCall__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9213:1: ( ( '.' ) )
            // InternalLTLFormula.g:9214:1: ( '.' )
            {
            // InternalLTLFormula.g:9214:1: ( '.' )
            // InternalLTLFormula.g:9215:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getFullStopKeyword_2_0()); 
            }
            match(input,43,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getFullStopKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_2__0__Impl"


    // $ANTLR start "rule__ReferenceCall__Group_2__1"
    // InternalLTLFormula.g:9224:1: rule__ReferenceCall__Group_2__1 : rule__ReferenceCall__Group_2__1__Impl ;
    public final void rule__ReferenceCall__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9228:1: ( rule__ReferenceCall__Group_2__1__Impl )
            // InternalLTLFormula.g:9229:2: rule__ReferenceCall__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_2__1"


    // $ANTLR start "rule__ReferenceCall__Group_2__1__Impl"
    // InternalLTLFormula.g:9235:1: rule__ReferenceCall__Group_2__1__Impl : ( ( rule__ReferenceCall__SubReferenceAssignment_2_1 ) ) ;
    public final void rule__ReferenceCall__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9239:1: ( ( ( rule__ReferenceCall__SubReferenceAssignment_2_1 ) ) )
            // InternalLTLFormula.g:9240:1: ( ( rule__ReferenceCall__SubReferenceAssignment_2_1 ) )
            {
            // InternalLTLFormula.g:9240:1: ( ( rule__ReferenceCall__SubReferenceAssignment_2_1 ) )
            // InternalLTLFormula.g:9241:2: ( rule__ReferenceCall__SubReferenceAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getSubReferenceAssignment_2_1()); 
            }
            // InternalLTLFormula.g:9242:2: ( rule__ReferenceCall__SubReferenceAssignment_2_1 )
            // InternalLTLFormula.g:9242:3: rule__ReferenceCall__SubReferenceAssignment_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__SubReferenceAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getSubReferenceAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_2__1__Impl"


    // $ANTLR start "rule__ReferenceCall__Group_3_0__0"
    // InternalLTLFormula.g:9251:1: rule__ReferenceCall__Group_3_0__0 : rule__ReferenceCall__Group_3_0__0__Impl rule__ReferenceCall__Group_3_0__1 ;
    public final void rule__ReferenceCall__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9255:1: ( rule__ReferenceCall__Group_3_0__0__Impl rule__ReferenceCall__Group_3_0__1 )
            // InternalLTLFormula.g:9256:2: rule__ReferenceCall__Group_3_0__0__Impl rule__ReferenceCall__Group_3_0__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__ReferenceCall__Group_3_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group_3_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_3_0__0"


    // $ANTLR start "rule__ReferenceCall__Group_3_0__0__Impl"
    // InternalLTLFormula.g:9263:1: rule__ReferenceCall__Group_3_0__0__Impl : ( '(' ) ;
    public final void rule__ReferenceCall__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9267:1: ( ( '(' ) )
            // InternalLTLFormula.g:9268:1: ( '(' )
            {
            // InternalLTLFormula.g:9268:1: ( '(' )
            // InternalLTLFormula.g:9269:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getLeftParenthesisKeyword_3_0_0()); 
            }
            match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getLeftParenthesisKeyword_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_3_0__0__Impl"


    // $ANTLR start "rule__ReferenceCall__Group_3_0__1"
    // InternalLTLFormula.g:9278:1: rule__ReferenceCall__Group_3_0__1 : rule__ReferenceCall__Group_3_0__1__Impl rule__ReferenceCall__Group_3_0__2 ;
    public final void rule__ReferenceCall__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9282:1: ( rule__ReferenceCall__Group_3_0__1__Impl rule__ReferenceCall__Group_3_0__2 )
            // InternalLTLFormula.g:9283:2: rule__ReferenceCall__Group_3_0__1__Impl rule__ReferenceCall__Group_3_0__2
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__ReferenceCall__Group_3_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group_3_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_3_0__1"


    // $ANTLR start "rule__ReferenceCall__Group_3_0__1__Impl"
    // InternalLTLFormula.g:9290:1: rule__ReferenceCall__Group_3_0__1__Impl : ( ( rule__ReferenceCall__ParametersAssignment_3_0_1 ) ) ;
    public final void rule__ReferenceCall__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9294:1: ( ( ( rule__ReferenceCall__ParametersAssignment_3_0_1 ) ) )
            // InternalLTLFormula.g:9295:1: ( ( rule__ReferenceCall__ParametersAssignment_3_0_1 ) )
            {
            // InternalLTLFormula.g:9295:1: ( ( rule__ReferenceCall__ParametersAssignment_3_0_1 ) )
            // InternalLTLFormula.g:9296:2: ( rule__ReferenceCall__ParametersAssignment_3_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getParametersAssignment_3_0_1()); 
            }
            // InternalLTLFormula.g:9297:2: ( rule__ReferenceCall__ParametersAssignment_3_0_1 )
            // InternalLTLFormula.g:9297:3: rule__ReferenceCall__ParametersAssignment_3_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__ParametersAssignment_3_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getParametersAssignment_3_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_3_0__1__Impl"


    // $ANTLR start "rule__ReferenceCall__Group_3_0__2"
    // InternalLTLFormula.g:9305:1: rule__ReferenceCall__Group_3_0__2 : rule__ReferenceCall__Group_3_0__2__Impl rule__ReferenceCall__Group_3_0__3 ;
    public final void rule__ReferenceCall__Group_3_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9309:1: ( rule__ReferenceCall__Group_3_0__2__Impl rule__ReferenceCall__Group_3_0__3 )
            // InternalLTLFormula.g:9310:2: rule__ReferenceCall__Group_3_0__2__Impl rule__ReferenceCall__Group_3_0__3
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__ReferenceCall__Group_3_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group_3_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_3_0__2"


    // $ANTLR start "rule__ReferenceCall__Group_3_0__2__Impl"
    // InternalLTLFormula.g:9317:1: rule__ReferenceCall__Group_3_0__2__Impl : ( ( rule__ReferenceCall__Group_3_0_2__0 )* ) ;
    public final void rule__ReferenceCall__Group_3_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9321:1: ( ( ( rule__ReferenceCall__Group_3_0_2__0 )* ) )
            // InternalLTLFormula.g:9322:1: ( ( rule__ReferenceCall__Group_3_0_2__0 )* )
            {
            // InternalLTLFormula.g:9322:1: ( ( rule__ReferenceCall__Group_3_0_2__0 )* )
            // InternalLTLFormula.g:9323:2: ( rule__ReferenceCall__Group_3_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getGroup_3_0_2()); 
            }
            // InternalLTLFormula.g:9324:2: ( rule__ReferenceCall__Group_3_0_2__0 )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==54) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalLTLFormula.g:9324:3: rule__ReferenceCall__Group_3_0_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    rule__ReferenceCall__Group_3_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getGroup_3_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_3_0__2__Impl"


    // $ANTLR start "rule__ReferenceCall__Group_3_0__3"
    // InternalLTLFormula.g:9332:1: rule__ReferenceCall__Group_3_0__3 : rule__ReferenceCall__Group_3_0__3__Impl ;
    public final void rule__ReferenceCall__Group_3_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9336:1: ( rule__ReferenceCall__Group_3_0__3__Impl )
            // InternalLTLFormula.g:9337:2: rule__ReferenceCall__Group_3_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group_3_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_3_0__3"


    // $ANTLR start "rule__ReferenceCall__Group_3_0__3__Impl"
    // InternalLTLFormula.g:9343:1: rule__ReferenceCall__Group_3_0__3__Impl : ( ')' ) ;
    public final void rule__ReferenceCall__Group_3_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9347:1: ( ( ')' ) )
            // InternalLTLFormula.g:9348:1: ( ')' )
            {
            // InternalLTLFormula.g:9348:1: ( ')' )
            // InternalLTLFormula.g:9349:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getRightParenthesisKeyword_3_0_3()); 
            }
            match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getRightParenthesisKeyword_3_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_3_0__3__Impl"


    // $ANTLR start "rule__ReferenceCall__Group_3_0_2__0"
    // InternalLTLFormula.g:9359:1: rule__ReferenceCall__Group_3_0_2__0 : rule__ReferenceCall__Group_3_0_2__0__Impl rule__ReferenceCall__Group_3_0_2__1 ;
    public final void rule__ReferenceCall__Group_3_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9363:1: ( rule__ReferenceCall__Group_3_0_2__0__Impl rule__ReferenceCall__Group_3_0_2__1 )
            // InternalLTLFormula.g:9364:2: rule__ReferenceCall__Group_3_0_2__0__Impl rule__ReferenceCall__Group_3_0_2__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__ReferenceCall__Group_3_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group_3_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_3_0_2__0"


    // $ANTLR start "rule__ReferenceCall__Group_3_0_2__0__Impl"
    // InternalLTLFormula.g:9371:1: rule__ReferenceCall__Group_3_0_2__0__Impl : ( ',' ) ;
    public final void rule__ReferenceCall__Group_3_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9375:1: ( ( ',' ) )
            // InternalLTLFormula.g:9376:1: ( ',' )
            {
            // InternalLTLFormula.g:9376:1: ( ',' )
            // InternalLTLFormula.g:9377:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getCommaKeyword_3_0_2_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getCommaKeyword_3_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_3_0_2__0__Impl"


    // $ANTLR start "rule__ReferenceCall__Group_3_0_2__1"
    // InternalLTLFormula.g:9386:1: rule__ReferenceCall__Group_3_0_2__1 : rule__ReferenceCall__Group_3_0_2__1__Impl ;
    public final void rule__ReferenceCall__Group_3_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9390:1: ( rule__ReferenceCall__Group_3_0_2__1__Impl )
            // InternalLTLFormula.g:9391:2: rule__ReferenceCall__Group_3_0_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__Group_3_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_3_0_2__1"


    // $ANTLR start "rule__ReferenceCall__Group_3_0_2__1__Impl"
    // InternalLTLFormula.g:9397:1: rule__ReferenceCall__Group_3_0_2__1__Impl : ( ( rule__ReferenceCall__ParametersAssignment_3_0_2_1 ) ) ;
    public final void rule__ReferenceCall__Group_3_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9401:1: ( ( ( rule__ReferenceCall__ParametersAssignment_3_0_2_1 ) ) )
            // InternalLTLFormula.g:9402:1: ( ( rule__ReferenceCall__ParametersAssignment_3_0_2_1 ) )
            {
            // InternalLTLFormula.g:9402:1: ( ( rule__ReferenceCall__ParametersAssignment_3_0_2_1 ) )
            // InternalLTLFormula.g:9403:2: ( rule__ReferenceCall__ParametersAssignment_3_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getParametersAssignment_3_0_2_1()); 
            }
            // InternalLTLFormula.g:9404:2: ( rule__ReferenceCall__ParametersAssignment_3_0_2_1 )
            // InternalLTLFormula.g:9404:3: rule__ReferenceCall__ParametersAssignment_3_0_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ReferenceCall__ParametersAssignment_3_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getParametersAssignment_3_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__Group_3_0_2__1__Impl"


    // $ANTLR start "rule__RandomCall__Group__0"
    // InternalLTLFormula.g:9413:1: rule__RandomCall__Group__0 : rule__RandomCall__Group__0__Impl rule__RandomCall__Group__1 ;
    public final void rule__RandomCall__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9417:1: ( rule__RandomCall__Group__0__Impl rule__RandomCall__Group__1 )
            // InternalLTLFormula.g:9418:2: rule__RandomCall__Group__0__Impl rule__RandomCall__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_68);
            rule__RandomCall__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RandomCall__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RandomCall__Group__0"


    // $ANTLR start "rule__RandomCall__Group__0__Impl"
    // InternalLTLFormula.g:9425:1: rule__RandomCall__Group__0__Impl : ( () ) ;
    public final void rule__RandomCall__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9429:1: ( ( () ) )
            // InternalLTLFormula.g:9430:1: ( () )
            {
            // InternalLTLFormula.g:9430:1: ( () )
            // InternalLTLFormula.g:9431:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRandomCallAccess().getRandomCallAction_0()); 
            }
            // InternalLTLFormula.g:9432:2: ()
            // InternalLTLFormula.g:9432:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRandomCallAccess().getRandomCallAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RandomCall__Group__0__Impl"


    // $ANTLR start "rule__RandomCall__Group__1"
    // InternalLTLFormula.g:9440:1: rule__RandomCall__Group__1 : rule__RandomCall__Group__1__Impl rule__RandomCall__Group__2 ;
    public final void rule__RandomCall__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9444:1: ( rule__RandomCall__Group__1__Impl rule__RandomCall__Group__2 )
            // InternalLTLFormula.g:9445:2: rule__RandomCall__Group__1__Impl rule__RandomCall__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_69);
            rule__RandomCall__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RandomCall__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RandomCall__Group__1"


    // $ANTLR start "rule__RandomCall__Group__1__Impl"
    // InternalLTLFormula.g:9452:1: rule__RandomCall__Group__1__Impl : ( 'random' ) ;
    public final void rule__RandomCall__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9456:1: ( ( 'random' ) )
            // InternalLTLFormula.g:9457:1: ( 'random' )
            {
            // InternalLTLFormula.g:9457:1: ( 'random' )
            // InternalLTLFormula.g:9458:2: 'random'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRandomCallAccess().getRandomKeyword_1()); 
            }
            match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRandomCallAccess().getRandomKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RandomCall__Group__1__Impl"


    // $ANTLR start "rule__RandomCall__Group__2"
    // InternalLTLFormula.g:9467:1: rule__RandomCall__Group__2 : rule__RandomCall__Group__2__Impl ;
    public final void rule__RandomCall__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9471:1: ( rule__RandomCall__Group__2__Impl )
            // InternalLTLFormula.g:9472:2: rule__RandomCall__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RandomCall__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RandomCall__Group__2"


    // $ANTLR start "rule__RandomCall__Group__2__Impl"
    // InternalLTLFormula.g:9478:1: rule__RandomCall__Group__2__Impl : ( ( '()' )? ) ;
    public final void rule__RandomCall__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9482:1: ( ( ( '()' )? ) )
            // InternalLTLFormula.g:9483:1: ( ( '()' )? )
            {
            // InternalLTLFormula.g:9483:1: ( ( '()' )? )
            // InternalLTLFormula.g:9484:2: ( '()' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRandomCallAccess().getLeftParenthesisRightParenthesisKeyword_2()); 
            }
            // InternalLTLFormula.g:9485:2: ( '()' )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==42) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalLTLFormula.g:9485:3: '()'
                    {
                    match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRandomCallAccess().getLeftParenthesisRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RandomCall__Group__2__Impl"


    // $ANTLR start "rule__RandomizeCall__Group__0"
    // InternalLTLFormula.g:9494:1: rule__RandomizeCall__Group__0 : rule__RandomizeCall__Group__0__Impl rule__RandomizeCall__Group__1 ;
    public final void rule__RandomizeCall__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9498:1: ( rule__RandomizeCall__Group__0__Impl rule__RandomizeCall__Group__1 )
            // InternalLTLFormula.g:9499:2: rule__RandomizeCall__Group__0__Impl rule__RandomizeCall__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_70);
            rule__RandomizeCall__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RandomizeCall__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RandomizeCall__Group__0"


    // $ANTLR start "rule__RandomizeCall__Group__0__Impl"
    // InternalLTLFormula.g:9506:1: rule__RandomizeCall__Group__0__Impl : ( () ) ;
    public final void rule__RandomizeCall__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9510:1: ( ( () ) )
            // InternalLTLFormula.g:9511:1: ( () )
            {
            // InternalLTLFormula.g:9511:1: ( () )
            // InternalLTLFormula.g:9512:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRandomizeCallAccess().getRandomizeCallAction_0()); 
            }
            // InternalLTLFormula.g:9513:2: ()
            // InternalLTLFormula.g:9513:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRandomizeCallAccess().getRandomizeCallAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RandomizeCall__Group__0__Impl"


    // $ANTLR start "rule__RandomizeCall__Group__1"
    // InternalLTLFormula.g:9521:1: rule__RandomizeCall__Group__1 : rule__RandomizeCall__Group__1__Impl rule__RandomizeCall__Group__2 ;
    public final void rule__RandomizeCall__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9525:1: ( rule__RandomizeCall__Group__1__Impl rule__RandomizeCall__Group__2 )
            // InternalLTLFormula.g:9526:2: rule__RandomizeCall__Group__1__Impl rule__RandomizeCall__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_69);
            rule__RandomizeCall__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RandomizeCall__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RandomizeCall__Group__1"


    // $ANTLR start "rule__RandomizeCall__Group__1__Impl"
    // InternalLTLFormula.g:9533:1: rule__RandomizeCall__Group__1__Impl : ( 'randomize' ) ;
    public final void rule__RandomizeCall__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9537:1: ( ( 'randomize' ) )
            // InternalLTLFormula.g:9538:1: ( 'randomize' )
            {
            // InternalLTLFormula.g:9538:1: ( 'randomize' )
            // InternalLTLFormula.g:9539:2: 'randomize'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRandomizeCallAccess().getRandomizeKeyword_1()); 
            }
            match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRandomizeCallAccess().getRandomizeKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RandomizeCall__Group__1__Impl"


    // $ANTLR start "rule__RandomizeCall__Group__2"
    // InternalLTLFormula.g:9548:1: rule__RandomizeCall__Group__2 : rule__RandomizeCall__Group__2__Impl ;
    public final void rule__RandomizeCall__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9552:1: ( rule__RandomizeCall__Group__2__Impl )
            // InternalLTLFormula.g:9553:2: rule__RandomizeCall__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RandomizeCall__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RandomizeCall__Group__2"


    // $ANTLR start "rule__RandomizeCall__Group__2__Impl"
    // InternalLTLFormula.g:9559:1: rule__RandomizeCall__Group__2__Impl : ( ( '()' )? ) ;
    public final void rule__RandomizeCall__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9563:1: ( ( ( '()' )? ) )
            // InternalLTLFormula.g:9564:1: ( ( '()' )? )
            {
            // InternalLTLFormula.g:9564:1: ( ( '()' )? )
            // InternalLTLFormula.g:9565:2: ( '()' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRandomizeCallAccess().getLeftParenthesisRightParenthesisKeyword_2()); 
            }
            // InternalLTLFormula.g:9566:2: ( '()' )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==42) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalLTLFormula.g:9566:3: '()'
                    {
                    match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRandomizeCallAccess().getLeftParenthesisRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RandomizeCall__Group__2__Impl"


    // $ANTLR start "rule__FunctionCall__Group__0"
    // InternalLTLFormula.g:9575:1: rule__FunctionCall__Group__0 : rule__FunctionCall__Group__0__Impl rule__FunctionCall__Group__1 ;
    public final void rule__FunctionCall__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9579:1: ( rule__FunctionCall__Group__0__Impl rule__FunctionCall__Group__1 )
            // InternalLTLFormula.g:9580:2: rule__FunctionCall__Group__0__Impl rule__FunctionCall__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__FunctionCall__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FunctionCall__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__0"


    // $ANTLR start "rule__FunctionCall__Group__0__Impl"
    // InternalLTLFormula.g:9587:1: rule__FunctionCall__Group__0__Impl : ( 'extern' ) ;
    public final void rule__FunctionCall__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9591:1: ( ( 'extern' ) )
            // InternalLTLFormula.g:9592:1: ( 'extern' )
            {
            // InternalLTLFormula.g:9592:1: ( 'extern' )
            // InternalLTLFormula.g:9593:2: 'extern'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getExternKeyword_0()); 
            }
            match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getExternKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__0__Impl"


    // $ANTLR start "rule__FunctionCall__Group__1"
    // InternalLTLFormula.g:9602:1: rule__FunctionCall__Group__1 : rule__FunctionCall__Group__1__Impl rule__FunctionCall__Group__2 ;
    public final void rule__FunctionCall__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9606:1: ( rule__FunctionCall__Group__1__Impl rule__FunctionCall__Group__2 )
            // InternalLTLFormula.g:9607:2: rule__FunctionCall__Group__1__Impl rule__FunctionCall__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_71);
            rule__FunctionCall__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FunctionCall__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__1"


    // $ANTLR start "rule__FunctionCall__Group__1__Impl"
    // InternalLTLFormula.g:9614:1: rule__FunctionCall__Group__1__Impl : ( ( rule__FunctionCall__FunctionNameAssignment_1 ) ) ;
    public final void rule__FunctionCall__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9618:1: ( ( ( rule__FunctionCall__FunctionNameAssignment_1 ) ) )
            // InternalLTLFormula.g:9619:1: ( ( rule__FunctionCall__FunctionNameAssignment_1 ) )
            {
            // InternalLTLFormula.g:9619:1: ( ( rule__FunctionCall__FunctionNameAssignment_1 ) )
            // InternalLTLFormula.g:9620:2: ( rule__FunctionCall__FunctionNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getFunctionNameAssignment_1()); 
            }
            // InternalLTLFormula.g:9621:2: ( rule__FunctionCall__FunctionNameAssignment_1 )
            // InternalLTLFormula.g:9621:3: rule__FunctionCall__FunctionNameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FunctionCall__FunctionNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getFunctionNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__1__Impl"


    // $ANTLR start "rule__FunctionCall__Group__2"
    // InternalLTLFormula.g:9629:1: rule__FunctionCall__Group__2 : rule__FunctionCall__Group__2__Impl ;
    public final void rule__FunctionCall__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9633:1: ( rule__FunctionCall__Group__2__Impl )
            // InternalLTLFormula.g:9634:2: rule__FunctionCall__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FunctionCall__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__2"


    // $ANTLR start "rule__FunctionCall__Group__2__Impl"
    // InternalLTLFormula.g:9640:1: rule__FunctionCall__Group__2__Impl : ( ( rule__FunctionCall__Alternatives_2 ) ) ;
    public final void rule__FunctionCall__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9644:1: ( ( ( rule__FunctionCall__Alternatives_2 ) ) )
            // InternalLTLFormula.g:9645:1: ( ( rule__FunctionCall__Alternatives_2 ) )
            {
            // InternalLTLFormula.g:9645:1: ( ( rule__FunctionCall__Alternatives_2 ) )
            // InternalLTLFormula.g:9646:2: ( rule__FunctionCall__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getAlternatives_2()); 
            }
            // InternalLTLFormula.g:9647:2: ( rule__FunctionCall__Alternatives_2 )
            // InternalLTLFormula.g:9647:3: rule__FunctionCall__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FunctionCall__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__2__Impl"


    // $ANTLR start "rule__FunctionCall__Group_2_0__0"
    // InternalLTLFormula.g:9656:1: rule__FunctionCall__Group_2_0__0 : rule__FunctionCall__Group_2_0__0__Impl rule__FunctionCall__Group_2_0__1 ;
    public final void rule__FunctionCall__Group_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9660:1: ( rule__FunctionCall__Group_2_0__0__Impl rule__FunctionCall__Group_2_0__1 )
            // InternalLTLFormula.g:9661:2: rule__FunctionCall__Group_2_0__0__Impl rule__FunctionCall__Group_2_0__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__FunctionCall__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FunctionCall__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_0__0"


    // $ANTLR start "rule__FunctionCall__Group_2_0__0__Impl"
    // InternalLTLFormula.g:9668:1: rule__FunctionCall__Group_2_0__0__Impl : ( '(' ) ;
    public final void rule__FunctionCall__Group_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9672:1: ( ( '(' ) )
            // InternalLTLFormula.g:9673:1: ( '(' )
            {
            // InternalLTLFormula.g:9673:1: ( '(' )
            // InternalLTLFormula.g:9674:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2_0_0()); 
            }
            match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_0__0__Impl"


    // $ANTLR start "rule__FunctionCall__Group_2_0__1"
    // InternalLTLFormula.g:9683:1: rule__FunctionCall__Group_2_0__1 : rule__FunctionCall__Group_2_0__1__Impl rule__FunctionCall__Group_2_0__2 ;
    public final void rule__FunctionCall__Group_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9687:1: ( rule__FunctionCall__Group_2_0__1__Impl rule__FunctionCall__Group_2_0__2 )
            // InternalLTLFormula.g:9688:2: rule__FunctionCall__Group_2_0__1__Impl rule__FunctionCall__Group_2_0__2
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__FunctionCall__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FunctionCall__Group_2_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_0__1"


    // $ANTLR start "rule__FunctionCall__Group_2_0__1__Impl"
    // InternalLTLFormula.g:9695:1: rule__FunctionCall__Group_2_0__1__Impl : ( ( rule__FunctionCall__ParametersAssignment_2_0_1 ) ) ;
    public final void rule__FunctionCall__Group_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9699:1: ( ( ( rule__FunctionCall__ParametersAssignment_2_0_1 ) ) )
            // InternalLTLFormula.g:9700:1: ( ( rule__FunctionCall__ParametersAssignment_2_0_1 ) )
            {
            // InternalLTLFormula.g:9700:1: ( ( rule__FunctionCall__ParametersAssignment_2_0_1 ) )
            // InternalLTLFormula.g:9701:2: ( rule__FunctionCall__ParametersAssignment_2_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0_1()); 
            }
            // InternalLTLFormula.g:9702:2: ( rule__FunctionCall__ParametersAssignment_2_0_1 )
            // InternalLTLFormula.g:9702:3: rule__FunctionCall__ParametersAssignment_2_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FunctionCall__ParametersAssignment_2_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_0__1__Impl"


    // $ANTLR start "rule__FunctionCall__Group_2_0__2"
    // InternalLTLFormula.g:9710:1: rule__FunctionCall__Group_2_0__2 : rule__FunctionCall__Group_2_0__2__Impl rule__FunctionCall__Group_2_0__3 ;
    public final void rule__FunctionCall__Group_2_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9714:1: ( rule__FunctionCall__Group_2_0__2__Impl rule__FunctionCall__Group_2_0__3 )
            // InternalLTLFormula.g:9715:2: rule__FunctionCall__Group_2_0__2__Impl rule__FunctionCall__Group_2_0__3
            {
            pushFollow(FollowSets000.FOLLOW_56);
            rule__FunctionCall__Group_2_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FunctionCall__Group_2_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_0__2"


    // $ANTLR start "rule__FunctionCall__Group_2_0__2__Impl"
    // InternalLTLFormula.g:9722:1: rule__FunctionCall__Group_2_0__2__Impl : ( ( rule__FunctionCall__Group_2_0_2__0 )* ) ;
    public final void rule__FunctionCall__Group_2_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9726:1: ( ( ( rule__FunctionCall__Group_2_0_2__0 )* ) )
            // InternalLTLFormula.g:9727:1: ( ( rule__FunctionCall__Group_2_0_2__0 )* )
            {
            // InternalLTLFormula.g:9727:1: ( ( rule__FunctionCall__Group_2_0_2__0 )* )
            // InternalLTLFormula.g:9728:2: ( rule__FunctionCall__Group_2_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getGroup_2_0_2()); 
            }
            // InternalLTLFormula.g:9729:2: ( rule__FunctionCall__Group_2_0_2__0 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==54) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalLTLFormula.g:9729:3: rule__FunctionCall__Group_2_0_2__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    rule__FunctionCall__Group_2_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getGroup_2_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_0__2__Impl"


    // $ANTLR start "rule__FunctionCall__Group_2_0__3"
    // InternalLTLFormula.g:9737:1: rule__FunctionCall__Group_2_0__3 : rule__FunctionCall__Group_2_0__3__Impl ;
    public final void rule__FunctionCall__Group_2_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9741:1: ( rule__FunctionCall__Group_2_0__3__Impl )
            // InternalLTLFormula.g:9742:2: rule__FunctionCall__Group_2_0__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FunctionCall__Group_2_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_0__3"


    // $ANTLR start "rule__FunctionCall__Group_2_0__3__Impl"
    // InternalLTLFormula.g:9748:1: rule__FunctionCall__Group_2_0__3__Impl : ( ')' ) ;
    public final void rule__FunctionCall__Group_2_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9752:1: ( ( ')' ) )
            // InternalLTLFormula.g:9753:1: ( ')' )
            {
            // InternalLTLFormula.g:9753:1: ( ')' )
            // InternalLTLFormula.g:9754:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_2_0_3()); 
            }
            match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_2_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_0__3__Impl"


    // $ANTLR start "rule__FunctionCall__Group_2_0_2__0"
    // InternalLTLFormula.g:9764:1: rule__FunctionCall__Group_2_0_2__0 : rule__FunctionCall__Group_2_0_2__0__Impl rule__FunctionCall__Group_2_0_2__1 ;
    public final void rule__FunctionCall__Group_2_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9768:1: ( rule__FunctionCall__Group_2_0_2__0__Impl rule__FunctionCall__Group_2_0_2__1 )
            // InternalLTLFormula.g:9769:2: rule__FunctionCall__Group_2_0_2__0__Impl rule__FunctionCall__Group_2_0_2__1
            {
            pushFollow(FollowSets000.FOLLOW_66);
            rule__FunctionCall__Group_2_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FunctionCall__Group_2_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_0_2__0"


    // $ANTLR start "rule__FunctionCall__Group_2_0_2__0__Impl"
    // InternalLTLFormula.g:9776:1: rule__FunctionCall__Group_2_0_2__0__Impl : ( ',' ) ;
    public final void rule__FunctionCall__Group_2_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9780:1: ( ( ',' ) )
            // InternalLTLFormula.g:9781:1: ( ',' )
            {
            // InternalLTLFormula.g:9781:1: ( ',' )
            // InternalLTLFormula.g:9782:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_0_2_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_0_2__0__Impl"


    // $ANTLR start "rule__FunctionCall__Group_2_0_2__1"
    // InternalLTLFormula.g:9791:1: rule__FunctionCall__Group_2_0_2__1 : rule__FunctionCall__Group_2_0_2__1__Impl ;
    public final void rule__FunctionCall__Group_2_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9795:1: ( rule__FunctionCall__Group_2_0_2__1__Impl )
            // InternalLTLFormula.g:9796:2: rule__FunctionCall__Group_2_0_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FunctionCall__Group_2_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_0_2__1"


    // $ANTLR start "rule__FunctionCall__Group_2_0_2__1__Impl"
    // InternalLTLFormula.g:9802:1: rule__FunctionCall__Group_2_0_2__1__Impl : ( ( rule__FunctionCall__ParametersAssignment_2_0_2_1 ) ) ;
    public final void rule__FunctionCall__Group_2_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9806:1: ( ( ( rule__FunctionCall__ParametersAssignment_2_0_2_1 ) ) )
            // InternalLTLFormula.g:9807:1: ( ( rule__FunctionCall__ParametersAssignment_2_0_2_1 ) )
            {
            // InternalLTLFormula.g:9807:1: ( ( rule__FunctionCall__ParametersAssignment_2_0_2_1 ) )
            // InternalLTLFormula.g:9808:2: ( rule__FunctionCall__ParametersAssignment_2_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0_2_1()); 
            }
            // InternalLTLFormula.g:9809:2: ( rule__FunctionCall__ParametersAssignment_2_0_2_1 )
            // InternalLTLFormula.g:9809:3: rule__FunctionCall__ParametersAssignment_2_0_2_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FunctionCall__ParametersAssignment_2_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_2_0_2__1__Impl"


    // $ANTLR start "rule__Parameter__Group_0__0"
    // InternalLTLFormula.g:9818:1: rule__Parameter__Group_0__0 : rule__Parameter__Group_0__0__Impl rule__Parameter__Group_0__1 ;
    public final void rule__Parameter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9822:1: ( rule__Parameter__Group_0__0__Impl rule__Parameter__Group_0__1 )
            // InternalLTLFormula.g:9823:2: rule__Parameter__Group_0__0__Impl rule__Parameter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__Parameter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Parameter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter__Group_0__0"


    // $ANTLR start "rule__Parameter__Group_0__0__Impl"
    // InternalLTLFormula.g:9830:1: rule__Parameter__Group_0__0__Impl : ( ( rule__Parameter__AccessTypeAssignment_0_0 ) ) ;
    public final void rule__Parameter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9834:1: ( ( ( rule__Parameter__AccessTypeAssignment_0_0 ) ) )
            // InternalLTLFormula.g:9835:1: ( ( rule__Parameter__AccessTypeAssignment_0_0 ) )
            {
            // InternalLTLFormula.g:9835:1: ( ( rule__Parameter__AccessTypeAssignment_0_0 ) )
            // InternalLTLFormula.g:9836:2: ( rule__Parameter__AccessTypeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getAccessTypeAssignment_0_0()); 
            }
            // InternalLTLFormula.g:9837:2: ( rule__Parameter__AccessTypeAssignment_0_0 )
            // InternalLTLFormula.g:9837:3: rule__Parameter__AccessTypeAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Parameter__AccessTypeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getAccessTypeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter__Group_0__0__Impl"


    // $ANTLR start "rule__Parameter__Group_0__1"
    // InternalLTLFormula.g:9845:1: rule__Parameter__Group_0__1 : rule__Parameter__Group_0__1__Impl ;
    public final void rule__Parameter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9849:1: ( rule__Parameter__Group_0__1__Impl )
            // InternalLTLFormula.g:9850:2: rule__Parameter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Parameter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter__Group_0__1"


    // $ANTLR start "rule__Parameter__Group_0__1__Impl"
    // InternalLTLFormula.g:9856:1: rule__Parameter__Group_0__1__Impl : ( ( rule__Parameter__ExpressionAssignment_0_1 ) ) ;
    public final void rule__Parameter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9860:1: ( ( ( rule__Parameter__ExpressionAssignment_0_1 ) ) )
            // InternalLTLFormula.g:9861:1: ( ( rule__Parameter__ExpressionAssignment_0_1 ) )
            {
            // InternalLTLFormula.g:9861:1: ( ( rule__Parameter__ExpressionAssignment_0_1 ) )
            // InternalLTLFormula.g:9862:2: ( rule__Parameter__ExpressionAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getExpressionAssignment_0_1()); 
            }
            // InternalLTLFormula.g:9863:2: ( rule__Parameter__ExpressionAssignment_0_1 )
            // InternalLTLFormula.g:9863:3: rule__Parameter__ExpressionAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Parameter__ExpressionAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getExpressionAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter__Group_0__1__Impl"


    // $ANTLR start "rule__TextExpression__Group__0"
    // InternalLTLFormula.g:9872:1: rule__TextExpression__Group__0 : rule__TextExpression__Group__0__Impl rule__TextExpression__Group__1 ;
    public final void rule__TextExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9876:1: ( rule__TextExpression__Group__0__Impl rule__TextExpression__Group__1 )
            // InternalLTLFormula.g:9877:2: rule__TextExpression__Group__0__Impl rule__TextExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__TextExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TextExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TextExpression__Group__0"


    // $ANTLR start "rule__TextExpression__Group__0__Impl"
    // InternalLTLFormula.g:9884:1: rule__TextExpression__Group__0__Impl : ( ( rule__TextExpression__AnnotationsAssignment_0 )* ) ;
    public final void rule__TextExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9888:1: ( ( ( rule__TextExpression__AnnotationsAssignment_0 )* ) )
            // InternalLTLFormula.g:9889:1: ( ( rule__TextExpression__AnnotationsAssignment_0 )* )
            {
            // InternalLTLFormula.g:9889:1: ( ( rule__TextExpression__AnnotationsAssignment_0 )* )
            // InternalLTLFormula.g:9890:2: ( rule__TextExpression__AnnotationsAssignment_0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTextExpressionAccess().getAnnotationsAssignment_0()); 
            }
            // InternalLTLFormula.g:9891:2: ( rule__TextExpression__AnnotationsAssignment_0 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==RULE_COMMENT_ANNOTATION||LA80_0==66) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalLTLFormula.g:9891:3: rule__TextExpression__AnnotationsAssignment_0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_72);
            	    rule__TextExpression__AnnotationsAssignment_0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTextExpressionAccess().getAnnotationsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TextExpression__Group__0__Impl"


    // $ANTLR start "rule__TextExpression__Group__1"
    // InternalLTLFormula.g:9899:1: rule__TextExpression__Group__1 : rule__TextExpression__Group__1__Impl ;
    public final void rule__TextExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9903:1: ( rule__TextExpression__Group__1__Impl )
            // InternalLTLFormula.g:9904:2: rule__TextExpression__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TextExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TextExpression__Group__1"


    // $ANTLR start "rule__TextExpression__Group__1__Impl"
    // InternalLTLFormula.g:9910:1: rule__TextExpression__Group__1__Impl : ( ( rule__TextExpression__TextAssignment_1 ) ) ;
    public final void rule__TextExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9914:1: ( ( ( rule__TextExpression__TextAssignment_1 ) ) )
            // InternalLTLFormula.g:9915:1: ( ( rule__TextExpression__TextAssignment_1 ) )
            {
            // InternalLTLFormula.g:9915:1: ( ( rule__TextExpression__TextAssignment_1 ) )
            // InternalLTLFormula.g:9916:2: ( rule__TextExpression__TextAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTextExpressionAccess().getTextAssignment_1()); 
            }
            // InternalLTLFormula.g:9917:2: ( rule__TextExpression__TextAssignment_1 )
            // InternalLTLFormula.g:9917:3: rule__TextExpression__TextAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TextExpression__TextAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTextExpressionAccess().getTextAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TextExpression__Group__1__Impl"


    // $ANTLR start "rule__VectorValue__Group__0"
    // InternalLTLFormula.g:9926:1: rule__VectorValue__Group__0 : rule__VectorValue__Group__0__Impl rule__VectorValue__Group__1 ;
    public final void rule__VectorValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9930:1: ( rule__VectorValue__Group__0__Impl rule__VectorValue__Group__1 )
            // InternalLTLFormula.g:9931:2: rule__VectorValue__Group__0__Impl rule__VectorValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__VectorValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group__0"


    // $ANTLR start "rule__VectorValue__Group__0__Impl"
    // InternalLTLFormula.g:9938:1: rule__VectorValue__Group__0__Impl : ( '{' ) ;
    public final void rule__VectorValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9942:1: ( ( '{' ) )
            // InternalLTLFormula.g:9943:1: ( '{' )
            {
            // InternalLTLFormula.g:9943:1: ( '{' )
            // InternalLTLFormula.g:9944:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getLeftCurlyBracketKeyword_0()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getLeftCurlyBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group__0__Impl"


    // $ANTLR start "rule__VectorValue__Group__1"
    // InternalLTLFormula.g:9953:1: rule__VectorValue__Group__1 : rule__VectorValue__Group__1__Impl rule__VectorValue__Group__2 ;
    public final void rule__VectorValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9957:1: ( rule__VectorValue__Group__1__Impl rule__VectorValue__Group__2 )
            // InternalLTLFormula.g:9958:2: rule__VectorValue__Group__1__Impl rule__VectorValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_74);
            rule__VectorValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group__1"


    // $ANTLR start "rule__VectorValue__Group__1__Impl"
    // InternalLTLFormula.g:9965:1: rule__VectorValue__Group__1__Impl : ( ( rule__VectorValue__Alternatives_1 ) ) ;
    public final void rule__VectorValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9969:1: ( ( ( rule__VectorValue__Alternatives_1 ) ) )
            // InternalLTLFormula.g:9970:1: ( ( rule__VectorValue__Alternatives_1 ) )
            {
            // InternalLTLFormula.g:9970:1: ( ( rule__VectorValue__Alternatives_1 ) )
            // InternalLTLFormula.g:9971:2: ( rule__VectorValue__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getAlternatives_1()); 
            }
            // InternalLTLFormula.g:9972:2: ( rule__VectorValue__Alternatives_1 )
            // InternalLTLFormula.g:9972:3: rule__VectorValue__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group__1__Impl"


    // $ANTLR start "rule__VectorValue__Group__2"
    // InternalLTLFormula.g:9980:1: rule__VectorValue__Group__2 : rule__VectorValue__Group__2__Impl ;
    public final void rule__VectorValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9984:1: ( rule__VectorValue__Group__2__Impl )
            // InternalLTLFormula.g:9985:2: rule__VectorValue__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group__2"


    // $ANTLR start "rule__VectorValue__Group__2__Impl"
    // InternalLTLFormula.g:9991:1: rule__VectorValue__Group__2__Impl : ( '}' ) ;
    public final void rule__VectorValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:9995:1: ( ( '}' ) )
            // InternalLTLFormula.g:9996:1: ( '}' )
            {
            // InternalLTLFormula.g:9996:1: ( '}' )
            // InternalLTLFormula.g:9997:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getRightCurlyBracketKeyword_2()); 
            }
            match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getRightCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group__2__Impl"


    // $ANTLR start "rule__VectorValue__Group_1_0__0"
    // InternalLTLFormula.g:10007:1: rule__VectorValue__Group_1_0__0 : rule__VectorValue__Group_1_0__0__Impl rule__VectorValue__Group_1_0__1 ;
    public final void rule__VectorValue__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10011:1: ( rule__VectorValue__Group_1_0__0__Impl rule__VectorValue__Group_1_0__1 )
            // InternalLTLFormula.g:10012:2: rule__VectorValue__Group_1_0__0__Impl rule__VectorValue__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__VectorValue__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group_1_0__0"


    // $ANTLR start "rule__VectorValue__Group_1_0__0__Impl"
    // InternalLTLFormula.g:10019:1: rule__VectorValue__Group_1_0__0__Impl : ( ( rule__VectorValue__ValuesAssignment_1_0_0 ) ) ;
    public final void rule__VectorValue__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10023:1: ( ( ( rule__VectorValue__ValuesAssignment_1_0_0 ) ) )
            // InternalLTLFormula.g:10024:1: ( ( rule__VectorValue__ValuesAssignment_1_0_0 ) )
            {
            // InternalLTLFormula.g:10024:1: ( ( rule__VectorValue__ValuesAssignment_1_0_0 ) )
            // InternalLTLFormula.g:10025:2: ( rule__VectorValue__ValuesAssignment_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getValuesAssignment_1_0_0()); 
            }
            // InternalLTLFormula.g:10026:2: ( rule__VectorValue__ValuesAssignment_1_0_0 )
            // InternalLTLFormula.g:10026:3: rule__VectorValue__ValuesAssignment_1_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__ValuesAssignment_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getValuesAssignment_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group_1_0__0__Impl"


    // $ANTLR start "rule__VectorValue__Group_1_0__1"
    // InternalLTLFormula.g:10034:1: rule__VectorValue__Group_1_0__1 : rule__VectorValue__Group_1_0__1__Impl ;
    public final void rule__VectorValue__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10038:1: ( rule__VectorValue__Group_1_0__1__Impl )
            // InternalLTLFormula.g:10039:2: rule__VectorValue__Group_1_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group_1_0__1"


    // $ANTLR start "rule__VectorValue__Group_1_0__1__Impl"
    // InternalLTLFormula.g:10045:1: rule__VectorValue__Group_1_0__1__Impl : ( ( rule__VectorValue__Group_1_0_1__0 )* ) ;
    public final void rule__VectorValue__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10049:1: ( ( ( rule__VectorValue__Group_1_0_1__0 )* ) )
            // InternalLTLFormula.g:10050:1: ( ( rule__VectorValue__Group_1_0_1__0 )* )
            {
            // InternalLTLFormula.g:10050:1: ( ( rule__VectorValue__Group_1_0_1__0 )* )
            // InternalLTLFormula.g:10051:2: ( rule__VectorValue__Group_1_0_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getGroup_1_0_1()); 
            }
            // InternalLTLFormula.g:10052:2: ( rule__VectorValue__Group_1_0_1__0 )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==54) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    // InternalLTLFormula.g:10052:3: rule__VectorValue__Group_1_0_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    rule__VectorValue__Group_1_0_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getGroup_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group_1_0__1__Impl"


    // $ANTLR start "rule__VectorValue__Group_1_0_1__0"
    // InternalLTLFormula.g:10061:1: rule__VectorValue__Group_1_0_1__0 : rule__VectorValue__Group_1_0_1__0__Impl rule__VectorValue__Group_1_0_1__1 ;
    public final void rule__VectorValue__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10065:1: ( rule__VectorValue__Group_1_0_1__0__Impl rule__VectorValue__Group_1_0_1__1 )
            // InternalLTLFormula.g:10066:2: rule__VectorValue__Group_1_0_1__0__Impl rule__VectorValue__Group_1_0_1__1
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__VectorValue__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group_1_0_1__0"


    // $ANTLR start "rule__VectorValue__Group_1_0_1__0__Impl"
    // InternalLTLFormula.g:10073:1: rule__VectorValue__Group_1_0_1__0__Impl : ( ',' ) ;
    public final void rule__VectorValue__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10077:1: ( ( ',' ) )
            // InternalLTLFormula.g:10078:1: ( ',' )
            {
            // InternalLTLFormula.g:10078:1: ( ',' )
            // InternalLTLFormula.g:10079:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getCommaKeyword_1_0_1_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getCommaKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__VectorValue__Group_1_0_1__1"
    // InternalLTLFormula.g:10088:1: rule__VectorValue__Group_1_0_1__1 : rule__VectorValue__Group_1_0_1__1__Impl ;
    public final void rule__VectorValue__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10092:1: ( rule__VectorValue__Group_1_0_1__1__Impl )
            // InternalLTLFormula.g:10093:2: rule__VectorValue__Group_1_0_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group_1_0_1__1"


    // $ANTLR start "rule__VectorValue__Group_1_0_1__1__Impl"
    // InternalLTLFormula.g:10099:1: rule__VectorValue__Group_1_0_1__1__Impl : ( ( rule__VectorValue__ValuesAssignment_1_0_1_1 ) ) ;
    public final void rule__VectorValue__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10103:1: ( ( ( rule__VectorValue__ValuesAssignment_1_0_1_1 ) ) )
            // InternalLTLFormula.g:10104:1: ( ( rule__VectorValue__ValuesAssignment_1_0_1_1 ) )
            {
            // InternalLTLFormula.g:10104:1: ( ( rule__VectorValue__ValuesAssignment_1_0_1_1 ) )
            // InternalLTLFormula.g:10105:2: ( rule__VectorValue__ValuesAssignment_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getValuesAssignment_1_0_1_1()); 
            }
            // InternalLTLFormula.g:10106:2: ( rule__VectorValue__ValuesAssignment_1_0_1_1 )
            // InternalLTLFormula.g:10106:3: rule__VectorValue__ValuesAssignment_1_0_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__ValuesAssignment_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getValuesAssignment_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__VectorValue__Group_1_1__0"
    // InternalLTLFormula.g:10115:1: rule__VectorValue__Group_1_1__0 : rule__VectorValue__Group_1_1__0__Impl rule__VectorValue__Group_1_1__1 ;
    public final void rule__VectorValue__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10119:1: ( rule__VectorValue__Group_1_1__0__Impl rule__VectorValue__Group_1_1__1 )
            // InternalLTLFormula.g:10120:2: rule__VectorValue__Group_1_1__0__Impl rule__VectorValue__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_76);
            rule__VectorValue__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group_1_1__0"


    // $ANTLR start "rule__VectorValue__Group_1_1__0__Impl"
    // InternalLTLFormula.g:10127:1: rule__VectorValue__Group_1_1__0__Impl : ( ( rule__VectorValue__ValuesAssignment_1_1_0 ) ) ;
    public final void rule__VectorValue__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10131:1: ( ( ( rule__VectorValue__ValuesAssignment_1_1_0 ) ) )
            // InternalLTLFormula.g:10132:1: ( ( rule__VectorValue__ValuesAssignment_1_1_0 ) )
            {
            // InternalLTLFormula.g:10132:1: ( ( rule__VectorValue__ValuesAssignment_1_1_0 ) )
            // InternalLTLFormula.g:10133:2: ( rule__VectorValue__ValuesAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getValuesAssignment_1_1_0()); 
            }
            // InternalLTLFormula.g:10134:2: ( rule__VectorValue__ValuesAssignment_1_1_0 )
            // InternalLTLFormula.g:10134:3: rule__VectorValue__ValuesAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__ValuesAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getValuesAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group_1_1__0__Impl"


    // $ANTLR start "rule__VectorValue__Group_1_1__1"
    // InternalLTLFormula.g:10142:1: rule__VectorValue__Group_1_1__1 : rule__VectorValue__Group_1_1__1__Impl rule__VectorValue__Group_1_1__2 ;
    public final void rule__VectorValue__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10146:1: ( rule__VectorValue__Group_1_1__1__Impl rule__VectorValue__Group_1_1__2 )
            // InternalLTLFormula.g:10147:2: rule__VectorValue__Group_1_1__1__Impl rule__VectorValue__Group_1_1__2
            {
            pushFollow(FollowSets000.FOLLOW_77);
            rule__VectorValue__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group_1_1__1"


    // $ANTLR start "rule__VectorValue__Group_1_1__1__Impl"
    // InternalLTLFormula.g:10154:1: rule__VectorValue__Group_1_1__1__Impl : ( ( rule__VectorValue__RangeAssignment_1_1_1 ) ) ;
    public final void rule__VectorValue__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10158:1: ( ( ( rule__VectorValue__RangeAssignment_1_1_1 ) ) )
            // InternalLTLFormula.g:10159:1: ( ( rule__VectorValue__RangeAssignment_1_1_1 ) )
            {
            // InternalLTLFormula.g:10159:1: ( ( rule__VectorValue__RangeAssignment_1_1_1 ) )
            // InternalLTLFormula.g:10160:2: ( rule__VectorValue__RangeAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getRangeAssignment_1_1_1()); 
            }
            // InternalLTLFormula.g:10161:2: ( rule__VectorValue__RangeAssignment_1_1_1 )
            // InternalLTLFormula.g:10161:3: rule__VectorValue__RangeAssignment_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__RangeAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getRangeAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group_1_1__1__Impl"


    // $ANTLR start "rule__VectorValue__Group_1_1__2"
    // InternalLTLFormula.g:10169:1: rule__VectorValue__Group_1_1__2 : rule__VectorValue__Group_1_1__2__Impl ;
    public final void rule__VectorValue__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10173:1: ( rule__VectorValue__Group_1_1__2__Impl )
            // InternalLTLFormula.g:10174:2: rule__VectorValue__Group_1_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group_1_1__2"


    // $ANTLR start "rule__VectorValue__Group_1_1__2__Impl"
    // InternalLTLFormula.g:10180:1: rule__VectorValue__Group_1_1__2__Impl : ( ( rule__VectorValue__ValuesAssignment_1_1_2 ) ) ;
    public final void rule__VectorValue__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10184:1: ( ( ( rule__VectorValue__ValuesAssignment_1_1_2 ) ) )
            // InternalLTLFormula.g:10185:1: ( ( rule__VectorValue__ValuesAssignment_1_1_2 ) )
            {
            // InternalLTLFormula.g:10185:1: ( ( rule__VectorValue__ValuesAssignment_1_1_2 ) )
            // InternalLTLFormula.g:10186:2: ( rule__VectorValue__ValuesAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getValuesAssignment_1_1_2()); 
            }
            // InternalLTLFormula.g:10187:2: ( rule__VectorValue__ValuesAssignment_1_1_2 )
            // InternalLTLFormula.g:10187:3: rule__VectorValue__ValuesAssignment_1_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__ValuesAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getValuesAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__Group_1_1__2__Impl"


    // $ANTLR start "rule__IgnoreValue__Group__0"
    // InternalLTLFormula.g:10196:1: rule__IgnoreValue__Group__0 : rule__IgnoreValue__Group__0__Impl rule__IgnoreValue__Group__1 ;
    public final void rule__IgnoreValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10200:1: ( rule__IgnoreValue__Group__0__Impl rule__IgnoreValue__Group__1 )
            // InternalLTLFormula.g:10201:2: rule__IgnoreValue__Group__0__Impl rule__IgnoreValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_73);
            rule__IgnoreValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IgnoreValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IgnoreValue__Group__0"


    // $ANTLR start "rule__IgnoreValue__Group__0__Impl"
    // InternalLTLFormula.g:10208:1: rule__IgnoreValue__Group__0__Impl : ( () ) ;
    public final void rule__IgnoreValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10212:1: ( ( () ) )
            // InternalLTLFormula.g:10213:1: ( () )
            {
            // InternalLTLFormula.g:10213:1: ( () )
            // InternalLTLFormula.g:10214:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIgnoreValueAccess().getIgnoreValueAction_0()); 
            }
            // InternalLTLFormula.g:10215:2: ()
            // InternalLTLFormula.g:10215:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIgnoreValueAccess().getIgnoreValueAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IgnoreValue__Group__0__Impl"


    // $ANTLR start "rule__IgnoreValue__Group__1"
    // InternalLTLFormula.g:10223:1: rule__IgnoreValue__Group__1 : rule__IgnoreValue__Group__1__Impl ;
    public final void rule__IgnoreValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10227:1: ( rule__IgnoreValue__Group__1__Impl )
            // InternalLTLFormula.g:10228:2: rule__IgnoreValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IgnoreValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IgnoreValue__Group__1"


    // $ANTLR start "rule__IgnoreValue__Group__1__Impl"
    // InternalLTLFormula.g:10234:1: rule__IgnoreValue__Group__1__Impl : ( '_' ) ;
    public final void rule__IgnoreValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10238:1: ( ( '_' ) )
            // InternalLTLFormula.g:10239:1: ( '_' )
            {
            // InternalLTLFormula.g:10239:1: ( '_' )
            // InternalLTLFormula.g:10240:2: '_'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIgnoreValueAccess().get_Keyword_1()); 
            }
            match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIgnoreValueAccess().get_Keyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IgnoreValue__Group__1__Impl"


    // $ANTLR start "rule__JsonObjectValue__Group__0"
    // InternalLTLFormula.g:10250:1: rule__JsonObjectValue__Group__0 : rule__JsonObjectValue__Group__0__Impl rule__JsonObjectValue__Group__1 ;
    public final void rule__JsonObjectValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10254:1: ( rule__JsonObjectValue__Group__0__Impl rule__JsonObjectValue__Group__1 )
            // InternalLTLFormula.g:10255:2: rule__JsonObjectValue__Group__0__Impl rule__JsonObjectValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_78);
            rule__JsonObjectValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group__0"


    // $ANTLR start "rule__JsonObjectValue__Group__0__Impl"
    // InternalLTLFormula.g:10262:1: rule__JsonObjectValue__Group__0__Impl : ( () ) ;
    public final void rule__JsonObjectValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10266:1: ( ( () ) )
            // InternalLTLFormula.g:10267:1: ( () )
            {
            // InternalLTLFormula.g:10267:1: ( () )
            // InternalLTLFormula.g:10268:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectValueAccess().getJsonObjectValueAction_0()); 
            }
            // InternalLTLFormula.g:10269:2: ()
            // InternalLTLFormula.g:10269:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectValueAccess().getJsonObjectValueAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group__0__Impl"


    // $ANTLR start "rule__JsonObjectValue__Group__1"
    // InternalLTLFormula.g:10277:1: rule__JsonObjectValue__Group__1 : rule__JsonObjectValue__Group__1__Impl rule__JsonObjectValue__Group__2 ;
    public final void rule__JsonObjectValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10281:1: ( rule__JsonObjectValue__Group__1__Impl rule__JsonObjectValue__Group__2 )
            // InternalLTLFormula.g:10282:2: rule__JsonObjectValue__Group__1__Impl rule__JsonObjectValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_79);
            rule__JsonObjectValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group__1"


    // $ANTLR start "rule__JsonObjectValue__Group__1__Impl"
    // InternalLTLFormula.g:10289:1: rule__JsonObjectValue__Group__1__Impl : ( '{' ) ;
    public final void rule__JsonObjectValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10293:1: ( ( '{' ) )
            // InternalLTLFormula.g:10294:1: ( '{' )
            {
            // InternalLTLFormula.g:10294:1: ( '{' )
            // InternalLTLFormula.g:10295:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectValueAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectValueAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group__1__Impl"


    // $ANTLR start "rule__JsonObjectValue__Group__2"
    // InternalLTLFormula.g:10304:1: rule__JsonObjectValue__Group__2 : rule__JsonObjectValue__Group__2__Impl rule__JsonObjectValue__Group__3 ;
    public final void rule__JsonObjectValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10308:1: ( rule__JsonObjectValue__Group__2__Impl rule__JsonObjectValue__Group__3 )
            // InternalLTLFormula.g:10309:2: rule__JsonObjectValue__Group__2__Impl rule__JsonObjectValue__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_79);
            rule__JsonObjectValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectValue__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group__2"


    // $ANTLR start "rule__JsonObjectValue__Group__2__Impl"
    // InternalLTLFormula.g:10316:1: rule__JsonObjectValue__Group__2__Impl : ( ( rule__JsonObjectValue__Group_2__0 )? ) ;
    public final void rule__JsonObjectValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10320:1: ( ( ( rule__JsonObjectValue__Group_2__0 )? ) )
            // InternalLTLFormula.g:10321:1: ( ( rule__JsonObjectValue__Group_2__0 )? )
            {
            // InternalLTLFormula.g:10321:1: ( ( rule__JsonObjectValue__Group_2__0 )? )
            // InternalLTLFormula.g:10322:2: ( rule__JsonObjectValue__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectValueAccess().getGroup_2()); 
            }
            // InternalLTLFormula.g:10323:2: ( rule__JsonObjectValue__Group_2__0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==RULE_STRING) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalLTLFormula.g:10323:3: rule__JsonObjectValue__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__JsonObjectValue__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectValueAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group__2__Impl"


    // $ANTLR start "rule__JsonObjectValue__Group__3"
    // InternalLTLFormula.g:10331:1: rule__JsonObjectValue__Group__3 : rule__JsonObjectValue__Group__3__Impl ;
    public final void rule__JsonObjectValue__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10335:1: ( rule__JsonObjectValue__Group__3__Impl )
            // InternalLTLFormula.g:10336:2: rule__JsonObjectValue__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectValue__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group__3"


    // $ANTLR start "rule__JsonObjectValue__Group__3__Impl"
    // InternalLTLFormula.g:10342:1: rule__JsonObjectValue__Group__3__Impl : ( '}' ) ;
    public final void rule__JsonObjectValue__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10346:1: ( ( '}' ) )
            // InternalLTLFormula.g:10347:1: ( '}' )
            {
            // InternalLTLFormula.g:10347:1: ( '}' )
            // InternalLTLFormula.g:10348:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectValueAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectValueAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group__3__Impl"


    // $ANTLR start "rule__JsonObjectValue__Group_2__0"
    // InternalLTLFormula.g:10358:1: rule__JsonObjectValue__Group_2__0 : rule__JsonObjectValue__Group_2__0__Impl rule__JsonObjectValue__Group_2__1 ;
    public final void rule__JsonObjectValue__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10362:1: ( rule__JsonObjectValue__Group_2__0__Impl rule__JsonObjectValue__Group_2__1 )
            // InternalLTLFormula.g:10363:2: rule__JsonObjectValue__Group_2__0__Impl rule__JsonObjectValue__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__JsonObjectValue__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectValue__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group_2__0"


    // $ANTLR start "rule__JsonObjectValue__Group_2__0__Impl"
    // InternalLTLFormula.g:10370:1: rule__JsonObjectValue__Group_2__0__Impl : ( ( rule__JsonObjectValue__MembersAssignment_2_0 ) ) ;
    public final void rule__JsonObjectValue__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10374:1: ( ( ( rule__JsonObjectValue__MembersAssignment_2_0 ) ) )
            // InternalLTLFormula.g:10375:1: ( ( rule__JsonObjectValue__MembersAssignment_2_0 ) )
            {
            // InternalLTLFormula.g:10375:1: ( ( rule__JsonObjectValue__MembersAssignment_2_0 ) )
            // InternalLTLFormula.g:10376:2: ( rule__JsonObjectValue__MembersAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectValueAccess().getMembersAssignment_2_0()); 
            }
            // InternalLTLFormula.g:10377:2: ( rule__JsonObjectValue__MembersAssignment_2_0 )
            // InternalLTLFormula.g:10377:3: rule__JsonObjectValue__MembersAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectValue__MembersAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectValueAccess().getMembersAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group_2__0__Impl"


    // $ANTLR start "rule__JsonObjectValue__Group_2__1"
    // InternalLTLFormula.g:10385:1: rule__JsonObjectValue__Group_2__1 : rule__JsonObjectValue__Group_2__1__Impl ;
    public final void rule__JsonObjectValue__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10389:1: ( rule__JsonObjectValue__Group_2__1__Impl )
            // InternalLTLFormula.g:10390:2: rule__JsonObjectValue__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectValue__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group_2__1"


    // $ANTLR start "rule__JsonObjectValue__Group_2__1__Impl"
    // InternalLTLFormula.g:10396:1: rule__JsonObjectValue__Group_2__1__Impl : ( ( rule__JsonObjectValue__Group_2_1__0 )* ) ;
    public final void rule__JsonObjectValue__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10400:1: ( ( ( rule__JsonObjectValue__Group_2_1__0 )* ) )
            // InternalLTLFormula.g:10401:1: ( ( rule__JsonObjectValue__Group_2_1__0 )* )
            {
            // InternalLTLFormula.g:10401:1: ( ( rule__JsonObjectValue__Group_2_1__0 )* )
            // InternalLTLFormula.g:10402:2: ( rule__JsonObjectValue__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectValueAccess().getGroup_2_1()); 
            }
            // InternalLTLFormula.g:10403:2: ( rule__JsonObjectValue__Group_2_1__0 )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==54) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // InternalLTLFormula.g:10403:3: rule__JsonObjectValue__Group_2_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    rule__JsonObjectValue__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectValueAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group_2__1__Impl"


    // $ANTLR start "rule__JsonObjectValue__Group_2_1__0"
    // InternalLTLFormula.g:10412:1: rule__JsonObjectValue__Group_2_1__0 : rule__JsonObjectValue__Group_2_1__0__Impl rule__JsonObjectValue__Group_2_1__1 ;
    public final void rule__JsonObjectValue__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10416:1: ( rule__JsonObjectValue__Group_2_1__0__Impl rule__JsonObjectValue__Group_2_1__1 )
            // InternalLTLFormula.g:10417:2: rule__JsonObjectValue__Group_2_1__0__Impl rule__JsonObjectValue__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_80);
            rule__JsonObjectValue__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectValue__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group_2_1__0"


    // $ANTLR start "rule__JsonObjectValue__Group_2_1__0__Impl"
    // InternalLTLFormula.g:10424:1: rule__JsonObjectValue__Group_2_1__0__Impl : ( ',' ) ;
    public final void rule__JsonObjectValue__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10428:1: ( ( ',' ) )
            // InternalLTLFormula.g:10429:1: ( ',' )
            {
            // InternalLTLFormula.g:10429:1: ( ',' )
            // InternalLTLFormula.g:10430:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectValueAccess().getCommaKeyword_2_1_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectValueAccess().getCommaKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group_2_1__0__Impl"


    // $ANTLR start "rule__JsonObjectValue__Group_2_1__1"
    // InternalLTLFormula.g:10439:1: rule__JsonObjectValue__Group_2_1__1 : rule__JsonObjectValue__Group_2_1__1__Impl ;
    public final void rule__JsonObjectValue__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10443:1: ( rule__JsonObjectValue__Group_2_1__1__Impl )
            // InternalLTLFormula.g:10444:2: rule__JsonObjectValue__Group_2_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectValue__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group_2_1__1"


    // $ANTLR start "rule__JsonObjectValue__Group_2_1__1__Impl"
    // InternalLTLFormula.g:10450:1: rule__JsonObjectValue__Group_2_1__1__Impl : ( ( rule__JsonObjectValue__MembersAssignment_2_1_1 ) ) ;
    public final void rule__JsonObjectValue__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10454:1: ( ( ( rule__JsonObjectValue__MembersAssignment_2_1_1 ) ) )
            // InternalLTLFormula.g:10455:1: ( ( rule__JsonObjectValue__MembersAssignment_2_1_1 ) )
            {
            // InternalLTLFormula.g:10455:1: ( ( rule__JsonObjectValue__MembersAssignment_2_1_1 ) )
            // InternalLTLFormula.g:10456:2: ( rule__JsonObjectValue__MembersAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectValueAccess().getMembersAssignment_2_1_1()); 
            }
            // InternalLTLFormula.g:10457:2: ( rule__JsonObjectValue__MembersAssignment_2_1_1 )
            // InternalLTLFormula.g:10457:3: rule__JsonObjectValue__MembersAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectValue__MembersAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectValueAccess().getMembersAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__Group_2_1__1__Impl"


    // $ANTLR start "rule__JsonObjectMember__Group__0"
    // InternalLTLFormula.g:10466:1: rule__JsonObjectMember__Group__0 : rule__JsonObjectMember__Group__0__Impl rule__JsonObjectMember__Group__1 ;
    public final void rule__JsonObjectMember__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10470:1: ( rule__JsonObjectMember__Group__0__Impl rule__JsonObjectMember__Group__1 )
            // InternalLTLFormula.g:10471:2: rule__JsonObjectMember__Group__0__Impl rule__JsonObjectMember__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__JsonObjectMember__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectMember__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectMember__Group__0"


    // $ANTLR start "rule__JsonObjectMember__Group__0__Impl"
    // InternalLTLFormula.g:10478:1: rule__JsonObjectMember__Group__0__Impl : ( ( rule__JsonObjectMember__KeyAssignment_0 ) ) ;
    public final void rule__JsonObjectMember__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10482:1: ( ( ( rule__JsonObjectMember__KeyAssignment_0 ) ) )
            // InternalLTLFormula.g:10483:1: ( ( rule__JsonObjectMember__KeyAssignment_0 ) )
            {
            // InternalLTLFormula.g:10483:1: ( ( rule__JsonObjectMember__KeyAssignment_0 ) )
            // InternalLTLFormula.g:10484:2: ( rule__JsonObjectMember__KeyAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectMemberAccess().getKeyAssignment_0()); 
            }
            // InternalLTLFormula.g:10485:2: ( rule__JsonObjectMember__KeyAssignment_0 )
            // InternalLTLFormula.g:10485:3: rule__JsonObjectMember__KeyAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectMember__KeyAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectMemberAccess().getKeyAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectMember__Group__0__Impl"


    // $ANTLR start "rule__JsonObjectMember__Group__1"
    // InternalLTLFormula.g:10493:1: rule__JsonObjectMember__Group__1 : rule__JsonObjectMember__Group__1__Impl rule__JsonObjectMember__Group__2 ;
    public final void rule__JsonObjectMember__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10497:1: ( rule__JsonObjectMember__Group__1__Impl rule__JsonObjectMember__Group__2 )
            // InternalLTLFormula.g:10498:2: rule__JsonObjectMember__Group__1__Impl rule__JsonObjectMember__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_81);
            rule__JsonObjectMember__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectMember__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectMember__Group__1"


    // $ANTLR start "rule__JsonObjectMember__Group__1__Impl"
    // InternalLTLFormula.g:10505:1: rule__JsonObjectMember__Group__1__Impl : ( ':' ) ;
    public final void rule__JsonObjectMember__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10509:1: ( ( ':' ) )
            // InternalLTLFormula.g:10510:1: ( ':' )
            {
            // InternalLTLFormula.g:10510:1: ( ':' )
            // InternalLTLFormula.g:10511:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectMemberAccess().getColonKeyword_1()); 
            }
            match(input,53,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectMemberAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectMember__Group__1__Impl"


    // $ANTLR start "rule__JsonObjectMember__Group__2"
    // InternalLTLFormula.g:10520:1: rule__JsonObjectMember__Group__2 : rule__JsonObjectMember__Group__2__Impl ;
    public final void rule__JsonObjectMember__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10524:1: ( rule__JsonObjectMember__Group__2__Impl )
            // InternalLTLFormula.g:10525:2: rule__JsonObjectMember__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectMember__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectMember__Group__2"


    // $ANTLR start "rule__JsonObjectMember__Group__2__Impl"
    // InternalLTLFormula.g:10531:1: rule__JsonObjectMember__Group__2__Impl : ( ( rule__JsonObjectMember__ValueAssignment_2 ) ) ;
    public final void rule__JsonObjectMember__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10535:1: ( ( ( rule__JsonObjectMember__ValueAssignment_2 ) ) )
            // InternalLTLFormula.g:10536:1: ( ( rule__JsonObjectMember__ValueAssignment_2 ) )
            {
            // InternalLTLFormula.g:10536:1: ( ( rule__JsonObjectMember__ValueAssignment_2 ) )
            // InternalLTLFormula.g:10537:2: ( rule__JsonObjectMember__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectMemberAccess().getValueAssignment_2()); 
            }
            // InternalLTLFormula.g:10538:2: ( rule__JsonObjectMember__ValueAssignment_2 )
            // InternalLTLFormula.g:10538:3: rule__JsonObjectMember__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonObjectMember__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectMemberAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectMember__Group__2__Impl"


    // $ANTLR start "rule__JsonArrayValue__Group__0"
    // InternalLTLFormula.g:10547:1: rule__JsonArrayValue__Group__0 : rule__JsonArrayValue__Group__0__Impl rule__JsonArrayValue__Group__1 ;
    public final void rule__JsonArrayValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10551:1: ( rule__JsonArrayValue__Group__0__Impl rule__JsonArrayValue__Group__1 )
            // InternalLTLFormula.g:10552:2: rule__JsonArrayValue__Group__0__Impl rule__JsonArrayValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__JsonArrayValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonArrayValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group__0"


    // $ANTLR start "rule__JsonArrayValue__Group__0__Impl"
    // InternalLTLFormula.g:10559:1: rule__JsonArrayValue__Group__0__Impl : ( () ) ;
    public final void rule__JsonArrayValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10563:1: ( ( () ) )
            // InternalLTLFormula.g:10564:1: ( () )
            {
            // InternalLTLFormula.g:10564:1: ( () )
            // InternalLTLFormula.g:10565:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonArrayValueAccess().getJsonArrayValueAction_0()); 
            }
            // InternalLTLFormula.g:10566:2: ()
            // InternalLTLFormula.g:10566:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonArrayValueAccess().getJsonArrayValueAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group__0__Impl"


    // $ANTLR start "rule__JsonArrayValue__Group__1"
    // InternalLTLFormula.g:10574:1: rule__JsonArrayValue__Group__1 : rule__JsonArrayValue__Group__1__Impl rule__JsonArrayValue__Group__2 ;
    public final void rule__JsonArrayValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10578:1: ( rule__JsonArrayValue__Group__1__Impl rule__JsonArrayValue__Group__2 )
            // InternalLTLFormula.g:10579:2: rule__JsonArrayValue__Group__1__Impl rule__JsonArrayValue__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_83);
            rule__JsonArrayValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonArrayValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group__1"


    // $ANTLR start "rule__JsonArrayValue__Group__1__Impl"
    // InternalLTLFormula.g:10586:1: rule__JsonArrayValue__Group__1__Impl : ( '[' ) ;
    public final void rule__JsonArrayValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10590:1: ( ( '[' ) )
            // InternalLTLFormula.g:10591:1: ( '[' )
            {
            // InternalLTLFormula.g:10591:1: ( '[' )
            // InternalLTLFormula.g:10592:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonArrayValueAccess().getLeftSquareBracketKeyword_1()); 
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonArrayValueAccess().getLeftSquareBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group__1__Impl"


    // $ANTLR start "rule__JsonArrayValue__Group__2"
    // InternalLTLFormula.g:10601:1: rule__JsonArrayValue__Group__2 : rule__JsonArrayValue__Group__2__Impl rule__JsonArrayValue__Group__3 ;
    public final void rule__JsonArrayValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10605:1: ( rule__JsonArrayValue__Group__2__Impl rule__JsonArrayValue__Group__3 )
            // InternalLTLFormula.g:10606:2: rule__JsonArrayValue__Group__2__Impl rule__JsonArrayValue__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_83);
            rule__JsonArrayValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonArrayValue__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group__2"


    // $ANTLR start "rule__JsonArrayValue__Group__2__Impl"
    // InternalLTLFormula.g:10613:1: rule__JsonArrayValue__Group__2__Impl : ( ( rule__JsonArrayValue__Group_2__0 )? ) ;
    public final void rule__JsonArrayValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10617:1: ( ( ( rule__JsonArrayValue__Group_2__0 )? ) )
            // InternalLTLFormula.g:10618:1: ( ( rule__JsonArrayValue__Group_2__0 )? )
            {
            // InternalLTLFormula.g:10618:1: ( ( rule__JsonArrayValue__Group_2__0 )? )
            // InternalLTLFormula.g:10619:2: ( rule__JsonArrayValue__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonArrayValueAccess().getGroup_2()); 
            }
            // InternalLTLFormula.g:10620:2: ( rule__JsonArrayValue__Group_2__0 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( ((LA84_0>=RULE_STRING && LA84_0<=RULE_BOOLEAN)||(LA84_0>=RULE_INT && LA84_0<=RULE_FLOAT)||LA84_0==56||LA84_0==61||LA84_0==64) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalLTLFormula.g:10620:3: rule__JsonArrayValue__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__JsonArrayValue__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonArrayValueAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group__2__Impl"


    // $ANTLR start "rule__JsonArrayValue__Group__3"
    // InternalLTLFormula.g:10628:1: rule__JsonArrayValue__Group__3 : rule__JsonArrayValue__Group__3__Impl ;
    public final void rule__JsonArrayValue__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10632:1: ( rule__JsonArrayValue__Group__3__Impl )
            // InternalLTLFormula.g:10633:2: rule__JsonArrayValue__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonArrayValue__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group__3"


    // $ANTLR start "rule__JsonArrayValue__Group__3__Impl"
    // InternalLTLFormula.g:10639:1: rule__JsonArrayValue__Group__3__Impl : ( ']' ) ;
    public final void rule__JsonArrayValue__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10643:1: ( ( ']' ) )
            // InternalLTLFormula.g:10644:1: ( ']' )
            {
            // InternalLTLFormula.g:10644:1: ( ']' )
            // InternalLTLFormula.g:10645:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonArrayValueAccess().getRightSquareBracketKeyword_3()); 
            }
            match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonArrayValueAccess().getRightSquareBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group__3__Impl"


    // $ANTLR start "rule__JsonArrayValue__Group_2__0"
    // InternalLTLFormula.g:10655:1: rule__JsonArrayValue__Group_2__0 : rule__JsonArrayValue__Group_2__0__Impl rule__JsonArrayValue__Group_2__1 ;
    public final void rule__JsonArrayValue__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10659:1: ( rule__JsonArrayValue__Group_2__0__Impl rule__JsonArrayValue__Group_2__1 )
            // InternalLTLFormula.g:10660:2: rule__JsonArrayValue__Group_2__0__Impl rule__JsonArrayValue__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__JsonArrayValue__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonArrayValue__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group_2__0"


    // $ANTLR start "rule__JsonArrayValue__Group_2__0__Impl"
    // InternalLTLFormula.g:10667:1: rule__JsonArrayValue__Group_2__0__Impl : ( ( rule__JsonArrayValue__ElementsAssignment_2_0 ) ) ;
    public final void rule__JsonArrayValue__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10671:1: ( ( ( rule__JsonArrayValue__ElementsAssignment_2_0 ) ) )
            // InternalLTLFormula.g:10672:1: ( ( rule__JsonArrayValue__ElementsAssignment_2_0 ) )
            {
            // InternalLTLFormula.g:10672:1: ( ( rule__JsonArrayValue__ElementsAssignment_2_0 ) )
            // InternalLTLFormula.g:10673:2: ( rule__JsonArrayValue__ElementsAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonArrayValueAccess().getElementsAssignment_2_0()); 
            }
            // InternalLTLFormula.g:10674:2: ( rule__JsonArrayValue__ElementsAssignment_2_0 )
            // InternalLTLFormula.g:10674:3: rule__JsonArrayValue__ElementsAssignment_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonArrayValue__ElementsAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonArrayValueAccess().getElementsAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group_2__0__Impl"


    // $ANTLR start "rule__JsonArrayValue__Group_2__1"
    // InternalLTLFormula.g:10682:1: rule__JsonArrayValue__Group_2__1 : rule__JsonArrayValue__Group_2__1__Impl ;
    public final void rule__JsonArrayValue__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10686:1: ( rule__JsonArrayValue__Group_2__1__Impl )
            // InternalLTLFormula.g:10687:2: rule__JsonArrayValue__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonArrayValue__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group_2__1"


    // $ANTLR start "rule__JsonArrayValue__Group_2__1__Impl"
    // InternalLTLFormula.g:10693:1: rule__JsonArrayValue__Group_2__1__Impl : ( ( rule__JsonArrayValue__Group_2_1__0 )* ) ;
    public final void rule__JsonArrayValue__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10697:1: ( ( ( rule__JsonArrayValue__Group_2_1__0 )* ) )
            // InternalLTLFormula.g:10698:1: ( ( rule__JsonArrayValue__Group_2_1__0 )* )
            {
            // InternalLTLFormula.g:10698:1: ( ( rule__JsonArrayValue__Group_2_1__0 )* )
            // InternalLTLFormula.g:10699:2: ( rule__JsonArrayValue__Group_2_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonArrayValueAccess().getGroup_2_1()); 
            }
            // InternalLTLFormula.g:10700:2: ( rule__JsonArrayValue__Group_2_1__0 )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==54) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // InternalLTLFormula.g:10700:3: rule__JsonArrayValue__Group_2_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    rule__JsonArrayValue__Group_2_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonArrayValueAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group_2__1__Impl"


    // $ANTLR start "rule__JsonArrayValue__Group_2_1__0"
    // InternalLTLFormula.g:10709:1: rule__JsonArrayValue__Group_2_1__0 : rule__JsonArrayValue__Group_2_1__0__Impl rule__JsonArrayValue__Group_2_1__1 ;
    public final void rule__JsonArrayValue__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10713:1: ( rule__JsonArrayValue__Group_2_1__0__Impl rule__JsonArrayValue__Group_2_1__1 )
            // InternalLTLFormula.g:10714:2: rule__JsonArrayValue__Group_2_1__0__Impl rule__JsonArrayValue__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_81);
            rule__JsonArrayValue__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonArrayValue__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group_2_1__0"


    // $ANTLR start "rule__JsonArrayValue__Group_2_1__0__Impl"
    // InternalLTLFormula.g:10721:1: rule__JsonArrayValue__Group_2_1__0__Impl : ( ',' ) ;
    public final void rule__JsonArrayValue__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10725:1: ( ( ',' ) )
            // InternalLTLFormula.g:10726:1: ( ',' )
            {
            // InternalLTLFormula.g:10726:1: ( ',' )
            // InternalLTLFormula.g:10727:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonArrayValueAccess().getCommaKeyword_2_1_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonArrayValueAccess().getCommaKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group_2_1__0__Impl"


    // $ANTLR start "rule__JsonArrayValue__Group_2_1__1"
    // InternalLTLFormula.g:10736:1: rule__JsonArrayValue__Group_2_1__1 : rule__JsonArrayValue__Group_2_1__1__Impl ;
    public final void rule__JsonArrayValue__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10740:1: ( rule__JsonArrayValue__Group_2_1__1__Impl )
            // InternalLTLFormula.g:10741:2: rule__JsonArrayValue__Group_2_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonArrayValue__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group_2_1__1"


    // $ANTLR start "rule__JsonArrayValue__Group_2_1__1__Impl"
    // InternalLTLFormula.g:10747:1: rule__JsonArrayValue__Group_2_1__1__Impl : ( ( rule__JsonArrayValue__ElementsAssignment_2_1_1 ) ) ;
    public final void rule__JsonArrayValue__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10751:1: ( ( ( rule__JsonArrayValue__ElementsAssignment_2_1_1 ) ) )
            // InternalLTLFormula.g:10752:1: ( ( rule__JsonArrayValue__ElementsAssignment_2_1_1 ) )
            {
            // InternalLTLFormula.g:10752:1: ( ( rule__JsonArrayValue__ElementsAssignment_2_1_1 ) )
            // InternalLTLFormula.g:10753:2: ( rule__JsonArrayValue__ElementsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonArrayValueAccess().getElementsAssignment_2_1_1()); 
            }
            // InternalLTLFormula.g:10754:2: ( rule__JsonArrayValue__ElementsAssignment_2_1_1 )
            // InternalLTLFormula.g:10754:3: rule__JsonArrayValue__ElementsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonArrayValue__ElementsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonArrayValueAccess().getElementsAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__Group_2_1__1__Impl"


    // $ANTLR start "rule__NullValue__Group__0"
    // InternalLTLFormula.g:10763:1: rule__NullValue__Group__0 : rule__NullValue__Group__0__Impl rule__NullValue__Group__1 ;
    public final void rule__NullValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10767:1: ( rule__NullValue__Group__0__Impl rule__NullValue__Group__1 )
            // InternalLTLFormula.g:10768:2: rule__NullValue__Group__0__Impl rule__NullValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_84);
            rule__NullValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NullValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullValue__Group__0"


    // $ANTLR start "rule__NullValue__Group__0__Impl"
    // InternalLTLFormula.g:10775:1: rule__NullValue__Group__0__Impl : ( () ) ;
    public final void rule__NullValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10779:1: ( ( () ) )
            // InternalLTLFormula.g:10780:1: ( () )
            {
            // InternalLTLFormula.g:10780:1: ( () )
            // InternalLTLFormula.g:10781:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullValueAccess().getNullValueAction_0()); 
            }
            // InternalLTLFormula.g:10782:2: ()
            // InternalLTLFormula.g:10782:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullValueAccess().getNullValueAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullValue__Group__0__Impl"


    // $ANTLR start "rule__NullValue__Group__1"
    // InternalLTLFormula.g:10790:1: rule__NullValue__Group__1 : rule__NullValue__Group__1__Impl ;
    public final void rule__NullValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10794:1: ( rule__NullValue__Group__1__Impl )
            // InternalLTLFormula.g:10795:2: rule__NullValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NullValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullValue__Group__1"


    // $ANTLR start "rule__NullValue__Group__1__Impl"
    // InternalLTLFormula.g:10801:1: rule__NullValue__Group__1__Impl : ( 'null' ) ;
    public final void rule__NullValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10805:1: ( ( 'null' ) )
            // InternalLTLFormula.g:10806:1: ( 'null' )
            {
            // InternalLTLFormula.g:10806:1: ( 'null' )
            // InternalLTLFormula.g:10807:2: 'null'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullValueAccess().getNullKeyword_1()); 
            }
            match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullValueAccess().getNullKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullValue__Group__1__Impl"


    // $ANTLR start "rule__JsonPragma__Group__0"
    // InternalLTLFormula.g:10817:1: rule__JsonPragma__Group__0 : rule__JsonPragma__Group__0__Impl rule__JsonPragma__Group__1 ;
    public final void rule__JsonPragma__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10821:1: ( rule__JsonPragma__Group__0__Impl rule__JsonPragma__Group__1 )
            // InternalLTLFormula.g:10822:2: rule__JsonPragma__Group__0__Impl rule__JsonPragma__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__JsonPragma__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonPragma__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonPragma__Group__0"


    // $ANTLR start "rule__JsonPragma__Group__0__Impl"
    // InternalLTLFormula.g:10829:1: rule__JsonPragma__Group__0__Impl : ( '#' ) ;
    public final void rule__JsonPragma__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10833:1: ( ( '#' ) )
            // InternalLTLFormula.g:10834:1: ( '#' )
            {
            // InternalLTLFormula.g:10834:1: ( '#' )
            // InternalLTLFormula.g:10835:2: '#'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonPragmaAccess().getNumberSignKeyword_0()); 
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonPragmaAccess().getNumberSignKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonPragma__Group__0__Impl"


    // $ANTLR start "rule__JsonPragma__Group__1"
    // InternalLTLFormula.g:10844:1: rule__JsonPragma__Group__1 : rule__JsonPragma__Group__1__Impl rule__JsonPragma__Group__2 ;
    public final void rule__JsonPragma__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10848:1: ( rule__JsonPragma__Group__1__Impl rule__JsonPragma__Group__2 )
            // InternalLTLFormula.g:10849:2: rule__JsonPragma__Group__1__Impl rule__JsonPragma__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_78);
            rule__JsonPragma__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonPragma__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonPragma__Group__1"


    // $ANTLR start "rule__JsonPragma__Group__1__Impl"
    // InternalLTLFormula.g:10856:1: rule__JsonPragma__Group__1__Impl : ( ( rule__JsonPragma__NameAssignment_1 ) ) ;
    public final void rule__JsonPragma__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10860:1: ( ( ( rule__JsonPragma__NameAssignment_1 ) ) )
            // InternalLTLFormula.g:10861:1: ( ( rule__JsonPragma__NameAssignment_1 ) )
            {
            // InternalLTLFormula.g:10861:1: ( ( rule__JsonPragma__NameAssignment_1 ) )
            // InternalLTLFormula.g:10862:2: ( rule__JsonPragma__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonPragmaAccess().getNameAssignment_1()); 
            }
            // InternalLTLFormula.g:10863:2: ( rule__JsonPragma__NameAssignment_1 )
            // InternalLTLFormula.g:10863:3: rule__JsonPragma__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonPragma__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonPragmaAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonPragma__Group__1__Impl"


    // $ANTLR start "rule__JsonPragma__Group__2"
    // InternalLTLFormula.g:10871:1: rule__JsonPragma__Group__2 : rule__JsonPragma__Group__2__Impl ;
    public final void rule__JsonPragma__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10875:1: ( rule__JsonPragma__Group__2__Impl )
            // InternalLTLFormula.g:10876:2: rule__JsonPragma__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonPragma__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonPragma__Group__2"


    // $ANTLR start "rule__JsonPragma__Group__2__Impl"
    // InternalLTLFormula.g:10882:1: rule__JsonPragma__Group__2__Impl : ( ( rule__JsonPragma__ValueAssignment_2 ) ) ;
    public final void rule__JsonPragma__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10886:1: ( ( ( rule__JsonPragma__ValueAssignment_2 ) ) )
            // InternalLTLFormula.g:10887:1: ( ( rule__JsonPragma__ValueAssignment_2 ) )
            {
            // InternalLTLFormula.g:10887:1: ( ( rule__JsonPragma__ValueAssignment_2 ) )
            // InternalLTLFormula.g:10888:2: ( rule__JsonPragma__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonPragmaAccess().getValueAssignment_2()); 
            }
            // InternalLTLFormula.g:10889:2: ( rule__JsonPragma__ValueAssignment_2 )
            // InternalLTLFormula.g:10889:3: rule__JsonPragma__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonPragma__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonPragmaAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonPragma__Group__2__Impl"


    // $ANTLR start "rule__JsonAnnotation__Group__0"
    // InternalLTLFormula.g:10898:1: rule__JsonAnnotation__Group__0 : rule__JsonAnnotation__Group__0__Impl rule__JsonAnnotation__Group__1 ;
    public final void rule__JsonAnnotation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10902:1: ( rule__JsonAnnotation__Group__0__Impl rule__JsonAnnotation__Group__1 )
            // InternalLTLFormula.g:10903:2: rule__JsonAnnotation__Group__0__Impl rule__JsonAnnotation__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__JsonAnnotation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonAnnotation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonAnnotation__Group__0"


    // $ANTLR start "rule__JsonAnnotation__Group__0__Impl"
    // InternalLTLFormula.g:10910:1: rule__JsonAnnotation__Group__0__Impl : ( '@' ) ;
    public final void rule__JsonAnnotation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10914:1: ( ( '@' ) )
            // InternalLTLFormula.g:10915:1: ( '@' )
            {
            // InternalLTLFormula.g:10915:1: ( '@' )
            // InternalLTLFormula.g:10916:2: '@'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonAnnotationAccess().getCommercialAtKeyword_0()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonAnnotationAccess().getCommercialAtKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonAnnotation__Group__0__Impl"


    // $ANTLR start "rule__JsonAnnotation__Group__1"
    // InternalLTLFormula.g:10925:1: rule__JsonAnnotation__Group__1 : rule__JsonAnnotation__Group__1__Impl rule__JsonAnnotation__Group__2 ;
    public final void rule__JsonAnnotation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10929:1: ( rule__JsonAnnotation__Group__1__Impl rule__JsonAnnotation__Group__2 )
            // InternalLTLFormula.g:10930:2: rule__JsonAnnotation__Group__1__Impl rule__JsonAnnotation__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_78);
            rule__JsonAnnotation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonAnnotation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonAnnotation__Group__1"


    // $ANTLR start "rule__JsonAnnotation__Group__1__Impl"
    // InternalLTLFormula.g:10937:1: rule__JsonAnnotation__Group__1__Impl : ( ( rule__JsonAnnotation__NameAssignment_1 ) ) ;
    public final void rule__JsonAnnotation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10941:1: ( ( ( rule__JsonAnnotation__NameAssignment_1 ) ) )
            // InternalLTLFormula.g:10942:1: ( ( rule__JsonAnnotation__NameAssignment_1 ) )
            {
            // InternalLTLFormula.g:10942:1: ( ( rule__JsonAnnotation__NameAssignment_1 ) )
            // InternalLTLFormula.g:10943:2: ( rule__JsonAnnotation__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonAnnotationAccess().getNameAssignment_1()); 
            }
            // InternalLTLFormula.g:10944:2: ( rule__JsonAnnotation__NameAssignment_1 )
            // InternalLTLFormula.g:10944:3: rule__JsonAnnotation__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonAnnotation__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonAnnotationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonAnnotation__Group__1__Impl"


    // $ANTLR start "rule__JsonAnnotation__Group__2"
    // InternalLTLFormula.g:10952:1: rule__JsonAnnotation__Group__2 : rule__JsonAnnotation__Group__2__Impl ;
    public final void rule__JsonAnnotation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10956:1: ( rule__JsonAnnotation__Group__2__Impl )
            // InternalLTLFormula.g:10957:2: rule__JsonAnnotation__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonAnnotation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonAnnotation__Group__2"


    // $ANTLR start "rule__JsonAnnotation__Group__2__Impl"
    // InternalLTLFormula.g:10963:1: rule__JsonAnnotation__Group__2__Impl : ( ( rule__JsonAnnotation__ValueAssignment_2 ) ) ;
    public final void rule__JsonAnnotation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10967:1: ( ( ( rule__JsonAnnotation__ValueAssignment_2 ) ) )
            // InternalLTLFormula.g:10968:1: ( ( rule__JsonAnnotation__ValueAssignment_2 ) )
            {
            // InternalLTLFormula.g:10968:1: ( ( rule__JsonAnnotation__ValueAssignment_2 ) )
            // InternalLTLFormula.g:10969:2: ( rule__JsonAnnotation__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonAnnotationAccess().getValueAssignment_2()); 
            }
            // InternalLTLFormula.g:10970:2: ( rule__JsonAnnotation__ValueAssignment_2 )
            // InternalLTLFormula.g:10970:3: rule__JsonAnnotation__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__JsonAnnotation__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonAnnotationAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonAnnotation__Group__2__Impl"


    // $ANTLR start "rule__TagAnnotation__Group__0"
    // InternalLTLFormula.g:10979:1: rule__TagAnnotation__Group__0 : rule__TagAnnotation__Group__0__Impl rule__TagAnnotation__Group__1 ;
    public final void rule__TagAnnotation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10983:1: ( rule__TagAnnotation__Group__0__Impl rule__TagAnnotation__Group__1 )
            // InternalLTLFormula.g:10984:2: rule__TagAnnotation__Group__0__Impl rule__TagAnnotation__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__TagAnnotation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TagAnnotation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TagAnnotation__Group__0"


    // $ANTLR start "rule__TagAnnotation__Group__0__Impl"
    // InternalLTLFormula.g:10991:1: rule__TagAnnotation__Group__0__Impl : ( '@' ) ;
    public final void rule__TagAnnotation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:10995:1: ( ( '@' ) )
            // InternalLTLFormula.g:10996:1: ( '@' )
            {
            // InternalLTLFormula.g:10996:1: ( '@' )
            // InternalLTLFormula.g:10997:2: '@'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TagAnnotation__Group__0__Impl"


    // $ANTLR start "rule__TagAnnotation__Group__1"
    // InternalLTLFormula.g:11006:1: rule__TagAnnotation__Group__1 : rule__TagAnnotation__Group__1__Impl ;
    public final void rule__TagAnnotation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11010:1: ( rule__TagAnnotation__Group__1__Impl )
            // InternalLTLFormula.g:11011:2: rule__TagAnnotation__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TagAnnotation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TagAnnotation__Group__1"


    // $ANTLR start "rule__TagAnnotation__Group__1__Impl"
    // InternalLTLFormula.g:11017:1: rule__TagAnnotation__Group__1__Impl : ( ( rule__TagAnnotation__NameAssignment_1 ) ) ;
    public final void rule__TagAnnotation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11021:1: ( ( ( rule__TagAnnotation__NameAssignment_1 ) ) )
            // InternalLTLFormula.g:11022:1: ( ( rule__TagAnnotation__NameAssignment_1 ) )
            {
            // InternalLTLFormula.g:11022:1: ( ( rule__TagAnnotation__NameAssignment_1 ) )
            // InternalLTLFormula.g:11023:2: ( rule__TagAnnotation__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTagAnnotationAccess().getNameAssignment_1()); 
            }
            // InternalLTLFormula.g:11024:2: ( rule__TagAnnotation__NameAssignment_1 )
            // InternalLTLFormula.g:11024:3: rule__TagAnnotation__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TagAnnotation__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTagAnnotationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TagAnnotation__Group__1__Impl"


    // $ANTLR start "rule__PragmaTag__Group__0"
    // InternalLTLFormula.g:11033:1: rule__PragmaTag__Group__0 : rule__PragmaTag__Group__0__Impl rule__PragmaTag__Group__1 ;
    public final void rule__PragmaTag__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11037:1: ( rule__PragmaTag__Group__0__Impl rule__PragmaTag__Group__1 )
            // InternalLTLFormula.g:11038:2: rule__PragmaTag__Group__0__Impl rule__PragmaTag__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__PragmaTag__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PragmaTag__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PragmaTag__Group__0"


    // $ANTLR start "rule__PragmaTag__Group__0__Impl"
    // InternalLTLFormula.g:11045:1: rule__PragmaTag__Group__0__Impl : ( '#' ) ;
    public final void rule__PragmaTag__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11049:1: ( ( '#' ) )
            // InternalLTLFormula.g:11050:1: ( '#' )
            {
            // InternalLTLFormula.g:11050:1: ( '#' )
            // InternalLTLFormula.g:11051:2: '#'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0()); 
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PragmaTag__Group__0__Impl"


    // $ANTLR start "rule__PragmaTag__Group__1"
    // InternalLTLFormula.g:11060:1: rule__PragmaTag__Group__1 : rule__PragmaTag__Group__1__Impl ;
    public final void rule__PragmaTag__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11064:1: ( rule__PragmaTag__Group__1__Impl )
            // InternalLTLFormula.g:11065:2: rule__PragmaTag__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PragmaTag__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PragmaTag__Group__1"


    // $ANTLR start "rule__PragmaTag__Group__1__Impl"
    // InternalLTLFormula.g:11071:1: rule__PragmaTag__Group__1__Impl : ( ( rule__PragmaTag__NameAssignment_1 ) ) ;
    public final void rule__PragmaTag__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11075:1: ( ( ( rule__PragmaTag__NameAssignment_1 ) ) )
            // InternalLTLFormula.g:11076:1: ( ( rule__PragmaTag__NameAssignment_1 ) )
            {
            // InternalLTLFormula.g:11076:1: ( ( rule__PragmaTag__NameAssignment_1 ) )
            // InternalLTLFormula.g:11077:2: ( rule__PragmaTag__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPragmaTagAccess().getNameAssignment_1()); 
            }
            // InternalLTLFormula.g:11078:2: ( rule__PragmaTag__NameAssignment_1 )
            // InternalLTLFormula.g:11078:3: rule__PragmaTag__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PragmaTag__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPragmaTagAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PragmaTag__Group__1__Impl"


    // $ANTLR start "rule__KeyStringValueAnnotation__Group__0"
    // InternalLTLFormula.g:11087:1: rule__KeyStringValueAnnotation__Group__0 : rule__KeyStringValueAnnotation__Group__0__Impl rule__KeyStringValueAnnotation__Group__1 ;
    public final void rule__KeyStringValueAnnotation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11091:1: ( rule__KeyStringValueAnnotation__Group__0__Impl rule__KeyStringValueAnnotation__Group__1 )
            // InternalLTLFormula.g:11092:2: rule__KeyStringValueAnnotation__Group__0__Impl rule__KeyStringValueAnnotation__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__KeyStringValueAnnotation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeyStringValueAnnotation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyStringValueAnnotation__Group__0"


    // $ANTLR start "rule__KeyStringValueAnnotation__Group__0__Impl"
    // InternalLTLFormula.g:11099:1: rule__KeyStringValueAnnotation__Group__0__Impl : ( '@' ) ;
    public final void rule__KeyStringValueAnnotation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11103:1: ( ( '@' ) )
            // InternalLTLFormula.g:11104:1: ( '@' )
            {
            // InternalLTLFormula.g:11104:1: ( '@' )
            // InternalLTLFormula.g:11105:2: '@'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyStringValueAnnotation__Group__0__Impl"


    // $ANTLR start "rule__KeyStringValueAnnotation__Group__1"
    // InternalLTLFormula.g:11114:1: rule__KeyStringValueAnnotation__Group__1 : rule__KeyStringValueAnnotation__Group__1__Impl rule__KeyStringValueAnnotation__Group__2 ;
    public final void rule__KeyStringValueAnnotation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11118:1: ( rule__KeyStringValueAnnotation__Group__1__Impl rule__KeyStringValueAnnotation__Group__2 )
            // InternalLTLFormula.g:11119:2: rule__KeyStringValueAnnotation__Group__1__Impl rule__KeyStringValueAnnotation__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_85);
            rule__KeyStringValueAnnotation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeyStringValueAnnotation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyStringValueAnnotation__Group__1"


    // $ANTLR start "rule__KeyStringValueAnnotation__Group__1__Impl"
    // InternalLTLFormula.g:11126:1: rule__KeyStringValueAnnotation__Group__1__Impl : ( ( rule__KeyStringValueAnnotation__NameAssignment_1 ) ) ;
    public final void rule__KeyStringValueAnnotation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11130:1: ( ( ( rule__KeyStringValueAnnotation__NameAssignment_1 ) ) )
            // InternalLTLFormula.g:11131:1: ( ( rule__KeyStringValueAnnotation__NameAssignment_1 ) )
            {
            // InternalLTLFormula.g:11131:1: ( ( rule__KeyStringValueAnnotation__NameAssignment_1 ) )
            // InternalLTLFormula.g:11132:2: ( rule__KeyStringValueAnnotation__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1()); 
            }
            // InternalLTLFormula.g:11133:2: ( rule__KeyStringValueAnnotation__NameAssignment_1 )
            // InternalLTLFormula.g:11133:3: rule__KeyStringValueAnnotation__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeyStringValueAnnotation__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyStringValueAnnotation__Group__1__Impl"


    // $ANTLR start "rule__KeyStringValueAnnotation__Group__2"
    // InternalLTLFormula.g:11141:1: rule__KeyStringValueAnnotation__Group__2 : rule__KeyStringValueAnnotation__Group__2__Impl rule__KeyStringValueAnnotation__Group__3 ;
    public final void rule__KeyStringValueAnnotation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11145:1: ( rule__KeyStringValueAnnotation__Group__2__Impl rule__KeyStringValueAnnotation__Group__3 )
            // InternalLTLFormula.g:11146:2: rule__KeyStringValueAnnotation__Group__2__Impl rule__KeyStringValueAnnotation__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__KeyStringValueAnnotation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeyStringValueAnnotation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyStringValueAnnotation__Group__2"


    // $ANTLR start "rule__KeyStringValueAnnotation__Group__2__Impl"
    // InternalLTLFormula.g:11153:1: rule__KeyStringValueAnnotation__Group__2__Impl : ( ( rule__KeyStringValueAnnotation__ValuesAssignment_2 ) ) ;
    public final void rule__KeyStringValueAnnotation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11157:1: ( ( ( rule__KeyStringValueAnnotation__ValuesAssignment_2 ) ) )
            // InternalLTLFormula.g:11158:1: ( ( rule__KeyStringValueAnnotation__ValuesAssignment_2 ) )
            {
            // InternalLTLFormula.g:11158:1: ( ( rule__KeyStringValueAnnotation__ValuesAssignment_2 ) )
            // InternalLTLFormula.g:11159:2: ( rule__KeyStringValueAnnotation__ValuesAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyStringValueAnnotationAccess().getValuesAssignment_2()); 
            }
            // InternalLTLFormula.g:11160:2: ( rule__KeyStringValueAnnotation__ValuesAssignment_2 )
            // InternalLTLFormula.g:11160:3: rule__KeyStringValueAnnotation__ValuesAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeyStringValueAnnotation__ValuesAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyStringValueAnnotationAccess().getValuesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyStringValueAnnotation__Group__2__Impl"


    // $ANTLR start "rule__KeyStringValueAnnotation__Group__3"
    // InternalLTLFormula.g:11168:1: rule__KeyStringValueAnnotation__Group__3 : rule__KeyStringValueAnnotation__Group__3__Impl ;
    public final void rule__KeyStringValueAnnotation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11172:1: ( rule__KeyStringValueAnnotation__Group__3__Impl )
            // InternalLTLFormula.g:11173:2: rule__KeyStringValueAnnotation__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeyStringValueAnnotation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyStringValueAnnotation__Group__3"


    // $ANTLR start "rule__KeyStringValueAnnotation__Group__3__Impl"
    // InternalLTLFormula.g:11179:1: rule__KeyStringValueAnnotation__Group__3__Impl : ( ( rule__KeyStringValueAnnotation__Group_3__0 )* ) ;
    public final void rule__KeyStringValueAnnotation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11183:1: ( ( ( rule__KeyStringValueAnnotation__Group_3__0 )* ) )
            // InternalLTLFormula.g:11184:1: ( ( rule__KeyStringValueAnnotation__Group_3__0 )* )
            {
            // InternalLTLFormula.g:11184:1: ( ( rule__KeyStringValueAnnotation__Group_3__0 )* )
            // InternalLTLFormula.g:11185:2: ( rule__KeyStringValueAnnotation__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3()); 
            }
            // InternalLTLFormula.g:11186:2: ( rule__KeyStringValueAnnotation__Group_3__0 )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==54) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // InternalLTLFormula.g:11186:3: rule__KeyStringValueAnnotation__Group_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    rule__KeyStringValueAnnotation__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyStringValueAnnotation__Group__3__Impl"


    // $ANTLR start "rule__KeyStringValueAnnotation__Group_3__0"
    // InternalLTLFormula.g:11195:1: rule__KeyStringValueAnnotation__Group_3__0 : rule__KeyStringValueAnnotation__Group_3__0__Impl rule__KeyStringValueAnnotation__Group_3__1 ;
    public final void rule__KeyStringValueAnnotation__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11199:1: ( rule__KeyStringValueAnnotation__Group_3__0__Impl rule__KeyStringValueAnnotation__Group_3__1 )
            // InternalLTLFormula.g:11200:2: rule__KeyStringValueAnnotation__Group_3__0__Impl rule__KeyStringValueAnnotation__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_85);
            rule__KeyStringValueAnnotation__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeyStringValueAnnotation__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyStringValueAnnotation__Group_3__0"


    // $ANTLR start "rule__KeyStringValueAnnotation__Group_3__0__Impl"
    // InternalLTLFormula.g:11207:1: rule__KeyStringValueAnnotation__Group_3__0__Impl : ( ',' ) ;
    public final void rule__KeyStringValueAnnotation__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11211:1: ( ( ',' ) )
            // InternalLTLFormula.g:11212:1: ( ',' )
            {
            // InternalLTLFormula.g:11212:1: ( ',' )
            // InternalLTLFormula.g:11213:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyStringValueAnnotation__Group_3__0__Impl"


    // $ANTLR start "rule__KeyStringValueAnnotation__Group_3__1"
    // InternalLTLFormula.g:11222:1: rule__KeyStringValueAnnotation__Group_3__1 : rule__KeyStringValueAnnotation__Group_3__1__Impl ;
    public final void rule__KeyStringValueAnnotation__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11226:1: ( rule__KeyStringValueAnnotation__Group_3__1__Impl )
            // InternalLTLFormula.g:11227:2: rule__KeyStringValueAnnotation__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeyStringValueAnnotation__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyStringValueAnnotation__Group_3__1"


    // $ANTLR start "rule__KeyStringValueAnnotation__Group_3__1__Impl"
    // InternalLTLFormula.g:11233:1: rule__KeyStringValueAnnotation__Group_3__1__Impl : ( ( rule__KeyStringValueAnnotation__ValuesAssignment_3_1 ) ) ;
    public final void rule__KeyStringValueAnnotation__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11237:1: ( ( ( rule__KeyStringValueAnnotation__ValuesAssignment_3_1 ) ) )
            // InternalLTLFormula.g:11238:1: ( ( rule__KeyStringValueAnnotation__ValuesAssignment_3_1 ) )
            {
            // InternalLTLFormula.g:11238:1: ( ( rule__KeyStringValueAnnotation__ValuesAssignment_3_1 ) )
            // InternalLTLFormula.g:11239:2: ( rule__KeyStringValueAnnotation__ValuesAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); 
            }
            // InternalLTLFormula.g:11240:2: ( rule__KeyStringValueAnnotation__ValuesAssignment_3_1 )
            // InternalLTLFormula.g:11240:3: rule__KeyStringValueAnnotation__ValuesAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__KeyStringValueAnnotation__ValuesAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyStringValueAnnotation__Group_3__1__Impl"


    // $ANTLR start "rule__RestrictedKeyStringValueAnnotation__Group__0"
    // InternalLTLFormula.g:11249:1: rule__RestrictedKeyStringValueAnnotation__Group__0 : rule__RestrictedKeyStringValueAnnotation__Group__0__Impl rule__RestrictedKeyStringValueAnnotation__Group__1 ;
    public final void rule__RestrictedKeyStringValueAnnotation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11253:1: ( rule__RestrictedKeyStringValueAnnotation__Group__0__Impl rule__RestrictedKeyStringValueAnnotation__Group__1 )
            // InternalLTLFormula.g:11254:2: rule__RestrictedKeyStringValueAnnotation__Group__0__Impl rule__RestrictedKeyStringValueAnnotation__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__RestrictedKeyStringValueAnnotation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedKeyStringValueAnnotation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedKeyStringValueAnnotation__Group__0"


    // $ANTLR start "rule__RestrictedKeyStringValueAnnotation__Group__0__Impl"
    // InternalLTLFormula.g:11261:1: rule__RestrictedKeyStringValueAnnotation__Group__0__Impl : ( '@' ) ;
    public final void rule__RestrictedKeyStringValueAnnotation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11265:1: ( ( '@' ) )
            // InternalLTLFormula.g:11266:1: ( '@' )
            {
            // InternalLTLFormula.g:11266:1: ( '@' )
            // InternalLTLFormula.g:11267:2: '@'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedKeyStringValueAnnotation__Group__0__Impl"


    // $ANTLR start "rule__RestrictedKeyStringValueAnnotation__Group__1"
    // InternalLTLFormula.g:11276:1: rule__RestrictedKeyStringValueAnnotation__Group__1 : rule__RestrictedKeyStringValueAnnotation__Group__1__Impl rule__RestrictedKeyStringValueAnnotation__Group__2 ;
    public final void rule__RestrictedKeyStringValueAnnotation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11280:1: ( rule__RestrictedKeyStringValueAnnotation__Group__1__Impl rule__RestrictedKeyStringValueAnnotation__Group__2 )
            // InternalLTLFormula.g:11281:2: rule__RestrictedKeyStringValueAnnotation__Group__1__Impl rule__RestrictedKeyStringValueAnnotation__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_86);
            rule__RestrictedKeyStringValueAnnotation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedKeyStringValueAnnotation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedKeyStringValueAnnotation__Group__1"


    // $ANTLR start "rule__RestrictedKeyStringValueAnnotation__Group__1__Impl"
    // InternalLTLFormula.g:11288:1: rule__RestrictedKeyStringValueAnnotation__Group__1__Impl : ( ( rule__RestrictedKeyStringValueAnnotation__NameAssignment_1 ) ) ;
    public final void rule__RestrictedKeyStringValueAnnotation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11292:1: ( ( ( rule__RestrictedKeyStringValueAnnotation__NameAssignment_1 ) ) )
            // InternalLTLFormula.g:11293:1: ( ( rule__RestrictedKeyStringValueAnnotation__NameAssignment_1 ) )
            {
            // InternalLTLFormula.g:11293:1: ( ( rule__RestrictedKeyStringValueAnnotation__NameAssignment_1 ) )
            // InternalLTLFormula.g:11294:2: ( rule__RestrictedKeyStringValueAnnotation__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameAssignment_1()); 
            }
            // InternalLTLFormula.g:11295:2: ( rule__RestrictedKeyStringValueAnnotation__NameAssignment_1 )
            // InternalLTLFormula.g:11295:3: rule__RestrictedKeyStringValueAnnotation__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedKeyStringValueAnnotation__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedKeyStringValueAnnotation__Group__1__Impl"


    // $ANTLR start "rule__RestrictedKeyStringValueAnnotation__Group__2"
    // InternalLTLFormula.g:11303:1: rule__RestrictedKeyStringValueAnnotation__Group__2 : rule__RestrictedKeyStringValueAnnotation__Group__2__Impl rule__RestrictedKeyStringValueAnnotation__Group__3 ;
    public final void rule__RestrictedKeyStringValueAnnotation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11307:1: ( rule__RestrictedKeyStringValueAnnotation__Group__2__Impl rule__RestrictedKeyStringValueAnnotation__Group__3 )
            // InternalLTLFormula.g:11308:2: rule__RestrictedKeyStringValueAnnotation__Group__2__Impl rule__RestrictedKeyStringValueAnnotation__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__RestrictedKeyStringValueAnnotation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedKeyStringValueAnnotation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedKeyStringValueAnnotation__Group__2"


    // $ANTLR start "rule__RestrictedKeyStringValueAnnotation__Group__2__Impl"
    // InternalLTLFormula.g:11315:1: rule__RestrictedKeyStringValueAnnotation__Group__2__Impl : ( ( rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_2 ) ) ;
    public final void rule__RestrictedKeyStringValueAnnotation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11319:1: ( ( ( rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_2 ) ) )
            // InternalLTLFormula.g:11320:1: ( ( rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_2 ) )
            {
            // InternalLTLFormula.g:11320:1: ( ( rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_2 ) )
            // InternalLTLFormula.g:11321:2: ( rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesAssignment_2()); 
            }
            // InternalLTLFormula.g:11322:2: ( rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_2 )
            // InternalLTLFormula.g:11322:3: rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedKeyStringValueAnnotation__Group__2__Impl"


    // $ANTLR start "rule__RestrictedKeyStringValueAnnotation__Group__3"
    // InternalLTLFormula.g:11330:1: rule__RestrictedKeyStringValueAnnotation__Group__3 : rule__RestrictedKeyStringValueAnnotation__Group__3__Impl ;
    public final void rule__RestrictedKeyStringValueAnnotation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11334:1: ( rule__RestrictedKeyStringValueAnnotation__Group__3__Impl )
            // InternalLTLFormula.g:11335:2: rule__RestrictedKeyStringValueAnnotation__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedKeyStringValueAnnotation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedKeyStringValueAnnotation__Group__3"


    // $ANTLR start "rule__RestrictedKeyStringValueAnnotation__Group__3__Impl"
    // InternalLTLFormula.g:11341:1: rule__RestrictedKeyStringValueAnnotation__Group__3__Impl : ( ( rule__RestrictedKeyStringValueAnnotation__Group_3__0 )* ) ;
    public final void rule__RestrictedKeyStringValueAnnotation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11345:1: ( ( ( rule__RestrictedKeyStringValueAnnotation__Group_3__0 )* ) )
            // InternalLTLFormula.g:11346:1: ( ( rule__RestrictedKeyStringValueAnnotation__Group_3__0 )* )
            {
            // InternalLTLFormula.g:11346:1: ( ( rule__RestrictedKeyStringValueAnnotation__Group_3__0 )* )
            // InternalLTLFormula.g:11347:2: ( rule__RestrictedKeyStringValueAnnotation__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getGroup_3()); 
            }
            // InternalLTLFormula.g:11348:2: ( rule__RestrictedKeyStringValueAnnotation__Group_3__0 )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==54) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // InternalLTLFormula.g:11348:3: rule__RestrictedKeyStringValueAnnotation__Group_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    rule__RestrictedKeyStringValueAnnotation__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedKeyStringValueAnnotation__Group__3__Impl"


    // $ANTLR start "rule__RestrictedKeyStringValueAnnotation__Group_3__0"
    // InternalLTLFormula.g:11357:1: rule__RestrictedKeyStringValueAnnotation__Group_3__0 : rule__RestrictedKeyStringValueAnnotation__Group_3__0__Impl rule__RestrictedKeyStringValueAnnotation__Group_3__1 ;
    public final void rule__RestrictedKeyStringValueAnnotation__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11361:1: ( rule__RestrictedKeyStringValueAnnotation__Group_3__0__Impl rule__RestrictedKeyStringValueAnnotation__Group_3__1 )
            // InternalLTLFormula.g:11362:2: rule__RestrictedKeyStringValueAnnotation__Group_3__0__Impl rule__RestrictedKeyStringValueAnnotation__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_86);
            rule__RestrictedKeyStringValueAnnotation__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedKeyStringValueAnnotation__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedKeyStringValueAnnotation__Group_3__0"


    // $ANTLR start "rule__RestrictedKeyStringValueAnnotation__Group_3__0__Impl"
    // InternalLTLFormula.g:11369:1: rule__RestrictedKeyStringValueAnnotation__Group_3__0__Impl : ( ',' ) ;
    public final void rule__RestrictedKeyStringValueAnnotation__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11373:1: ( ( ',' ) )
            // InternalLTLFormula.g:11374:1: ( ',' )
            {
            // InternalLTLFormula.g:11374:1: ( ',' )
            // InternalLTLFormula.g:11375:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedKeyStringValueAnnotation__Group_3__0__Impl"


    // $ANTLR start "rule__RestrictedKeyStringValueAnnotation__Group_3__1"
    // InternalLTLFormula.g:11384:1: rule__RestrictedKeyStringValueAnnotation__Group_3__1 : rule__RestrictedKeyStringValueAnnotation__Group_3__1__Impl ;
    public final void rule__RestrictedKeyStringValueAnnotation__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11388:1: ( rule__RestrictedKeyStringValueAnnotation__Group_3__1__Impl )
            // InternalLTLFormula.g:11389:2: rule__RestrictedKeyStringValueAnnotation__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedKeyStringValueAnnotation__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedKeyStringValueAnnotation__Group_3__1"


    // $ANTLR start "rule__RestrictedKeyStringValueAnnotation__Group_3__1__Impl"
    // InternalLTLFormula.g:11395:1: rule__RestrictedKeyStringValueAnnotation__Group_3__1__Impl : ( ( rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_3_1 ) ) ;
    public final void rule__RestrictedKeyStringValueAnnotation__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11399:1: ( ( ( rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_3_1 ) ) )
            // InternalLTLFormula.g:11400:1: ( ( rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_3_1 ) )
            {
            // InternalLTLFormula.g:11400:1: ( ( rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_3_1 ) )
            // InternalLTLFormula.g:11401:2: ( rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); 
            }
            // InternalLTLFormula.g:11402:2: ( rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_3_1 )
            // InternalLTLFormula.g:11402:3: rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedKeyStringValueAnnotation__Group_3__1__Impl"


    // $ANTLR start "rule__StringPragma__Group__0"
    // InternalLTLFormula.g:11411:1: rule__StringPragma__Group__0 : rule__StringPragma__Group__0__Impl rule__StringPragma__Group__1 ;
    public final void rule__StringPragma__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11415:1: ( rule__StringPragma__Group__0__Impl rule__StringPragma__Group__1 )
            // InternalLTLFormula.g:11416:2: rule__StringPragma__Group__0__Impl rule__StringPragma__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__StringPragma__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringPragma__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringPragma__Group__0"


    // $ANTLR start "rule__StringPragma__Group__0__Impl"
    // InternalLTLFormula.g:11423:1: rule__StringPragma__Group__0__Impl : ( '#' ) ;
    public final void rule__StringPragma__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11427:1: ( ( '#' ) )
            // InternalLTLFormula.g:11428:1: ( '#' )
            {
            // InternalLTLFormula.g:11428:1: ( '#' )
            // InternalLTLFormula.g:11429:2: '#'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0()); 
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringPragma__Group__0__Impl"


    // $ANTLR start "rule__StringPragma__Group__1"
    // InternalLTLFormula.g:11438:1: rule__StringPragma__Group__1 : rule__StringPragma__Group__1__Impl rule__StringPragma__Group__2 ;
    public final void rule__StringPragma__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11442:1: ( rule__StringPragma__Group__1__Impl rule__StringPragma__Group__2 )
            // InternalLTLFormula.g:11443:2: rule__StringPragma__Group__1__Impl rule__StringPragma__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_85);
            rule__StringPragma__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringPragma__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringPragma__Group__1"


    // $ANTLR start "rule__StringPragma__Group__1__Impl"
    // InternalLTLFormula.g:11450:1: rule__StringPragma__Group__1__Impl : ( ( rule__StringPragma__NameAssignment_1 ) ) ;
    public final void rule__StringPragma__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11454:1: ( ( ( rule__StringPragma__NameAssignment_1 ) ) )
            // InternalLTLFormula.g:11455:1: ( ( rule__StringPragma__NameAssignment_1 ) )
            {
            // InternalLTLFormula.g:11455:1: ( ( rule__StringPragma__NameAssignment_1 ) )
            // InternalLTLFormula.g:11456:2: ( rule__StringPragma__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringPragmaAccess().getNameAssignment_1()); 
            }
            // InternalLTLFormula.g:11457:2: ( rule__StringPragma__NameAssignment_1 )
            // InternalLTLFormula.g:11457:3: rule__StringPragma__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringPragma__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringPragmaAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringPragma__Group__1__Impl"


    // $ANTLR start "rule__StringPragma__Group__2"
    // InternalLTLFormula.g:11465:1: rule__StringPragma__Group__2 : rule__StringPragma__Group__2__Impl rule__StringPragma__Group__3 ;
    public final void rule__StringPragma__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11469:1: ( rule__StringPragma__Group__2__Impl rule__StringPragma__Group__3 )
            // InternalLTLFormula.g:11470:2: rule__StringPragma__Group__2__Impl rule__StringPragma__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__StringPragma__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringPragma__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringPragma__Group__2"


    // $ANTLR start "rule__StringPragma__Group__2__Impl"
    // InternalLTLFormula.g:11477:1: rule__StringPragma__Group__2__Impl : ( ( rule__StringPragma__ValuesAssignment_2 ) ) ;
    public final void rule__StringPragma__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11481:1: ( ( ( rule__StringPragma__ValuesAssignment_2 ) ) )
            // InternalLTLFormula.g:11482:1: ( ( rule__StringPragma__ValuesAssignment_2 ) )
            {
            // InternalLTLFormula.g:11482:1: ( ( rule__StringPragma__ValuesAssignment_2 ) )
            // InternalLTLFormula.g:11483:2: ( rule__StringPragma__ValuesAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringPragmaAccess().getValuesAssignment_2()); 
            }
            // InternalLTLFormula.g:11484:2: ( rule__StringPragma__ValuesAssignment_2 )
            // InternalLTLFormula.g:11484:3: rule__StringPragma__ValuesAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringPragma__ValuesAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringPragmaAccess().getValuesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringPragma__Group__2__Impl"


    // $ANTLR start "rule__StringPragma__Group__3"
    // InternalLTLFormula.g:11492:1: rule__StringPragma__Group__3 : rule__StringPragma__Group__3__Impl ;
    public final void rule__StringPragma__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11496:1: ( rule__StringPragma__Group__3__Impl )
            // InternalLTLFormula.g:11497:2: rule__StringPragma__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringPragma__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringPragma__Group__3"


    // $ANTLR start "rule__StringPragma__Group__3__Impl"
    // InternalLTLFormula.g:11503:1: rule__StringPragma__Group__3__Impl : ( ( rule__StringPragma__Group_3__0 )* ) ;
    public final void rule__StringPragma__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11507:1: ( ( ( rule__StringPragma__Group_3__0 )* ) )
            // InternalLTLFormula.g:11508:1: ( ( rule__StringPragma__Group_3__0 )* )
            {
            // InternalLTLFormula.g:11508:1: ( ( rule__StringPragma__Group_3__0 )* )
            // InternalLTLFormula.g:11509:2: ( rule__StringPragma__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringPragmaAccess().getGroup_3()); 
            }
            // InternalLTLFormula.g:11510:2: ( rule__StringPragma__Group_3__0 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==54) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalLTLFormula.g:11510:3: rule__StringPragma__Group_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    rule__StringPragma__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringPragmaAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringPragma__Group__3__Impl"


    // $ANTLR start "rule__StringPragma__Group_3__0"
    // InternalLTLFormula.g:11519:1: rule__StringPragma__Group_3__0 : rule__StringPragma__Group_3__0__Impl rule__StringPragma__Group_3__1 ;
    public final void rule__StringPragma__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11523:1: ( rule__StringPragma__Group_3__0__Impl rule__StringPragma__Group_3__1 )
            // InternalLTLFormula.g:11524:2: rule__StringPragma__Group_3__0__Impl rule__StringPragma__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_85);
            rule__StringPragma__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringPragma__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringPragma__Group_3__0"


    // $ANTLR start "rule__StringPragma__Group_3__0__Impl"
    // InternalLTLFormula.g:11531:1: rule__StringPragma__Group_3__0__Impl : ( ',' ) ;
    public final void rule__StringPragma__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11535:1: ( ( ',' ) )
            // InternalLTLFormula.g:11536:1: ( ',' )
            {
            // InternalLTLFormula.g:11536:1: ( ',' )
            // InternalLTLFormula.g:11537:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringPragma__Group_3__0__Impl"


    // $ANTLR start "rule__StringPragma__Group_3__1"
    // InternalLTLFormula.g:11546:1: rule__StringPragma__Group_3__1 : rule__StringPragma__Group_3__1__Impl ;
    public final void rule__StringPragma__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11550:1: ( rule__StringPragma__Group_3__1__Impl )
            // InternalLTLFormula.g:11551:2: rule__StringPragma__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringPragma__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringPragma__Group_3__1"


    // $ANTLR start "rule__StringPragma__Group_3__1__Impl"
    // InternalLTLFormula.g:11557:1: rule__StringPragma__Group_3__1__Impl : ( ( rule__StringPragma__ValuesAssignment_3_1 ) ) ;
    public final void rule__StringPragma__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11561:1: ( ( ( rule__StringPragma__ValuesAssignment_3_1 ) ) )
            // InternalLTLFormula.g:11562:1: ( ( rule__StringPragma__ValuesAssignment_3_1 ) )
            {
            // InternalLTLFormula.g:11562:1: ( ( rule__StringPragma__ValuesAssignment_3_1 ) )
            // InternalLTLFormula.g:11563:2: ( rule__StringPragma__ValuesAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringPragmaAccess().getValuesAssignment_3_1()); 
            }
            // InternalLTLFormula.g:11564:2: ( rule__StringPragma__ValuesAssignment_3_1 )
            // InternalLTLFormula.g:11564:3: rule__StringPragma__ValuesAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringPragma__ValuesAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringPragmaAccess().getValuesAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringPragma__Group_3__1__Impl"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group__0"
    // InternalLTLFormula.g:11573:1: rule__TypedKeyStringValueAnnotation__Group__0 : rule__TypedKeyStringValueAnnotation__Group__0__Impl rule__TypedKeyStringValueAnnotation__Group__1 ;
    public final void rule__TypedKeyStringValueAnnotation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11577:1: ( rule__TypedKeyStringValueAnnotation__Group__0__Impl rule__TypedKeyStringValueAnnotation__Group__1 )
            // InternalLTLFormula.g:11578:2: rule__TypedKeyStringValueAnnotation__Group__0__Impl rule__TypedKeyStringValueAnnotation__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__TypedKeyStringValueAnnotation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedKeyStringValueAnnotation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group__0"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group__0__Impl"
    // InternalLTLFormula.g:11585:1: rule__TypedKeyStringValueAnnotation__Group__0__Impl : ( '@' ) ;
    public final void rule__TypedKeyStringValueAnnotation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11589:1: ( ( '@' ) )
            // InternalLTLFormula.g:11590:1: ( '@' )
            {
            // InternalLTLFormula.g:11590:1: ( '@' )
            // InternalLTLFormula.g:11591:2: '@'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group__0__Impl"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group__1"
    // InternalLTLFormula.g:11600:1: rule__TypedKeyStringValueAnnotation__Group__1 : rule__TypedKeyStringValueAnnotation__Group__1__Impl rule__TypedKeyStringValueAnnotation__Group__2 ;
    public final void rule__TypedKeyStringValueAnnotation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11604:1: ( rule__TypedKeyStringValueAnnotation__Group__1__Impl rule__TypedKeyStringValueAnnotation__Group__2 )
            // InternalLTLFormula.g:11605:2: rule__TypedKeyStringValueAnnotation__Group__1__Impl rule__TypedKeyStringValueAnnotation__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__TypedKeyStringValueAnnotation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedKeyStringValueAnnotation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group__1"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group__1__Impl"
    // InternalLTLFormula.g:11612:1: rule__TypedKeyStringValueAnnotation__Group__1__Impl : ( ( rule__TypedKeyStringValueAnnotation__NameAssignment_1 ) ) ;
    public final void rule__TypedKeyStringValueAnnotation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11616:1: ( ( ( rule__TypedKeyStringValueAnnotation__NameAssignment_1 ) ) )
            // InternalLTLFormula.g:11617:1: ( ( rule__TypedKeyStringValueAnnotation__NameAssignment_1 ) )
            {
            // InternalLTLFormula.g:11617:1: ( ( rule__TypedKeyStringValueAnnotation__NameAssignment_1 ) )
            // InternalLTLFormula.g:11618:2: ( rule__TypedKeyStringValueAnnotation__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); 
            }
            // InternalLTLFormula.g:11619:2: ( rule__TypedKeyStringValueAnnotation__NameAssignment_1 )
            // InternalLTLFormula.g:11619:3: rule__TypedKeyStringValueAnnotation__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedKeyStringValueAnnotation__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group__1__Impl"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group__2"
    // InternalLTLFormula.g:11627:1: rule__TypedKeyStringValueAnnotation__Group__2 : rule__TypedKeyStringValueAnnotation__Group__2__Impl rule__TypedKeyStringValueAnnotation__Group__3 ;
    public final void rule__TypedKeyStringValueAnnotation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11631:1: ( rule__TypedKeyStringValueAnnotation__Group__2__Impl rule__TypedKeyStringValueAnnotation__Group__3 )
            // InternalLTLFormula.g:11632:2: rule__TypedKeyStringValueAnnotation__Group__2__Impl rule__TypedKeyStringValueAnnotation__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__TypedKeyStringValueAnnotation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedKeyStringValueAnnotation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group__2"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group__2__Impl"
    // InternalLTLFormula.g:11639:1: rule__TypedKeyStringValueAnnotation__Group__2__Impl : ( '[' ) ;
    public final void rule__TypedKeyStringValueAnnotation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11643:1: ( ( '[' ) )
            // InternalLTLFormula.g:11644:1: ( '[' )
            {
            // InternalLTLFormula.g:11644:1: ( '[' )
            // InternalLTLFormula.g:11645:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); 
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group__2__Impl"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group__3"
    // InternalLTLFormula.g:11654:1: rule__TypedKeyStringValueAnnotation__Group__3 : rule__TypedKeyStringValueAnnotation__Group__3__Impl rule__TypedKeyStringValueAnnotation__Group__4 ;
    public final void rule__TypedKeyStringValueAnnotation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11658:1: ( rule__TypedKeyStringValueAnnotation__Group__3__Impl rule__TypedKeyStringValueAnnotation__Group__4 )
            // InternalLTLFormula.g:11659:2: rule__TypedKeyStringValueAnnotation__Group__3__Impl rule__TypedKeyStringValueAnnotation__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_63);
            rule__TypedKeyStringValueAnnotation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedKeyStringValueAnnotation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group__3"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group__3__Impl"
    // InternalLTLFormula.g:11666:1: rule__TypedKeyStringValueAnnotation__Group__3__Impl : ( ( rule__TypedKeyStringValueAnnotation__TypeAssignment_3 ) ) ;
    public final void rule__TypedKeyStringValueAnnotation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11670:1: ( ( ( rule__TypedKeyStringValueAnnotation__TypeAssignment_3 ) ) )
            // InternalLTLFormula.g:11671:1: ( ( rule__TypedKeyStringValueAnnotation__TypeAssignment_3 ) )
            {
            // InternalLTLFormula.g:11671:1: ( ( rule__TypedKeyStringValueAnnotation__TypeAssignment_3 ) )
            // InternalLTLFormula.g:11672:2: ( rule__TypedKeyStringValueAnnotation__TypeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); 
            }
            // InternalLTLFormula.g:11673:2: ( rule__TypedKeyStringValueAnnotation__TypeAssignment_3 )
            // InternalLTLFormula.g:11673:3: rule__TypedKeyStringValueAnnotation__TypeAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedKeyStringValueAnnotation__TypeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group__3__Impl"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group__4"
    // InternalLTLFormula.g:11681:1: rule__TypedKeyStringValueAnnotation__Group__4 : rule__TypedKeyStringValueAnnotation__Group__4__Impl rule__TypedKeyStringValueAnnotation__Group__5 ;
    public final void rule__TypedKeyStringValueAnnotation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11685:1: ( rule__TypedKeyStringValueAnnotation__Group__4__Impl rule__TypedKeyStringValueAnnotation__Group__5 )
            // InternalLTLFormula.g:11686:2: rule__TypedKeyStringValueAnnotation__Group__4__Impl rule__TypedKeyStringValueAnnotation__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_85);
            rule__TypedKeyStringValueAnnotation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedKeyStringValueAnnotation__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group__4"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group__4__Impl"
    // InternalLTLFormula.g:11693:1: rule__TypedKeyStringValueAnnotation__Group__4__Impl : ( ']' ) ;
    public final void rule__TypedKeyStringValueAnnotation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11697:1: ( ( ']' ) )
            // InternalLTLFormula.g:11698:1: ( ']' )
            {
            // InternalLTLFormula.g:11698:1: ( ']' )
            // InternalLTLFormula.g:11699:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); 
            }
            match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group__4__Impl"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group__5"
    // InternalLTLFormula.g:11708:1: rule__TypedKeyStringValueAnnotation__Group__5 : rule__TypedKeyStringValueAnnotation__Group__5__Impl rule__TypedKeyStringValueAnnotation__Group__6 ;
    public final void rule__TypedKeyStringValueAnnotation__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11712:1: ( rule__TypedKeyStringValueAnnotation__Group__5__Impl rule__TypedKeyStringValueAnnotation__Group__6 )
            // InternalLTLFormula.g:11713:2: rule__TypedKeyStringValueAnnotation__Group__5__Impl rule__TypedKeyStringValueAnnotation__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__TypedKeyStringValueAnnotation__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedKeyStringValueAnnotation__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group__5"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group__5__Impl"
    // InternalLTLFormula.g:11720:1: rule__TypedKeyStringValueAnnotation__Group__5__Impl : ( ( rule__TypedKeyStringValueAnnotation__ValuesAssignment_5 ) ) ;
    public final void rule__TypedKeyStringValueAnnotation__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11724:1: ( ( ( rule__TypedKeyStringValueAnnotation__ValuesAssignment_5 ) ) )
            // InternalLTLFormula.g:11725:1: ( ( rule__TypedKeyStringValueAnnotation__ValuesAssignment_5 ) )
            {
            // InternalLTLFormula.g:11725:1: ( ( rule__TypedKeyStringValueAnnotation__ValuesAssignment_5 ) )
            // InternalLTLFormula.g:11726:2: ( rule__TypedKeyStringValueAnnotation__ValuesAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); 
            }
            // InternalLTLFormula.g:11727:2: ( rule__TypedKeyStringValueAnnotation__ValuesAssignment_5 )
            // InternalLTLFormula.g:11727:3: rule__TypedKeyStringValueAnnotation__ValuesAssignment_5
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedKeyStringValueAnnotation__ValuesAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group__5__Impl"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group__6"
    // InternalLTLFormula.g:11735:1: rule__TypedKeyStringValueAnnotation__Group__6 : rule__TypedKeyStringValueAnnotation__Group__6__Impl ;
    public final void rule__TypedKeyStringValueAnnotation__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11739:1: ( rule__TypedKeyStringValueAnnotation__Group__6__Impl )
            // InternalLTLFormula.g:11740:2: rule__TypedKeyStringValueAnnotation__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedKeyStringValueAnnotation__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group__6"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group__6__Impl"
    // InternalLTLFormula.g:11746:1: rule__TypedKeyStringValueAnnotation__Group__6__Impl : ( ( rule__TypedKeyStringValueAnnotation__Group_6__0 )* ) ;
    public final void rule__TypedKeyStringValueAnnotation__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11750:1: ( ( ( rule__TypedKeyStringValueAnnotation__Group_6__0 )* ) )
            // InternalLTLFormula.g:11751:1: ( ( rule__TypedKeyStringValueAnnotation__Group_6__0 )* )
            {
            // InternalLTLFormula.g:11751:1: ( ( rule__TypedKeyStringValueAnnotation__Group_6__0 )* )
            // InternalLTLFormula.g:11752:2: ( rule__TypedKeyStringValueAnnotation__Group_6__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6()); 
            }
            // InternalLTLFormula.g:11753:2: ( rule__TypedKeyStringValueAnnotation__Group_6__0 )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==54) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalLTLFormula.g:11753:3: rule__TypedKeyStringValueAnnotation__Group_6__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    rule__TypedKeyStringValueAnnotation__Group_6__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group__6__Impl"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group_6__0"
    // InternalLTLFormula.g:11762:1: rule__TypedKeyStringValueAnnotation__Group_6__0 : rule__TypedKeyStringValueAnnotation__Group_6__0__Impl rule__TypedKeyStringValueAnnotation__Group_6__1 ;
    public final void rule__TypedKeyStringValueAnnotation__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11766:1: ( rule__TypedKeyStringValueAnnotation__Group_6__0__Impl rule__TypedKeyStringValueAnnotation__Group_6__1 )
            // InternalLTLFormula.g:11767:2: rule__TypedKeyStringValueAnnotation__Group_6__0__Impl rule__TypedKeyStringValueAnnotation__Group_6__1
            {
            pushFollow(FollowSets000.FOLLOW_85);
            rule__TypedKeyStringValueAnnotation__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedKeyStringValueAnnotation__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group_6__0"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group_6__0__Impl"
    // InternalLTLFormula.g:11774:1: rule__TypedKeyStringValueAnnotation__Group_6__0__Impl : ( ',' ) ;
    public final void rule__TypedKeyStringValueAnnotation__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11778:1: ( ( ',' ) )
            // InternalLTLFormula.g:11779:1: ( ',' )
            {
            // InternalLTLFormula.g:11779:1: ( ',' )
            // InternalLTLFormula.g:11780:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group_6__0__Impl"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group_6__1"
    // InternalLTLFormula.g:11789:1: rule__TypedKeyStringValueAnnotation__Group_6__1 : rule__TypedKeyStringValueAnnotation__Group_6__1__Impl ;
    public final void rule__TypedKeyStringValueAnnotation__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11793:1: ( rule__TypedKeyStringValueAnnotation__Group_6__1__Impl )
            // InternalLTLFormula.g:11794:2: rule__TypedKeyStringValueAnnotation__Group_6__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedKeyStringValueAnnotation__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group_6__1"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__Group_6__1__Impl"
    // InternalLTLFormula.g:11800:1: rule__TypedKeyStringValueAnnotation__Group_6__1__Impl : ( ( rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1 ) ) ;
    public final void rule__TypedKeyStringValueAnnotation__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11804:1: ( ( ( rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1 ) ) )
            // InternalLTLFormula.g:11805:1: ( ( rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1 ) )
            {
            // InternalLTLFormula.g:11805:1: ( ( rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1 ) )
            // InternalLTLFormula.g:11806:2: ( rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); 
            }
            // InternalLTLFormula.g:11807:2: ( rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1 )
            // InternalLTLFormula.g:11807:3: rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__Group_6__1__Impl"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group__0"
    // InternalLTLFormula.g:11816:1: rule__RestrictedTypedKeyStringValueAnnotation__Group__0 : rule__RestrictedTypedKeyStringValueAnnotation__Group__0__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__1 ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11820:1: ( rule__RestrictedTypedKeyStringValueAnnotation__Group__0__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__1 )
            // InternalLTLFormula.g:11821:2: rule__RestrictedTypedKeyStringValueAnnotation__Group__0__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__RestrictedTypedKeyStringValueAnnotation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedTypedKeyStringValueAnnotation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group__0"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group__0__Impl"
    // InternalLTLFormula.g:11828:1: rule__RestrictedTypedKeyStringValueAnnotation__Group__0__Impl : ( '@' ) ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11832:1: ( ( '@' ) )
            // InternalLTLFormula.g:11833:1: ( '@' )
            {
            // InternalLTLFormula.g:11833:1: ( '@' )
            // InternalLTLFormula.g:11834:2: '@'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group__0__Impl"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group__1"
    // InternalLTLFormula.g:11843:1: rule__RestrictedTypedKeyStringValueAnnotation__Group__1 : rule__RestrictedTypedKeyStringValueAnnotation__Group__1__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__2 ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11847:1: ( rule__RestrictedTypedKeyStringValueAnnotation__Group__1__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__2 )
            // InternalLTLFormula.g:11848:2: rule__RestrictedTypedKeyStringValueAnnotation__Group__1__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__RestrictedTypedKeyStringValueAnnotation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedTypedKeyStringValueAnnotation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group__1"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group__1__Impl"
    // InternalLTLFormula.g:11855:1: rule__RestrictedTypedKeyStringValueAnnotation__Group__1__Impl : ( ( rule__RestrictedTypedKeyStringValueAnnotation__NameAssignment_1 ) ) ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11859:1: ( ( ( rule__RestrictedTypedKeyStringValueAnnotation__NameAssignment_1 ) ) )
            // InternalLTLFormula.g:11860:1: ( ( rule__RestrictedTypedKeyStringValueAnnotation__NameAssignment_1 ) )
            {
            // InternalLTLFormula.g:11860:1: ( ( rule__RestrictedTypedKeyStringValueAnnotation__NameAssignment_1 ) )
            // InternalLTLFormula.g:11861:2: ( rule__RestrictedTypedKeyStringValueAnnotation__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); 
            }
            // InternalLTLFormula.g:11862:2: ( rule__RestrictedTypedKeyStringValueAnnotation__NameAssignment_1 )
            // InternalLTLFormula.g:11862:3: rule__RestrictedTypedKeyStringValueAnnotation__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedTypedKeyStringValueAnnotation__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group__1__Impl"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group__2"
    // InternalLTLFormula.g:11870:1: rule__RestrictedTypedKeyStringValueAnnotation__Group__2 : rule__RestrictedTypedKeyStringValueAnnotation__Group__2__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__3 ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11874:1: ( rule__RestrictedTypedKeyStringValueAnnotation__Group__2__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__3 )
            // InternalLTLFormula.g:11875:2: rule__RestrictedTypedKeyStringValueAnnotation__Group__2__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__RestrictedTypedKeyStringValueAnnotation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedTypedKeyStringValueAnnotation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group__2"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group__2__Impl"
    // InternalLTLFormula.g:11882:1: rule__RestrictedTypedKeyStringValueAnnotation__Group__2__Impl : ( '[' ) ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11886:1: ( ( '[' ) )
            // InternalLTLFormula.g:11887:1: ( '[' )
            {
            // InternalLTLFormula.g:11887:1: ( '[' )
            // InternalLTLFormula.g:11888:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); 
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group__2__Impl"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group__3"
    // InternalLTLFormula.g:11897:1: rule__RestrictedTypedKeyStringValueAnnotation__Group__3 : rule__RestrictedTypedKeyStringValueAnnotation__Group__3__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__4 ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11901:1: ( rule__RestrictedTypedKeyStringValueAnnotation__Group__3__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__4 )
            // InternalLTLFormula.g:11902:2: rule__RestrictedTypedKeyStringValueAnnotation__Group__3__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_63);
            rule__RestrictedTypedKeyStringValueAnnotation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedTypedKeyStringValueAnnotation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group__3"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group__3__Impl"
    // InternalLTLFormula.g:11909:1: rule__RestrictedTypedKeyStringValueAnnotation__Group__3__Impl : ( ( rule__RestrictedTypedKeyStringValueAnnotation__TypeAssignment_3 ) ) ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11913:1: ( ( ( rule__RestrictedTypedKeyStringValueAnnotation__TypeAssignment_3 ) ) )
            // InternalLTLFormula.g:11914:1: ( ( rule__RestrictedTypedKeyStringValueAnnotation__TypeAssignment_3 ) )
            {
            // InternalLTLFormula.g:11914:1: ( ( rule__RestrictedTypedKeyStringValueAnnotation__TypeAssignment_3 ) )
            // InternalLTLFormula.g:11915:2: ( rule__RestrictedTypedKeyStringValueAnnotation__TypeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); 
            }
            // InternalLTLFormula.g:11916:2: ( rule__RestrictedTypedKeyStringValueAnnotation__TypeAssignment_3 )
            // InternalLTLFormula.g:11916:3: rule__RestrictedTypedKeyStringValueAnnotation__TypeAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedTypedKeyStringValueAnnotation__TypeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group__3__Impl"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group__4"
    // InternalLTLFormula.g:11924:1: rule__RestrictedTypedKeyStringValueAnnotation__Group__4 : rule__RestrictedTypedKeyStringValueAnnotation__Group__4__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__5 ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11928:1: ( rule__RestrictedTypedKeyStringValueAnnotation__Group__4__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__5 )
            // InternalLTLFormula.g:11929:2: rule__RestrictedTypedKeyStringValueAnnotation__Group__4__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_86);
            rule__RestrictedTypedKeyStringValueAnnotation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedTypedKeyStringValueAnnotation__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group__4"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group__4__Impl"
    // InternalLTLFormula.g:11936:1: rule__RestrictedTypedKeyStringValueAnnotation__Group__4__Impl : ( ']' ) ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11940:1: ( ( ']' ) )
            // InternalLTLFormula.g:11941:1: ( ']' )
            {
            // InternalLTLFormula.g:11941:1: ( ']' )
            // InternalLTLFormula.g:11942:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); 
            }
            match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group__4__Impl"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group__5"
    // InternalLTLFormula.g:11951:1: rule__RestrictedTypedKeyStringValueAnnotation__Group__5 : rule__RestrictedTypedKeyStringValueAnnotation__Group__5__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__6 ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11955:1: ( rule__RestrictedTypedKeyStringValueAnnotation__Group__5__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__6 )
            // InternalLTLFormula.g:11956:2: rule__RestrictedTypedKeyStringValueAnnotation__Group__5__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__RestrictedTypedKeyStringValueAnnotation__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedTypedKeyStringValueAnnotation__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group__5"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group__5__Impl"
    // InternalLTLFormula.g:11963:1: rule__RestrictedTypedKeyStringValueAnnotation__Group__5__Impl : ( ( rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_5 ) ) ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11967:1: ( ( ( rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_5 ) ) )
            // InternalLTLFormula.g:11968:1: ( ( rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_5 ) )
            {
            // InternalLTLFormula.g:11968:1: ( ( rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_5 ) )
            // InternalLTLFormula.g:11969:2: ( rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); 
            }
            // InternalLTLFormula.g:11970:2: ( rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_5 )
            // InternalLTLFormula.g:11970:3: rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_5
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group__5__Impl"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group__6"
    // InternalLTLFormula.g:11978:1: rule__RestrictedTypedKeyStringValueAnnotation__Group__6 : rule__RestrictedTypedKeyStringValueAnnotation__Group__6__Impl ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11982:1: ( rule__RestrictedTypedKeyStringValueAnnotation__Group__6__Impl )
            // InternalLTLFormula.g:11983:2: rule__RestrictedTypedKeyStringValueAnnotation__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedTypedKeyStringValueAnnotation__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group__6"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group__6__Impl"
    // InternalLTLFormula.g:11989:1: rule__RestrictedTypedKeyStringValueAnnotation__Group__6__Impl : ( ( rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0 )* ) ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:11993:1: ( ( ( rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0 )* ) )
            // InternalLTLFormula.g:11994:1: ( ( rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0 )* )
            {
            // InternalLTLFormula.g:11994:1: ( ( rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0 )* )
            // InternalLTLFormula.g:11995:2: ( rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getGroup_6()); 
            }
            // InternalLTLFormula.g:11996:2: ( rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0 )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==54) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // InternalLTLFormula.g:11996:3: rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group__6__Impl"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0"
    // InternalLTLFormula.g:12005:1: rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0 : rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1 ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12009:1: ( rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1 )
            // InternalLTLFormula.g:12010:2: rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0__Impl rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1
            {
            pushFollow(FollowSets000.FOLLOW_86);
            rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0__Impl"
    // InternalLTLFormula.g:12017:1: rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0__Impl : ( ',' ) ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12021:1: ( ( ',' ) )
            // InternalLTLFormula.g:12022:1: ( ',' )
            {
            // InternalLTLFormula.g:12022:1: ( ',' )
            // InternalLTLFormula.g:12023:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group_6__0__Impl"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1"
    // InternalLTLFormula.g:12032:1: rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1 : rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1__Impl ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12036:1: ( rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1__Impl )
            // InternalLTLFormula.g:12037:2: rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1__Impl"
    // InternalLTLFormula.g:12043:1: rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1__Impl : ( ( rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_6_1 ) ) ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12047:1: ( ( ( rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_6_1 ) ) )
            // InternalLTLFormula.g:12048:1: ( ( rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_6_1 ) )
            {
            // InternalLTLFormula.g:12048:1: ( ( rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_6_1 ) )
            // InternalLTLFormula.g:12049:2: ( rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); 
            }
            // InternalLTLFormula.g:12050:2: ( rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_6_1 )
            // InternalLTLFormula.g:12050:3: rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_6_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__Group_6__1__Impl"


    // $ANTLR start "rule__QuotedKeyStringValueAnnotation__Group__0"
    // InternalLTLFormula.g:12059:1: rule__QuotedKeyStringValueAnnotation__Group__0 : rule__QuotedKeyStringValueAnnotation__Group__0__Impl rule__QuotedKeyStringValueAnnotation__Group__1 ;
    public final void rule__QuotedKeyStringValueAnnotation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12063:1: ( rule__QuotedKeyStringValueAnnotation__Group__0__Impl rule__QuotedKeyStringValueAnnotation__Group__1 )
            // InternalLTLFormula.g:12064:2: rule__QuotedKeyStringValueAnnotation__Group__0__Impl rule__QuotedKeyStringValueAnnotation__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__QuotedKeyStringValueAnnotation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedKeyStringValueAnnotation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedKeyStringValueAnnotation__Group__0"


    // $ANTLR start "rule__QuotedKeyStringValueAnnotation__Group__0__Impl"
    // InternalLTLFormula.g:12071:1: rule__QuotedKeyStringValueAnnotation__Group__0__Impl : ( '@' ) ;
    public final void rule__QuotedKeyStringValueAnnotation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12075:1: ( ( '@' ) )
            // InternalLTLFormula.g:12076:1: ( '@' )
            {
            // InternalLTLFormula.g:12076:1: ( '@' )
            // InternalLTLFormula.g:12077:2: '@'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedKeyStringValueAnnotation__Group__0__Impl"


    // $ANTLR start "rule__QuotedKeyStringValueAnnotation__Group__1"
    // InternalLTLFormula.g:12086:1: rule__QuotedKeyStringValueAnnotation__Group__1 : rule__QuotedKeyStringValueAnnotation__Group__1__Impl rule__QuotedKeyStringValueAnnotation__Group__2 ;
    public final void rule__QuotedKeyStringValueAnnotation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12090:1: ( rule__QuotedKeyStringValueAnnotation__Group__1__Impl rule__QuotedKeyStringValueAnnotation__Group__2 )
            // InternalLTLFormula.g:12091:2: rule__QuotedKeyStringValueAnnotation__Group__1__Impl rule__QuotedKeyStringValueAnnotation__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_80);
            rule__QuotedKeyStringValueAnnotation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedKeyStringValueAnnotation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedKeyStringValueAnnotation__Group__1"


    // $ANTLR start "rule__QuotedKeyStringValueAnnotation__Group__1__Impl"
    // InternalLTLFormula.g:12098:1: rule__QuotedKeyStringValueAnnotation__Group__1__Impl : ( ( rule__QuotedKeyStringValueAnnotation__NameAssignment_1 ) ) ;
    public final void rule__QuotedKeyStringValueAnnotation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12102:1: ( ( ( rule__QuotedKeyStringValueAnnotation__NameAssignment_1 ) ) )
            // InternalLTLFormula.g:12103:1: ( ( rule__QuotedKeyStringValueAnnotation__NameAssignment_1 ) )
            {
            // InternalLTLFormula.g:12103:1: ( ( rule__QuotedKeyStringValueAnnotation__NameAssignment_1 ) )
            // InternalLTLFormula.g:12104:2: ( rule__QuotedKeyStringValueAnnotation__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameAssignment_1()); 
            }
            // InternalLTLFormula.g:12105:2: ( rule__QuotedKeyStringValueAnnotation__NameAssignment_1 )
            // InternalLTLFormula.g:12105:3: rule__QuotedKeyStringValueAnnotation__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedKeyStringValueAnnotation__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedKeyStringValueAnnotation__Group__1__Impl"


    // $ANTLR start "rule__QuotedKeyStringValueAnnotation__Group__2"
    // InternalLTLFormula.g:12113:1: rule__QuotedKeyStringValueAnnotation__Group__2 : rule__QuotedKeyStringValueAnnotation__Group__2__Impl rule__QuotedKeyStringValueAnnotation__Group__3 ;
    public final void rule__QuotedKeyStringValueAnnotation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12117:1: ( rule__QuotedKeyStringValueAnnotation__Group__2__Impl rule__QuotedKeyStringValueAnnotation__Group__3 )
            // InternalLTLFormula.g:12118:2: rule__QuotedKeyStringValueAnnotation__Group__2__Impl rule__QuotedKeyStringValueAnnotation__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__QuotedKeyStringValueAnnotation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedKeyStringValueAnnotation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedKeyStringValueAnnotation__Group__2"


    // $ANTLR start "rule__QuotedKeyStringValueAnnotation__Group__2__Impl"
    // InternalLTLFormula.g:12125:1: rule__QuotedKeyStringValueAnnotation__Group__2__Impl : ( ( rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2 ) ) ;
    public final void rule__QuotedKeyStringValueAnnotation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12129:1: ( ( ( rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2 ) ) )
            // InternalLTLFormula.g:12130:1: ( ( rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2 ) )
            {
            // InternalLTLFormula.g:12130:1: ( ( rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2 ) )
            // InternalLTLFormula.g:12131:2: ( rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesAssignment_2()); 
            }
            // InternalLTLFormula.g:12132:2: ( rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2 )
            // InternalLTLFormula.g:12132:3: rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedKeyStringValueAnnotation__Group__2__Impl"


    // $ANTLR start "rule__QuotedKeyStringValueAnnotation__Group__3"
    // InternalLTLFormula.g:12140:1: rule__QuotedKeyStringValueAnnotation__Group__3 : rule__QuotedKeyStringValueAnnotation__Group__3__Impl ;
    public final void rule__QuotedKeyStringValueAnnotation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12144:1: ( rule__QuotedKeyStringValueAnnotation__Group__3__Impl )
            // InternalLTLFormula.g:12145:2: rule__QuotedKeyStringValueAnnotation__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedKeyStringValueAnnotation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedKeyStringValueAnnotation__Group__3"


    // $ANTLR start "rule__QuotedKeyStringValueAnnotation__Group__3__Impl"
    // InternalLTLFormula.g:12151:1: rule__QuotedKeyStringValueAnnotation__Group__3__Impl : ( ( rule__QuotedKeyStringValueAnnotation__Group_3__0 )* ) ;
    public final void rule__QuotedKeyStringValueAnnotation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12155:1: ( ( ( rule__QuotedKeyStringValueAnnotation__Group_3__0 )* ) )
            // InternalLTLFormula.g:12156:1: ( ( rule__QuotedKeyStringValueAnnotation__Group_3__0 )* )
            {
            // InternalLTLFormula.g:12156:1: ( ( rule__QuotedKeyStringValueAnnotation__Group_3__0 )* )
            // InternalLTLFormula.g:12157:2: ( rule__QuotedKeyStringValueAnnotation__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getGroup_3()); 
            }
            // InternalLTLFormula.g:12158:2: ( rule__QuotedKeyStringValueAnnotation__Group_3__0 )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==54) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalLTLFormula.g:12158:3: rule__QuotedKeyStringValueAnnotation__Group_3__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    rule__QuotedKeyStringValueAnnotation__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedKeyStringValueAnnotation__Group__3__Impl"


    // $ANTLR start "rule__QuotedKeyStringValueAnnotation__Group_3__0"
    // InternalLTLFormula.g:12167:1: rule__QuotedKeyStringValueAnnotation__Group_3__0 : rule__QuotedKeyStringValueAnnotation__Group_3__0__Impl rule__QuotedKeyStringValueAnnotation__Group_3__1 ;
    public final void rule__QuotedKeyStringValueAnnotation__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12171:1: ( rule__QuotedKeyStringValueAnnotation__Group_3__0__Impl rule__QuotedKeyStringValueAnnotation__Group_3__1 )
            // InternalLTLFormula.g:12172:2: rule__QuotedKeyStringValueAnnotation__Group_3__0__Impl rule__QuotedKeyStringValueAnnotation__Group_3__1
            {
            pushFollow(FollowSets000.FOLLOW_80);
            rule__QuotedKeyStringValueAnnotation__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedKeyStringValueAnnotation__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedKeyStringValueAnnotation__Group_3__0"


    // $ANTLR start "rule__QuotedKeyStringValueAnnotation__Group_3__0__Impl"
    // InternalLTLFormula.g:12179:1: rule__QuotedKeyStringValueAnnotation__Group_3__0__Impl : ( ',' ) ;
    public final void rule__QuotedKeyStringValueAnnotation__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12183:1: ( ( ',' ) )
            // InternalLTLFormula.g:12184:1: ( ',' )
            {
            // InternalLTLFormula.g:12184:1: ( ',' )
            // InternalLTLFormula.g:12185:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedKeyStringValueAnnotation__Group_3__0__Impl"


    // $ANTLR start "rule__QuotedKeyStringValueAnnotation__Group_3__1"
    // InternalLTLFormula.g:12194:1: rule__QuotedKeyStringValueAnnotation__Group_3__1 : rule__QuotedKeyStringValueAnnotation__Group_3__1__Impl ;
    public final void rule__QuotedKeyStringValueAnnotation__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12198:1: ( rule__QuotedKeyStringValueAnnotation__Group_3__1__Impl )
            // InternalLTLFormula.g:12199:2: rule__QuotedKeyStringValueAnnotation__Group_3__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedKeyStringValueAnnotation__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedKeyStringValueAnnotation__Group_3__1"


    // $ANTLR start "rule__QuotedKeyStringValueAnnotation__Group_3__1__Impl"
    // InternalLTLFormula.g:12205:1: rule__QuotedKeyStringValueAnnotation__Group_3__1__Impl : ( ( rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1 ) ) ;
    public final void rule__QuotedKeyStringValueAnnotation__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12209:1: ( ( ( rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1 ) ) )
            // InternalLTLFormula.g:12210:1: ( ( rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1 ) )
            {
            // InternalLTLFormula.g:12210:1: ( ( rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1 ) )
            // InternalLTLFormula.g:12211:2: ( rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); 
            }
            // InternalLTLFormula.g:12212:2: ( rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1 )
            // InternalLTLFormula.g:12212:3: rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedKeyStringValueAnnotation__Group_3__1__Impl"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group__0"
    // InternalLTLFormula.g:12221:1: rule__QuotedTypedKeyStringValueAnnotation__Group__0 : rule__QuotedTypedKeyStringValueAnnotation__Group__0__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__1 ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12225:1: ( rule__QuotedTypedKeyStringValueAnnotation__Group__0__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__1 )
            // InternalLTLFormula.g:12226:2: rule__QuotedTypedKeyStringValueAnnotation__Group__0__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__QuotedTypedKeyStringValueAnnotation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedTypedKeyStringValueAnnotation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group__0"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group__0__Impl"
    // InternalLTLFormula.g:12233:1: rule__QuotedTypedKeyStringValueAnnotation__Group__0__Impl : ( '@' ) ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12237:1: ( ( '@' ) )
            // InternalLTLFormula.g:12238:1: ( '@' )
            {
            // InternalLTLFormula.g:12238:1: ( '@' )
            // InternalLTLFormula.g:12239:2: '@'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); 
            }
            match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group__0__Impl"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group__1"
    // InternalLTLFormula.g:12248:1: rule__QuotedTypedKeyStringValueAnnotation__Group__1 : rule__QuotedTypedKeyStringValueAnnotation__Group__1__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__2 ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12252:1: ( rule__QuotedTypedKeyStringValueAnnotation__Group__1__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__2 )
            // InternalLTLFormula.g:12253:2: rule__QuotedTypedKeyStringValueAnnotation__Group__1__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_82);
            rule__QuotedTypedKeyStringValueAnnotation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedTypedKeyStringValueAnnotation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group__1"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group__1__Impl"
    // InternalLTLFormula.g:12260:1: rule__QuotedTypedKeyStringValueAnnotation__Group__1__Impl : ( ( rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1 ) ) ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12264:1: ( ( ( rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1 ) ) )
            // InternalLTLFormula.g:12265:1: ( ( rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1 ) )
            {
            // InternalLTLFormula.g:12265:1: ( ( rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1 ) )
            // InternalLTLFormula.g:12266:2: ( rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); 
            }
            // InternalLTLFormula.g:12267:2: ( rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1 )
            // InternalLTLFormula.g:12267:3: rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group__1__Impl"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group__2"
    // InternalLTLFormula.g:12275:1: rule__QuotedTypedKeyStringValueAnnotation__Group__2 : rule__QuotedTypedKeyStringValueAnnotation__Group__2__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__3 ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12279:1: ( rule__QuotedTypedKeyStringValueAnnotation__Group__2__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__3 )
            // InternalLTLFormula.g:12280:2: rule__QuotedTypedKeyStringValueAnnotation__Group__2__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__QuotedTypedKeyStringValueAnnotation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedTypedKeyStringValueAnnotation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group__2"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group__2__Impl"
    // InternalLTLFormula.g:12287:1: rule__QuotedTypedKeyStringValueAnnotation__Group__2__Impl : ( '[' ) ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12291:1: ( ( '[' ) )
            // InternalLTLFormula.g:12292:1: ( '[' )
            {
            // InternalLTLFormula.g:12292:1: ( '[' )
            // InternalLTLFormula.g:12293:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); 
            }
            match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group__2__Impl"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group__3"
    // InternalLTLFormula.g:12302:1: rule__QuotedTypedKeyStringValueAnnotation__Group__3 : rule__QuotedTypedKeyStringValueAnnotation__Group__3__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__4 ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12306:1: ( rule__QuotedTypedKeyStringValueAnnotation__Group__3__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__4 )
            // InternalLTLFormula.g:12307:2: rule__QuotedTypedKeyStringValueAnnotation__Group__3__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_63);
            rule__QuotedTypedKeyStringValueAnnotation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedTypedKeyStringValueAnnotation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group__3"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group__3__Impl"
    // InternalLTLFormula.g:12314:1: rule__QuotedTypedKeyStringValueAnnotation__Group__3__Impl : ( ( rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3 ) ) ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12318:1: ( ( ( rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3 ) ) )
            // InternalLTLFormula.g:12319:1: ( ( rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3 ) )
            {
            // InternalLTLFormula.g:12319:1: ( ( rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3 ) )
            // InternalLTLFormula.g:12320:2: ( rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); 
            }
            // InternalLTLFormula.g:12321:2: ( rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3 )
            // InternalLTLFormula.g:12321:3: rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group__3__Impl"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group__4"
    // InternalLTLFormula.g:12329:1: rule__QuotedTypedKeyStringValueAnnotation__Group__4 : rule__QuotedTypedKeyStringValueAnnotation__Group__4__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__5 ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12333:1: ( rule__QuotedTypedKeyStringValueAnnotation__Group__4__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__5 )
            // InternalLTLFormula.g:12334:2: rule__QuotedTypedKeyStringValueAnnotation__Group__4__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_80);
            rule__QuotedTypedKeyStringValueAnnotation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedTypedKeyStringValueAnnotation__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group__4"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group__4__Impl"
    // InternalLTLFormula.g:12341:1: rule__QuotedTypedKeyStringValueAnnotation__Group__4__Impl : ( ']' ) ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12345:1: ( ( ']' ) )
            // InternalLTLFormula.g:12346:1: ( ']' )
            {
            // InternalLTLFormula.g:12346:1: ( ']' )
            // InternalLTLFormula.g:12347:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); 
            }
            match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group__4__Impl"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group__5"
    // InternalLTLFormula.g:12356:1: rule__QuotedTypedKeyStringValueAnnotation__Group__5 : rule__QuotedTypedKeyStringValueAnnotation__Group__5__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__6 ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12360:1: ( rule__QuotedTypedKeyStringValueAnnotation__Group__5__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__6 )
            // InternalLTLFormula.g:12361:2: rule__QuotedTypedKeyStringValueAnnotation__Group__5__Impl rule__QuotedTypedKeyStringValueAnnotation__Group__6
            {
            pushFollow(FollowSets000.FOLLOW_75);
            rule__QuotedTypedKeyStringValueAnnotation__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedTypedKeyStringValueAnnotation__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group__5"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group__5__Impl"
    // InternalLTLFormula.g:12368:1: rule__QuotedTypedKeyStringValueAnnotation__Group__5__Impl : ( ( rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5 ) ) ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12372:1: ( ( ( rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5 ) ) )
            // InternalLTLFormula.g:12373:1: ( ( rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5 ) )
            {
            // InternalLTLFormula.g:12373:1: ( ( rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5 ) )
            // InternalLTLFormula.g:12374:2: ( rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); 
            }
            // InternalLTLFormula.g:12375:2: ( rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5 )
            // InternalLTLFormula.g:12375:3: rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group__5__Impl"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group__6"
    // InternalLTLFormula.g:12383:1: rule__QuotedTypedKeyStringValueAnnotation__Group__6 : rule__QuotedTypedKeyStringValueAnnotation__Group__6__Impl ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12387:1: ( rule__QuotedTypedKeyStringValueAnnotation__Group__6__Impl )
            // InternalLTLFormula.g:12388:2: rule__QuotedTypedKeyStringValueAnnotation__Group__6__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedTypedKeyStringValueAnnotation__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group__6"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group__6__Impl"
    // InternalLTLFormula.g:12394:1: rule__QuotedTypedKeyStringValueAnnotation__Group__6__Impl : ( ( rule__QuotedTypedKeyStringValueAnnotation__Group_6__0 )* ) ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12398:1: ( ( ( rule__QuotedTypedKeyStringValueAnnotation__Group_6__0 )* ) )
            // InternalLTLFormula.g:12399:1: ( ( rule__QuotedTypedKeyStringValueAnnotation__Group_6__0 )* )
            {
            // InternalLTLFormula.g:12399:1: ( ( rule__QuotedTypedKeyStringValueAnnotation__Group_6__0 )* )
            // InternalLTLFormula.g:12400:2: ( rule__QuotedTypedKeyStringValueAnnotation__Group_6__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getGroup_6()); 
            }
            // InternalLTLFormula.g:12401:2: ( rule__QuotedTypedKeyStringValueAnnotation__Group_6__0 )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==54) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalLTLFormula.g:12401:3: rule__QuotedTypedKeyStringValueAnnotation__Group_6__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    rule__QuotedTypedKeyStringValueAnnotation__Group_6__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group__6__Impl"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group_6__0"
    // InternalLTLFormula.g:12410:1: rule__QuotedTypedKeyStringValueAnnotation__Group_6__0 : rule__QuotedTypedKeyStringValueAnnotation__Group_6__0__Impl rule__QuotedTypedKeyStringValueAnnotation__Group_6__1 ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12414:1: ( rule__QuotedTypedKeyStringValueAnnotation__Group_6__0__Impl rule__QuotedTypedKeyStringValueAnnotation__Group_6__1 )
            // InternalLTLFormula.g:12415:2: rule__QuotedTypedKeyStringValueAnnotation__Group_6__0__Impl rule__QuotedTypedKeyStringValueAnnotation__Group_6__1
            {
            pushFollow(FollowSets000.FOLLOW_80);
            rule__QuotedTypedKeyStringValueAnnotation__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedTypedKeyStringValueAnnotation__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group_6__0"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group_6__0__Impl"
    // InternalLTLFormula.g:12422:1: rule__QuotedTypedKeyStringValueAnnotation__Group_6__0__Impl : ( ',' ) ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12426:1: ( ( ',' ) )
            // InternalLTLFormula.g:12427:1: ( ',' )
            {
            // InternalLTLFormula.g:12427:1: ( ',' )
            // InternalLTLFormula.g:12428:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); 
            }
            match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group_6__0__Impl"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group_6__1"
    // InternalLTLFormula.g:12437:1: rule__QuotedTypedKeyStringValueAnnotation__Group_6__1 : rule__QuotedTypedKeyStringValueAnnotation__Group_6__1__Impl ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12441:1: ( rule__QuotedTypedKeyStringValueAnnotation__Group_6__1__Impl )
            // InternalLTLFormula.g:12442:2: rule__QuotedTypedKeyStringValueAnnotation__Group_6__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedTypedKeyStringValueAnnotation__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group_6__1"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__Group_6__1__Impl"
    // InternalLTLFormula.g:12448:1: rule__QuotedTypedKeyStringValueAnnotation__Group_6__1__Impl : ( ( rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1 ) ) ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12452:1: ( ( ( rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1 ) ) )
            // InternalLTLFormula.g:12453:1: ( ( rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1 ) )
            {
            // InternalLTLFormula.g:12453:1: ( ( rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1 ) )
            // InternalLTLFormula.g:12454:2: ( rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); 
            }
            // InternalLTLFormula.g:12455:2: ( rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1 )
            // InternalLTLFormula.g:12455:3: rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__Group_6__1__Impl"


    // $ANTLR start "rule__ExtendedID__Group__0"
    // InternalLTLFormula.g:12464:1: rule__ExtendedID__Group__0 : rule__ExtendedID__Group__0__Impl rule__ExtendedID__Group__1 ;
    public final void rule__ExtendedID__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12468:1: ( rule__ExtendedID__Group__0__Impl rule__ExtendedID__Group__1 )
            // InternalLTLFormula.g:12469:2: rule__ExtendedID__Group__0__Impl rule__ExtendedID__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_87);
            rule__ExtendedID__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtendedID__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtendedID__Group__0"


    // $ANTLR start "rule__ExtendedID__Group__0__Impl"
    // InternalLTLFormula.g:12476:1: rule__ExtendedID__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__ExtendedID__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12480:1: ( ( RULE_ID ) )
            // InternalLTLFormula.g:12481:1: ( RULE_ID )
            {
            // InternalLTLFormula.g:12481:1: ( RULE_ID )
            // InternalLTLFormula.g:12482:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtendedID__Group__0__Impl"


    // $ANTLR start "rule__ExtendedID__Group__1"
    // InternalLTLFormula.g:12491:1: rule__ExtendedID__Group__1 : rule__ExtendedID__Group__1__Impl rule__ExtendedID__Group__2 ;
    public final void rule__ExtendedID__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12495:1: ( rule__ExtendedID__Group__1__Impl rule__ExtendedID__Group__2 )
            // InternalLTLFormula.g:12496:2: rule__ExtendedID__Group__1__Impl rule__ExtendedID__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_87);
            rule__ExtendedID__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtendedID__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtendedID__Group__1"


    // $ANTLR start "rule__ExtendedID__Group__1__Impl"
    // InternalLTLFormula.g:12503:1: rule__ExtendedID__Group__1__Impl : ( ( rule__ExtendedID__Group_1__0 )* ) ;
    public final void rule__ExtendedID__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12507:1: ( ( ( rule__ExtendedID__Group_1__0 )* ) )
            // InternalLTLFormula.g:12508:1: ( ( rule__ExtendedID__Group_1__0 )* )
            {
            // InternalLTLFormula.g:12508:1: ( ( rule__ExtendedID__Group_1__0 )* )
            // InternalLTLFormula.g:12509:2: ( rule__ExtendedID__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtendedIDAccess().getGroup_1()); 
            }
            // InternalLTLFormula.g:12510:2: ( rule__ExtendedID__Group_1__0 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==28) ) {
                    int LA93_2 = input.LA(2);

                    if ( (LA93_2==RULE_ID) ) {
                        alt93=1;
                    }


                }
                else if ( (LA93_0==43) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalLTLFormula.g:12510:3: rule__ExtendedID__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_88);
            	    rule__ExtendedID__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtendedIDAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtendedID__Group__1__Impl"


    // $ANTLR start "rule__ExtendedID__Group__2"
    // InternalLTLFormula.g:12518:1: rule__ExtendedID__Group__2 : rule__ExtendedID__Group__2__Impl ;
    public final void rule__ExtendedID__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12522:1: ( rule__ExtendedID__Group__2__Impl )
            // InternalLTLFormula.g:12523:2: rule__ExtendedID__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtendedID__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtendedID__Group__2"


    // $ANTLR start "rule__ExtendedID__Group__2__Impl"
    // InternalLTLFormula.g:12529:1: rule__ExtendedID__Group__2__Impl : ( ( rule__ExtendedID__Group_2__0 )? ) ;
    public final void rule__ExtendedID__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12533:1: ( ( ( rule__ExtendedID__Group_2__0 )? ) )
            // InternalLTLFormula.g:12534:1: ( ( rule__ExtendedID__Group_2__0 )? )
            {
            // InternalLTLFormula.g:12534:1: ( ( rule__ExtendedID__Group_2__0 )? )
            // InternalLTLFormula.g:12535:2: ( rule__ExtendedID__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtendedIDAccess().getGroup_2()); 
            }
            // InternalLTLFormula.g:12536:2: ( rule__ExtendedID__Group_2__0 )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==65) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalLTLFormula.g:12536:3: rule__ExtendedID__Group_2__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExtendedID__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtendedIDAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtendedID__Group__2__Impl"


    // $ANTLR start "rule__ExtendedID__Group_1__0"
    // InternalLTLFormula.g:12545:1: rule__ExtendedID__Group_1__0 : rule__ExtendedID__Group_1__0__Impl rule__ExtendedID__Group_1__1 ;
    public final void rule__ExtendedID__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12549:1: ( rule__ExtendedID__Group_1__0__Impl rule__ExtendedID__Group_1__1 )
            // InternalLTLFormula.g:12550:2: rule__ExtendedID__Group_1__0__Impl rule__ExtendedID__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_57);
            rule__ExtendedID__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtendedID__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtendedID__Group_1__0"


    // $ANTLR start "rule__ExtendedID__Group_1__0__Impl"
    // InternalLTLFormula.g:12557:1: rule__ExtendedID__Group_1__0__Impl : ( ( rule__ExtendedID__Alternatives_1_0 ) ) ;
    public final void rule__ExtendedID__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12561:1: ( ( ( rule__ExtendedID__Alternatives_1_0 ) ) )
            // InternalLTLFormula.g:12562:1: ( ( rule__ExtendedID__Alternatives_1_0 ) )
            {
            // InternalLTLFormula.g:12562:1: ( ( rule__ExtendedID__Alternatives_1_0 ) )
            // InternalLTLFormula.g:12563:2: ( rule__ExtendedID__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtendedIDAccess().getAlternatives_1_0()); 
            }
            // InternalLTLFormula.g:12564:2: ( rule__ExtendedID__Alternatives_1_0 )
            // InternalLTLFormula.g:12564:3: rule__ExtendedID__Alternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtendedID__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtendedIDAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtendedID__Group_1__0__Impl"


    // $ANTLR start "rule__ExtendedID__Group_1__1"
    // InternalLTLFormula.g:12572:1: rule__ExtendedID__Group_1__1 : rule__ExtendedID__Group_1__1__Impl ;
    public final void rule__ExtendedID__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12576:1: ( rule__ExtendedID__Group_1__1__Impl )
            // InternalLTLFormula.g:12577:2: rule__ExtendedID__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtendedID__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtendedID__Group_1__1"


    // $ANTLR start "rule__ExtendedID__Group_1__1__Impl"
    // InternalLTLFormula.g:12583:1: rule__ExtendedID__Group_1__1__Impl : ( RULE_ID ) ;
    public final void rule__ExtendedID__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12587:1: ( ( RULE_ID ) )
            // InternalLTLFormula.g:12588:1: ( RULE_ID )
            {
            // InternalLTLFormula.g:12588:1: ( RULE_ID )
            // InternalLTLFormula.g:12589:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtendedID__Group_1__1__Impl"


    // $ANTLR start "rule__ExtendedID__Group_2__0"
    // InternalLTLFormula.g:12599:1: rule__ExtendedID__Group_2__0 : rule__ExtendedID__Group_2__0__Impl rule__ExtendedID__Group_2__1 ;
    public final void rule__ExtendedID__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12603:1: ( rule__ExtendedID__Group_2__0__Impl rule__ExtendedID__Group_2__1 )
            // InternalLTLFormula.g:12604:2: rule__ExtendedID__Group_2__0__Impl rule__ExtendedID__Group_2__1
            {
            pushFollow(FollowSets000.FOLLOW_64);
            rule__ExtendedID__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtendedID__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtendedID__Group_2__0"


    // $ANTLR start "rule__ExtendedID__Group_2__0__Impl"
    // InternalLTLFormula.g:12611:1: rule__ExtendedID__Group_2__0__Impl : ( '#' ) ;
    public final void rule__ExtendedID__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12615:1: ( ( '#' ) )
            // InternalLTLFormula.g:12616:1: ( '#' )
            {
            // InternalLTLFormula.g:12616:1: ( '#' )
            // InternalLTLFormula.g:12617:2: '#'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0()); 
            }
            match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtendedID__Group_2__0__Impl"


    // $ANTLR start "rule__ExtendedID__Group_2__1"
    // InternalLTLFormula.g:12626:1: rule__ExtendedID__Group_2__1 : rule__ExtendedID__Group_2__1__Impl ;
    public final void rule__ExtendedID__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12630:1: ( rule__ExtendedID__Group_2__1__Impl )
            // InternalLTLFormula.g:12631:2: rule__ExtendedID__Group_2__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExtendedID__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtendedID__Group_2__1"


    // $ANTLR start "rule__ExtendedID__Group_2__1__Impl"
    // InternalLTLFormula.g:12637:1: rule__ExtendedID__Group_2__1__Impl : ( RULE_INT ) ;
    public final void rule__ExtendedID__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12641:1: ( ( RULE_INT ) )
            // InternalLTLFormula.g:12642:1: ( RULE_INT )
            {
            // InternalLTLFormula.g:12642:1: ( RULE_INT )
            // InternalLTLFormula.g:12643:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExtendedID__Group_2__1__Impl"


    // $ANTLR start "rule__Integer__Group__0"
    // InternalLTLFormula.g:12653:1: rule__Integer__Group__0 : rule__Integer__Group__0__Impl rule__Integer__Group__1 ;
    public final void rule__Integer__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12657:1: ( rule__Integer__Group__0__Impl rule__Integer__Group__1 )
            // InternalLTLFormula.g:12658:2: rule__Integer__Group__0__Impl rule__Integer__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_89);
            rule__Integer__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0"


    // $ANTLR start "rule__Integer__Group__0__Impl"
    // InternalLTLFormula.g:12665:1: rule__Integer__Group__0__Impl : ( ( '-' )? ) ;
    public final void rule__Integer__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12669:1: ( ( ( '-' )? ) )
            // InternalLTLFormula.g:12670:1: ( ( '-' )? )
            {
            // InternalLTLFormula.g:12670:1: ( ( '-' )? )
            // InternalLTLFormula.g:12671:2: ( '-' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); 
            }
            // InternalLTLFormula.g:12672:2: ( '-' )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==28) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalLTLFormula.g:12672:3: '-'
                    {
                    match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0__Impl"


    // $ANTLR start "rule__Integer__Group__1"
    // InternalLTLFormula.g:12680:1: rule__Integer__Group__1 : rule__Integer__Group__1__Impl ;
    public final void rule__Integer__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12684:1: ( rule__Integer__Group__1__Impl )
            // InternalLTLFormula.g:12685:2: rule__Integer__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1"


    // $ANTLR start "rule__Integer__Group__1__Impl"
    // InternalLTLFormula.g:12691:1: rule__Integer__Group__1__Impl : ( RULE_INT ) ;
    public final void rule__Integer__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12695:1: ( ( RULE_INT ) )
            // InternalLTLFormula.g:12696:1: ( RULE_INT )
            {
            // InternalLTLFormula.g:12696:1: ( RULE_INT )
            // InternalLTLFormula.g:12697:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1__Impl"


    // $ANTLR start "rule__Floateger__Group__0"
    // InternalLTLFormula.g:12707:1: rule__Floateger__Group__0 : rule__Floateger__Group__0__Impl rule__Floateger__Group__1 ;
    public final void rule__Floateger__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12711:1: ( rule__Floateger__Group__0__Impl rule__Floateger__Group__1 )
            // InternalLTLFormula.g:12712:2: rule__Floateger__Group__0__Impl rule__Floateger__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_85);
            rule__Floateger__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Floateger__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Floateger__Group__0"


    // $ANTLR start "rule__Floateger__Group__0__Impl"
    // InternalLTLFormula.g:12719:1: rule__Floateger__Group__0__Impl : ( ( '-' )? ) ;
    public final void rule__Floateger__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12723:1: ( ( ( '-' )? ) )
            // InternalLTLFormula.g:12724:1: ( ( '-' )? )
            {
            // InternalLTLFormula.g:12724:1: ( ( '-' )? )
            // InternalLTLFormula.g:12725:2: ( '-' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0()); 
            }
            // InternalLTLFormula.g:12726:2: ( '-' )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==28) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalLTLFormula.g:12726:3: '-'
                    {
                    match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Floateger__Group__0__Impl"


    // $ANTLR start "rule__Floateger__Group__1"
    // InternalLTLFormula.g:12734:1: rule__Floateger__Group__1 : rule__Floateger__Group__1__Impl ;
    public final void rule__Floateger__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12738:1: ( rule__Floateger__Group__1__Impl )
            // InternalLTLFormula.g:12739:2: rule__Floateger__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Floateger__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Floateger__Group__1"


    // $ANTLR start "rule__Floateger__Group__1__Impl"
    // InternalLTLFormula.g:12745:1: rule__Floateger__Group__1__Impl : ( RULE_FLOAT ) ;
    public final void rule__Floateger__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12749:1: ( ( RULE_FLOAT ) )
            // InternalLTLFormula.g:12750:1: ( RULE_FLOAT )
            {
            // InternalLTLFormula.g:12750:1: ( RULE_FLOAT )
            // InternalLTLFormula.g:12751:2: RULE_FLOAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1()); 
            }
            match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Floateger__Group__1__Impl"


    // $ANTLR start "rule__LTLExpression__OperatorAssignment_0_1"
    // InternalLTLFormula.g:12761:1: rule__LTLExpression__OperatorAssignment_0_1 : ( ( rule__LTLExpression__OperatorAlternatives_0_1_0 ) ) ;
    public final void rule__LTLExpression__OperatorAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12765:1: ( ( ( rule__LTLExpression__OperatorAlternatives_0_1_0 ) ) )
            // InternalLTLFormula.g:12766:2: ( ( rule__LTLExpression__OperatorAlternatives_0_1_0 ) )
            {
            // InternalLTLFormula.g:12766:2: ( ( rule__LTLExpression__OperatorAlternatives_0_1_0 ) )
            // InternalLTLFormula.g:12767:3: ( rule__LTLExpression__OperatorAlternatives_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getOperatorAlternatives_0_1_0()); 
            }
            // InternalLTLFormula.g:12768:3: ( rule__LTLExpression__OperatorAlternatives_0_1_0 )
            // InternalLTLFormula.g:12768:4: rule__LTLExpression__OperatorAlternatives_0_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LTLExpression__OperatorAlternatives_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getOperatorAlternatives_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__OperatorAssignment_0_1"


    // $ANTLR start "rule__LTLExpression__SubExpressionsAssignment_0_3"
    // InternalLTLFormula.g:12776:1: rule__LTLExpression__SubExpressionsAssignment_0_3 : ( ruleLTLExpression ) ;
    public final void rule__LTLExpression__SubExpressionsAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12780:1: ( ( ruleLTLExpression ) )
            // InternalLTLFormula.g:12781:2: ( ruleLTLExpression )
            {
            // InternalLTLFormula.g:12781:2: ( ruleLTLExpression )
            // InternalLTLFormula.g:12782:3: ruleLTLExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getSubExpressionsLTLExpressionParserRuleCall_0_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLTLExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getSubExpressionsLTLExpressionParserRuleCall_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__SubExpressionsAssignment_0_3"


    // $ANTLR start "rule__LTLExpression__OperatorAssignment_1_1_1_0"
    // InternalLTLFormula.g:12791:1: rule__LTLExpression__OperatorAssignment_1_1_1_0 : ( ruleUntilOperator ) ;
    public final void rule__LTLExpression__OperatorAssignment_1_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12795:1: ( ( ruleUntilOperator ) )
            // InternalLTLFormula.g:12796:2: ( ruleUntilOperator )
            {
            // InternalLTLFormula.g:12796:2: ( ruleUntilOperator )
            // InternalLTLFormula.g:12797:3: ruleUntilOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getOperatorUntilOperatorEnumRuleCall_1_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUntilOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getOperatorUntilOperatorEnumRuleCall_1_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__OperatorAssignment_1_1_1_0"


    // $ANTLR start "rule__LTLExpression__SubExpressionsAssignment_1_1_1_1"
    // InternalLTLFormula.g:12806:1: rule__LTLExpression__SubExpressionsAssignment_1_1_1_1 : ( ruleBoolExpression ) ;
    public final void rule__LTLExpression__SubExpressionsAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12810:1: ( ( ruleBoolExpression ) )
            // InternalLTLFormula.g:12811:2: ( ruleBoolExpression )
            {
            // InternalLTLFormula.g:12811:2: ( ruleBoolExpression )
            // InternalLTLFormula.g:12812:3: ruleBoolExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getSubExpressionsBoolExpressionParserRuleCall_1_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getSubExpressionsBoolExpressionParserRuleCall_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__SubExpressionsAssignment_1_1_1_1"


    // $ANTLR start "rule__LTLExpression__SubExpressionsAssignment_1_1_2_2"
    // InternalLTLFormula.g:12821:1: rule__LTLExpression__SubExpressionsAssignment_1_1_2_2 : ( ruleBoolExpression ) ;
    public final void rule__LTLExpression__SubExpressionsAssignment_1_1_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12825:1: ( ( ruleBoolExpression ) )
            // InternalLTLFormula.g:12826:2: ( ruleBoolExpression )
            {
            // InternalLTLFormula.g:12826:2: ( ruleBoolExpression )
            // InternalLTLFormula.g:12827:3: ruleBoolExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTLExpressionAccess().getSubExpressionsBoolExpressionParserRuleCall_1_1_2_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTLExpressionAccess().getSubExpressionsBoolExpressionParserRuleCall_1_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTLExpression__SubExpressionsAssignment_1_1_2_2"


    // $ANTLR start "rule__LogicalOrExpression__OperatorAssignment_1_1_0"
    // InternalLTLFormula.g:12836:1: rule__LogicalOrExpression__OperatorAssignment_1_1_0 : ( ruleLogicalOrOperator ) ;
    public final void rule__LogicalOrExpression__OperatorAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12840:1: ( ( ruleLogicalOrOperator ) )
            // InternalLTLFormula.g:12841:2: ( ruleLogicalOrOperator )
            {
            // InternalLTLFormula.g:12841:2: ( ruleLogicalOrOperator )
            // InternalLTLFormula.g:12842:3: ruleLogicalOrOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLogicalOrOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__OperatorAssignment_1_1_0"


    // $ANTLR start "rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1"
    // InternalLTLFormula.g:12851:1: rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1 : ( ruleLogicalAndExpression ) ;
    public final void rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12855:1: ( ( ruleLogicalAndExpression ) )
            // InternalLTLFormula.g:12856:2: ( ruleLogicalAndExpression )
            {
            // InternalLTLFormula.g:12856:2: ( ruleLogicalAndExpression )
            // InternalLTLFormula.g:12857:3: ruleLogicalAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1"


    // $ANTLR start "rule__LogicalOrExpression__SubExpressionsAssignment_1_2_1"
    // InternalLTLFormula.g:12866:1: rule__LogicalOrExpression__SubExpressionsAssignment_1_2_1 : ( ruleLogicalAndExpression ) ;
    public final void rule__LogicalOrExpression__SubExpressionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12870:1: ( ( ruleLogicalAndExpression ) )
            // InternalLTLFormula.g:12871:2: ( ruleLogicalAndExpression )
            {
            // InternalLTLFormula.g:12871:2: ( ruleLogicalAndExpression )
            // InternalLTLFormula.g:12872:3: ruleLogicalAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalOrExpression__SubExpressionsAssignment_1_2_1"


    // $ANTLR start "rule__LogicalAndExpression__OperatorAssignment_1_1_0"
    // InternalLTLFormula.g:12881:1: rule__LogicalAndExpression__OperatorAssignment_1_1_0 : ( ruleLogicalAndOperator ) ;
    public final void rule__LogicalAndExpression__OperatorAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12885:1: ( ( ruleLogicalAndOperator ) )
            // InternalLTLFormula.g:12886:2: ( ruleLogicalAndOperator )
            {
            // InternalLTLFormula.g:12886:2: ( ruleLogicalAndOperator )
            // InternalLTLFormula.g:12887:3: ruleLogicalAndOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLogicalAndOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__OperatorAssignment_1_1_0"


    // $ANTLR start "rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1"
    // InternalLTLFormula.g:12896:1: rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1 : ( ruleBitwiseOrExpression ) ;
    public final void rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12900:1: ( ( ruleBitwiseOrExpression ) )
            // InternalLTLFormula.g:12901:2: ( ruleBitwiseOrExpression )
            {
            // InternalLTLFormula.g:12901:2: ( ruleBitwiseOrExpression )
            // InternalLTLFormula.g:12902:3: ruleBitwiseOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1"


    // $ANTLR start "rule__LogicalAndExpression__SubExpressionsAssignment_1_2_1"
    // InternalLTLFormula.g:12911:1: rule__LogicalAndExpression__SubExpressionsAssignment_1_2_1 : ( ruleBitwiseOrExpression ) ;
    public final void rule__LogicalAndExpression__SubExpressionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12915:1: ( ( ruleBitwiseOrExpression ) )
            // InternalLTLFormula.g:12916:2: ( ruleBitwiseOrExpression )
            {
            // InternalLTLFormula.g:12916:2: ( ruleBitwiseOrExpression )
            // InternalLTLFormula.g:12917:3: ruleBitwiseOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LogicalAndExpression__SubExpressionsAssignment_1_2_1"


    // $ANTLR start "rule__BitwiseOrExpression__OperatorAssignment_1_1_0"
    // InternalLTLFormula.g:12926:1: rule__BitwiseOrExpression__OperatorAssignment_1_1_0 : ( ruleBitwiseOrOperator ) ;
    public final void rule__BitwiseOrExpression__OperatorAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12930:1: ( ( ruleBitwiseOrOperator ) )
            // InternalLTLFormula.g:12931:2: ( ruleBitwiseOrOperator )
            {
            // InternalLTLFormula.g:12931:2: ( ruleBitwiseOrOperator )
            // InternalLTLFormula.g:12932:3: ruleBitwiseOrOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBitwiseOrOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__OperatorAssignment_1_1_0"


    // $ANTLR start "rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1"
    // InternalLTLFormula.g:12941:1: rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1 : ( ruleBitwiseXOrExpression ) ;
    public final void rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12945:1: ( ( ruleBitwiseXOrExpression ) )
            // InternalLTLFormula.g:12946:2: ( ruleBitwiseXOrExpression )
            {
            // InternalLTLFormula.g:12946:2: ( ruleBitwiseXOrExpression )
            // InternalLTLFormula.g:12947:3: ruleBitwiseXOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1"


    // $ANTLR start "rule__BitwiseOrExpression__SubExpressionsAssignment_1_2_1"
    // InternalLTLFormula.g:12956:1: rule__BitwiseOrExpression__SubExpressionsAssignment_1_2_1 : ( ruleBitwiseXOrExpression ) ;
    public final void rule__BitwiseOrExpression__SubExpressionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12960:1: ( ( ruleBitwiseXOrExpression ) )
            // InternalLTLFormula.g:12961:2: ( ruleBitwiseXOrExpression )
            {
            // InternalLTLFormula.g:12961:2: ( ruleBitwiseXOrExpression )
            // InternalLTLFormula.g:12962:3: ruleBitwiseXOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseOrExpression__SubExpressionsAssignment_1_2_1"


    // $ANTLR start "rule__BitwiseXOrExpression__OperatorAssignment_1_1_0"
    // InternalLTLFormula.g:12971:1: rule__BitwiseXOrExpression__OperatorAssignment_1_1_0 : ( ruleBitwiseXOrOperator ) ;
    public final void rule__BitwiseXOrExpression__OperatorAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12975:1: ( ( ruleBitwiseXOrOperator ) )
            // InternalLTLFormula.g:12976:2: ( ruleBitwiseXOrOperator )
            {
            // InternalLTLFormula.g:12976:2: ( ruleBitwiseXOrOperator )
            // InternalLTLFormula.g:12977:3: ruleBitwiseXOrOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorBitwiseXOrOperatorEnumRuleCall_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBitwiseXOrOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorBitwiseXOrOperatorEnumRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__OperatorAssignment_1_1_0"


    // $ANTLR start "rule__BitwiseXOrExpression__SubExpressionsAssignment_1_1_1"
    // InternalLTLFormula.g:12986:1: rule__BitwiseXOrExpression__SubExpressionsAssignment_1_1_1 : ( ruleBitwiseAndExpression ) ;
    public final void rule__BitwiseXOrExpression__SubExpressionsAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:12990:1: ( ( ruleBitwiseAndExpression ) )
            // InternalLTLFormula.g:12991:2: ( ruleBitwiseAndExpression )
            {
            // InternalLTLFormula.g:12991:2: ( ruleBitwiseAndExpression )
            // InternalLTLFormula.g:12992:3: ruleBitwiseAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__SubExpressionsAssignment_1_1_1"


    // $ANTLR start "rule__BitwiseXOrExpression__SubExpressionsAssignment_1_2_1"
    // InternalLTLFormula.g:13001:1: rule__BitwiseXOrExpression__SubExpressionsAssignment_1_2_1 : ( ruleBitwiseAndExpression ) ;
    public final void rule__BitwiseXOrExpression__SubExpressionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13005:1: ( ( ruleBitwiseAndExpression ) )
            // InternalLTLFormula.g:13006:2: ( ruleBitwiseAndExpression )
            {
            // InternalLTLFormula.g:13006:2: ( ruleBitwiseAndExpression )
            // InternalLTLFormula.g:13007:3: ruleBitwiseAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseXOrExpression__SubExpressionsAssignment_1_2_1"


    // $ANTLR start "rule__BitwiseAndExpression__OperatorAssignment_1_1_0"
    // InternalLTLFormula.g:13016:1: rule__BitwiseAndExpression__OperatorAssignment_1_1_0 : ( ruleBitwiseAndOperator ) ;
    public final void rule__BitwiseAndExpression__OperatorAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13020:1: ( ( ruleBitwiseAndOperator ) )
            // InternalLTLFormula.g:13021:2: ( ruleBitwiseAndOperator )
            {
            // InternalLTLFormula.g:13021:2: ( ruleBitwiseAndOperator )
            // InternalLTLFormula.g:13022:3: ruleBitwiseAndOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBitwiseAndOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__OperatorAssignment_1_1_0"


    // $ANTLR start "rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1"
    // InternalLTLFormula.g:13031:1: rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1 : ( ruleCompareOperation ) ;
    public final void rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13035:1: ( ( ruleCompareOperation ) )
            // InternalLTLFormula.g:13036:2: ( ruleCompareOperation )
            {
            // InternalLTLFormula.g:13036:2: ( ruleCompareOperation )
            // InternalLTLFormula.g:13037:3: ruleCompareOperation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCompareOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1"


    // $ANTLR start "rule__BitwiseAndExpression__SubExpressionsAssignment_1_2_1"
    // InternalLTLFormula.g:13046:1: rule__BitwiseAndExpression__SubExpressionsAssignment_1_2_1 : ( ruleCompareOperation ) ;
    public final void rule__BitwiseAndExpression__SubExpressionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13050:1: ( ( ruleCompareOperation ) )
            // InternalLTLFormula.g:13051:2: ( ruleCompareOperation )
            {
            // InternalLTLFormula.g:13051:2: ( ruleCompareOperation )
            // InternalLTLFormula.g:13052:3: ruleCompareOperation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCompareOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseAndExpression__SubExpressionsAssignment_1_2_1"


    // $ANTLR start "rule__CompareOperation__OperatorAssignment_1_1"
    // InternalLTLFormula.g:13061:1: rule__CompareOperation__OperatorAssignment_1_1 : ( ruleCompareOperator ) ;
    public final void rule__CompareOperation__OperatorAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13065:1: ( ( ruleCompareOperator ) )
            // InternalLTLFormula.g:13066:2: ( ruleCompareOperator )
            {
            // InternalLTLFormula.g:13066:2: ( ruleCompareOperator )
            // InternalLTLFormula.g:13067:3: ruleCompareOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCompareOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperation__OperatorAssignment_1_1"


    // $ANTLR start "rule__CompareOperation__SubExpressionsAssignment_1_2"
    // InternalLTLFormula.g:13076:1: rule__CompareOperation__SubExpressionsAssignment_1_2 : ( ruleNotOrValuedExpression ) ;
    public final void rule__CompareOperation__SubExpressionsAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13080:1: ( ( ruleNotOrValuedExpression ) )
            // InternalLTLFormula.g:13081:2: ( ruleNotOrValuedExpression )
            {
            // InternalLTLFormula.g:13081:2: ( ruleNotOrValuedExpression )
            // InternalLTLFormula.g:13082:3: ruleNotOrValuedExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperation__SubExpressionsAssignment_1_2"


    // $ANTLR start "rule__BitwiseNotExpression__OperatorAssignment_0_1"
    // InternalLTLFormula.g:13091:1: rule__BitwiseNotExpression__OperatorAssignment_0_1 : ( ruleBitwiseNotOperator ) ;
    public final void rule__BitwiseNotExpression__OperatorAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13095:1: ( ( ruleBitwiseNotOperator ) )
            // InternalLTLFormula.g:13096:2: ( ruleBitwiseNotOperator )
            {
            // InternalLTLFormula.g:13096:2: ( ruleBitwiseNotOperator )
            // InternalLTLFormula.g:13097:3: ruleBitwiseNotOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseNotExpressionAccess().getOperatorBitwiseNotOperatorEnumRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBitwiseNotOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseNotExpressionAccess().getOperatorBitwiseNotOperatorEnumRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseNotExpression__OperatorAssignment_0_1"


    // $ANTLR start "rule__BitwiseNotExpression__SubExpressionsAssignment_0_2"
    // InternalLTLFormula.g:13106:1: rule__BitwiseNotExpression__SubExpressionsAssignment_0_2 : ( ruleBitwiseNotExpression ) ;
    public final void rule__BitwiseNotExpression__SubExpressionsAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13110:1: ( ( ruleBitwiseNotExpression ) )
            // InternalLTLFormula.g:13111:2: ( ruleBitwiseNotExpression )
            {
            // InternalLTLFormula.g:13111:2: ( ruleBitwiseNotExpression )
            // InternalLTLFormula.g:13112:3: ruleBitwiseNotExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBitwiseNotExpressionAccess().getSubExpressionsBitwiseNotExpressionParserRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBitwiseNotExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBitwiseNotExpressionAccess().getSubExpressionsBitwiseNotExpressionParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BitwiseNotExpression__SubExpressionsAssignment_0_2"


    // $ANTLR start "rule__NotExpression__OperatorAssignment_0_1"
    // InternalLTLFormula.g:13121:1: rule__NotExpression__OperatorAssignment_0_1 : ( ruleNotOperator ) ;
    public final void rule__NotExpression__OperatorAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13125:1: ( ( ruleNotOperator ) )
            // InternalLTLFormula.g:13126:2: ( ruleNotOperator )
            {
            // InternalLTLFormula.g:13126:2: ( ruleNotOperator )
            // InternalLTLFormula.g:13127:3: ruleNotOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNotOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NotExpression__OperatorAssignment_0_1"


    // $ANTLR start "rule__NotExpression__SubExpressionsAssignment_0_2"
    // InternalLTLFormula.g:13136:1: rule__NotExpression__SubExpressionsAssignment_0_2 : ( ruleNotExpression ) ;
    public final void rule__NotExpression__SubExpressionsAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13140:1: ( ( ruleNotExpression ) )
            // InternalLTLFormula.g:13141:2: ( ruleNotExpression )
            {
            // InternalLTLFormula.g:13141:2: ( ruleNotExpression )
            // InternalLTLFormula.g:13142:3: ruleNotExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNotExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NotExpression__SubExpressionsAssignment_0_2"


    // $ANTLR start "rule__ShiftExpressions__OperatorAssignment_1_0_1"
    // InternalLTLFormula.g:13151:1: rule__ShiftExpressions__OperatorAssignment_1_0_1 : ( ruleShiftLeftOperator ) ;
    public final void rule__ShiftExpressions__OperatorAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13155:1: ( ( ruleShiftLeftOperator ) )
            // InternalLTLFormula.g:13156:2: ( ruleShiftLeftOperator )
            {
            // InternalLTLFormula.g:13156:2: ( ruleShiftLeftOperator )
            // InternalLTLFormula.g:13157:3: ruleShiftLeftOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getOperatorShiftLeftOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleShiftLeftOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getOperatorShiftLeftOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__OperatorAssignment_1_0_1"


    // $ANTLR start "rule__ShiftExpressions__SubExpressionsAssignment_1_0_2"
    // InternalLTLFormula.g:13166:1: rule__ShiftExpressions__SubExpressionsAssignment_1_0_2 : ( ruleSumExpression ) ;
    public final void rule__ShiftExpressions__SubExpressionsAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13170:1: ( ( ruleSumExpression ) )
            // InternalLTLFormula.g:13171:2: ( ruleSumExpression )
            {
            // InternalLTLFormula.g:13171:2: ( ruleSumExpression )
            // InternalLTLFormula.g:13172:3: ruleSumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__SubExpressionsAssignment_1_0_2"


    // $ANTLR start "rule__ShiftExpressions__SubExpressionsAssignment_1_0_3_1"
    // InternalLTLFormula.g:13181:1: rule__ShiftExpressions__SubExpressionsAssignment_1_0_3_1 : ( ruleSumExpression ) ;
    public final void rule__ShiftExpressions__SubExpressionsAssignment_1_0_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13185:1: ( ( ruleSumExpression ) )
            // InternalLTLFormula.g:13186:2: ( ruleSumExpression )
            {
            // InternalLTLFormula.g:13186:2: ( ruleSumExpression )
            // InternalLTLFormula.g:13187:3: ruleSumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_0_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_0_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__SubExpressionsAssignment_1_0_3_1"


    // $ANTLR start "rule__ShiftExpressions__OperatorAssignment_1_1_1"
    // InternalLTLFormula.g:13196:1: rule__ShiftExpressions__OperatorAssignment_1_1_1 : ( ruleShiftRightOperator ) ;
    public final void rule__ShiftExpressions__OperatorAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13200:1: ( ( ruleShiftRightOperator ) )
            // InternalLTLFormula.g:13201:2: ( ruleShiftRightOperator )
            {
            // InternalLTLFormula.g:13201:2: ( ruleShiftRightOperator )
            // InternalLTLFormula.g:13202:3: ruleShiftRightOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleShiftRightOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__OperatorAssignment_1_1_1"


    // $ANTLR start "rule__ShiftExpressions__SubExpressionsAssignment_1_1_2"
    // InternalLTLFormula.g:13211:1: rule__ShiftExpressions__SubExpressionsAssignment_1_1_2 : ( ruleSumExpression ) ;
    public final void rule__ShiftExpressions__SubExpressionsAssignment_1_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13215:1: ( ( ruleSumExpression ) )
            // InternalLTLFormula.g:13216:2: ( ruleSumExpression )
            {
            // InternalLTLFormula.g:13216:2: ( ruleSumExpression )
            // InternalLTLFormula.g:13217:3: ruleSumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__SubExpressionsAssignment_1_1_2"


    // $ANTLR start "rule__ShiftExpressions__SubExpressionsAssignment_1_1_3_1"
    // InternalLTLFormula.g:13226:1: rule__ShiftExpressions__SubExpressionsAssignment_1_1_3_1 : ( ruleSumExpression ) ;
    public final void rule__ShiftExpressions__SubExpressionsAssignment_1_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13230:1: ( ( ruleSumExpression ) )
            // InternalLTLFormula.g:13231:2: ( ruleSumExpression )
            {
            // InternalLTLFormula.g:13231:2: ( ruleSumExpression )
            // InternalLTLFormula.g:13232:3: ruleSumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__SubExpressionsAssignment_1_1_3_1"


    // $ANTLR start "rule__ShiftExpressions__OperatorAssignment_1_2_1"
    // InternalLTLFormula.g:13241:1: rule__ShiftExpressions__OperatorAssignment_1_2_1 : ( ruleShiftRightUnsignedOperator ) ;
    public final void rule__ShiftExpressions__OperatorAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13245:1: ( ( ruleShiftRightUnsignedOperator ) )
            // InternalLTLFormula.g:13246:2: ( ruleShiftRightUnsignedOperator )
            {
            // InternalLTLFormula.g:13246:2: ( ruleShiftRightUnsignedOperator )
            // InternalLTLFormula.g:13247:3: ruleShiftRightUnsignedOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleShiftRightUnsignedOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__OperatorAssignment_1_2_1"


    // $ANTLR start "rule__ShiftExpressions__SubExpressionsAssignment_1_2_2"
    // InternalLTLFormula.g:13256:1: rule__ShiftExpressions__SubExpressionsAssignment_1_2_2 : ( ruleSumExpression ) ;
    public final void rule__ShiftExpressions__SubExpressionsAssignment_1_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13260:1: ( ( ruleSumExpression ) )
            // InternalLTLFormula.g:13261:2: ( ruleSumExpression )
            {
            // InternalLTLFormula.g:13261:2: ( ruleSumExpression )
            // InternalLTLFormula.g:13262:3: ruleSumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__SubExpressionsAssignment_1_2_2"


    // $ANTLR start "rule__ShiftExpressions__SubExpressionsAssignment_1_2_3_1"
    // InternalLTLFormula.g:13271:1: rule__ShiftExpressions__SubExpressionsAssignment_1_2_3_1 : ( ruleSumExpression ) ;
    public final void rule__ShiftExpressions__SubExpressionsAssignment_1_2_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13275:1: ( ( ruleSumExpression ) )
            // InternalLTLFormula.g:13276:2: ( ruleSumExpression )
            {
            // InternalLTLFormula.g:13276:2: ( ruleSumExpression )
            // InternalLTLFormula.g:13277:3: ruleSumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftExpressions__SubExpressionsAssignment_1_2_3_1"


    // $ANTLR start "rule__ShiftRightExpression__OperatorAssignment_1_1_0"
    // InternalLTLFormula.g:13286:1: rule__ShiftRightExpression__OperatorAssignment_1_1_0 : ( ruleShiftRightOperator ) ;
    public final void rule__ShiftRightExpression__OperatorAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13290:1: ( ( ruleShiftRightOperator ) )
            // InternalLTLFormula.g:13291:2: ( ruleShiftRightOperator )
            {
            // InternalLTLFormula.g:13291:2: ( ruleShiftRightOperator )
            // InternalLTLFormula.g:13292:3: ruleShiftRightOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightExpressionAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleShiftRightOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightExpressionAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__OperatorAssignment_1_1_0"


    // $ANTLR start "rule__ShiftRightExpression__SubExpressionsAssignment_1_1_1"
    // InternalLTLFormula.g:13301:1: rule__ShiftRightExpression__SubExpressionsAssignment_1_1_1 : ( ruleShiftRightUnsignedExpression ) ;
    public final void rule__ShiftRightExpression__SubExpressionsAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13305:1: ( ( ruleShiftRightUnsignedExpression ) )
            // InternalLTLFormula.g:13306:2: ( ruleShiftRightUnsignedExpression )
            {
            // InternalLTLFormula.g:13306:2: ( ruleShiftRightUnsignedExpression )
            // InternalLTLFormula.g:13307:3: ruleShiftRightUnsignedExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleShiftRightUnsignedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__SubExpressionsAssignment_1_1_1"


    // $ANTLR start "rule__ShiftRightExpression__SubExpressionsAssignment_1_2_1"
    // InternalLTLFormula.g:13316:1: rule__ShiftRightExpression__SubExpressionsAssignment_1_2_1 : ( ruleShiftRightUnsignedExpression ) ;
    public final void rule__ShiftRightExpression__SubExpressionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13320:1: ( ( ruleShiftRightUnsignedExpression ) )
            // InternalLTLFormula.g:13321:2: ( ruleShiftRightUnsignedExpression )
            {
            // InternalLTLFormula.g:13321:2: ( ruleShiftRightUnsignedExpression )
            // InternalLTLFormula.g:13322:3: ruleShiftRightUnsignedExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleShiftRightUnsignedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightExpression__SubExpressionsAssignment_1_2_1"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__OperatorAssignment_1_1_0"
    // InternalLTLFormula.g:13331:1: rule__ShiftRightUnsignedExpression__OperatorAssignment_1_1_0 : ( ruleShiftRightUnsignedOperator ) ;
    public final void rule__ShiftRightUnsignedExpression__OperatorAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13335:1: ( ( ruleShiftRightUnsignedOperator ) )
            // InternalLTLFormula.g:13336:2: ( ruleShiftRightUnsignedOperator )
            {
            // InternalLTLFormula.g:13336:2: ( ruleShiftRightUnsignedOperator )
            // InternalLTLFormula.g:13337:3: ruleShiftRightUnsignedOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleShiftRightUnsignedOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__OperatorAssignment_1_1_0"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_1_1"
    // InternalLTLFormula.g:13346:1: rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_1_1 : ( ruleSumExpression ) ;
    public final void rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13350:1: ( ( ruleSumExpression ) )
            // InternalLTLFormula.g:13351:2: ( ruleSumExpression )
            {
            // InternalLTLFormula.g:13351:2: ( ruleSumExpression )
            // InternalLTLFormula.g:13352:3: ruleSumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_1_1"


    // $ANTLR start "rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_2_1"
    // InternalLTLFormula.g:13361:1: rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_2_1 : ( ruleSumExpression ) ;
    public final void rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13365:1: ( ( ruleSumExpression ) )
            // InternalLTLFormula.g:13366:2: ( ruleSumExpression )
            {
            // InternalLTLFormula.g:13366:2: ( ruleSumExpression )
            // InternalLTLFormula.g:13367:3: ruleSumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShiftRightUnsignedExpression__SubExpressionsAssignment_1_2_1"


    // $ANTLR start "rule__SumExpression__OperatorAssignment_1_0_1"
    // InternalLTLFormula.g:13376:1: rule__SumExpression__OperatorAssignment_1_0_1 : ( ruleAddOperator ) ;
    public final void rule__SumExpression__OperatorAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13380:1: ( ( ruleAddOperator ) )
            // InternalLTLFormula.g:13381:2: ( ruleAddOperator )
            {
            // InternalLTLFormula.g:13381:2: ( ruleAddOperator )
            // InternalLTLFormula.g:13382:3: ruleAddOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAddOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__OperatorAssignment_1_0_1"


    // $ANTLR start "rule__SumExpression__SubExpressionsAssignment_1_0_2"
    // InternalLTLFormula.g:13391:1: rule__SumExpression__SubExpressionsAssignment_1_0_2 : ( ruleProductExpression ) ;
    public final void rule__SumExpression__SubExpressionsAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13395:1: ( ( ruleProductExpression ) )
            // InternalLTLFormula.g:13396:2: ( ruleProductExpression )
            {
            // InternalLTLFormula.g:13396:2: ( ruleProductExpression )
            // InternalLTLFormula.g:13397:3: ruleProductExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleProductExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__SubExpressionsAssignment_1_0_2"


    // $ANTLR start "rule__SumExpression__SubExpressionsAssignment_1_0_3_1"
    // InternalLTLFormula.g:13406:1: rule__SumExpression__SubExpressionsAssignment_1_0_3_1 : ( ruleProductExpression ) ;
    public final void rule__SumExpression__SubExpressionsAssignment_1_0_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13410:1: ( ( ruleProductExpression ) )
            // InternalLTLFormula.g:13411:2: ( ruleProductExpression )
            {
            // InternalLTLFormula.g:13411:2: ( ruleProductExpression )
            // InternalLTLFormula.g:13412:3: ruleProductExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleProductExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__SubExpressionsAssignment_1_0_3_1"


    // $ANTLR start "rule__SumExpression__OperatorAssignment_1_1_1"
    // InternalLTLFormula.g:13421:1: rule__SumExpression__OperatorAssignment_1_1_1 : ( ruleSubOperator ) ;
    public final void rule__SumExpression__OperatorAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13425:1: ( ( ruleSubOperator ) )
            // InternalLTLFormula.g:13426:2: ( ruleSubOperator )
            {
            // InternalLTLFormula.g:13426:2: ( ruleSubOperator )
            // InternalLTLFormula.g:13427:3: ruleSubOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__OperatorAssignment_1_1_1"


    // $ANTLR start "rule__SumExpression__SubExpressionsAssignment_1_1_2"
    // InternalLTLFormula.g:13436:1: rule__SumExpression__SubExpressionsAssignment_1_1_2 : ( ruleProductExpression ) ;
    public final void rule__SumExpression__SubExpressionsAssignment_1_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13440:1: ( ( ruleProductExpression ) )
            // InternalLTLFormula.g:13441:2: ( ruleProductExpression )
            {
            // InternalLTLFormula.g:13441:2: ( ruleProductExpression )
            // InternalLTLFormula.g:13442:3: ruleProductExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleProductExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__SubExpressionsAssignment_1_1_2"


    // $ANTLR start "rule__SumExpression__SubExpressionsAssignment_1_1_3_1"
    // InternalLTLFormula.g:13451:1: rule__SumExpression__SubExpressionsAssignment_1_1_3_1 : ( ruleProductExpression ) ;
    public final void rule__SumExpression__SubExpressionsAssignment_1_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13455:1: ( ( ruleProductExpression ) )
            // InternalLTLFormula.g:13456:2: ( ruleProductExpression )
            {
            // InternalLTLFormula.g:13456:2: ( ruleProductExpression )
            // InternalLTLFormula.g:13457:3: ruleProductExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleProductExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SumExpression__SubExpressionsAssignment_1_1_3_1"


    // $ANTLR start "rule__ProductExpression__OperatorAssignment_1_0_1"
    // InternalLTLFormula.g:13466:1: rule__ProductExpression__OperatorAssignment_1_0_1 : ( ruleMultOperator ) ;
    public final void rule__ProductExpression__OperatorAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13470:1: ( ( ruleMultOperator ) )
            // InternalLTLFormula.g:13471:2: ( ruleMultOperator )
            {
            // InternalLTLFormula.g:13471:2: ( ruleMultOperator )
            // InternalLTLFormula.g:13472:3: ruleMultOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMultOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__OperatorAssignment_1_0_1"


    // $ANTLR start "rule__ProductExpression__SubExpressionsAssignment_1_0_2"
    // InternalLTLFormula.g:13481:1: rule__ProductExpression__SubExpressionsAssignment_1_0_2 : ( ruleNegExpression ) ;
    public final void rule__ProductExpression__SubExpressionsAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13485:1: ( ( ruleNegExpression ) )
            // InternalLTLFormula.g:13486:2: ( ruleNegExpression )
            {
            // InternalLTLFormula.g:13486:2: ( ruleNegExpression )
            // InternalLTLFormula.g:13487:3: ruleNegExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNegExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__SubExpressionsAssignment_1_0_2"


    // $ANTLR start "rule__ProductExpression__SubExpressionsAssignment_1_0_3_1"
    // InternalLTLFormula.g:13496:1: rule__ProductExpression__SubExpressionsAssignment_1_0_3_1 : ( ruleNegExpression ) ;
    public final void rule__ProductExpression__SubExpressionsAssignment_1_0_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13500:1: ( ( ruleNegExpression ) )
            // InternalLTLFormula.g:13501:2: ( ruleNegExpression )
            {
            // InternalLTLFormula.g:13501:2: ( ruleNegExpression )
            // InternalLTLFormula.g:13502:3: ruleNegExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_0_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNegExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_0_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__SubExpressionsAssignment_1_0_3_1"


    // $ANTLR start "rule__ProductExpression__OperatorAssignment_1_1_1"
    // InternalLTLFormula.g:13511:1: rule__ProductExpression__OperatorAssignment_1_1_1 : ( ruleDivOperator ) ;
    public final void rule__ProductExpression__OperatorAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13515:1: ( ( ruleDivOperator ) )
            // InternalLTLFormula.g:13516:2: ( ruleDivOperator )
            {
            // InternalLTLFormula.g:13516:2: ( ruleDivOperator )
            // InternalLTLFormula.g:13517:3: ruleDivOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDivOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__OperatorAssignment_1_1_1"


    // $ANTLR start "rule__ProductExpression__SubExpressionsAssignment_1_1_2"
    // InternalLTLFormula.g:13526:1: rule__ProductExpression__SubExpressionsAssignment_1_1_2 : ( ruleNegExpression ) ;
    public final void rule__ProductExpression__SubExpressionsAssignment_1_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13530:1: ( ( ruleNegExpression ) )
            // InternalLTLFormula.g:13531:2: ( ruleNegExpression )
            {
            // InternalLTLFormula.g:13531:2: ( ruleNegExpression )
            // InternalLTLFormula.g:13532:3: ruleNegExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNegExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__SubExpressionsAssignment_1_1_2"


    // $ANTLR start "rule__ProductExpression__SubExpressionsAssignment_1_1_3_1"
    // InternalLTLFormula.g:13541:1: rule__ProductExpression__SubExpressionsAssignment_1_1_3_1 : ( ruleNegExpression ) ;
    public final void rule__ProductExpression__SubExpressionsAssignment_1_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13545:1: ( ( ruleNegExpression ) )
            // InternalLTLFormula.g:13546:2: ( ruleNegExpression )
            {
            // InternalLTLFormula.g:13546:2: ( ruleNegExpression )
            // InternalLTLFormula.g:13547:3: ruleNegExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNegExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__SubExpressionsAssignment_1_1_3_1"


    // $ANTLR start "rule__ProductExpression__OperatorAssignment_1_2_1"
    // InternalLTLFormula.g:13556:1: rule__ProductExpression__OperatorAssignment_1_2_1 : ( ruleModOperator ) ;
    public final void rule__ProductExpression__OperatorAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13560:1: ( ( ruleModOperator ) )
            // InternalLTLFormula.g:13561:2: ( ruleModOperator )
            {
            // InternalLTLFormula.g:13561:2: ( ruleModOperator )
            // InternalLTLFormula.g:13562:3: ruleModOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getOperatorModOperatorEnumRuleCall_1_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleModOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getOperatorModOperatorEnumRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__OperatorAssignment_1_2_1"


    // $ANTLR start "rule__ProductExpression__SubExpressionsAssignment_1_2_2"
    // InternalLTLFormula.g:13571:1: rule__ProductExpression__SubExpressionsAssignment_1_2_2 : ( ruleNegExpression ) ;
    public final void rule__ProductExpression__SubExpressionsAssignment_1_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13575:1: ( ( ruleNegExpression ) )
            // InternalLTLFormula.g:13576:2: ( ruleNegExpression )
            {
            // InternalLTLFormula.g:13576:2: ( ruleNegExpression )
            // InternalLTLFormula.g:13577:3: ruleNegExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_2_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNegExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__SubExpressionsAssignment_1_2_2"


    // $ANTLR start "rule__ProductExpression__SubExpressionsAssignment_1_2_3_1"
    // InternalLTLFormula.g:13586:1: rule__ProductExpression__SubExpressionsAssignment_1_2_3_1 : ( ruleNegExpression ) ;
    public final void rule__ProductExpression__SubExpressionsAssignment_1_2_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13590:1: ( ( ruleNegExpression ) )
            // InternalLTLFormula.g:13591:2: ( ruleNegExpression )
            {
            // InternalLTLFormula.g:13591:2: ( ruleNegExpression )
            // InternalLTLFormula.g:13592:3: ruleNegExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_2_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNegExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_2_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ProductExpression__SubExpressionsAssignment_1_2_3_1"


    // $ANTLR start "rule__NegExpression__OperatorAssignment_0_1"
    // InternalLTLFormula.g:13601:1: rule__NegExpression__OperatorAssignment_0_1 : ( ruleSubOperator ) ;
    public final void rule__NegExpression__OperatorAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13605:1: ( ( ruleSubOperator ) )
            // InternalLTLFormula.g:13606:2: ( ruleSubOperator )
            {
            // InternalLTLFormula.g:13606:2: ( ruleSubOperator )
            // InternalLTLFormula.g:13607:3: ruleSubOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NegExpression__OperatorAssignment_0_1"


    // $ANTLR start "rule__NegExpression__SubExpressionsAssignment_0_2"
    // InternalLTLFormula.g:13616:1: rule__NegExpression__SubExpressionsAssignment_0_2 : ( ruleNegExpression ) ;
    public final void rule__NegExpression__SubExpressionsAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13620:1: ( ( ruleNegExpression ) )
            // InternalLTLFormula.g:13621:2: ( ruleNegExpression )
            {
            // InternalLTLFormula.g:13621:2: ( ruleNegExpression )
            // InternalLTLFormula.g:13622:3: ruleNegExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNegExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NegExpression__SubExpressionsAssignment_0_2"


    // $ANTLR start "rule__TernaryOperation__SubExpressionsAssignment_0_1"
    // InternalLTLFormula.g:13631:1: rule__TernaryOperation__SubExpressionsAssignment_0_1 : ( ruleAtomicValuedExpression ) ;
    public final void rule__TernaryOperation__SubExpressionsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13635:1: ( ( ruleAtomicValuedExpression ) )
            // InternalLTLFormula.g:13636:2: ( ruleAtomicValuedExpression )
            {
            // InternalLTLFormula.g:13636:2: ( ruleAtomicValuedExpression )
            // InternalLTLFormula.g:13637:3: ruleAtomicValuedExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__SubExpressionsAssignment_0_1"


    // $ANTLR start "rule__TernaryOperation__OperatorAssignment_0_2"
    // InternalLTLFormula.g:13646:1: rule__TernaryOperation__OperatorAssignment_0_2 : ( ruleConditionalOperator ) ;
    public final void rule__TernaryOperation__OperatorAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13650:1: ( ( ruleConditionalOperator ) )
            // InternalLTLFormula.g:13651:2: ( ruleConditionalOperator )
            {
            // InternalLTLFormula.g:13651:2: ( ruleConditionalOperator )
            // InternalLTLFormula.g:13652:3: ruleConditionalOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTernaryOperationAccess().getOperatorConditionalOperatorEnumRuleCall_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConditionalOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTernaryOperationAccess().getOperatorConditionalOperatorEnumRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__OperatorAssignment_0_2"


    // $ANTLR start "rule__TernaryOperation__SubExpressionsAssignment_0_3"
    // InternalLTLFormula.g:13661:1: rule__TernaryOperation__SubExpressionsAssignment_0_3 : ( ruleAtomicValuedExpression ) ;
    public final void rule__TernaryOperation__SubExpressionsAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13665:1: ( ( ruleAtomicValuedExpression ) )
            // InternalLTLFormula.g:13666:2: ( ruleAtomicValuedExpression )
            {
            // InternalLTLFormula.g:13666:2: ( ruleAtomicValuedExpression )
            // InternalLTLFormula.g:13667:3: ruleAtomicValuedExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__SubExpressionsAssignment_0_3"


    // $ANTLR start "rule__TernaryOperation__SubExpressionsAssignment_0_4_1"
    // InternalLTLFormula.g:13676:1: rule__TernaryOperation__SubExpressionsAssignment_0_4_1 : ( ruleAtomicValuedExpression ) ;
    public final void rule__TernaryOperation__SubExpressionsAssignment_0_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13680:1: ( ( ruleAtomicValuedExpression ) )
            // InternalLTLFormula.g:13681:2: ( ruleAtomicValuedExpression )
            {
            // InternalLTLFormula.g:13681:2: ( ruleAtomicValuedExpression )
            // InternalLTLFormula.g:13682:3: ruleAtomicValuedExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TernaryOperation__SubExpressionsAssignment_0_4_1"


    // $ANTLR start "rule__InitExpression__OperatorAssignment_1_1_0"
    // InternalLTLFormula.g:13691:1: rule__InitExpression__OperatorAssignment_1_1_0 : ( ruleInitOperator ) ;
    public final void rule__InitExpression__OperatorAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13695:1: ( ( ruleInitOperator ) )
            // InternalLTLFormula.g:13696:2: ( ruleInitOperator )
            {
            // InternalLTLFormula.g:13696:2: ( ruleInitOperator )
            // InternalLTLFormula.g:13697:3: ruleInitOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitExpressionAccess().getOperatorInitOperatorEnumRuleCall_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInitOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitExpressionAccess().getOperatorInitOperatorEnumRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__OperatorAssignment_1_1_0"


    // $ANTLR start "rule__InitExpression__SubExpressionsAssignment_1_1_1"
    // InternalLTLFormula.g:13706:1: rule__InitExpression__SubExpressionsAssignment_1_1_1 : ( ruleFbyExpression ) ;
    public final void rule__InitExpression__SubExpressionsAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13710:1: ( ( ruleFbyExpression ) )
            // InternalLTLFormula.g:13711:2: ( ruleFbyExpression )
            {
            // InternalLTLFormula.g:13711:2: ( ruleFbyExpression )
            // InternalLTLFormula.g:13712:3: ruleFbyExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitExpressionAccess().getSubExpressionsFbyExpressionParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFbyExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitExpressionAccess().getSubExpressionsFbyExpressionParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__SubExpressionsAssignment_1_1_1"


    // $ANTLR start "rule__InitExpression__SubExpressionsAssignment_1_2_1"
    // InternalLTLFormula.g:13721:1: rule__InitExpression__SubExpressionsAssignment_1_2_1 : ( ruleFbyExpression ) ;
    public final void rule__InitExpression__SubExpressionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13725:1: ( ( ruleFbyExpression ) )
            // InternalLTLFormula.g:13726:2: ( ruleFbyExpression )
            {
            // InternalLTLFormula.g:13726:2: ( ruleFbyExpression )
            // InternalLTLFormula.g:13727:3: ruleFbyExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitExpressionAccess().getSubExpressionsFbyExpressionParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFbyExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitExpressionAccess().getSubExpressionsFbyExpressionParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitExpression__SubExpressionsAssignment_1_2_1"


    // $ANTLR start "rule__FbyExpression__OperatorAssignment_1_1_0"
    // InternalLTLFormula.g:13736:1: rule__FbyExpression__OperatorAssignment_1_1_0 : ( ruleFbyOperator ) ;
    public final void rule__FbyExpression__OperatorAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13740:1: ( ( ruleFbyOperator ) )
            // InternalLTLFormula.g:13741:2: ( ruleFbyOperator )
            {
            // InternalLTLFormula.g:13741:2: ( ruleFbyOperator )
            // InternalLTLFormula.g:13742:3: ruleFbyOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFbyExpressionAccess().getOperatorFbyOperatorEnumRuleCall_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFbyOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFbyExpressionAccess().getOperatorFbyOperatorEnumRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__OperatorAssignment_1_1_0"


    // $ANTLR start "rule__FbyExpression__SubExpressionsAssignment_1_1_1"
    // InternalLTLFormula.g:13751:1: rule__FbyExpression__SubExpressionsAssignment_1_1_1 : ( ruleSfbyExpression ) ;
    public final void rule__FbyExpression__SubExpressionsAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13755:1: ( ( ruleSfbyExpression ) )
            // InternalLTLFormula.g:13756:2: ( ruleSfbyExpression )
            {
            // InternalLTLFormula.g:13756:2: ( ruleSfbyExpression )
            // InternalLTLFormula.g:13757:3: ruleSfbyExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFbyExpressionAccess().getSubExpressionsSfbyExpressionParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSfbyExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFbyExpressionAccess().getSubExpressionsSfbyExpressionParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__SubExpressionsAssignment_1_1_1"


    // $ANTLR start "rule__FbyExpression__SubExpressionsAssignment_1_2_1"
    // InternalLTLFormula.g:13766:1: rule__FbyExpression__SubExpressionsAssignment_1_2_1 : ( ruleSfbyExpression ) ;
    public final void rule__FbyExpression__SubExpressionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13770:1: ( ( ruleSfbyExpression ) )
            // InternalLTLFormula.g:13771:2: ( ruleSfbyExpression )
            {
            // InternalLTLFormula.g:13771:2: ( ruleSfbyExpression )
            // InternalLTLFormula.g:13772:3: ruleSfbyExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFbyExpressionAccess().getSubExpressionsSfbyExpressionParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSfbyExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFbyExpressionAccess().getSubExpressionsSfbyExpressionParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FbyExpression__SubExpressionsAssignment_1_2_1"


    // $ANTLR start "rule__SfbyExpression__OperatorAssignment_1_1_0"
    // InternalLTLFormula.g:13781:1: rule__SfbyExpression__OperatorAssignment_1_1_0 : ( ruleSfbyOperator ) ;
    public final void rule__SfbyExpression__OperatorAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13785:1: ( ( ruleSfbyOperator ) )
            // InternalLTLFormula.g:13786:2: ( ruleSfbyOperator )
            {
            // InternalLTLFormula.g:13786:2: ( ruleSfbyOperator )
            // InternalLTLFormula.g:13787:3: ruleSfbyOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSfbyExpressionAccess().getOperatorSfbyOperatorEnumRuleCall_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSfbyOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSfbyExpressionAccess().getOperatorSfbyOperatorEnumRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__OperatorAssignment_1_1_0"


    // $ANTLR start "rule__SfbyExpression__SubExpressionsAssignment_1_1_1"
    // InternalLTLFormula.g:13796:1: rule__SfbyExpression__SubExpressionsAssignment_1_1_1 : ( ruleAtomicValuedExpression ) ;
    public final void rule__SfbyExpression__SubExpressionsAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13800:1: ( ( ruleAtomicValuedExpression ) )
            // InternalLTLFormula.g:13801:2: ( ruleAtomicValuedExpression )
            {
            // InternalLTLFormula.g:13801:2: ( ruleAtomicValuedExpression )
            // InternalLTLFormula.g:13802:3: ruleAtomicValuedExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSfbyExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSfbyExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__SubExpressionsAssignment_1_1_1"


    // $ANTLR start "rule__SfbyExpression__SubExpressionsAssignment_1_2_1"
    // InternalLTLFormula.g:13811:1: rule__SfbyExpression__SubExpressionsAssignment_1_2_1 : ( ruleAtomicValuedExpression ) ;
    public final void rule__SfbyExpression__SubExpressionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13815:1: ( ( ruleAtomicValuedExpression ) )
            // InternalLTLFormula.g:13816:2: ( ruleAtomicValuedExpression )
            {
            // InternalLTLFormula.g:13816:2: ( ruleAtomicValuedExpression )
            // InternalLTLFormula.g:13817:3: ruleAtomicValuedExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSfbyExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSfbyExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SfbyExpression__SubExpressionsAssignment_1_2_1"


    // $ANTLR start "rule__ValuedObjectTestExpression__OperatorAssignment_0_1"
    // InternalLTLFormula.g:13826:1: rule__ValuedObjectTestExpression__OperatorAssignment_0_1 : ( ( rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0 ) ) ;
    public final void rule__ValuedObjectTestExpression__OperatorAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13830:1: ( ( ( rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0 ) ) )
            // InternalLTLFormula.g:13831:2: ( ( rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0 ) )
            {
            // InternalLTLFormula.g:13831:2: ( ( rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0 ) )
            // InternalLTLFormula.g:13832:3: ( rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAlternatives_0_1_0()); 
            }
            // InternalLTLFormula.g:13833:3: ( rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0 )
            // InternalLTLFormula.g:13833:4: rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ValuedObjectTestExpression__OperatorAlternatives_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAlternatives_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__OperatorAssignment_0_1"


    // $ANTLR start "rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3"
    // InternalLTLFormula.g:13841:1: rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3 : ( ruleValuedObjectTestExpression ) ;
    public final void rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13845:1: ( ( ruleValuedObjectTestExpression ) )
            // InternalLTLFormula.g:13846:2: ( ruleValuedObjectTestExpression )
            {
            // InternalLTLFormula.g:13846:2: ( ruleValuedObjectTestExpression )
            // InternalLTLFormula.g:13847:3: ruleValuedObjectTestExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleValuedObjectTestExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3"


    // $ANTLR start "rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_4_1"
    // InternalLTLFormula.g:13856:1: rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_4_1 : ( ruleValuedObjectReference ) ;
    public final void rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13860:1: ( ( ruleValuedObjectReference ) )
            // InternalLTLFormula.g:13861:2: ( ruleValuedObjectReference )
            {
            // InternalLTLFormula.g:13861:2: ( ruleValuedObjectReference )
            // InternalLTLFormula.g:13862:3: ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectReferenceParserRuleCall_0_4_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectReferenceParserRuleCall_0_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_4_1"


    // $ANTLR start "rule__SpecialAccessExpression__AccessAssignment_0"
    // InternalLTLFormula.g:13871:1: rule__SpecialAccessExpression__AccessAssignment_0 : ( ( 'static' ) ) ;
    public final void rule__SpecialAccessExpression__AccessAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13875:1: ( ( ( 'static' ) ) )
            // InternalLTLFormula.g:13876:2: ( ( 'static' ) )
            {
            // InternalLTLFormula.g:13876:2: ( ( 'static' ) )
            // InternalLTLFormula.g:13877:3: ( 'static' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getAccessStaticKeyword_0_0()); 
            }
            // InternalLTLFormula.g:13878:3: ( 'static' )
            // InternalLTLFormula.g:13879:4: 'static'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getAccessStaticKeyword_0_0()); 
            }
            match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getAccessStaticKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getAccessStaticKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__AccessAssignment_0"


    // $ANTLR start "rule__SpecialAccessExpression__ContainerAssignment_2_0"
    // InternalLTLFormula.g:13890:1: rule__SpecialAccessExpression__ContainerAssignment_2_0 : ( ( rulePrimeID ) ) ;
    public final void rule__SpecialAccessExpression__ContainerAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13894:1: ( ( ( rulePrimeID ) ) )
            // InternalLTLFormula.g:13895:2: ( ( rulePrimeID ) )
            {
            // InternalLTLFormula.g:13895:2: ( ( rulePrimeID ) )
            // InternalLTLFormula.g:13896:3: ( rulePrimeID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getContainerNamedObjectCrossReference_2_0_0()); 
            }
            // InternalLTLFormula.g:13897:3: ( rulePrimeID )
            // InternalLTLFormula.g:13898:4: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getContainerNamedObjectPrimeIDParserRuleCall_2_0_0_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getContainerNamedObjectPrimeIDParserRuleCall_2_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getContainerNamedObjectCrossReference_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__ContainerAssignment_2_0"


    // $ANTLR start "rule__SpecialAccessExpression__TargetAssignment_3"
    // InternalLTLFormula.g:13909:1: rule__SpecialAccessExpression__TargetAssignment_3 : ( ( rulePrimeID ) ) ;
    public final void rule__SpecialAccessExpression__TargetAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13913:1: ( ( ( rulePrimeID ) ) )
            // InternalLTLFormula.g:13914:2: ( ( rulePrimeID ) )
            {
            // InternalLTLFormula.g:13914:2: ( ( rulePrimeID ) )
            // InternalLTLFormula.g:13915:3: ( rulePrimeID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getTargetNamedObjectCrossReference_3_0()); 
            }
            // InternalLTLFormula.g:13916:3: ( rulePrimeID )
            // InternalLTLFormula.g:13917:4: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getTargetNamedObjectPrimeIDParserRuleCall_3_0_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getTargetNamedObjectPrimeIDParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getTargetNamedObjectCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__TargetAssignment_3"


    // $ANTLR start "rule__SpecialAccessExpression__SubReferenceAssignment_6"
    // InternalLTLFormula.g:13928:1: rule__SpecialAccessExpression__SubReferenceAssignment_6 : ( ruleValuedObjectReference ) ;
    public final void rule__SpecialAccessExpression__SubReferenceAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13932:1: ( ( ruleValuedObjectReference ) )
            // InternalLTLFormula.g:13933:2: ( ruleValuedObjectReference )
            {
            // InternalLTLFormula.g:13933:2: ( ruleValuedObjectReference )
            // InternalLTLFormula.g:13934:3: ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSpecialAccessExpressionAccess().getSubReferenceValuedObjectReferenceParserRuleCall_6_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSpecialAccessExpressionAccess().getSubReferenceValuedObjectReferenceParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SpecialAccessExpression__SubReferenceAssignment_6"


    // $ANTLR start "rule__ValuedObjectReference__ValuedObjectAssignment_0"
    // InternalLTLFormula.g:13943:1: rule__ValuedObjectReference__ValuedObjectAssignment_0 : ( ( rulePrimeID ) ) ;
    public final void rule__ValuedObjectReference__ValuedObjectAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13947:1: ( ( ( rulePrimeID ) ) )
            // InternalLTLFormula.g:13948:2: ( ( rulePrimeID ) )
            {
            // InternalLTLFormula.g:13948:2: ( ( rulePrimeID ) )
            // InternalLTLFormula.g:13949:3: ( rulePrimeID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); 
            }
            // InternalLTLFormula.g:13950:3: ( rulePrimeID )
            // InternalLTLFormula.g:13951:4: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_0_0_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__ValuedObjectAssignment_0"


    // $ANTLR start "rule__ValuedObjectReference__IndicesAssignment_1_1"
    // InternalLTLFormula.g:13962:1: rule__ValuedObjectReference__IndicesAssignment_1_1 : ( ruleExpression ) ;
    public final void rule__ValuedObjectReference__IndicesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13966:1: ( ( ruleExpression ) )
            // InternalLTLFormula.g:13967:2: ( ruleExpression )
            {
            // InternalLTLFormula.g:13967:2: ( ruleExpression )
            // InternalLTLFormula.g:13968:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__IndicesAssignment_1_1"


    // $ANTLR start "rule__ValuedObjectReference__SubReferenceAssignment_2_1"
    // InternalLTLFormula.g:13977:1: rule__ValuedObjectReference__SubReferenceAssignment_2_1 : ( ruleValuedObjectReference ) ;
    public final void rule__ValuedObjectReference__SubReferenceAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13981:1: ( ( ruleValuedObjectReference ) )
            // InternalLTLFormula.g:13982:2: ( ruleValuedObjectReference )
            {
            // InternalLTLFormula.g:13982:2: ( ruleValuedObjectReference )
            // InternalLTLFormula.g:13983:3: ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValuedObjectReference__SubReferenceAssignment_2_1"


    // $ANTLR start "rule__ScheduleObjectReference__ValuedObjectAssignment_0"
    // InternalLTLFormula.g:13992:1: rule__ScheduleObjectReference__ValuedObjectAssignment_0 : ( ( rulePrimeID ) ) ;
    public final void rule__ScheduleObjectReference__ValuedObjectAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:13996:1: ( ( ( rulePrimeID ) ) )
            // InternalLTLFormula.g:13997:2: ( ( rulePrimeID ) )
            {
            // InternalLTLFormula.g:13997:2: ( ( rulePrimeID ) )
            // InternalLTLFormula.g:13998:3: ( rulePrimeID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); 
            }
            // InternalLTLFormula.g:13999:3: ( rulePrimeID )
            // InternalLTLFormula.g:14000:4: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_0_0_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScheduleObjectReference__ValuedObjectAssignment_0"


    // $ANTLR start "rule__ScheduleObjectReference__PriorityAssignment_1"
    // InternalLTLFormula.g:14011:1: rule__ScheduleObjectReference__PriorityAssignment_1 : ( RULE_INT ) ;
    public final void rule__ScheduleObjectReference__PriorityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14015:1: ( ( RULE_INT ) )
            // InternalLTLFormula.g:14016:2: ( RULE_INT )
            {
            // InternalLTLFormula.g:14016:2: ( RULE_INT )
            // InternalLTLFormula.g:14017:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScheduleObjectReferenceAccess().getPriorityINTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScheduleObjectReferenceAccess().getPriorityINTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScheduleObjectReference__PriorityAssignment_1"


    // $ANTLR start "rule__ReferenceCall__ValuedObjectAssignment_0"
    // InternalLTLFormula.g:14026:1: rule__ReferenceCall__ValuedObjectAssignment_0 : ( ( rulePrimeID ) ) ;
    public final void rule__ReferenceCall__ValuedObjectAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14030:1: ( ( ( rulePrimeID ) ) )
            // InternalLTLFormula.g:14031:2: ( ( rulePrimeID ) )
            {
            // InternalLTLFormula.g:14031:2: ( ( rulePrimeID ) )
            // InternalLTLFormula.g:14032:3: ( rulePrimeID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectCrossReference_0_0()); 
            }
            // InternalLTLFormula.g:14033:3: ( rulePrimeID )
            // InternalLTLFormula.g:14034:4: rulePrimeID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_0_0_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectPrimeIDParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__ValuedObjectAssignment_0"


    // $ANTLR start "rule__ReferenceCall__IndicesAssignment_1_1"
    // InternalLTLFormula.g:14045:1: rule__ReferenceCall__IndicesAssignment_1_1 : ( ruleExpression ) ;
    public final void rule__ReferenceCall__IndicesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14049:1: ( ( ruleExpression ) )
            // InternalLTLFormula.g:14050:2: ( ruleExpression )
            {
            // InternalLTLFormula.g:14050:2: ( ruleExpression )
            // InternalLTLFormula.g:14051:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getIndicesExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getIndicesExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__IndicesAssignment_1_1"


    // $ANTLR start "rule__ReferenceCall__SubReferenceAssignment_2_1"
    // InternalLTLFormula.g:14060:1: rule__ReferenceCall__SubReferenceAssignment_2_1 : ( ruleValuedObjectReference ) ;
    public final void rule__ReferenceCall__SubReferenceAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14064:1: ( ( ruleValuedObjectReference ) )
            // InternalLTLFormula.g:14065:2: ( ruleValuedObjectReference )
            {
            // InternalLTLFormula.g:14065:2: ( ruleValuedObjectReference )
            // InternalLTLFormula.g:14066:3: ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__SubReferenceAssignment_2_1"


    // $ANTLR start "rule__ReferenceCall__ParametersAssignment_3_0_1"
    // InternalLTLFormula.g:14075:1: rule__ReferenceCall__ParametersAssignment_3_0_1 : ( ruleParameter ) ;
    public final void rule__ReferenceCall__ParametersAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14079:1: ( ( ruleParameter ) )
            // InternalLTLFormula.g:14080:2: ( ruleParameter )
            {
            // InternalLTLFormula.g:14080:2: ( ruleParameter )
            // InternalLTLFormula.g:14081:3: ruleParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__ParametersAssignment_3_0_1"


    // $ANTLR start "rule__ReferenceCall__ParametersAssignment_3_0_2_1"
    // InternalLTLFormula.g:14090:1: rule__ReferenceCall__ParametersAssignment_3_0_2_1 : ( ruleParameter ) ;
    public final void rule__ReferenceCall__ParametersAssignment_3_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14094:1: ( ( ruleParameter ) )
            // InternalLTLFormula.g:14095:2: ( ruleParameter )
            {
            // InternalLTLFormula.g:14095:2: ( ruleParameter )
            // InternalLTLFormula.g:14096:3: ruleParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceCall__ParametersAssignment_3_0_2_1"


    // $ANTLR start "rule__FunctionCall__FunctionNameAssignment_1"
    // InternalLTLFormula.g:14105:1: rule__FunctionCall__FunctionNameAssignment_1 : ( RULE_ID ) ;
    public final void rule__FunctionCall__FunctionNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14109:1: ( ( RULE_ID ) )
            // InternalLTLFormula.g:14110:2: ( RULE_ID )
            {
            // InternalLTLFormula.g:14110:2: ( RULE_ID )
            // InternalLTLFormula.g:14111:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__FunctionNameAssignment_1"


    // $ANTLR start "rule__FunctionCall__ParametersAssignment_2_0_1"
    // InternalLTLFormula.g:14120:1: rule__FunctionCall__ParametersAssignment_2_0_1 : ( ruleParameter ) ;
    public final void rule__FunctionCall__ParametersAssignment_2_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14124:1: ( ( ruleParameter ) )
            // InternalLTLFormula.g:14125:2: ( ruleParameter )
            {
            // InternalLTLFormula.g:14125:2: ( ruleParameter )
            // InternalLTLFormula.g:14126:3: ruleParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__ParametersAssignment_2_0_1"


    // $ANTLR start "rule__FunctionCall__ParametersAssignment_2_0_2_1"
    // InternalLTLFormula.g:14135:1: rule__FunctionCall__ParametersAssignment_2_0_2_1 : ( ruleParameter ) ;
    public final void rule__FunctionCall__ParametersAssignment_2_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14139:1: ( ( ruleParameter ) )
            // InternalLTLFormula.g:14140:2: ( ruleParameter )
            {
            // InternalLTLFormula.g:14140:2: ( ruleParameter )
            // InternalLTLFormula.g:14141:3: ruleParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_2_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__ParametersAssignment_2_0_2_1"


    // $ANTLR start "rule__Parameter__AccessTypeAssignment_0_0"
    // InternalLTLFormula.g:14150:1: rule__Parameter__AccessTypeAssignment_0_0 : ( ruleParameterAccessType ) ;
    public final void rule__Parameter__AccessTypeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14154:1: ( ( ruleParameterAccessType ) )
            // InternalLTLFormula.g:14155:2: ( ruleParameterAccessType )
            {
            // InternalLTLFormula.g:14155:2: ( ruleParameterAccessType )
            // InternalLTLFormula.g:14156:3: ruleParameterAccessType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getAccessTypeParameterAccessTypeEnumRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleParameterAccessType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getAccessTypeParameterAccessTypeEnumRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter__AccessTypeAssignment_0_0"


    // $ANTLR start "rule__Parameter__ExpressionAssignment_0_1"
    // InternalLTLFormula.g:14165:1: rule__Parameter__ExpressionAssignment_0_1 : ( ruleValuedObjectReference ) ;
    public final void rule__Parameter__ExpressionAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14169:1: ( ( ruleValuedObjectReference ) )
            // InternalLTLFormula.g:14170:2: ( ruleValuedObjectReference )
            {
            // InternalLTLFormula.g:14170:2: ( ruleValuedObjectReference )
            // InternalLTLFormula.g:14171:3: ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getExpressionValuedObjectReferenceParserRuleCall_0_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getExpressionValuedObjectReferenceParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter__ExpressionAssignment_0_1"


    // $ANTLR start "rule__Parameter__ExpressionAssignment_1"
    // InternalLTLFormula.g:14180:1: rule__Parameter__ExpressionAssignment_1 : ( ruleExpression ) ;
    public final void rule__Parameter__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14184:1: ( ( ruleExpression ) )
            // InternalLTLFormula.g:14185:2: ( ruleExpression )
            {
            // InternalLTLFormula.g:14185:2: ( ruleExpression )
            // InternalLTLFormula.g:14186:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameter__ExpressionAssignment_1"


    // $ANTLR start "rule__TextExpression__AnnotationsAssignment_0"
    // InternalLTLFormula.g:14195:1: rule__TextExpression__AnnotationsAssignment_0 : ( ruleAnnotation ) ;
    public final void rule__TextExpression__AnnotationsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14199:1: ( ( ruleAnnotation ) )
            // InternalLTLFormula.g:14200:2: ( ruleAnnotation )
            {
            // InternalLTLFormula.g:14200:2: ( ruleAnnotation )
            // InternalLTLFormula.g:14201:3: ruleAnnotation
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTextExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAnnotation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTextExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TextExpression__AnnotationsAssignment_0"


    // $ANTLR start "rule__TextExpression__TextAssignment_1"
    // InternalLTLFormula.g:14210:1: rule__TextExpression__TextAssignment_1 : ( RULE_HOSTCODE ) ;
    public final void rule__TextExpression__TextAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14214:1: ( ( RULE_HOSTCODE ) )
            // InternalLTLFormula.g:14215:2: ( RULE_HOSTCODE )
            {
            // InternalLTLFormula.g:14215:2: ( RULE_HOSTCODE )
            // InternalLTLFormula.g:14216:3: RULE_HOSTCODE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_1_0()); 
            }
            match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TextExpression__TextAssignment_1"


    // $ANTLR start "rule__IntValue__ValueAssignment"
    // InternalLTLFormula.g:14225:1: rule__IntValue__ValueAssignment : ( RULE_INT ) ;
    public final void rule__IntValue__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14229:1: ( ( RULE_INT ) )
            // InternalLTLFormula.g:14230:2: ( RULE_INT )
            {
            // InternalLTLFormula.g:14230:2: ( RULE_INT )
            // InternalLTLFormula.g:14231:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntValue__ValueAssignment"


    // $ANTLR start "rule__FloatValue__ValueAssignment"
    // InternalLTLFormula.g:14240:1: rule__FloatValue__ValueAssignment : ( RULE_FLOAT ) ;
    public final void rule__FloatValue__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14244:1: ( ( RULE_FLOAT ) )
            // InternalLTLFormula.g:14245:2: ( RULE_FLOAT )
            {
            // InternalLTLFormula.g:14245:2: ( RULE_FLOAT )
            // InternalLTLFormula.g:14246:3: RULE_FLOAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0()); 
            }
            match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FloatValue__ValueAssignment"


    // $ANTLR start "rule__BoolValue__ValueAssignment"
    // InternalLTLFormula.g:14255:1: rule__BoolValue__ValueAssignment : ( RULE_BOOLEAN ) ;
    public final void rule__BoolValue__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14259:1: ( ( RULE_BOOLEAN ) )
            // InternalLTLFormula.g:14260:2: ( RULE_BOOLEAN )
            {
            // InternalLTLFormula.g:14260:2: ( RULE_BOOLEAN )
            // InternalLTLFormula.g:14261:3: RULE_BOOLEAN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0()); 
            }
            match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolValue__ValueAssignment"


    // $ANTLR start "rule__StringValue__ValueAssignment"
    // InternalLTLFormula.g:14270:1: rule__StringValue__ValueAssignment : ( RULE_STRING ) ;
    public final void rule__StringValue__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14274:1: ( ( RULE_STRING ) )
            // InternalLTLFormula.g:14275:2: ( RULE_STRING )
            {
            // InternalLTLFormula.g:14275:2: ( RULE_STRING )
            // InternalLTLFormula.g:14276:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValue__ValueAssignment"


    // $ANTLR start "rule__VectorValue__ValuesAssignment_1_0_0"
    // InternalLTLFormula.g:14285:1: rule__VectorValue__ValuesAssignment_1_0_0 : ( ruleVectorValueMember ) ;
    public final void rule__VectorValue__ValuesAssignment_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14289:1: ( ( ruleVectorValueMember ) )
            // InternalLTLFormula.g:14290:2: ( ruleVectorValueMember )
            {
            // InternalLTLFormula.g:14290:2: ( ruleVectorValueMember )
            // InternalLTLFormula.g:14291:3: ruleVectorValueMember
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_1_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__ValuesAssignment_1_0_0"


    // $ANTLR start "rule__VectorValue__ValuesAssignment_1_0_1_1"
    // InternalLTLFormula.g:14300:1: rule__VectorValue__ValuesAssignment_1_0_1_1 : ( ruleVectorValueMember ) ;
    public final void rule__VectorValue__ValuesAssignment_1_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14304:1: ( ( ruleVectorValueMember ) )
            // InternalLTLFormula.g:14305:2: ( ruleVectorValueMember )
            {
            // InternalLTLFormula.g:14305:2: ( ruleVectorValueMember )
            // InternalLTLFormula.g:14306:3: ruleVectorValueMember
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_1_0_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__ValuesAssignment_1_0_1_1"


    // $ANTLR start "rule__VectorValue__ValuesAssignment_1_1_0"
    // InternalLTLFormula.g:14315:1: rule__VectorValue__ValuesAssignment_1_1_0 : ( ruleIntValue ) ;
    public final void rule__VectorValue__ValuesAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14319:1: ( ( ruleIntValue ) )
            // InternalLTLFormula.g:14320:2: ( ruleIntValue )
            {
            // InternalLTLFormula.g:14320:2: ( ruleIntValue )
            // InternalLTLFormula.g:14321:3: ruleIntValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getValuesIntValueParserRuleCall_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleIntValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getValuesIntValueParserRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__ValuesAssignment_1_1_0"


    // $ANTLR start "rule__VectorValue__RangeAssignment_1_1_1"
    // InternalLTLFormula.g:14330:1: rule__VectorValue__RangeAssignment_1_1_1 : ( ( 'to' ) ) ;
    public final void rule__VectorValue__RangeAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14334:1: ( ( ( 'to' ) ) )
            // InternalLTLFormula.g:14335:2: ( ( 'to' ) )
            {
            // InternalLTLFormula.g:14335:2: ( ( 'to' ) )
            // InternalLTLFormula.g:14336:3: ( 'to' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getRangeToKeyword_1_1_1_0()); 
            }
            // InternalLTLFormula.g:14337:3: ( 'to' )
            // InternalLTLFormula.g:14338:4: 'to'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getRangeToKeyword_1_1_1_0()); 
            }
            match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getRangeToKeyword_1_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getRangeToKeyword_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__RangeAssignment_1_1_1"


    // $ANTLR start "rule__VectorValue__ValuesAssignment_1_1_2"
    // InternalLTLFormula.g:14349:1: rule__VectorValue__ValuesAssignment_1_1_2 : ( ( rule__VectorValue__ValuesAlternatives_1_1_2_0 ) ) ;
    public final void rule__VectorValue__ValuesAssignment_1_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14353:1: ( ( ( rule__VectorValue__ValuesAlternatives_1_1_2_0 ) ) )
            // InternalLTLFormula.g:14354:2: ( ( rule__VectorValue__ValuesAlternatives_1_1_2_0 ) )
            {
            // InternalLTLFormula.g:14354:2: ( ( rule__VectorValue__ValuesAlternatives_1_1_2_0 ) )
            // InternalLTLFormula.g:14355:3: ( rule__VectorValue__ValuesAlternatives_1_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVectorValueAccess().getValuesAlternatives_1_1_2_0()); 
            }
            // InternalLTLFormula.g:14356:3: ( rule__VectorValue__ValuesAlternatives_1_1_2_0 )
            // InternalLTLFormula.g:14356:4: rule__VectorValue__ValuesAlternatives_1_1_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__VectorValue__ValuesAlternatives_1_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVectorValueAccess().getValuesAlternatives_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VectorValue__ValuesAssignment_1_1_2"


    // $ANTLR start "rule__JsonObjectValue__MembersAssignment_2_0"
    // InternalLTLFormula.g:14364:1: rule__JsonObjectValue__MembersAssignment_2_0 : ( ruleJsonObjectMember ) ;
    public final void rule__JsonObjectValue__MembersAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14368:1: ( ( ruleJsonObjectMember ) )
            // InternalLTLFormula.g:14369:2: ( ruleJsonObjectMember )
            {
            // InternalLTLFormula.g:14369:2: ( ruleJsonObjectMember )
            // InternalLTLFormula.g:14370:3: ruleJsonObjectMember
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleJsonObjectMember();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__MembersAssignment_2_0"


    // $ANTLR start "rule__JsonObjectValue__MembersAssignment_2_1_1"
    // InternalLTLFormula.g:14379:1: rule__JsonObjectValue__MembersAssignment_2_1_1 : ( ruleJsonObjectMember ) ;
    public final void rule__JsonObjectValue__MembersAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14383:1: ( ( ruleJsonObjectMember ) )
            // InternalLTLFormula.g:14384:2: ( ruleJsonObjectMember )
            {
            // InternalLTLFormula.g:14384:2: ( ruleJsonObjectMember )
            // InternalLTLFormula.g:14385:3: ruleJsonObjectMember
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleJsonObjectMember();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectValue__MembersAssignment_2_1_1"


    // $ANTLR start "rule__JsonObjectMember__KeyAssignment_0"
    // InternalLTLFormula.g:14394:1: rule__JsonObjectMember__KeyAssignment_0 : ( RULE_STRING ) ;
    public final void rule__JsonObjectMember__KeyAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14398:1: ( ( RULE_STRING ) )
            // InternalLTLFormula.g:14399:2: ( RULE_STRING )
            {
            // InternalLTLFormula.g:14399:2: ( RULE_STRING )
            // InternalLTLFormula.g:14400:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectMemberAccess().getKeySTRINGTerminalRuleCall_0_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectMemberAccess().getKeySTRINGTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectMember__KeyAssignment_0"


    // $ANTLR start "rule__JsonObjectMember__ValueAssignment_2"
    // InternalLTLFormula.g:14409:1: rule__JsonObjectMember__ValueAssignment_2 : ( ruleJsonValue ) ;
    public final void rule__JsonObjectMember__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14413:1: ( ( ruleJsonValue ) )
            // InternalLTLFormula.g:14414:2: ( ruleJsonValue )
            {
            // InternalLTLFormula.g:14414:2: ( ruleJsonValue )
            // InternalLTLFormula.g:14415:3: ruleJsonValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonObjectMemberAccess().getValueJsonValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleJsonValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonObjectMemberAccess().getValueJsonValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonObjectMember__ValueAssignment_2"


    // $ANTLR start "rule__JsonArrayValue__ElementsAssignment_2_0"
    // InternalLTLFormula.g:14424:1: rule__JsonArrayValue__ElementsAssignment_2_0 : ( ruleJsonValue ) ;
    public final void rule__JsonArrayValue__ElementsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14428:1: ( ( ruleJsonValue ) )
            // InternalLTLFormula.g:14429:2: ( ruleJsonValue )
            {
            // InternalLTLFormula.g:14429:2: ( ruleJsonValue )
            // InternalLTLFormula.g:14430:3: ruleJsonValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleJsonValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__ElementsAssignment_2_0"


    // $ANTLR start "rule__JsonArrayValue__ElementsAssignment_2_1_1"
    // InternalLTLFormula.g:14439:1: rule__JsonArrayValue__ElementsAssignment_2_1_1 : ( ruleJsonValue ) ;
    public final void rule__JsonArrayValue__ElementsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14443:1: ( ( ruleJsonValue ) )
            // InternalLTLFormula.g:14444:2: ( ruleJsonValue )
            {
            // InternalLTLFormula.g:14444:2: ( ruleJsonValue )
            // InternalLTLFormula.g:14445:3: ruleJsonValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleJsonValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonArrayValue__ElementsAssignment_2_1_1"


    // $ANTLR start "rule__JsonPragma__NameAssignment_1"
    // InternalLTLFormula.g:14454:1: rule__JsonPragma__NameAssignment_1 : ( ruleExtendedID ) ;
    public final void rule__JsonPragma__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14458:1: ( ( ruleExtendedID ) )
            // InternalLTLFormula.g:14459:2: ( ruleExtendedID )
            {
            // InternalLTLFormula.g:14459:2: ( ruleExtendedID )
            // InternalLTLFormula.g:14460:3: ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonPragmaAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExtendedID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonPragmaAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonPragma__NameAssignment_1"


    // $ANTLR start "rule__JsonPragma__ValueAssignment_2"
    // InternalLTLFormula.g:14469:1: rule__JsonPragma__ValueAssignment_2 : ( ruleJsonObjectValue ) ;
    public final void rule__JsonPragma__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14473:1: ( ( ruleJsonObjectValue ) )
            // InternalLTLFormula.g:14474:2: ( ruleJsonObjectValue )
            {
            // InternalLTLFormula.g:14474:2: ( ruleJsonObjectValue )
            // InternalLTLFormula.g:14475:3: ruleJsonObjectValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonPragmaAccess().getValueJsonObjectValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonPragmaAccess().getValueJsonObjectValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonPragma__ValueAssignment_2"


    // $ANTLR start "rule__JsonAnnotation__NameAssignment_1"
    // InternalLTLFormula.g:14484:1: rule__JsonAnnotation__NameAssignment_1 : ( ruleExtendedID ) ;
    public final void rule__JsonAnnotation__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14488:1: ( ( ruleExtendedID ) )
            // InternalLTLFormula.g:14489:2: ( ruleExtendedID )
            {
            // InternalLTLFormula.g:14489:2: ( ruleExtendedID )
            // InternalLTLFormula.g:14490:3: ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExtendedID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonAnnotation__NameAssignment_1"


    // $ANTLR start "rule__JsonAnnotation__ValueAssignment_2"
    // InternalLTLFormula.g:14499:1: rule__JsonAnnotation__ValueAssignment_2 : ( ruleJsonObjectValue ) ;
    public final void rule__JsonAnnotation__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14503:1: ( ( ruleJsonObjectValue ) )
            // InternalLTLFormula.g:14504:2: ( ruleJsonObjectValue )
            {
            // InternalLTLFormula.g:14504:2: ( ruleJsonObjectValue )
            // InternalLTLFormula.g:14505:3: ruleJsonObjectValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJsonAnnotationAccess().getValueJsonObjectValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJsonAnnotationAccess().getValueJsonObjectValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JsonAnnotation__ValueAssignment_2"


    // $ANTLR start "rule__CommentAnnotation__ValuesAssignment"
    // InternalLTLFormula.g:14514:1: rule__CommentAnnotation__ValuesAssignment : ( RULE_COMMENT_ANNOTATION ) ;
    public final void rule__CommentAnnotation__ValuesAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14518:1: ( ( RULE_COMMENT_ANNOTATION ) )
            // InternalLTLFormula.g:14519:2: ( RULE_COMMENT_ANNOTATION )
            {
            // InternalLTLFormula.g:14519:2: ( RULE_COMMENT_ANNOTATION )
            // InternalLTLFormula.g:14520:3: RULE_COMMENT_ANNOTATION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0()); 
            }
            match(input,RULE_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommentAnnotation__ValuesAssignment"


    // $ANTLR start "rule__TagAnnotation__NameAssignment_1"
    // InternalLTLFormula.g:14529:1: rule__TagAnnotation__NameAssignment_1 : ( ruleExtendedID ) ;
    public final void rule__TagAnnotation__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14533:1: ( ( ruleExtendedID ) )
            // InternalLTLFormula.g:14534:2: ( ruleExtendedID )
            {
            // InternalLTLFormula.g:14534:2: ( ruleExtendedID )
            // InternalLTLFormula.g:14535:3: ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExtendedID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TagAnnotation__NameAssignment_1"


    // $ANTLR start "rule__PragmaTag__NameAssignment_1"
    // InternalLTLFormula.g:14544:1: rule__PragmaTag__NameAssignment_1 : ( ruleExtendedID ) ;
    public final void rule__PragmaTag__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14548:1: ( ( ruleExtendedID ) )
            // InternalLTLFormula.g:14549:2: ( ruleExtendedID )
            {
            // InternalLTLFormula.g:14549:2: ( ruleExtendedID )
            // InternalLTLFormula.g:14550:3: ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExtendedID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PragmaTag__NameAssignment_1"


    // $ANTLR start "rule__KeyStringValueAnnotation__NameAssignment_1"
    // InternalLTLFormula.g:14559:1: rule__KeyStringValueAnnotation__NameAssignment_1 : ( ruleExtendedID ) ;
    public final void rule__KeyStringValueAnnotation__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14563:1: ( ( ruleExtendedID ) )
            // InternalLTLFormula.g:14564:2: ( ruleExtendedID )
            {
            // InternalLTLFormula.g:14564:2: ( ruleExtendedID )
            // InternalLTLFormula.g:14565:3: ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExtendedID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyStringValueAnnotation__NameAssignment_1"


    // $ANTLR start "rule__KeyStringValueAnnotation__ValuesAssignment_2"
    // InternalLTLFormula.g:14574:1: rule__KeyStringValueAnnotation__ValuesAssignment_2 : ( ruleEStringAllTypes ) ;
    public final void rule__KeyStringValueAnnotation__ValuesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14578:1: ( ( ruleEStringAllTypes ) )
            // InternalLTLFormula.g:14579:2: ( ruleEStringAllTypes )
            {
            // InternalLTLFormula.g:14579:2: ( ruleEStringAllTypes )
            // InternalLTLFormula.g:14580:3: ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyStringValueAnnotation__ValuesAssignment_2"


    // $ANTLR start "rule__KeyStringValueAnnotation__ValuesAssignment_3_1"
    // InternalLTLFormula.g:14589:1: rule__KeyStringValueAnnotation__ValuesAssignment_3_1 : ( ruleEStringAllTypes ) ;
    public final void rule__KeyStringValueAnnotation__ValuesAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14593:1: ( ( ruleEStringAllTypes ) )
            // InternalLTLFormula.g:14594:2: ( ruleEStringAllTypes )
            {
            // InternalLTLFormula.g:14594:2: ( ruleEStringAllTypes )
            // InternalLTLFormula.g:14595:3: ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyStringValueAnnotation__ValuesAssignment_3_1"


    // $ANTLR start "rule__RestrictedKeyStringValueAnnotation__NameAssignment_1"
    // InternalLTLFormula.g:14604:1: rule__RestrictedKeyStringValueAnnotation__NameAssignment_1 : ( ruleExtendedID ) ;
    public final void rule__RestrictedKeyStringValueAnnotation__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14608:1: ( ( ruleExtendedID ) )
            // InternalLTLFormula.g:14609:2: ( ruleExtendedID )
            {
            // InternalLTLFormula.g:14609:2: ( ruleExtendedID )
            // InternalLTLFormula.g:14610:3: ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExtendedID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedKeyStringValueAnnotation__NameAssignment_1"


    // $ANTLR start "rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_2"
    // InternalLTLFormula.g:14619:1: rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_2 : ( ruleEStringBoolean ) ;
    public final void rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14623:1: ( ( ruleEStringBoolean ) )
            // InternalLTLFormula.g:14624:2: ( ruleEStringBoolean )
            {
            // InternalLTLFormula.g:14624:2: ( ruleEStringBoolean )
            // InternalLTLFormula.g:14625:3: ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_2"


    // $ANTLR start "rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_3_1"
    // InternalLTLFormula.g:14634:1: rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_3_1 : ( ruleEStringBoolean ) ;
    public final void rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14638:1: ( ( ruleEStringBoolean ) )
            // InternalLTLFormula.g:14639:2: ( ruleEStringBoolean )
            {
            // InternalLTLFormula.g:14639:2: ( ruleEStringBoolean )
            // InternalLTLFormula.g:14640:3: ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedKeyStringValueAnnotation__ValuesAssignment_3_1"


    // $ANTLR start "rule__StringPragma__NameAssignment_1"
    // InternalLTLFormula.g:14649:1: rule__StringPragma__NameAssignment_1 : ( ruleExtendedID ) ;
    public final void rule__StringPragma__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14653:1: ( ( ruleExtendedID ) )
            // InternalLTLFormula.g:14654:2: ( ruleExtendedID )
            {
            // InternalLTLFormula.g:14654:2: ( ruleExtendedID )
            // InternalLTLFormula.g:14655:3: ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExtendedID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringPragma__NameAssignment_1"


    // $ANTLR start "rule__StringPragma__ValuesAssignment_2"
    // InternalLTLFormula.g:14664:1: rule__StringPragma__ValuesAssignment_2 : ( ruleEStringAllTypes ) ;
    public final void rule__StringPragma__ValuesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14668:1: ( ( ruleEStringAllTypes ) )
            // InternalLTLFormula.g:14669:2: ( ruleEStringAllTypes )
            {
            // InternalLTLFormula.g:14669:2: ( ruleEStringAllTypes )
            // InternalLTLFormula.g:14670:3: ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringPragma__ValuesAssignment_2"


    // $ANTLR start "rule__StringPragma__ValuesAssignment_3_1"
    // InternalLTLFormula.g:14679:1: rule__StringPragma__ValuesAssignment_3_1 : ( ruleEStringAllTypes ) ;
    public final void rule__StringPragma__ValuesAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14683:1: ( ( ruleEStringAllTypes ) )
            // InternalLTLFormula.g:14684:2: ( ruleEStringAllTypes )
            {
            // InternalLTLFormula.g:14684:2: ( ruleEStringAllTypes )
            // InternalLTLFormula.g:14685:3: ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringPragma__ValuesAssignment_3_1"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__NameAssignment_1"
    // InternalLTLFormula.g:14694:1: rule__TypedKeyStringValueAnnotation__NameAssignment_1 : ( ruleExtendedID ) ;
    public final void rule__TypedKeyStringValueAnnotation__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14698:1: ( ( ruleExtendedID ) )
            // InternalLTLFormula.g:14699:2: ( ruleExtendedID )
            {
            // InternalLTLFormula.g:14699:2: ( ruleExtendedID )
            // InternalLTLFormula.g:14700:3: ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExtendedID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__NameAssignment_1"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__TypeAssignment_3"
    // InternalLTLFormula.g:14709:1: rule__TypedKeyStringValueAnnotation__TypeAssignment_3 : ( ruleExtendedID ) ;
    public final void rule__TypedKeyStringValueAnnotation__TypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14713:1: ( ( ruleExtendedID ) )
            // InternalLTLFormula.g:14714:2: ( ruleExtendedID )
            {
            // InternalLTLFormula.g:14714:2: ( ruleExtendedID )
            // InternalLTLFormula.g:14715:3: ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExtendedID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__TypeAssignment_3"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__ValuesAssignment_5"
    // InternalLTLFormula.g:14724:1: rule__TypedKeyStringValueAnnotation__ValuesAssignment_5 : ( ruleEStringAllTypes ) ;
    public final void rule__TypedKeyStringValueAnnotation__ValuesAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14728:1: ( ( ruleEStringAllTypes ) )
            // InternalLTLFormula.g:14729:2: ( ruleEStringAllTypes )
            {
            // InternalLTLFormula.g:14729:2: ( ruleEStringAllTypes )
            // InternalLTLFormula.g:14730:3: ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__ValuesAssignment_5"


    // $ANTLR start "rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1"
    // InternalLTLFormula.g:14739:1: rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1 : ( ruleEStringAllTypes ) ;
    public final void rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14743:1: ( ( ruleEStringAllTypes ) )
            // InternalLTLFormula.g:14744:2: ( ruleEStringAllTypes )
            {
            // InternalLTLFormula.g:14744:2: ( ruleEStringAllTypes )
            // InternalLTLFormula.g:14745:3: ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__NameAssignment_1"
    // InternalLTLFormula.g:14754:1: rule__RestrictedTypedKeyStringValueAnnotation__NameAssignment_1 : ( ruleExtendedID ) ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14758:1: ( ( ruleExtendedID ) )
            // InternalLTLFormula.g:14759:2: ( ruleExtendedID )
            {
            // InternalLTLFormula.g:14759:2: ( ruleExtendedID )
            // InternalLTLFormula.g:14760:3: ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExtendedID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__NameAssignment_1"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__TypeAssignment_3"
    // InternalLTLFormula.g:14769:1: rule__RestrictedTypedKeyStringValueAnnotation__TypeAssignment_3 : ( ruleExtendedID ) ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__TypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14773:1: ( ( ruleExtendedID ) )
            // InternalLTLFormula.g:14774:2: ( ruleExtendedID )
            {
            // InternalLTLFormula.g:14774:2: ( ruleExtendedID )
            // InternalLTLFormula.g:14775:3: ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExtendedID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__TypeAssignment_3"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_5"
    // InternalLTLFormula.g:14784:1: rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_5 : ( ruleEStringBoolean ) ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14788:1: ( ( ruleEStringBoolean ) )
            // InternalLTLFormula.g:14789:2: ( ruleEStringBoolean )
            {
            // InternalLTLFormula.g:14789:2: ( ruleEStringBoolean )
            // InternalLTLFormula.g:14790:3: ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_5"


    // $ANTLR start "rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_6_1"
    // InternalLTLFormula.g:14799:1: rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_6_1 : ( ruleEStringBoolean ) ;
    public final void rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14803:1: ( ( ruleEStringBoolean ) )
            // InternalLTLFormula.g:14804:2: ( ruleEStringBoolean )
            {
            // InternalLTLFormula.g:14804:2: ( ruleEStringBoolean )
            // InternalLTLFormula.g:14805:3: ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestrictedTypedKeyStringValueAnnotation__ValuesAssignment_6_1"


    // $ANTLR start "rule__QuotedKeyStringValueAnnotation__NameAssignment_1"
    // InternalLTLFormula.g:14814:1: rule__QuotedKeyStringValueAnnotation__NameAssignment_1 : ( ruleExtendedID ) ;
    public final void rule__QuotedKeyStringValueAnnotation__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14818:1: ( ( ruleExtendedID ) )
            // InternalLTLFormula.g:14819:2: ( ruleExtendedID )
            {
            // InternalLTLFormula.g:14819:2: ( ruleExtendedID )
            // InternalLTLFormula.g:14820:3: ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExtendedID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedKeyStringValueAnnotation__NameAssignment_1"


    // $ANTLR start "rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2"
    // InternalLTLFormula.g:14829:1: rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2 : ( RULE_STRING ) ;
    public final void rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14833:1: ( ( RULE_STRING ) )
            // InternalLTLFormula.g:14834:2: ( RULE_STRING )
            {
            // InternalLTLFormula.g:14834:2: ( RULE_STRING )
            // InternalLTLFormula.g:14835:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2"


    // $ANTLR start "rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1"
    // InternalLTLFormula.g:14844:1: rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1 : ( RULE_STRING ) ;
    public final void rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14848:1: ( ( RULE_STRING ) )
            // InternalLTLFormula.g:14849:2: ( RULE_STRING )
            {
            // InternalLTLFormula.g:14849:2: ( RULE_STRING )
            // InternalLTLFormula.g:14850:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1"
    // InternalLTLFormula.g:14859:1: rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1 : ( ruleExtendedID ) ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14863:1: ( ( ruleExtendedID ) )
            // InternalLTLFormula.g:14864:2: ( ruleExtendedID )
            {
            // InternalLTLFormula.g:14864:2: ( ruleExtendedID )
            // InternalLTLFormula.g:14865:3: ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExtendedID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3"
    // InternalLTLFormula.g:14874:1: rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3 : ( ruleExtendedID ) ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14878:1: ( ( ruleExtendedID ) )
            // InternalLTLFormula.g:14879:2: ( ruleExtendedID )
            {
            // InternalLTLFormula.g:14879:2: ( ruleExtendedID )
            // InternalLTLFormula.g:14880:3: ruleExtendedID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExtendedID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5"
    // InternalLTLFormula.g:14889:1: rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5 : ( RULE_STRING ) ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14893:1: ( ( RULE_STRING ) )
            // InternalLTLFormula.g:14894:2: ( RULE_STRING )
            {
            // InternalLTLFormula.g:14894:2: ( RULE_STRING )
            // InternalLTLFormula.g:14895:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5"


    // $ANTLR start "rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1"
    // InternalLTLFormula.g:14904:1: rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1 : ( RULE_STRING ) ;
    public final void rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLTLFormula.g:14908:1: ( ( RULE_STRING ) )
            // InternalLTLFormula.g:14909:2: ( RULE_STRING )
            {
            // InternalLTLFormula.g:14909:2: ( RULE_STRING )
            // InternalLTLFormula.g:14910:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1"

    // $ANTLR start synpred6_InternalLTLFormula
    public final void synpred6_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:2350:2: ( ( ruleReferenceCall ) )
        // InternalLTLFormula.g:2350:2: ( ruleReferenceCall )
        {
        // InternalLTLFormula.g:2350:2: ( ruleReferenceCall )
        // InternalLTLFormula.g:2351:3: ruleReferenceCall
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_2()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleReferenceCall();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalLTLFormula

    // $ANTLR start synpred10_InternalLTLFormula
    public final void synpred10_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:2374:2: ( ( ruleValuedObjectTestExpression ) )
        // InternalLTLFormula.g:2374:2: ( ruleValuedObjectTestExpression )
        {
        // InternalLTLFormula.g:2374:2: ( ruleValuedObjectTestExpression )
        // InternalLTLFormula.g:2375:3: ruleValuedObjectTestExpression
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_6()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleValuedObjectTestExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred10_InternalLTLFormula

    // $ANTLR start synpred12_InternalLTLFormula
    public final void synpred12_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:2401:2: ( ( ruleBoolExpression ) )
        // InternalLTLFormula.g:2401:2: ( ruleBoolExpression )
        {
        // InternalLTLFormula.g:2401:2: ( ruleBoolExpression )
        // InternalLTLFormula.g:2402:3: ruleBoolExpression
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalLTLFormula

    // $ANTLR start synpred13_InternalLTLFormula
    public final void synpred13_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:2422:2: ( ( ruleValuedExpression ) )
        // InternalLTLFormula.g:2422:2: ( ruleValuedExpression )
        {
        // InternalLTLFormula.g:2422:2: ( ruleValuedExpression )
        // InternalLTLFormula.g:2423:3: ruleValuedExpression
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred13_InternalLTLFormula

    // $ANTLR start synpred22_InternalLTLFormula
    public final void synpred22_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:2581:2: ( ( ( rule__TernaryOperation__Group_0__0 ) ) )
        // InternalLTLFormula.g:2581:2: ( ( rule__TernaryOperation__Group_0__0 ) )
        {
        // InternalLTLFormula.g:2581:2: ( ( rule__TernaryOperation__Group_0__0 ) )
        // InternalLTLFormula.g:2582:3: ( rule__TernaryOperation__Group_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getTernaryOperationAccess().getGroup_0()); 
        }
        // InternalLTLFormula.g:2583:3: ( rule__TernaryOperation__Group_0__0 )
        // InternalLTLFormula.g:2583:4: rule__TernaryOperation__Group_0__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__TernaryOperation__Group_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred22_InternalLTLFormula

    // $ANTLR start synpred28_InternalLTLFormula
    public final void synpred28_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:2632:2: ( ( ( rule__AtomicValuedExpression__Group_5__0 ) ) )
        // InternalLTLFormula.g:2632:2: ( ( rule__AtomicValuedExpression__Group_5__0 ) )
        {
        // InternalLTLFormula.g:2632:2: ( ( rule__AtomicValuedExpression__Group_5__0 ) )
        // InternalLTLFormula.g:2633:3: ( rule__AtomicValuedExpression__Group_5__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAtomicValuedExpressionAccess().getGroup_5()); 
        }
        // InternalLTLFormula.g:2634:3: ( rule__AtomicValuedExpression__Group_5__0 )
        // InternalLTLFormula.g:2634:4: rule__AtomicValuedExpression__Group_5__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AtomicValuedExpression__Group_5__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred28_InternalLTLFormula

    // $ANTLR start synpred36_InternalLTLFormula
    public final void synpred36_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:2800:2: ( ( ruleBoolExpression ) )
        // InternalLTLFormula.g:2800:2: ( ruleBoolExpression )
        {
        // InternalLTLFormula.g:2800:2: ( ruleBoolExpression )
        // InternalLTLFormula.g:2801:3: ruleBoolExpression
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getVectorValueMemberAccess().getBoolExpressionParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalLTLFormula

    // $ANTLR start synpred37_InternalLTLFormula
    public final void synpred37_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:2806:2: ( ( ruleValuedExpression ) )
        // InternalLTLFormula.g:2806:2: ( ruleValuedExpression )
        {
        // InternalLTLFormula.g:2806:2: ( ruleValuedExpression )
        // InternalLTLFormula.g:2807:3: ruleValuedExpression
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getVectorValueMemberAccess().getValuedExpressionParserRuleCall_1()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred37_InternalLTLFormula

    // $ANTLR start synpred81_InternalLTLFormula
    public final void synpred81_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:5354:3: ( rule__ShiftExpressions__Group_1_0_3__0 )
        // InternalLTLFormula.g:5354:3: rule__ShiftExpressions__Group_1_0_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ShiftExpressions__Group_1_0_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred81_InternalLTLFormula

    // $ANTLR start synpred82_InternalLTLFormula
    public final void synpred82_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:5516:3: ( rule__ShiftExpressions__Group_1_1_3__0 )
        // InternalLTLFormula.g:5516:3: rule__ShiftExpressions__Group_1_1_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ShiftExpressions__Group_1_1_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred82_InternalLTLFormula

    // $ANTLR start synpred83_InternalLTLFormula
    public final void synpred83_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:5678:3: ( rule__ShiftExpressions__Group_1_2_3__0 )
        // InternalLTLFormula.g:5678:3: rule__ShiftExpressions__Group_1_2_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ShiftExpressions__Group_1_2_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred83_InternalLTLFormula

    // $ANTLR start synpred89_InternalLTLFormula
    public final void synpred89_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:6380:3: ( rule__SumExpression__Group_1_0_3__0 )
        // InternalLTLFormula.g:6380:3: rule__SumExpression__Group_1_0_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SumExpression__Group_1_0_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred89_InternalLTLFormula

    // $ANTLR start synpred90_InternalLTLFormula
    public final void synpred90_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:6542:3: ( rule__SumExpression__Group_1_1_3__0 )
        // InternalLTLFormula.g:6542:3: rule__SumExpression__Group_1_1_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SumExpression__Group_1_1_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred90_InternalLTLFormula

    // $ANTLR start synpred92_InternalLTLFormula
    public final void synpred92_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:6758:3: ( rule__ProductExpression__Group_1_0_3__0 )
        // InternalLTLFormula.g:6758:3: rule__ProductExpression__Group_1_0_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ProductExpression__Group_1_0_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred92_InternalLTLFormula

    // $ANTLR start synpred93_InternalLTLFormula
    public final void synpred93_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:6920:3: ( rule__ProductExpression__Group_1_1_3__0 )
        // InternalLTLFormula.g:6920:3: rule__ProductExpression__Group_1_1_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ProductExpression__Group_1_1_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred93_InternalLTLFormula

    // $ANTLR start synpred94_InternalLTLFormula
    public final void synpred94_InternalLTLFormula_fragment() throws RecognitionException {   
        // InternalLTLFormula.g:7082:3: ( rule__ProductExpression__Group_1_2_3__0 )
        // InternalLTLFormula.g:7082:3: rule__ProductExpression__Group_1_2_3__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__ProductExpression__Group_1_2_3__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred94_InternalLTLFormula

    // Delegated rules

    public final boolean synpred28_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalLTLFormula() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalLTLFormula_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA3 dfa3 = new DFA3(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA5 dfa5 = new DFA5(this);
    protected DFA12 dfa12 = new DFA12(this);
    protected DFA13 dfa13 = new DFA13(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA24 dfa24 = new DFA24(this);
    protected DFA25 dfa25 = new DFA25(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA49 dfa49 = new DFA49(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA60 dfa60 = new DFA60(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA70 dfa70 = new DFA70(this);
    static final String dfa_1s = "\16\uffff";
    static final String dfa_2s = "\1\5\2\uffff\1\0\12\uffff";
    static final String dfa_3s = "\1\103\2\uffff\1\0\12\uffff";
    static final String dfa_4s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\6\1\7\1\uffff\1\10\1\11\2\uffff\1\3";
    static final String dfa_5s = "\3\uffff\1\0\12\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\1\3\2\uffff\2\12\12\uffff\1\7\12\uffff\1\7\22\uffff\1\2\6\uffff\1\5\1\6\1\4\5\uffff\1\12\1\11",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "2333:1: rule__AtomicExpression__Alternatives : ( ( ruleBoolValue ) | ( ( rule__AtomicExpression__Group_1__0 ) ) | ( ruleReferenceCall ) | ( ruleFunctionCall ) | ( ruleRandomCall ) | ( ruleRandomizeCall ) | ( ruleValuedObjectTestExpression ) | ( ruleSpecialAccessExpression ) | ( ruleTextExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA3_3 = input.LA(1);

                         
                        int index3_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalLTLFormula()) ) {s = 13;}

                        else if ( (synpred10_InternalLTLFormula()) ) {s = 7;}

                         
                        input.seek(index3_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 3, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\26\uffff";
    static final String dfa_8s = "\1\4\22\0\3\uffff";
    static final String dfa_9s = "\1\103\22\0\3\uffff";
    static final String dfa_10s = "\23\uffff\1\1\1\uffff\1\2";
    static final String dfa_11s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\3\uffff}>";
    static final String[] dfa_12s = {
            "\1\4\1\10\1\11\1\2\1\3\1\22\1\20\12\uffff\1\15\1\23\3\uffff\1\23\1\uffff\1\1\3\uffff\1\16\22\uffff\1\7\6\uffff\1\13\1\14\1\12\1\5\2\uffff\1\6\1\uffff\1\21\1\17",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "2396:1: rule__Expression__Alternatives : ( ( ruleBoolExpression ) | ( ruleValuedExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_1 = input.LA(1);

                         
                        int index4_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA4_2 = input.LA(1);

                         
                        int index4_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA4_3 = input.LA(1);

                         
                        int index4_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA4_4 = input.LA(1);

                         
                        int index4_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA4_5 = input.LA(1);

                         
                        int index4_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA4_6 = input.LA(1);

                         
                        int index4_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA4_7 = input.LA(1);

                         
                        int index4_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA4_8 = input.LA(1);

                         
                        int index4_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA4_9 = input.LA(1);

                         
                        int index4_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA4_10 = input.LA(1);

                         
                        int index4_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA4_11 = input.LA(1);

                         
                        int index4_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA4_12 = input.LA(1);

                         
                        int index4_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA4_13 = input.LA(1);

                         
                        int index4_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA4_14 = input.LA(1);

                         
                        int index4_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA4_15 = input.LA(1);

                         
                        int index4_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA4_16 = input.LA(1);

                         
                        int index4_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA4_17 = input.LA(1);

                         
                        int index4_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA4_18 = input.LA(1);

                         
                        int index4_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLTLFormula()) ) {s = 19;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index4_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\25\uffff";
    static final String dfa_14s = "\1\4\6\uffff\14\0\2\uffff";
    static final String dfa_15s = "\1\103\6\uffff\14\0\2\uffff";
    static final String dfa_16s = "\1\uffff\1\1\21\uffff\1\2\1\uffff";
    static final String dfa_17s = "\7\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\2\uffff}>";
    static final String[] dfa_18s = {
            "\1\1\1\10\1\11\2\1\1\22\1\20\12\uffff\1\15\1\23\3\uffff\1\23\1\uffff\1\1\3\uffff\1\16\22\uffff\1\7\6\uffff\1\13\1\14\1\12\1\1\2\uffff\1\1\1\uffff\1\21\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "2417:1: rule__NotOrValuedExpression__Alternatives : ( ( ruleValuedExpression ) | ( ruleNotExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA5_7 = input.LA(1);

                         
                        int index5_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalLTLFormula()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index5_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA5_8 = input.LA(1);

                         
                        int index5_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalLTLFormula()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index5_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA5_9 = input.LA(1);

                         
                        int index5_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalLTLFormula()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index5_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA5_10 = input.LA(1);

                         
                        int index5_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalLTLFormula()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index5_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA5_11 = input.LA(1);

                         
                        int index5_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalLTLFormula()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index5_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA5_12 = input.LA(1);

                         
                        int index5_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalLTLFormula()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index5_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA5_13 = input.LA(1);

                         
                        int index5_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalLTLFormula()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index5_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA5_14 = input.LA(1);

                         
                        int index5_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalLTLFormula()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index5_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA5_15 = input.LA(1);

                         
                        int index5_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalLTLFormula()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index5_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA5_16 = input.LA(1);

                         
                        int index5_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalLTLFormula()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index5_16);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA5_17 = input.LA(1);

                         
                        int index5_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalLTLFormula()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index5_17);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA5_18 = input.LA(1);

                         
                        int index5_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalLTLFormula()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index5_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 5, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_19s = "\24\uffff";
    static final String dfa_20s = "\1\4\21\0\2\uffff";
    static final String dfa_21s = "\1\103\21\0\2\uffff";
    static final String dfa_22s = "\22\uffff\1\1\1\2";
    static final String dfa_23s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\2\uffff}>";
    static final String[] dfa_24s = {
            "\1\3\1\7\1\10\1\1\1\2\1\21\1\17\12\uffff\1\14\12\uffff\1\15\22\uffff\1\6\6\uffff\1\12\1\13\1\11\1\4\2\uffff\1\5\1\uffff\1\20\1\16",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA12 extends DFA {

        public DFA12(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 12;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "2576:1: rule__TernaryOperation__Alternatives : ( ( ( rule__TernaryOperation__Group_0__0 ) ) | ( ruleInitExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA12_1 = input.LA(1);

                         
                        int index12_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA12_2 = input.LA(1);

                         
                        int index12_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA12_3 = input.LA(1);

                         
                        int index12_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA12_4 = input.LA(1);

                         
                        int index12_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA12_5 = input.LA(1);

                         
                        int index12_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA12_6 = input.LA(1);

                         
                        int index12_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA12_7 = input.LA(1);

                         
                        int index12_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA12_8 = input.LA(1);

                         
                        int index12_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA12_9 = input.LA(1);

                         
                        int index12_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA12_10 = input.LA(1);

                         
                        int index12_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA12_11 = input.LA(1);

                         
                        int index12_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA12_12 = input.LA(1);

                         
                        int index12_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA12_13 = input.LA(1);

                         
                        int index12_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA12_14 = input.LA(1);

                         
                        int index12_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA12_15 = input.LA(1);

                         
                        int index12_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA12_16 = input.LA(1);

                         
                        int index12_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA12_17 = input.LA(1);

                         
                        int index12_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index12_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 12, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_25s = "\23\uffff";
    static final String dfa_26s = "\1\4\5\uffff\1\0\14\uffff";
    static final String dfa_27s = "\1\103\5\uffff\1\0\14\uffff";
    static final String dfa_28s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\uffff\1\7\12\uffff\1\6";
    static final String dfa_29s = "\6\uffff\1\0\14\uffff}>";
    static final String[] dfa_30s = {
            "\1\3\2\7\1\1\1\2\2\7\12\uffff\1\7\12\uffff\1\7\22\uffff\1\6\6\uffff\3\7\1\4\2\uffff\1\5\1\uffff\2\7",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA13 extends DFA {

        public DFA13(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 13;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "2597:1: rule__AtomicValuedExpression__Alternatives : ( ( ruleIntValue ) | ( ruleFloatValue ) | ( ruleStringValue ) | ( ruleVectorValue ) | ( ruleNullValue ) | ( ( rule__AtomicValuedExpression__Group_5__0 ) ) | ( ruleAtomicExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA13_6 = input.LA(1);

                         
                        int index13_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalLTLFormula()) ) {s = 18;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index13_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 13, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_31s = "\27\uffff";
    static final String dfa_32s = "\1\4\22\0\4\uffff";
    static final String dfa_33s = "\1\103\22\0\4\uffff";
    static final String dfa_34s = "\23\uffff\1\1\1\uffff\1\3\1\2";
    static final String dfa_35s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff}>";
    static final String[] dfa_36s = {
            "\1\4\1\10\1\11\1\2\1\3\1\22\1\20\12\uffff\1\15\1\23\3\uffff\1\23\1\uffff\1\1\3\uffff\1\16\22\uffff\1\7\6\uffff\1\13\1\14\1\12\1\5\1\uffff\1\25\1\6\1\uffff\1\21\1\17",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[][] dfa_36 = unpackEncodedStringArray(dfa_36s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "2795:1: rule__VectorValueMember__Alternatives : ( ( ruleBoolExpression ) | ( ruleValuedExpression ) | ( ruleIgnoreValue ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA21_1 = input.LA(1);

                         
                        int index21_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA21_2 = input.LA(1);

                         
                        int index21_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA21_3 = input.LA(1);

                         
                        int index21_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA21_4 = input.LA(1);

                         
                        int index21_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA21_5 = input.LA(1);

                         
                        int index21_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA21_6 = input.LA(1);

                         
                        int index21_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA21_7 = input.LA(1);

                         
                        int index21_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA21_8 = input.LA(1);

                         
                        int index21_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA21_9 = input.LA(1);

                         
                        int index21_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA21_10 = input.LA(1);

                         
                        int index21_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA21_11 = input.LA(1);

                         
                        int index21_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA21_12 = input.LA(1);

                         
                        int index21_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA21_13 = input.LA(1);

                         
                        int index21_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA21_14 = input.LA(1);

                         
                        int index21_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA21_15 = input.LA(1);

                         
                        int index21_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA21_16 = input.LA(1);

                         
                        int index21_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA21_17 = input.LA(1);

                         
                        int index21_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA21_18 = input.LA(1);

                         
                        int index21_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalLTLFormula()) ) {s = 19;}

                        else if ( (synpred37_InternalLTLFormula()) ) {s = 22;}

                         
                        input.seek(index21_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 21, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_37s = "\12\uffff";
    static final String dfa_38s = "\3\uffff\1\1\4\uffff\2\1";
    static final String dfa_39s = "\1\12\1\uffff\1\6\1\4\2\6\1\7\1\uffff\2\4";
    static final String dfa_40s = "\1\102\1\uffff\1\6\1\102\1\6\1\10\1\7\1\uffff\2\102";
    static final String dfa_41s = "\1\uffff\1\1\5\uffff\1\2\2\uffff";
    static final String dfa_42s = "\12\uffff}>";
    static final String[] dfa_43s = {
            "\1\1\67\uffff\1\2",
            "",
            "\1\3",
            "\7\1\21\uffff\1\5\16\uffff\1\4\14\uffff\1\1\4\uffff\1\7\3\uffff\1\6\1\1",
            "\1\10",
            "\1\10\2\1",
            "\1\11",
            "",
            "\7\1\21\uffff\1\5\16\uffff\1\4\14\uffff\1\1\4\uffff\1\7\3\uffff\1\6\1\1",
            "\7\1\21\uffff\1\1\33\uffff\1\1\4\uffff\1\7\4\uffff\1\1"
    };

    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_37;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "2888:1: rule__Annotation__Alternatives : ( ( superAnnotation ) | ( ruleJsonAnnotation ) );";
        }
    }
    static final String dfa_44s = "\14\uffff";
    static final String dfa_45s = "\3\uffff\1\11\6\uffff\2\11";
    static final String dfa_46s = "\1\12\1\uffff\1\6\1\4\2\6\1\7\3\uffff\2\4";
    static final String dfa_47s = "\1\102\1\uffff\1\6\1\102\1\6\1\10\1\7\3\uffff\2\102";
    static final String dfa_48s = "\1\uffff\1\1\5\uffff\1\3\1\2\1\4\2\uffff";
    static final String dfa_49s = "\14\uffff}>";
    static final String[] dfa_50s = {
            "\1\1\67\uffff\1\2",
            "",
            "\1\3",
            "\5\10\2\11\21\uffff\1\5\16\uffff\1\4\14\uffff\1\7\10\uffff\1\6\1\11",
            "\1\12",
            "\1\12\2\10",
            "\1\13",
            "",
            "",
            "",
            "\5\10\2\11\21\uffff\1\5\16\uffff\1\4\14\uffff\1\7\10\uffff\1\6\1\11",
            "\5\10\2\11\21\uffff\1\10\33\uffff\1\7\11\uffff\1\11"
    };

    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_44;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "2909:1: superAnnotation__Alternatives : ( ( ruleCommentAnnotation ) | ( ruleKeyStringValueAnnotation ) | ( ruleTypedKeyStringValueAnnotation ) | ( ruleTagAnnotation ) );";
        }
    }
    static final String dfa_51s = "\2\uffff\1\7\5\uffff\2\7";
    static final String dfa_52s = "\1\101\1\6\1\4\2\6\1\7\2\uffff\2\4";
    static final String dfa_53s = "\1\101\1\6\1\101\1\6\1\10\1\7\2\uffff\1\101\1\34";
    static final String dfa_54s = "\6\uffff\1\1\1\2\2\uffff";
    static final String[] dfa_55s = {
            "\1\1",
            "\1\2",
            "\5\6\23\uffff\1\4\16\uffff\1\3\25\uffff\1\5",
            "\1\10",
            "\1\10\2\6",
            "\1\11",
            "",
            "",
            "\5\6\23\uffff\1\4\16\uffff\1\3\25\uffff\1\5",
            "\5\6\23\uffff\1\6"
    };
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[][] dfa_55 = unpackEncodedStringArray(dfa_55s);

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_37;
            this.eof = dfa_51;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_42;
            this.transition = dfa_55;
        }
        public String getDescription() {
            return "2942:1: superPragma__Alternatives : ( ( ruleStringPragma ) | ( rulePragmaTag ) );";
        }
    }
    static final String dfa_56s = "\13\uffff";
    static final String dfa_57s = "\1\12\1\uffff\1\6\1\4\2\6\1\7\2\uffff\2\4";
    static final String dfa_58s = "\1\102\1\uffff\1\6\1\101\1\6\1\10\1\7\2\uffff\1\101\1\70";
    static final String dfa_59s = "\1\uffff\1\1\5\uffff\1\3\1\2\2\uffff";
    static final String dfa_60s = "\13\uffff}>";
    static final String[] dfa_61s = {
            "\1\1\67\uffff\1\2",
            "",
            "\1\3",
            "\5\10\23\uffff\1\5\16\uffff\1\4\14\uffff\1\7\10\uffff\1\6",
            "\1\11",
            "\1\11\2\10",
            "\1\12",
            "",
            "",
            "\5\10\23\uffff\1\5\16\uffff\1\4\14\uffff\1\7\10\uffff\1\6",
            "\5\10\23\uffff\1\10\33\uffff\1\7"
    };

    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[][] dfa_61 = unpackEncodedStringArray(dfa_61s);

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = dfa_56;
            this.eof = dfa_56;
            this.min = dfa_57;
            this.max = dfa_58;
            this.accept = dfa_59;
            this.special = dfa_60;
            this.transition = dfa_61;
        }
        public String getDescription() {
            return "2963:1: superValuedAnnotation__Alternatives : ( ( ruleCommentAnnotation ) | ( ruleKeyStringValueAnnotation ) | ( ruleTypedKeyStringValueAnnotation ) );";
        }
    }
    static final String dfa_62s = "\1\102\1\uffff\1\6\1\101\2\6\1\7\3\uffff\1\101\1\70";
    static final String dfa_63s = "\1\uffff\1\1\5\uffff\1\2\1\3\1\4\2\uffff";
    static final String[] dfa_64s = {
            "\1\1\67\uffff\1\2",
            "",
            "\1\3",
            "\1\7\27\uffff\1\5\16\uffff\1\4\14\uffff\1\10\10\uffff\1\6",
            "\1\12",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
            "\1\7\27\uffff\1\5\16\uffff\1\4\14\uffff\1\10\10\uffff\1\6",
            "\1\7\63\uffff\1\10"
    };
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_44;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_49;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "2990:1: superQuotedStringAnnotation__Alternatives : ( ( ruleCommentAnnotation ) | ( ruleQuotedKeyStringValueAnnotation ) | ( ruleQuotedTypedKeyStringValueAnnotation ) | ( ruleTagAnnotation ) );";
        }
    }
    static final String dfa_65s = "\1\1\25\uffff";
    static final String dfa_66s = "\1\24\21\uffff\1\0\3\uffff";
    static final String dfa_67s = "\1\76\21\uffff\1\0\3\uffff";
    static final String dfa_68s = "\1\uffff\1\2\23\uffff\1\1";
    static final String dfa_69s = "\22\uffff\1\0\3\uffff}>";
    static final String[] dfa_70s = {
            "\1\1\2\uffff\3\1\7\uffff\2\1\1\22\2\1\6\uffff\6\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_7;
            this.eof = dfa_65;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_68;
            this.special = dfa_69;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "()* loopback of 5354:2: ( rule__ShiftExpressions__Group_1_0_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_18 = input.LA(1);

                         
                        int index48_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalLTLFormula()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index48_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_71s = "\1\24\22\uffff\1\0\2\uffff";
    static final String dfa_72s = "\1\76\22\uffff\1\0\2\uffff";
    static final String dfa_73s = "\23\uffff\1\0\2\uffff}>";
    static final String[] dfa_74s = {
            "\1\1\2\uffff\3\1\7\uffff\3\1\1\23\1\1\6\uffff\6\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[][] dfa_74 = unpackEncodedStringArray(dfa_74s);

    class DFA49 extends DFA {

        public DFA49(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 49;
            this.eot = dfa_7;
            this.eof = dfa_65;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_68;
            this.special = dfa_73;
            this.transition = dfa_74;
        }
        public String getDescription() {
            return "()* loopback of 5516:2: ( rule__ShiftExpressions__Group_1_1_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA49_19 = input.LA(1);

                         
                        int index49_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred82_InternalLTLFormula()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index49_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 49, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_75s = "\1\24\23\uffff\1\0\1\uffff";
    static final String dfa_76s = "\1\76\23\uffff\1\0\1\uffff";
    static final String dfa_77s = "\24\uffff\1\0\1\uffff}>";
    static final String[] dfa_78s = {
            "\1\1\2\uffff\3\1\7\uffff\4\1\1\24\6\uffff\6\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_7;
            this.eof = dfa_65;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_68;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "()* loopback of 5678:2: ( rule__ShiftExpressions__Group_1_2_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA50_20 = input.LA(1);

                         
                        int index50_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_InternalLTLFormula()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index50_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 50, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_79s = "\30\uffff";
    static final String dfa_80s = "\1\1\27\uffff";
    static final String dfa_81s = "\1\24\24\uffff\1\0\2\uffff";
    static final String dfa_82s = "\1\76\24\uffff\1\0\2\uffff";
    static final String dfa_83s = "\1\uffff\1\2\25\uffff\1\1";
    static final String dfa_84s = "\25\uffff\1\0\2\uffff}>";
    static final String[] dfa_85s = {
            "\1\1\2\uffff\3\1\1\uffff\1\25\1\1\4\uffff\5\1\6\uffff\6\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[][] dfa_85 = unpackEncodedStringArray(dfa_85s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_79;
            this.eof = dfa_80;
            this.min = dfa_81;
            this.max = dfa_82;
            this.accept = dfa_83;
            this.special = dfa_84;
            this.transition = dfa_85;
        }
        public String getDescription() {
            return "()* loopback of 6380:2: ( rule__SumExpression__Group_1_0_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA56_21 = input.LA(1);

                         
                        int index56_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalLTLFormula()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 56, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_86s = "\1\24\25\uffff\1\0\1\uffff";
    static final String dfa_87s = "\1\76\25\uffff\1\0\1\uffff";
    static final String dfa_88s = "\26\uffff\1\0\1\uffff}>";
    static final String[] dfa_89s = {
            "\1\1\2\uffff\3\1\1\uffff\1\1\1\26\4\uffff\5\1\6\uffff\6\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[][] dfa_89 = unpackEncodedStringArray(dfa_89s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_79;
            this.eof = dfa_80;
            this.min = dfa_86;
            this.max = dfa_87;
            this.accept = dfa_83;
            this.special = dfa_88;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "()* loopback of 6542:2: ( rule__SumExpression__Group_1_1_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA57_22 = input.LA(1);

                         
                        int index57_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalLTLFormula()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index57_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 57, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_90s = "\33\uffff";
    static final String dfa_91s = "\1\1\32\uffff";
    static final String dfa_92s = "\1\24\26\uffff\1\0\3\uffff";
    static final String dfa_93s = "\1\76\26\uffff\1\0\3\uffff";
    static final String dfa_94s = "\1\uffff\1\2\30\uffff\1\1";
    static final String dfa_95s = "\27\uffff\1\0\3\uffff}>";
    static final String[] dfa_96s = {
            "\1\1\2\uffff\3\1\1\uffff\2\1\1\27\2\1\1\uffff\5\1\6\uffff\6\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[][] dfa_96 = unpackEncodedStringArray(dfa_96s);

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_90;
            this.eof = dfa_91;
            this.min = dfa_92;
            this.max = dfa_93;
            this.accept = dfa_94;
            this.special = dfa_95;
            this.transition = dfa_96;
        }
        public String getDescription() {
            return "()* loopback of 6758:2: ( rule__ProductExpression__Group_1_0_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA59_23 = input.LA(1);

                         
                        int index59_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalLTLFormula()) ) {s = 26;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index59_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 59, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_97s = "\1\24\27\uffff\1\0\2\uffff";
    static final String dfa_98s = "\1\76\27\uffff\1\0\2\uffff";
    static final String dfa_99s = "\30\uffff\1\0\2\uffff}>";
    static final String[] dfa_100s = {
            "\1\1\2\uffff\3\1\1\uffff\4\1\1\30\1\uffff\5\1\6\uffff\6\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[][] dfa_100 = unpackEncodedStringArray(dfa_100s);

    class DFA60 extends DFA {

        public DFA60(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 60;
            this.eot = dfa_90;
            this.eof = dfa_91;
            this.min = dfa_97;
            this.max = dfa_98;
            this.accept = dfa_94;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "()* loopback of 6920:2: ( rule__ProductExpression__Group_1_1_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA60_24 = input.LA(1);

                         
                        int index60_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalLTLFormula()) ) {s = 26;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index60_24);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 60, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_101s = "\1\24\30\uffff\1\0\1\uffff";
    static final String dfa_102s = "\1\76\30\uffff\1\0\1\uffff";
    static final String dfa_103s = "\31\uffff\1\0\1\uffff}>";
    static final String[] dfa_104s = {
            "\1\1\2\uffff\3\1\1\uffff\3\1\1\31\1\1\1\uffff\5\1\6\uffff\6\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_101 = DFA.unpackEncodedStringToUnsignedChars(dfa_101s);
    static final char[] dfa_102 = DFA.unpackEncodedStringToUnsignedChars(dfa_102s);
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final short[][] dfa_104 = unpackEncodedStringArray(dfa_104s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_90;
            this.eof = dfa_91;
            this.min = dfa_101;
            this.max = dfa_102;
            this.accept = dfa_94;
            this.special = dfa_103;
            this.transition = dfa_104;
        }
        public String getDescription() {
            return "()* loopback of 7082:2: ( rule__ProductExpression__Group_1_2_3__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA61_25 = input.LA(1);

                         
                        int index61_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalLTLFormula()) ) {s = 26;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_25);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 61, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_105s = "\5\uffff";
    static final String dfa_106s = "\1\6\2\53\2\uffff";
    static final String dfa_107s = "\1\6\2\67\2\uffff";
    static final String dfa_108s = "\3\uffff\1\1\1\2";
    static final String dfa_109s = "\5\uffff}>";
    static final String[] dfa_110s = {
            "\1\1",
            "\1\3\10\uffff\1\4\2\uffff\1\2",
            "\1\3\10\uffff\1\4\2\uffff\1\2",
            "",
            ""
    };

    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final char[] dfa_106 = DFA.unpackEncodedStringToUnsignedChars(dfa_106s);
    static final char[] dfa_107 = DFA.unpackEncodedStringToUnsignedChars(dfa_107s);
    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final short[][] dfa_110 = unpackEncodedStringArray(dfa_110s);

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_105;
            this.eof = dfa_105;
            this.min = dfa_106;
            this.max = dfa_107;
            this.accept = dfa_108;
            this.special = dfa_109;
            this.transition = dfa_110;
        }
        public String getDescription() {
            return "8514:2: ( rule__SpecialAccessExpression__Group_2__0 )?";
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x00000000000E0000L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0008000000000000L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x3C080001146E07F0L,0x000000000000000DL});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000100000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000100002L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000200000000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000200000002L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000400000000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000400000002L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000001000000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000001000002L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000800000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000800002L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000002000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000002000002L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0003F00000000000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000003800000000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000003800000002L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000800000000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x3C080001102007F0L,0x000000000000000DL});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000800000002L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000001000000002L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000002000000002L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000018000000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000018000002L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000008000000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000008000002L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000010000002L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x00000000E0000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x00000000E0000002L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000020000000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000020000002L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000080000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000080000002L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000040000000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000040000002L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x3C080001002007F0L,0x000000000000000DL});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000004000000000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0020000000000000L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000008000000000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000008000000002L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000010000000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000010000000002L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000100200000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000100200040L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0050000000000000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000080000000000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0080000000000000L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0100080000000000L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0100000000000002L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0200000000000000L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x01080C0000000000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x3C0C0001166E07F0L,0x000000000000000DL});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0040000000000002L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0400000000000000L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000040000000000L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0008040000000000L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000402L,0x0000000000000004L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0xBC080001146E07F0L,0x000000000000000DL});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x4000000000000000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0040000000000000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x00000001002000C0L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x2000000000000000L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x4000000000000010L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x21000000000001B0L,0x0000000000000001L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0100000000000000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x23000000000001B0L,0x0000000000000001L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x00000000100001F0L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000070L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000080010000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000080010000002L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000010000080L});
    }


}