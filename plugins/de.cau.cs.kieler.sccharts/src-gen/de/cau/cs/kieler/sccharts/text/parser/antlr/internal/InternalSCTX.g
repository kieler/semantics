/*
 * generated by Xtext
 */
grammar InternalSCTX;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package de.cau.cs.kieler.sccharts.text.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.cau.cs.kieler.sccharts.text.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.kieler.sccharts.text.services.SCTXGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private SCTXGrammarAccess grammarAccess;

    public InternalSCTXParser(TokenStream input, SCTXGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SCCharts";
   	}

   	@Override
   	protected SCTXGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSCCharts
entryRuleSCCharts returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSCChartsRule()); }
	iv_ruleSCCharts=ruleSCCharts
	{ $current=$iv_ruleSCCharts.current; }
	EOF;

// Rule SCCharts
ruleSCCharts returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSCChartsAccess().getPragmasPragmaParserRuleCall_0_0_0());
					}
					lv_pragmas_0_0=rulePragma
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSCChartsRule());
						}
						add(
							$current,
							"pragmas",
							lv_pragmas_0_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.Pragma");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_1='import'
				{
					newLeafNode(otherlv_1, grammarAccess.getSCChartsAccess().getImportKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSCChartsAccess().getImportsEStringParserRuleCall_0_1_1_0());
						}
						lv_imports_2_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSCChartsRule());
							}
							add(
								$current,
								"imports",
								lv_imports_2_0,
								"de.cau.cs.kieler.annotations.Annotations.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSCChartsAccess().getRootStatesRootStateParserRuleCall_1_0());
				}
				lv_rootStates_3_0=ruleRootState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSCChartsRule());
					}
					add(
						$current,
						"rootStates",
						lv_rootStates_3_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.RootState");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleRootState
entryRuleRootState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRootStateRule()); }
	iv_ruleRootState=ruleRootState
	{ $current=$iv_ruleRootState.current; }
	EOF;

// Rule RootState
ruleRootState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRootStateAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootStateRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='scchart'
		{
			newLeafNode(otherlv_1, grammarAccess.getRootStateAccess().getScchartKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRootStateAccess().getNameExtendedIDParserRuleCall_2_0());
				}
				lv_name_2_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootStateRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_label_3_0=RULE_STRING
				{
					newLeafNode(lv_label_3_0, grammarAccess.getRootStateAccess().getLabelSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRootStateRule());
					}
					setWithLastConsumed(
						$current,
						"label",
						lv_label_3_0,
						"de.cau.cs.kieler.annotations.Annotations.STRING");
				}
			)
		)?
		(
			otherlv_4='<'
			{
				newLeafNode(otherlv_4, grammarAccess.getRootStateAccess().getLessThanSignKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRootStateAccess().getGenericParameterDeclarationsGenericParameterDeclarationParserRuleCall_4_1_0());
					}
					lv_genericParameterDeclarations_5_0=ruleGenericParameterDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRootStateRule());
						}
						add(
							$current,
							"genericParameterDeclarations",
							lv_genericParameterDeclarations_5_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameterDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getRootStateAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRootStateAccess().getGenericParameterDeclarationsGenericParameterDeclarationParserRuleCall_4_2_1_0());
						}
						lv_genericParameterDeclarations_7_0=ruleGenericParameterDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRootStateRule());
							}
							add(
								$current,
								"genericParameterDeclarations",
								lv_genericParameterDeclarations_7_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameterDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='>'
			{
				newLeafNode(otherlv_8, grammarAccess.getRootStateAccess().getGreaterThanSignKeyword_4_3());
			}
		)?
		(
			otherlv_9='extends'
			{
				newLeafNode(otherlv_9, grammarAccess.getRootStateAccess().getExtendsKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRootStateAccess().getBaseStateReferencesBaseStateReferenceParserRuleCall_5_1_0());
					}
					lv_baseStateReferences_10_0=ruleBaseStateReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRootStateRule());
						}
						add(
							$current,
							"baseStateReferences",
							lv_baseStateReferences_10_0,
							"de.cau.cs.kieler.sccharts.text.SCTX.BaseStateReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getRootStateAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRootStateAccess().getBaseStateReferencesBaseStateReferenceParserRuleCall_5_2_1_0());
						}
						lv_baseStateReferences_12_0=ruleBaseStateReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRootStateRule());
							}
							add(
								$current,
								"baseStateReferences",
								lv_baseStateReferences_12_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.BaseStateReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_13='{'
		{
			newLeafNode(otherlv_13, grammarAccess.getRootStateAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRootStateAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_7_0());
				}
				lv_declarations_14_0=ruleDeclarationOrMethodWithKeywordWOSemicolon
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootStateRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_14_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRootStateAccess().getActionsLocalActionParserRuleCall_8_0());
				}
				lv_actions_15_0=ruleLocalAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootStateRule());
					}
					add(
						$current,
						"actions",
						lv_actions_15_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRootStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_9_0_0());
					}
					lv_regions_16_0=ruleImplicitControlflowRegion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRootStateRule());
						}
						add(
							$current,
							"regions",
							lv_regions_16_0,
							"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitControlflowRegion");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getRootStateAccess().getRegionsRegionParserRuleCall_9_1_0());
					}
					lv_regions_17_0=ruleRegion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRootStateRule());
						}
						add(
							$current,
							"regions",
							lv_regions_17_0,
							"de.cau.cs.kieler.sccharts.text.SCTX.Region");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getRootStateAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStateAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				lv_initial_1_0='initial'
				{
					newLeafNode(lv_initial_1_0, grammarAccess.getStateAccess().getInitialInitialKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed($current, "initial", lv_initial_1_0 != null, "initial");
				}
			)
		)?
		(
			(
				lv_final_2_0='final'
				{
					newLeafNode(lv_final_2_0, grammarAccess.getStateAccess().getFinalFinalKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed($current, "final", lv_final_2_0 != null, "final");
				}
			)
		)?
		(
			(
				lv_violation_3_0='violation'
				{
					newLeafNode(lv_violation_3_0, grammarAccess.getStateAccess().getViolationViolationKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed($current, "violation", lv_violation_3_0 != null, "violation");
				}
			)
		)?
		(
			(
				lv_connector_4_0='connector'
				{
					newLeafNode(lv_connector_4_0, grammarAccess.getStateAccess().getConnectorConnectorKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed($current, "connector", lv_connector_4_0 != null, "connector");
				}
			)
		)?
		(
			('state')=>
			otherlv_5='state'
			{
				newLeafNode(otherlv_5, grammarAccess.getStateAccess().getStateKeyword_5());
			}
		)
		(
			(
				lv_name_6_0=RULE_ID
				{
					newLeafNode(lv_name_6_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_6_0,
						"de.cau.cs.kieler.annotations.Annotations.ID");
				}
			)
		)
		(
			(
				lv_label_7_0=RULE_STRING
				{
					newLeafNode(lv_label_7_0, grammarAccess.getStateAccess().getLabelSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed(
						$current,
						"label",
						lv_label_7_0,
						"de.cau.cs.kieler.annotations.Annotations.STRING");
				}
			)
		)?
		(
			(
				otherlv_8='is'
				{
					newLeafNode(otherlv_8, grammarAccess.getStateAccess().getIsKeyword_8_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStateAccess().getReferenceScopeCallParserRuleCall_8_0_1_0());
						}
						lv_reference_9_0=ruleScopeCall
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStateRule());
							}
							set(
								$current,
								"reference",
								lv_reference_9_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.ScopeCall");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_10='schedule'
					{
						newLeafNode(otherlv_10, grammarAccess.getStateAccess().getScheduleKeyword_8_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getStateAccess().getScheduleScheduleObjectReferenceParserRuleCall_8_0_2_1_0());
							}
							lv_schedule_11_0=ruleScheduleObjectReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getStateRule());
								}
								add(
									$current,
									"schedule",
									lv_schedule_11_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
			)
			    |
			(
				otherlv_12='calls'
				{
					newLeafNode(otherlv_12, grammarAccess.getStateAccess().getCallsKeyword_8_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStateAccess().getReferenceModuleScopeCallParserRuleCall_8_1_1_0());
						}
						lv_reference_13_0=ruleModuleScopeCall
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStateRule());
							}
							set(
								$current,
								"reference",
								lv_reference_13_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.ModuleScopeCall");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_14='schedule'
					{
						newLeafNode(otherlv_14, grammarAccess.getStateAccess().getScheduleKeyword_8_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getStateAccess().getScheduleScheduleObjectReferenceParserRuleCall_8_1_2_1_0());
							}
							lv_schedule_15_0=ruleScheduleObjectReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getStateRule());
								}
								add(
									$current,
									"schedule",
									lv_schedule_15_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
			)
			    |
			(
				(
					otherlv_16='extends'
					{
						newLeafNode(otherlv_16, grammarAccess.getStateAccess().getExtendsKeyword_8_2_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getStateAccess().getBaseStateReferencesBaseStateReferenceParserRuleCall_8_2_0_1_0());
							}
							lv_baseStateReferences_17_0=ruleBaseStateReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getStateRule());
								}
								add(
									$current,
									"baseStateReferences",
									lv_baseStateReferences_17_0,
									"de.cau.cs.kieler.sccharts.text.SCTX.BaseStateReference");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_18=','
						{
							newLeafNode(otherlv_18, grammarAccess.getStateAccess().getCommaKeyword_8_2_0_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getStateAccess().getBaseStateReferencesBaseStateReferenceParserRuleCall_8_2_0_2_1_0());
								}
								lv_baseStateReferences_19_0=ruleBaseStateReference
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getStateRule());
									}
									add(
										$current,
										"baseStateReferences",
										lv_baseStateReferences_19_0,
										"de.cau.cs.kieler.sccharts.text.SCTX.BaseStateReference");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				(
					otherlv_20='schedule'
					{
						newLeafNode(otherlv_20, grammarAccess.getStateAccess().getScheduleKeyword_8_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getStateAccess().getScheduleScheduleObjectReferenceParserRuleCall_8_2_1_1_0());
							}
							lv_schedule_21_0=ruleScheduleObjectReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getStateRule());
								}
								add(
									$current,
									"schedule",
									lv_schedule_21_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				otherlv_22='{'
				{
					newLeafNode(otherlv_22, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_8_2_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStateAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_8_2_3_0());
						}
						lv_declarations_23_0=ruleDeclarationOrMethodWithKeywordWOSemicolon
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStateRule());
							}
							add(
								$current,
								"declarations",
								lv_declarations_23_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getStateAccess().getActionsLocalActionParserRuleCall_8_2_4_0());
						}
						lv_actions_24_0=ruleLocalAction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStateRule());
							}
							add(
								$current,
								"actions",
								lv_actions_24_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getStateAccess().getRegionsImplicitControlflowRegionParserRuleCall_8_2_5_0_0());
							}
							lv_regions_25_0=ruleImplicitControlflowRegion
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getStateRule());
								}
								add(
									$current,
									"regions",
									lv_regions_25_0,
									"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitControlflowRegion");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getStateAccess().getRegionsRegionParserRuleCall_8_2_5_1_0());
							}
							lv_regions_26_0=ruleRegion
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getStateRule());
								}
								add(
									$current,
									"regions",
									lv_regions_26_0,
									"de.cau.cs.kieler.sccharts.text.SCTX.Region");
								afterParserOrEnumRuleCall();
							}
						)
					)*
				)
				otherlv_27='}'
				{
					newLeafNode(otherlv_27, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_8_2_6());
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getStateAccess().getOutgoingTransitionsTransitionParserRuleCall_9_0());
				}
				lv_outgoingTransitions_28_0=ruleTransition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateRule());
					}
					add(
						$current,
						"outgoingTransitions",
						lv_outgoingTransitions_28_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Transition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleImplicitState
entryRuleImplicitState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplicitStateRule()); }
	iv_ruleImplicitState=ruleImplicitState
	{ $current=$iv_ruleImplicitState.current; }
	EOF;

// Rule ImplicitState
ruleImplicitState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getImplicitStateAccess().getStateAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImplicitStateAccess().getRegionsRegionParserRuleCall_1_0());
				}
				lv_regions_1_0=ruleRegion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplicitStateRule());
					}
					add(
						$current,
						"regions",
						lv_regions_1_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Region");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleScopeCall
entryRuleScopeCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScopeCallRule()); }
	iv_ruleScopeCall=ruleScopeCall
	{ $current=$iv_ruleScopeCall.current; }
	EOF;

// Rule ScopeCall
ruleScopeCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_super_0_0='super.'
				{
					newLeafNode(lv_super_0_0, grammarAccess.getScopeCallAccess().getSuperSuperKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScopeCallRule());
					}
					setWithLastConsumed($current, "super", lv_super_0_0 != null, "super.");
				}
			)
		)?
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScopeCallRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getScopeCallAccess().getTargetNamedObjectCrossReference_1_0());
				}
			)
		)
		(
			otherlv_2='<'
			{
				newLeafNode(otherlv_2, grammarAccess.getScopeCallAccess().getLessThanSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScopeCallAccess().getGenericParametersGenericParameterParserRuleCall_2_1_0());
					}
					lv_genericParameters_3_0=ruleGenericParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScopeCallRule());
						}
						add(
							$current,
							"genericParameters",
							lv_genericParameters_3_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getScopeCallAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getScopeCallAccess().getGenericParametersGenericParameterParserRuleCall_2_2_1_0());
						}
						lv_genericParameters_5_0=ruleGenericParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getScopeCallRule());
							}
							add(
								$current,
								"genericParameters",
								lv_genericParameters_5_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6='>'
			{
				newLeafNode(otherlv_6, grammarAccess.getScopeCallAccess().getGreaterThanSignKeyword_2_3());
			}
		)?
		(
			(
				otherlv_7='('
				{
					newLeafNode(otherlv_7, grammarAccess.getScopeCallAccess().getLeftParenthesisKeyword_3_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getScopeCallAccess().getParametersScopeParameterParserRuleCall_3_0_1_0());
						}
						lv_parameters_8_0=ruleScopeParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getScopeCallRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_8_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.ScopeParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_9=','
					{
						newLeafNode(otherlv_9, grammarAccess.getScopeCallAccess().getCommaKeyword_3_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getScopeCallAccess().getParametersScopeParameterParserRuleCall_3_0_2_1_0());
							}
							lv_parameters_10_0=ruleScopeParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getScopeCallRule());
								}
								add(
									$current,
									"parameters",
									lv_parameters_10_0,
									"de.cau.cs.kieler.sccharts.text.SCTX.ScopeParameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_11=')'
				{
					newLeafNode(otherlv_11, grammarAccess.getScopeCallAccess().getRightParenthesisKeyword_3_0_3());
				}
			)
			    |
			otherlv_12='()'
			{
				newLeafNode(otherlv_12, grammarAccess.getScopeCallAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
			}
		)?
	)
;

// Entry rule entryRuleModuleScopeCall
entryRuleModuleScopeCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleScopeCallRule()); }
	iv_ruleModuleScopeCall=ruleModuleScopeCall
	{ $current=$iv_ruleModuleScopeCall.current; }
	EOF;

// Rule ModuleScopeCall
ruleModuleScopeCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getModuleScopeCallAccess().getModuleScopeCallAction_0(),
					$current);
			}
		)
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModuleScopeCallRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getModuleScopeCallAccess().getTargetNamedObjectCrossReference_1_0());
				}
			)
		)
		(
			(
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getModuleScopeCallAccess().getLeftParenthesisKeyword_2_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getModuleScopeCallAccess().getParametersScopeParameterParserRuleCall_2_0_1_0());
						}
						lv_parameters_3_0=ruleScopeParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModuleScopeCallRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_3_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.ScopeParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getModuleScopeCallAccess().getCommaKeyword_2_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getModuleScopeCallAccess().getParametersScopeParameterParserRuleCall_2_0_2_1_0());
							}
							lv_parameters_5_0=ruleScopeParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getModuleScopeCallRule());
								}
								add(
									$current,
									"parameters",
									lv_parameters_5_0,
									"de.cau.cs.kieler.sccharts.text.SCTX.ScopeParameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getModuleScopeCallAccess().getRightParenthesisKeyword_2_0_3());
				}
			)
			    |
			otherlv_7='()'
			{
				newLeafNode(otherlv_7, grammarAccess.getModuleScopeCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
			}
		)?
	)
;

// Entry rule entryRuleScopeParameter
entryRuleScopeParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScopeParameterRule()); }
	iv_ruleScopeParameter=ruleScopeParameter
	{ $current=$iv_ruleScopeParameter.current; }
	EOF;

// Rule ScopeParameter
ruleScopeParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getScopeParameterAccess().getAccessTypeParameterAccessTypeEnumRuleCall_0_0_0_0());
						}
						lv_accessType_0_0=ruleParameterAccessType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getScopeParameterRule());
							}
							set(
								$current,
								"accessType",
								lv_accessType_0_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ParameterAccessType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getScopeParameterAccess().getExpressionValuedObjectReferenceParserRuleCall_0_0_1_0());
						}
						lv_expression_1_0=ruleValuedObjectReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getScopeParameterRule());
							}
							set(
								$current,
								"expression",
								lv_expression_1_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getScopeParameterAccess().getExpressionThisExpressionParserRuleCall_0_1_0_0());
						}
						lv_expression_2_1=ruleThisExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getScopeParameterRule());
							}
							set(
								$current,
								"expression",
								lv_expression_2_1,
								"de.cau.cs.kieler.kexpressions.KExpressions.ThisExpression");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getScopeParameterAccess().getExpressionExpressionParserRuleCall_0_1_0_1());
						}
						lv_expression_2_2=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getScopeParameterRule());
							}
							set(
								$current,
								"expression",
								lv_expression_2_2,
								"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			otherlv_3='to'
			{
				newLeafNode(otherlv_3, grammarAccess.getScopeParameterAccess().getToKeyword_1_0());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getScopeParameterRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getScopeParameterAccess().getExplicitBindingValuedObjectCrossReference_1_1_0());
					}
				)
			)
			(
				otherlv_5='['
				{
					newLeafNode(otherlv_5, grammarAccess.getScopeParameterAccess().getLeftSquareBracketKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getScopeParameterAccess().getExplicitBindingIndicesExpressionParserRuleCall_1_2_1_0());
						}
						lv_explicitBindingIndices_6_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getScopeParameterRule());
							}
							add(
								$current,
								"explicitBindingIndices",
								lv_explicitBindingIndices_6_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7=']'
				{
					newLeafNode(otherlv_7, grammarAccess.getScopeParameterAccess().getRightSquareBracketKeyword_1_2_2());
				}
			)*
		)?
	)
;

// Entry rule entryRuleBaseStateReference
entryRuleBaseStateReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBaseStateReferenceRule()); }
	iv_ruleBaseStateReference=ruleBaseStateReference
	{ $current=$iv_ruleBaseStateReference.current; }
	EOF;

// Rule BaseStateReference
ruleBaseStateReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBaseStateReferenceRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getBaseStateReferenceAccess().getTargetStateCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='<'
			{
				newLeafNode(otherlv_1, grammarAccess.getBaseStateReferenceAccess().getLessThanSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBaseStateReferenceAccess().getGenericParametersGenericParameterParserRuleCall_1_1_0());
					}
					lv_genericParameters_2_0=ruleGenericParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBaseStateReferenceRule());
						}
						add(
							$current,
							"genericParameters",
							lv_genericParameters_2_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getBaseStateReferenceAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBaseStateReferenceAccess().getGenericParametersGenericParameterParserRuleCall_1_2_1_0());
						}
						lv_genericParameters_4_0=ruleGenericParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBaseStateReferenceRule());
							}
							add(
								$current,
								"genericParameters",
								lv_genericParameters_4_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='>'
			{
				newLeafNode(otherlv_5, grammarAccess.getBaseStateReferenceAccess().getGreaterThanSignKeyword_1_3());
			}
		)?
		(
			(
				otherlv_6='('
				{
					newLeafNode(otherlv_6, grammarAccess.getBaseStateReferenceAccess().getLeftParenthesisKeyword_2_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBaseStateReferenceAccess().getParametersScopeParameterParserRuleCall_2_0_1_0());
						}
						lv_parameters_7_0=ruleScopeParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBaseStateReferenceRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_7_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.ScopeParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_8=','
					{
						newLeafNode(otherlv_8, grammarAccess.getBaseStateReferenceAccess().getCommaKeyword_2_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBaseStateReferenceAccess().getParametersScopeParameterParserRuleCall_2_0_2_1_0());
							}
							lv_parameters_9_0=ruleScopeParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBaseStateReferenceRule());
								}
								add(
									$current,
									"parameters",
									lv_parameters_9_0,
									"de.cau.cs.kieler.sccharts.text.SCTX.ScopeParameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_10=')'
				{
					newLeafNode(otherlv_10, grammarAccess.getBaseStateReferenceAccess().getRightParenthesisKeyword_2_0_3());
				}
			)
			    |
			otherlv_11='()'
			{
				newLeafNode(otherlv_11, grammarAccess.getBaseStateReferenceAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
			}
		)?
	)
;

// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	iv_ruleTransition=ruleTransition
	{ $current=$iv_ruleTransition.current; }
	EOF;

// Rule Transition
ruleTransition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getTransitionAccess().getTransitionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleRestrictedTypeAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransitionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getDelayDelayTypeEnumRuleCall_2_0());
				}
				lv_delay_2_0=ruleDelayType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransitionRule());
					}
					set(
						$current,
						"delay",
						lv_delay_2_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_3='if'
			{
				newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getIfKeyword_3_0());
			}
			(
				(
					lv_triggerDelay_4_0=RULE_INT
					{
						newLeafNode(lv_triggerDelay_4_0, grammarAccess.getTransitionAccess().getTriggerDelayINTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransitionRule());
						}
						setWithLastConsumed(
							$current,
							"triggerDelay",
							lv_triggerDelay_4_0,
							"de.cau.cs.kieler.annotations.Annotations.INT");
					}
				)
			)?
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getTransitionAccess().getTriggerBoolScheduleExpressionParserRuleCall_3_2_0_0());
						}
						lv_trigger_5_0=ruleBoolScheduleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTransitionRule());
							}
							set(
								$current,
								"trigger",
								lv_trigger_5_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.BoolScheduleExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getTransitionAccess().getTriggerAtomicExpressionParserRuleCall_3_2_1_0());
						}
						lv_trigger_6_0=ruleAtomicExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTransitionRule());
							}
							set(
								$current,
								"trigger",
								lv_trigger_6_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_7='Pr='
				{
					newLeafNode(otherlv_7, grammarAccess.getTransitionAccess().getPrKeyword_3_3_0());
				}
				(
					(
						lv_triggerProbability_8_0=RULE_FLOAT
						{
							newLeafNode(lv_triggerProbability_8_0, grammarAccess.getTransitionAccess().getTriggerProbabilityFLOATTerminalRuleCall_3_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTransitionRule());
							}
							setWithLastConsumed(
								$current,
								"triggerProbability",
								lv_triggerProbability_8_0,
								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
						}
					)
				)
			)?
			(
				(
					lv_nondeterministic_9_0='nondeterministic'
					{
						newLeafNode(lv_nondeterministic_9_0, grammarAccess.getTransitionAccess().getNondeterministicNondeterministicKeyword_3_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransitionRule());
						}
						setWithLastConsumed($current, "nondeterministic", lv_nondeterministic_9_0 != null, "nondeterministic");
					}
				)
			)?
		)?
		(
			otherlv_10='do'
			{
				newLeafNode(otherlv_10, grammarAccess.getTransitionAccess().getDoKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_4_1_0());
					}
					lv_effects_11_0=ruleEffect
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransitionRule());
						}
						add(
							$current,
							"effects",
							lv_effects_11_0,
							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=';'
				{
					newLeafNode(otherlv_12, grammarAccess.getTransitionAccess().getSemicolonKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_4_2_1_0());
						}
						lv_effects_13_0=ruleEffect
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTransitionRule());
							}
							add(
								$current,
								"effects",
								lv_effects_13_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getPreemptionPreemptionTypeEnumRuleCall_5_0());
				}
				lv_preemption_14_0=rulePreemptionType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransitionRule());
					}
					set(
						$current,
						"preemption",
						lv_preemption_14_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.PreemptionType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_15='to'
		{
			newLeafNode(otherlv_15, grammarAccess.getTransitionAccess().getToKeyword_6());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				otherlv_16=RULE_ID
				{
					newLeafNode(otherlv_16, grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_7_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getDeferredDeferredTypeEnumRuleCall_8_0());
				}
				lv_deferred_17_0=ruleDeferredType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransitionRule());
					}
					set(
						$current,
						"deferred",
						lv_deferred_17_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.DeferredType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getHistoryHistoryTypeEnumRuleCall_9_0());
				}
				lv_history_18_0=ruleHistoryType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransitionRule());
					}
					set(
						$current,
						"history",
						lv_history_18_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.HistoryType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_19='label'
			{
				newLeafNode(otherlv_19, grammarAccess.getTransitionAccess().getLabelKeyword_10_0());
			}
			(
				(
					lv_label_20_0=RULE_STRING
					{
						newLeafNode(lv_label_20_0, grammarAccess.getTransitionAccess().getLabelSTRINGTerminalRuleCall_10_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransitionRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_20_0,
							"de.cau.cs.kieler.annotations.Annotations.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleRegion
entryRuleRegion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegionRule()); }
	iv_ruleRegion=ruleRegion
	{ $current=$iv_ruleRegion.current; }
	EOF;

// Rule Region
ruleRegion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRegionAccess().getControlflowRegionParserRuleCall_0());
		}
		this_ControlflowRegion_0=ruleControlflowRegion
		{
			$current = $this_ControlflowRegion_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRegionAccess().getDataflowRegionParserRuleCall_1());
		}
		this_DataflowRegion_1=ruleDataflowRegion
		{
			$current = $this_DataflowRegion_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleImplicitControlflowRegion
entryRuleImplicitControlflowRegion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplicitControlflowRegionRule()); }
	iv_ruleImplicitControlflowRegion=ruleImplicitControlflowRegion
	{ $current=$iv_ruleImplicitControlflowRegion.current; }
	EOF;

// Rule ImplicitControlflowRegion
ruleImplicitControlflowRegion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getImplicitControlflowRegionAccess().getControlflowRegionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImplicitControlflowRegionAccess().getStatesStateParserRuleCall_1_0());
				}
				lv_states_1_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplicitControlflowRegionRule());
					}
					add(
						$current,
						"states",
						lv_states_1_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.State");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleControlflowRegion
entryRuleControlflowRegion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControlflowRegionRule()); }
	iv_ruleControlflowRegion=ruleControlflowRegion
	{ $current=$iv_ruleControlflowRegion.current; }
	EOF;

// Rule ControlflowRegion
ruleControlflowRegion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getControlflowRegionAccess().getControlflowRegionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getControlflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					lv_abort_2_0='abort'
					{
						newLeafNode(lv_abort_2_0, grammarAccess.getControlflowRegionAccess().getAbortAbortKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getControlflowRegionRule());
						}
						setWithLastConsumed($current, "abort", lv_abort_2_0 != null, "abort");
					}
				)
			)
			    |
			(
				(
					(
						lv_override_3_0='override'
						{
							newLeafNode(lv_override_3_0, grammarAccess.getControlflowRegionAccess().getOverrideOverrideKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getControlflowRegionRule());
							}
							setWithLastConsumed($current, "override", lv_override_3_0 != null, "override");
						}
					)
				)?
				(
					(
						lv_final_4_0='final'
						{
							newLeafNode(lv_final_4_0, grammarAccess.getControlflowRegionAccess().getFinalFinalKeyword_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getControlflowRegionRule());
							}
							setWithLastConsumed($current, "final", lv_final_4_0 != null, "final");
						}
					)
				)?
			)
		)?
		otherlv_5='region'
		{
			newLeafNode(otherlv_5, grammarAccess.getControlflowRegionAccess().getRegionKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getControlflowRegionAccess().getNameExtendedIDParserRuleCall_4_0());
				}
				lv_name_6_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
					}
					set(
						$current,
						"name",
						lv_name_6_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_label_7_0=RULE_STRING
				{
					newLeafNode(lv_label_7_0, grammarAccess.getControlflowRegionAccess().getLabelSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlflowRegionRule());
					}
					setWithLastConsumed(
						$current,
						"label",
						lv_label_7_0,
						"de.cau.cs.kieler.annotations.Annotations.STRING");
				}
			)
		)?
		(
			(
				otherlv_8='is'
				{
					newLeafNode(otherlv_8, grammarAccess.getControlflowRegionAccess().getIsKeyword_6_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getControlflowRegionAccess().getReferenceScopeCallParserRuleCall_6_0_1_0());
						}
						lv_reference_9_0=ruleScopeCall
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
							}
							set(
								$current,
								"reference",
								lv_reference_9_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.ScopeCall");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_10='for'
					{
						newLeafNode(otherlv_10, grammarAccess.getControlflowRegionAccess().getForKeyword_6_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getControlflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_6_0_2_1_0());
							}
							lv_counterVariable_11_0=ruleCounterVariable
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
								}
								set(
									$current,
									"counterVariable",
									lv_counterVariable_11_0,
									"de.cau.cs.kieler.sccharts.text.SCTX.CounterVariable");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_12=':'
					{
						newLeafNode(otherlv_12, grammarAccess.getControlflowRegionAccess().getColonKeyword_6_0_2_2());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getControlflowRegionAccess().getForStartIntOrReferenceParserRuleCall_6_0_2_3_0());
							}
							lv_forStart_13_0=ruleIntOrReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
								}
								set(
									$current,
									"forStart",
									lv_forStart_13_0,
									"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_14='to'
						{
							newLeafNode(otherlv_14, grammarAccess.getControlflowRegionAccess().getToKeyword_6_0_2_4_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getControlflowRegionAccess().getForEndIntOrReferenceParserRuleCall_6_0_2_4_1_0());
								}
								lv_forEnd_15_0=ruleIntOrReference
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
									}
									set(
										$current,
										"forEnd",
										lv_forEnd_15_0,
										"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)?
				)?
				(
					otherlv_16='schedule'
					{
						newLeafNode(otherlv_16, grammarAccess.getControlflowRegionAccess().getScheduleKeyword_6_0_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getControlflowRegionAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_0_3_1_0());
							}
							lv_schedule_17_0=ruleScheduleObjectReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
								}
								add(
									$current,
									"schedule",
									lv_schedule_17_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
			)
			    |
			(
				(
					otherlv_18='for'
					{
						newLeafNode(otherlv_18, grammarAccess.getControlflowRegionAccess().getForKeyword_6_1_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getControlflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_6_1_0_1_0());
							}
							lv_counterVariable_19_0=ruleCounterVariable
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
								}
								set(
									$current,
									"counterVariable",
									lv_counterVariable_19_0,
									"de.cau.cs.kieler.sccharts.text.SCTX.CounterVariable");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_20=':'
					{
						newLeafNode(otherlv_20, grammarAccess.getControlflowRegionAccess().getColonKeyword_6_1_0_2());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getControlflowRegionAccess().getForStartIntOrReferenceParserRuleCall_6_1_0_3_0());
							}
							lv_forStart_21_0=ruleIntOrReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
								}
								set(
									$current,
									"forStart",
									lv_forStart_21_0,
									"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_22='to'
						{
							newLeafNode(otherlv_22, grammarAccess.getControlflowRegionAccess().getToKeyword_6_1_0_4_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getControlflowRegionAccess().getForEndIntOrReferenceParserRuleCall_6_1_0_4_1_0());
								}
								lv_forEnd_23_0=ruleIntOrReference
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
									}
									set(
										$current,
										"forEnd",
										lv_forEnd_23_0,
										"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)?
				)?
				(
					otherlv_24='schedule'
					{
						newLeafNode(otherlv_24, grammarAccess.getControlflowRegionAccess().getScheduleKeyword_6_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getControlflowRegionAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_1_1_0());
							}
							lv_schedule_25_0=ruleScheduleObjectReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
								}
								add(
									$current,
									"schedule",
									lv_schedule_25_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				(
					(
						otherlv_26='{'
						{
							newLeafNode(otherlv_26, grammarAccess.getControlflowRegionAccess().getLeftCurlyBracketKeyword_6_1_2_0_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_6_1_2_0_1_0());
								}
								lv_declarations_27_0=ruleDeclarationOrMethodWithKeywordWOSemicolon
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
									}
									add(
										$current,
										"declarations",
										lv_declarations_27_0,
										"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
									afterParserOrEnumRuleCall();
								}
							)
						)*
						(
							(
								{
									newCompositeNode(grammarAccess.getControlflowRegionAccess().getActionsLocalActionParserRuleCall_6_1_2_0_2_0());
								}
								lv_actions_28_0=ruleLocalAction
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
									}
									add(
										$current,
										"actions",
										lv_actions_28_0,
										"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
									afterParserOrEnumRuleCall();
								}
							)
						)*
						(
							(
								(
									{
										newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesImplicitStateParserRuleCall_6_1_2_0_3_0_0());
									}
									lv_states_29_0=ruleImplicitState
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
										}
										add(
											$current,
											"states",
											lv_states_29_0,
											"de.cau.cs.kieler.sccharts.text.SCTX.ImplicitState");
										afterParserOrEnumRuleCall();
									}
								)
							)
							    |
							(
								(
									{
										newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_6_1_2_0_3_1_0());
									}
									lv_states_30_0=ruleState
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
										}
										add(
											$current,
											"states",
											lv_states_30_0,
											"de.cau.cs.kieler.sccharts.text.SCTX.State");
										afterParserOrEnumRuleCall();
									}
								)
							)+
						)
						otherlv_31='}'
						{
							newLeafNode(otherlv_31, grammarAccess.getControlflowRegionAccess().getRightCurlyBracketKeyword_6_1_2_0_4());
						}
					)
					    |
					(
						otherlv_32=':'
						{
							newLeafNode(otherlv_32, grammarAccess.getControlflowRegionAccess().getColonKeyword_6_1_2_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getControlflowRegionAccess().getDeclarationsDeclarationOrMethodWithKeywordWOSemicolonParserRuleCall_6_1_2_1_1_0());
								}
								lv_declarations_33_0=ruleDeclarationOrMethodWithKeywordWOSemicolon
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
									}
									add(
										$current,
										"declarations",
										lv_declarations_33_0,
										"de.cau.cs.kieler.sccharts.text.SCTX.DeclarationOrMethodWithKeywordWOSemicolon");
									afterParserOrEnumRuleCall();
								}
							)
						)*
						(
							(
								{
									newCompositeNode(grammarAccess.getControlflowRegionAccess().getActionsLocalActionParserRuleCall_6_1_2_1_2_0());
								}
								lv_actions_34_0=ruleLocalAction
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
									}
									add(
										$current,
										"actions",
										lv_actions_34_0,
										"de.cau.cs.kieler.sccharts.text.SCTX.LocalAction");
									afterParserOrEnumRuleCall();
								}
							)
						)*
						(
							(
								{
									newCompositeNode(grammarAccess.getControlflowRegionAccess().getStatesStateParserRuleCall_6_1_2_1_3_0());
								}
								lv_states_35_0=ruleState
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getControlflowRegionRule());
									}
									add(
										$current,
										"states",
										lv_states_35_0,
										"de.cau.cs.kieler.sccharts.text.SCTX.State");
									afterParserOrEnumRuleCall();
								}
							)
						)*
					)
				)
			)
		)
	)
;

// Entry rule entryRuleDataflowAssignment
entryRuleDataflowAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataflowAssignmentRule()); }
	iv_ruleDataflowAssignment=ruleDataflowAssignment
	{ $current=$iv_ruleDataflowAssignment.current; }
	EOF;

// Rule DataflowAssignment
ruleDataflowAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataflowAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataflowAssignmentRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDataflowAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
				}
				lv_reference_1_0=ruleValuedObjectReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataflowAssignmentRule());
					}
					set(
						$current,
						"reference",
						lv_reference_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDataflowAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
				}
				lv_operator_2_0=ruleAssignOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataflowAssignmentRule());
					}
					set(
						$current,
						"operator",
						lv_operator_2_0,
						"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDataflowAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
				}
				lv_expression_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataflowAssignmentRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='schedule'
			{
				newLeafNode(otherlv_4, grammarAccess.getDataflowAssignmentAccess().getScheduleKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataflowAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
					}
					lv_schedule_5_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataflowAssignmentRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_5_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			(
				(
					lv_sequential_6_1=';'
					{
						newLeafNode(lv_sequential_6_1, grammarAccess.getDataflowAssignmentAccess().getSequentialSemicolonKeyword_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataflowAssignmentRule());
						}
						setWithLastConsumed($current, "sequential", lv_sequential_6_1 != null, null);
					}
					    |
					lv_sequential_6_2='seq'
					{
						newLeafNode(lv_sequential_6_2, grammarAccess.getDataflowAssignmentAccess().getSequentialSeqKeyword_5_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataflowAssignmentRule());
						}
						setWithLastConsumed($current, "sequential", lv_sequential_6_2 != null, null);
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDataflowRegion
entryRuleDataflowRegion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataflowRegionRule()); }
	iv_ruleDataflowRegion=ruleDataflowRegion
	{ $current=$iv_ruleDataflowRegion.current; }
	EOF;

// Rule DataflowRegion
ruleDataflowRegion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getDataflowRegionAccess().getDataflowRegionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDataflowRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				lv_override_2_0='override'
				{
					newLeafNode(lv_override_2_0, grammarAccess.getDataflowRegionAccess().getOverrideOverrideKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataflowRegionRule());
					}
					setWithLastConsumed($current, "override", lv_override_2_0 != null, "override");
				}
			)
		)?
		otherlv_3='dataflow'
		{
			newLeafNode(otherlv_3, grammarAccess.getDataflowRegionAccess().getDataflowKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataflowRegionAccess().getNameExtendedIDParserRuleCall_4_0());
				}
				lv_name_4_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
					}
					set(
						$current,
						"name",
						lv_name_4_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_label_5_0=RULE_STRING
				{
					newLeafNode(lv_label_5_0, grammarAccess.getDataflowRegionAccess().getLabelSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataflowRegionRule());
					}
					setWithLastConsumed(
						$current,
						"label",
						lv_label_5_0,
						"de.cau.cs.kieler.annotations.Annotations.STRING");
				}
			)
		)?
		(
			otherlv_6='for'
			{
				newLeafNode(otherlv_6, grammarAccess.getDataflowRegionAccess().getForKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataflowRegionAccess().getCounterVariableCounterVariableParserRuleCall_6_1_0());
					}
					lv_counterVariable_7_0=ruleCounterVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
						}
						set(
							$current,
							"counterVariable",
							lv_counterVariable_7_0,
							"de.cau.cs.kieler.sccharts.text.SCTX.CounterVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=':'
			{
				newLeafNode(otherlv_8, grammarAccess.getDataflowRegionAccess().getColonKeyword_6_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataflowRegionAccess().getForStartIntOrReferenceParserRuleCall_6_3_0());
					}
					lv_forStart_9_0=ruleIntOrReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
						}
						set(
							$current,
							"forStart",
							lv_forStart_9_0,
							"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10='to'
				{
					newLeafNode(otherlv_10, grammarAccess.getDataflowRegionAccess().getToKeyword_6_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataflowRegionAccess().getForEndIntOrReferenceParserRuleCall_6_4_1_0());
						}
						lv_forEnd_11_0=ruleIntOrReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
							}
							set(
								$current,
								"forEnd",
								lv_forEnd_11_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.IntOrReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)?
		(
			otherlv_12='schedule'
			{
				newLeafNode(otherlv_12, grammarAccess.getDataflowRegionAccess().getScheduleKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataflowRegionAccess().getScheduleScheduleObjectReferenceParserRuleCall_7_1_0());
					}
					lv_schedule_13_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_13_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			(
				lv_once_14_0='once'
				{
					newLeafNode(lv_once_14_0, grammarAccess.getDataflowRegionAccess().getOnceOnceKeyword_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataflowRegionRule());
					}
					setWithLastConsumed($current, "once", lv_once_14_0 != null, "once");
				}
			)
		)?
		(
			(
				otherlv_15='{'
				{
					newLeafNode(otherlv_15, grammarAccess.getDataflowRegionAccess().getLeftCurlyBracketKeyword_9_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_0_1_0());
						}
						lv_declarations_16_0=ruleDeclarationWOSemicolon
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
							}
							add(
								$current,
								"declarations",
								lv_declarations_16_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsDataflowAssignmentParserRuleCall_9_0_2_0_0());
							}
							lv_equations_17_1=ruleDataflowAssignment
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
								}
								add(
									$current,
									"equations",
									lv_equations_17_1,
									"de.cau.cs.kieler.sccharts.text.SCTX.DataflowAssignment");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsAssignmentParserRuleCall_9_0_2_0_1());
							}
							lv_equations_17_2=ruleAssignment
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
								}
								add(
									$current,
									"equations",
									lv_equations_17_2,
									"de.cau.cs.kieler.kexpressions.keffects.KEffects.Assignment");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_18='}'
				{
					newLeafNode(otherlv_18, grammarAccess.getDataflowRegionAccess().getRightCurlyBracketKeyword_9_0_3());
				}
			)
			    |
			(
				otherlv_19=':'
				{
					newLeafNode(otherlv_19, grammarAccess.getDataflowRegionAccess().getColonKeyword_9_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataflowRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_9_1_1_0());
						}
						lv_declarations_20_0=ruleDeclarationWOSemicolon
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
							}
							add(
								$current,
								"declarations",
								lv_declarations_20_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsDataflowAssignmentParserRuleCall_9_1_2_0_0());
							}
							lv_equations_21_1=ruleDataflowAssignment
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
								}
								add(
									$current,
									"equations",
									lv_equations_21_1,
									"de.cau.cs.kieler.sccharts.text.SCTX.DataflowAssignment");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getDataflowRegionAccess().getEquationsAssignmentParserRuleCall_9_1_2_0_1());
							}
							lv_equations_21_2=ruleAssignment
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDataflowRegionRule());
								}
								add(
									$current,
									"equations",
									lv_equations_21_2,
									"de.cau.cs.kieler.kexpressions.keffects.KEffects.Assignment");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)
	)
;

// Entry rule entryRuleIntOrReference
entryRuleIntOrReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntOrReferenceRule()); }
	iv_ruleIntOrReference=ruleIntOrReference
	{ $current=$iv_ruleIntOrReference.current; }
	EOF;

// Rule IntOrReference
ruleIntOrReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getIntOrReferenceAccess().getIntValueParserRuleCall_0());
		}
		this_IntValue_0=ruleIntValue
		{
			$current = $this_IntValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getIntOrReferenceAccess().getValuedObjectReferenceParserRuleCall_1());
		}
		this_ValuedObjectReference_1=ruleValuedObjectReference
		{
			$current = $this_ValuedObjectReference_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCounterVariable
entryRuleCounterVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCounterVariableRule()); }
	iv_ruleCounterVariable=ruleCounterVariable
	{ $current=$iv_ruleCounterVariable.current; }
	EOF;

// Rule CounterVariable
ruleCounterVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getCounterVariableAccess().getNamePrimeIDParserRuleCall_0());
			}
			lv_name_0_0=rulePrimeID
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getCounterVariableRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleLocalAction
entryRuleLocalAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalActionRule()); }
	iv_ruleLocalAction=ruleLocalAction
	{ $current=$iv_ruleLocalAction.current; }
	EOF;

// Rule LocalAction
ruleLocalAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLocalActionAccess().getEntryActionParserRuleCall_0());
		}
		this_EntryAction_0=ruleEntryAction
		{
			$current = $this_EntryAction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLocalActionAccess().getDuringActionParserRuleCall_1());
		}
		this_DuringAction_1=ruleDuringAction
		{
			$current = $this_DuringAction_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLocalActionAccess().getExitActionParserRuleCall_2());
		}
		this_ExitAction_2=ruleExitAction
		{
			$current = $this_ExitAction_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLocalActionAccess().getSuspendActionParserRuleCall_3());
		}
		this_SuspendAction_3=ruleSuspendAction
		{
			$current = $this_SuspendAction_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLocalActionAccess().getPeriodActionParserRuleCall_4());
		}
		this_PeriodAction_4=rulePeriodAction
		{
			$current = $this_PeriodAction_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLocalActionAccess().getOdeActionParserRuleCall_5());
		}
		this_OdeAction_5=ruleOdeAction
		{
			$current = $this_OdeAction_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEntryAction
entryRuleEntryAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntryActionRule()); }
	iv_ruleEntryAction=ruleEntryAction
	{ $current=$iv_ruleEntryAction.current; }
	EOF;

// Rule EntryAction
ruleEntryAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getEntryActionAccess().getEntryActionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEntryActionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleRestrictedTypeAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntryActionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEntryActionAccess().getPreemptionPreemptionActionTypeEnumRuleCall_2_0());
				}
				lv_preemption_2_0=rulePreemptionActionType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntryActionRule());
					}
					set(
						$current,
						"preemption",
						lv_preemption_2_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.PreemptionActionType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='entry'
		{
			newLeafNode(otherlv_3, grammarAccess.getEntryActionAccess().getEntryKeyword_3());
		}
		(
			otherlv_4='if'
			{
				newLeafNode(otherlv_4, grammarAccess.getEntryActionAccess().getIfKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntryActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_4_1_0());
					}
					lv_trigger_5_0=ruleBoolScheduleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntryActionRule());
						}
						set(
							$current,
							"trigger",
							lv_trigger_5_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.BoolScheduleExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6='Pr'
				{
					newLeafNode(otherlv_6, grammarAccess.getEntryActionAccess().getPrKeyword_4_2_0());
				}
				(
					(
						lv_triggerProbability_7_0=RULE_FLOAT
						{
							newLeafNode(lv_triggerProbability_7_0, grammarAccess.getEntryActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_4_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEntryActionRule());
							}
							setWithLastConsumed(
								$current,
								"triggerProbability",
								lv_triggerProbability_7_0,
								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
						}
					)
				)
			)?
		)?
		(
			otherlv_8='do'
			{
				newLeafNode(otherlv_8, grammarAccess.getEntryActionAccess().getDoKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_5_1_0());
					}
					lv_effects_9_0=ruleEffect
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntryActionRule());
						}
						add(
							$current,
							"effects",
							lv_effects_9_0,
							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=';'
				{
					newLeafNode(otherlv_10, grammarAccess.getEntryActionAccess().getSemicolonKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEntryActionAccess().getEffectsEffectParserRuleCall_5_2_1_0());
						}
						lv_effects_11_0=ruleEffect
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEntryActionRule());
							}
							add(
								$current,
								"effects",
								lv_effects_11_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_12='label'
			{
				newLeafNode(otherlv_12, grammarAccess.getEntryActionAccess().getLabelKeyword_6_0());
			}
			(
				(
					lv_label_13_0=RULE_STRING
					{
						newLeafNode(lv_label_13_0, grammarAccess.getEntryActionAccess().getLabelSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntryActionRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_13_0,
							"de.cau.cs.kieler.annotations.Annotations.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDuringAction
entryRuleDuringAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDuringActionRule()); }
	iv_ruleDuringAction=ruleDuringAction
	{ $current=$iv_ruleDuringAction.current; }
	EOF;

// Rule DuringAction
ruleDuringAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getDuringActionAccess().getDuringActionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDuringActionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleRestrictedTypeAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDuringActionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDuringActionAccess().getDelayDelayTypeEnumRuleCall_2_0());
				}
				lv_delay_2_0=ruleDelayType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDuringActionRule());
					}
					set(
						$current,
						"delay",
						lv_delay_2_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='during'
		{
			newLeafNode(otherlv_3, grammarAccess.getDuringActionAccess().getDuringKeyword_3());
		}
		(
			otherlv_4='if'
			{
				newLeafNode(otherlv_4, grammarAccess.getDuringActionAccess().getIfKeyword_4_0());
			}
			(
				(
					lv_triggerDelay_5_0=RULE_INT
					{
						newLeafNode(lv_triggerDelay_5_0, grammarAccess.getDuringActionAccess().getTriggerDelayINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDuringActionRule());
						}
						setWithLastConsumed(
							$current,
							"triggerDelay",
							lv_triggerDelay_5_0,
							"de.cau.cs.kieler.annotations.Annotations.INT");
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getDuringActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_4_2_0());
					}
					lv_trigger_6_0=ruleBoolScheduleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDuringActionRule());
						}
						set(
							$current,
							"trigger",
							lv_trigger_6_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.BoolScheduleExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7='Pr='
				{
					newLeafNode(otherlv_7, grammarAccess.getDuringActionAccess().getPrKeyword_4_3_0());
				}
				(
					(
						lv_triggerProbability_8_0=RULE_FLOAT
						{
							newLeafNode(lv_triggerProbability_8_0, grammarAccess.getDuringActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_4_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDuringActionRule());
							}
							setWithLastConsumed(
								$current,
								"triggerProbability",
								lv_triggerProbability_8_0,
								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
						}
					)
				)
			)?
		)?
		(
			otherlv_9='do'
			{
				newLeafNode(otherlv_9, grammarAccess.getDuringActionAccess().getDoKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_5_1_0());
					}
					lv_effects_10_0=ruleEffect
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDuringActionRule());
						}
						add(
							$current,
							"effects",
							lv_effects_10_0,
							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=';'
				{
					newLeafNode(otherlv_11, grammarAccess.getDuringActionAccess().getSemicolonKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDuringActionAccess().getEffectsEffectParserRuleCall_5_2_1_0());
						}
						lv_effects_12_0=ruleEffect
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDuringActionRule());
							}
							add(
								$current,
								"effects",
								lv_effects_12_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_13='label'
			{
				newLeafNode(otherlv_13, grammarAccess.getDuringActionAccess().getLabelKeyword_6_0());
			}
			(
				(
					lv_label_14_0=RULE_STRING
					{
						newLeafNode(lv_label_14_0, grammarAccess.getDuringActionAccess().getLabelSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDuringActionRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_14_0,
							"de.cau.cs.kieler.annotations.Annotations.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExitAction
entryRuleExitAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExitActionRule()); }
	iv_ruleExitAction=ruleExitAction
	{ $current=$iv_ruleExitAction.current; }
	EOF;

// Rule ExitAction
ruleExitAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExitActionAccess().getExitActionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExitActionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleRestrictedTypeAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExitActionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getExitActionAccess().getPreemptionPreemptionActionTypeEnumRuleCall_2_0());
				}
				lv_preemption_2_0=rulePreemptionActionType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExitActionRule());
					}
					set(
						$current,
						"preemption",
						lv_preemption_2_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.PreemptionActionType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='exit'
		{
			newLeafNode(otherlv_3, grammarAccess.getExitActionAccess().getExitKeyword_3());
		}
		(
			otherlv_4='if'
			{
				newLeafNode(otherlv_4, grammarAccess.getExitActionAccess().getIfKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExitActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_4_1_0());
					}
					lv_trigger_5_0=ruleBoolScheduleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExitActionRule());
						}
						set(
							$current,
							"trigger",
							lv_trigger_5_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.BoolScheduleExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6='Pr'
				{
					newLeafNode(otherlv_6, grammarAccess.getExitActionAccess().getPrKeyword_4_2_0());
				}
				(
					(
						lv_triggerProbability_7_0=RULE_FLOAT
						{
							newLeafNode(lv_triggerProbability_7_0, grammarAccess.getExitActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_4_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExitActionRule());
							}
							setWithLastConsumed(
								$current,
								"triggerProbability",
								lv_triggerProbability_7_0,
								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
						}
					)
				)
			)?
		)?
		(
			otherlv_8='do'
			{
				newLeafNode(otherlv_8, grammarAccess.getExitActionAccess().getDoKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_5_1_0());
					}
					lv_effects_9_0=ruleEffect
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExitActionRule());
						}
						add(
							$current,
							"effects",
							lv_effects_9_0,
							"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=';'
				{
					newLeafNode(otherlv_10, grammarAccess.getExitActionAccess().getSemicolonKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExitActionAccess().getEffectsEffectParserRuleCall_5_2_1_0());
						}
						lv_effects_11_0=ruleEffect
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExitActionRule());
							}
							add(
								$current,
								"effects",
								lv_effects_11_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_12='label'
			{
				newLeafNode(otherlv_12, grammarAccess.getExitActionAccess().getLabelKeyword_6_0());
			}
			(
				(
					lv_label_13_0=RULE_STRING
					{
						newLeafNode(lv_label_13_0, grammarAccess.getExitActionAccess().getLabelSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExitActionRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_13_0,
							"de.cau.cs.kieler.annotations.Annotations.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSuspendAction
entryRuleSuspendAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSuspendActionRule()); }
	iv_ruleSuspendAction=ruleSuspendAction
	{ $current=$iv_ruleSuspendAction.current; }
	EOF;

// Rule SuspendAction
ruleSuspendAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSuspendActionAccess().getSuspendActionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSuspendActionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleRestrictedTypeAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSuspendActionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSuspendActionAccess().getDelayDelayTypeEnumRuleCall_2_0());
				}
				lv_delay_2_0=ruleDelayType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSuspendActionRule());
					}
					set(
						$current,
						"delay",
						lv_delay_2_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_weak_3_0='weak'
				{
					newLeafNode(lv_weak_3_0, grammarAccess.getSuspendActionAccess().getWeakWeakKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSuspendActionRule());
					}
					setWithLastConsumed($current, "weak", lv_weak_3_0 != null, "weak");
				}
			)
		)?
		otherlv_4='suspend'
		{
			newLeafNode(otherlv_4, grammarAccess.getSuspendActionAccess().getSuspendKeyword_4());
		}
		(
			otherlv_5='if'
			{
				newLeafNode(otherlv_5, grammarAccess.getSuspendActionAccess().getIfKeyword_5_0());
			}
			(
				(
					lv_triggerDelay_6_0=RULE_INT
					{
						newLeafNode(lv_triggerDelay_6_0, grammarAccess.getSuspendActionAccess().getTriggerDelayINTTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSuspendActionRule());
						}
						setWithLastConsumed(
							$current,
							"triggerDelay",
							lv_triggerDelay_6_0,
							"de.cau.cs.kieler.annotations.Annotations.INT");
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getSuspendActionAccess().getTriggerBoolScheduleExpressionParserRuleCall_5_2_0());
					}
					lv_trigger_7_0=ruleBoolScheduleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSuspendActionRule());
						}
						set(
							$current,
							"trigger",
							lv_trigger_7_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.BoolScheduleExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8='Pr='
				{
					newLeafNode(otherlv_8, grammarAccess.getSuspendActionAccess().getPrKeyword_5_3_0());
				}
				(
					(
						lv_triggerProbability_9_0=RULE_FLOAT
						{
							newLeafNode(lv_triggerProbability_9_0, grammarAccess.getSuspendActionAccess().getTriggerProbabilityFLOATTerminalRuleCall_5_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSuspendActionRule());
							}
							setWithLastConsumed(
								$current,
								"triggerProbability",
								lv_triggerProbability_9_0,
								"de.cau.cs.kieler.annotations.Annotations.FLOAT");
						}
					)
				)
			)?
		)?
		(
			otherlv_10='label'
			{
				newLeafNode(otherlv_10, grammarAccess.getSuspendActionAccess().getLabelKeyword_6_0());
			}
			(
				(
					lv_label_11_0=RULE_STRING
					{
						newLeafNode(lv_label_11_0, grammarAccess.getSuspendActionAccess().getLabelSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSuspendActionRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_11_0,
							"de.cau.cs.kieler.annotations.Annotations.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePeriodAction
entryRulePeriodAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPeriodActionRule()); }
	iv_rulePeriodAction=rulePeriodAction
	{ $current=$iv_rulePeriodAction.current; }
	EOF;

// Rule PeriodAction
rulePeriodAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getPeriodActionAccess().getPeriodActionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPeriodActionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleRestrictedTypeAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPeriodActionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPeriodActionAccess().getDelayDelayTypeEnumRuleCall_2_0());
				}
				lv_delay_2_0=ruleDelayType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPeriodActionRule());
					}
					set(
						$current,
						"delay",
						lv_delay_2_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.DelayType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='period'
		{
			newLeafNode(otherlv_3, grammarAccess.getPeriodActionAccess().getPeriodKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPeriodActionAccess().getTriggerValuedExpressionParserRuleCall_4_0());
				}
				lv_trigger_4_0=ruleValuedExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPeriodActionRule());
					}
					set(
						$current,
						"trigger",
						lv_trigger_4_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='label'
			{
				newLeafNode(otherlv_5, grammarAccess.getPeriodActionAccess().getLabelKeyword_5_0());
			}
			(
				(
					lv_label_6_0=RULE_STRING
					{
						newLeafNode(lv_label_6_0, grammarAccess.getPeriodActionAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPeriodActionRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_6_0,
							"de.cau.cs.kieler.annotations.Annotations.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleOdeAction
entryRuleOdeAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOdeActionRule()); }
	iv_ruleOdeAction=ruleOdeAction
	{ $current=$iv_ruleOdeAction.current; }
	EOF;

// Rule OdeAction
ruleOdeAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getOdeActionAccess().getOdeActionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOdeActionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleRestrictedTypeAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOdeActionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='ode'
		{
			newLeafNode(otherlv_2, grammarAccess.getOdeActionAccess().getOdeKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOdeActionAccess().getEffectsEffectParserRuleCall_3_0());
				}
				lv_effects_3_0=ruleEffect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOdeActionRule());
					}
					add(
						$current,
						"effects",
						lv_effects_3_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='label'
			{
				newLeafNode(otherlv_4, grammarAccess.getOdeActionAccess().getLabelKeyword_4_0());
			}
			(
				(
					lv_label_5_0=RULE_STRING
					{
						newLeafNode(lv_label_5_0, grammarAccess.getOdeActionAccess().getLabelSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOdeActionRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_5_0,
							"de.cau.cs.kieler.annotations.Annotations.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getDeclarationParserRuleCall_0());
		}
		this_Declaration_0=superDeclaration
		{
			$current = $this_Declaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getDeclarationWOSemicolonParserRuleCall_1());
		}
		this_DeclarationWOSemicolon_1=ruleDeclarationWOSemicolon
		{
			$current = $this_DeclarationWOSemicolon_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSclAssignmentParserRuleCall_0());
		}
		this_SclAssignment_0=ruleSclAssignment
		{
			$current = $this_SclAssignment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSclPostfixAssignmentParserRuleCall_1());
		}
		this_SclPostfixAssignment_1=ruleSclPostfixAssignment
		{
			$current = $this_SclPostfixAssignment_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getLabelParserRuleCall_2());
		}
		this_Label_2=ruleLabel
		{
			$current = $this_Label_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSclEffectAssignmentParserRuleCall_3());
		}
		this_SclEffectAssignment_3=ruleSclEffectAssignment
		{
			$current = $this_SclEffectAssignment_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getConditionalParserRuleCall_4());
		}
		this_Conditional_4=ruleConditional
		{
			$current = $this_Conditional_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getGotoParserRuleCall_5());
		}
		this_Goto_5=ruleGoto
		{
			$current = $this_Goto_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getScopeStatementParserRuleCall_6());
		}
		this_ScopeStatement_6=ruleScopeStatement
		{
			$current = $this_ScopeStatement_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getReturnParserRuleCall_7());
		}
		this_Return_7=ruleReturn
		{
			$current = $this_Return_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getForLoopParserRuleCall_8());
		}
		this_ForLoop_8=ruleForLoop
		{
			$current = $this_ForLoop_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_9());
		}
		this_WhileLoop_9=ruleWhileLoop
		{
			$current = $this_WhileLoop_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEffect
entryRuleEffect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEffectRule()); }
	iv_ruleEffect=ruleEffect
	{ $current=$iv_ruleEffect.current; }
	EOF;

// Rule Effect
ruleEffect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getEffectAccess().getEffectParserRuleCall_0());
		}
		this_Effect_0=superEffect
		{
			$current = $this_Effect_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getEffectAccess().getCodeEffectParserRuleCall_1());
		}
		this_CodeEffect_1=ruleCodeEffect
		{
			$current = $this_CodeEffect_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCodeEffect
entryRuleCodeEffect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCodeEffectRule()); }
	iv_ruleCodeEffect=ruleCodeEffect
	{ $current=$iv_ruleCodeEffect.current; }
	EOF;

// Rule CodeEffect
ruleCodeEffect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getCodeEffectAccess().getCodeEffectAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCodeEffectAccess().getAnnotationsAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCodeEffectRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCodeEffectAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCodeEffectAccess().getDeclarationsDeclarationParserRuleCall_3_0());
				}
				lv_declarations_3_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCodeEffectRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_3_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getCodeEffectAccess().getStatementsStatementParserRuleCall_4_0());
				}
				lv_statements_4_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCodeEffectRule());
					}
					add(
						$current,
						"statements",
						lv_statements_4_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getCodeEffectAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleClassDeclarationWOSemicolon
entryRuleClassDeclarationWOSemicolon returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonRule()); }
	iv_ruleClassDeclarationWOSemicolon=ruleClassDeclarationWOSemicolon
	{ $current=$iv_ruleClassDeclarationWOSemicolon.current; }
	EOF;

// Rule ClassDeclarationWOSemicolon
ruleClassDeclarationWOSemicolon returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getClassDeclarationWOSemicolonAccess().getPolicyClassDeclarationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
				}
				lv_access_2_0=ruleAccessModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
					}
					set(
						$current,
						"access",
						lv_access_2_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_host_3_0='host'
				{
					newLeafNode(lv_host_3_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getHostHostKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
					}
					setWithLastConsumed($current, "host", lv_host_3_0 != null, "host");
				}
			)
		)?
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getTypeClassTypeEnumRuleCall_4_0_0_0());
						}
						lv_type_4_0=ruleClassType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
							}
							set(
								$current,
								"type",
								lv_type_4_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ClassType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getNameEStringParserRuleCall_4_0_1_0());
						}
						lv_name_5_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
							}
							set(
								$current,
								"name",
								lv_name_5_0,
								"de.cau.cs.kieler.annotations.Annotations.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_6='{'
				{
					newLeafNode(otherlv_6, grammarAccess.getClassDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_4_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getPolicyPolicyRegionParserRuleCall_4_0_3_0());
						}
						lv_policy_7_0=rulePolicyRegion
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
							}
							set(
								$current,
								"policy",
								lv_policy_7_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.PolicyRegion");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getDeclarationsDeclarationOrMethodWOSemicolonParserRuleCall_4_0_4_0());
						}
						lv_declarations_8_0=ruleDeclarationOrMethodWOSemicolon
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
							}
							add(
								$current,
								"declarations",
								lv_declarations_8_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationOrMethodWOSemicolon");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_9='}'
				{
					newLeafNode(otherlv_9, grammarAccess.getClassDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_4_0_5());
				}
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getTypeStructTypeEnumRuleCall_4_1_0_0());
						}
						lv_type_10_0=ruleStructType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
							}
							set(
								$current,
								"type",
								lv_type_10_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getNameEStringParserRuleCall_4_1_1_0());
						}
						lv_name_11_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
							}
							set(
								$current,
								"name",
								lv_name_11_0,
								"de.cau.cs.kieler.annotations.Annotations.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_12='{'
				{
					newLeafNode(otherlv_12, grammarAccess.getClassDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_4_1_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_4_1_3_0());
						}
						lv_declarations_13_0=ruleDeclarationWOSemicolon
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
							}
							add(
								$current,
								"declarations",
								lv_declarations_13_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_14='}'
				{
					newLeafNode(otherlv_14, grammarAccess.getClassDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_4_1_4());
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_5_0_0());
					}
					lv_valuedObjects_15_0=ruleValuedObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
						}
						add(
							$current,
							"valuedObjects",
							lv_valuedObjects_15_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getClassDeclarationWOSemicolonAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_5_1_1_0());
						}
						lv_valuedObjects_17_0=ruleValuedObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
							}
							add(
								$current,
								"valuedObjects",
								lv_valuedObjects_17_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_6_0());
				}
				lv_annotations_18_0=ruleCommentAnnotatonSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_18_0,
						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRulePolicyRegion
entryRulePolicyRegion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPolicyRegionRule()); }
	iv_rulePolicyRegion=rulePolicyRegion
	{ $current=$iv_rulePolicyRegion.current; }
	EOF;

// Rule PolicyRegion
rulePolicyRegion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='policy'
		{
			newLeafNode(otherlv_0, grammarAccess.getPolicyRegionAccess().getPolicyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPolicyRegionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPolicyRegionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.annotations.Annotations.ID");
				}
			)
		)
		(
			(
				lv_label_2_0=RULE_STRING
				{
					newLeafNode(lv_label_2_0, grammarAccess.getPolicyRegionAccess().getLabelSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPolicyRegionRule());
					}
					setWithLastConsumed(
						$current,
						"label",
						lv_label_2_0,
						"de.cau.cs.kieler.annotations.Annotations.STRING");
				}
			)
		)?
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPolicyRegionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPolicyRegionAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_4_0());
				}
				lv_declarations_4_0=ruleDeclarationWOSemicolon
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPolicyRegionRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_4_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPolicyRegionAccess().getStatesPolicyStateParserRuleCall_5_0());
				}
				lv_states_5_0=rulePolicyState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPolicyRegionRule());
					}
					add(
						$current,
						"states",
						lv_states_5_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.PolicyState");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getPolicyRegionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRulePolicyState
entryRulePolicyState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPolicyStateRule()); }
	iv_rulePolicyState=rulePolicyState
	{ $current=$iv_rulePolicyState.current; }
	EOF;

// Rule PolicyState
rulePolicyState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPolicyStateAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPolicyStateRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				lv_initial_1_0='initial'
				{
					newLeafNode(lv_initial_1_0, grammarAccess.getPolicyStateAccess().getInitialInitialKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPolicyStateRule());
					}
					setWithLastConsumed($current, "initial", lv_initial_1_0 != null, "initial");
				}
			)
		)?
		otherlv_2='state'
		{
			newLeafNode(otherlv_2, grammarAccess.getPolicyStateAccess().getStateKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getPolicyStateAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPolicyStateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"de.cau.cs.kieler.annotations.Annotations.ID");
				}
			)
		)
		(
			(
				lv_label_4_0=RULE_STRING
				{
					newLeafNode(lv_label_4_0, grammarAccess.getPolicyStateAccess().getLabelSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPolicyStateRule());
					}
					setWithLastConsumed(
						$current,
						"label",
						lv_label_4_0,
						"de.cau.cs.kieler.annotations.Annotations.STRING");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getPolicyStateAccess().getOutgoingTransitionsPolicyTransitionParserRuleCall_5_0());
				}
				lv_outgoingTransitions_5_0=rulePolicyTransition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPolicyStateRule());
					}
					add(
						$current,
						"outgoingTransitions",
						lv_outgoingTransitions_5_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.PolicyTransition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePolicyTransition
entryRulePolicyTransition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPolicyTransitionRule()); }
	iv_rulePolicyTransition=rulePolicyTransition
	{ $current=$iv_rulePolicyTransition.current; }
	EOF;

// Rule PolicyTransition
rulePolicyTransition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getPolicyTransitionAccess().getTransitionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPolicyTransitionAccess().getAnnotationsRestrictedTypeAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleRestrictedTypeAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.annotations.Annotations.RestrictedTypeAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_2='if'
			{
				newLeafNode(otherlv_2, grammarAccess.getPolicyTransitionAccess().getIfKeyword_2_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPolicyTransitionAccess().getTriggerLogicalOrExpressionParserRuleCall_2_1_0_0());
						}
						lv_trigger_3_0=ruleLogicalOrExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
							}
							set(
								$current,
								"trigger",
								lv_trigger_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalOrExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getPolicyTransitionAccess().getTriggerValuedObjectReferenceParserRuleCall_2_1_1_0());
						}
						lv_trigger_4_0=ruleValuedObjectReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
							}
							set(
								$current,
								"trigger",
								lv_trigger_4_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_5=':'
				{
					newLeafNode(otherlv_5, grammarAccess.getPolicyTransitionAccess().getColonKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPolicyTransitionAccess().getEffectsPureEmissionParserRuleCall_2_2_1_0());
						}
						lv_effects_6_0=rulePureEmission
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
							}
							add(
								$current,
								"effects",
								lv_effects_6_0,
								"de.cau.cs.kieler.kexpressions.keffects.KEffects.PureEmission");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_7=','
					{
						newLeafNode(otherlv_7, grammarAccess.getPolicyTransitionAccess().getCommaKeyword_2_2_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPolicyTransitionAccess().getEffectsPureEmissionParserRuleCall_2_2_2_1_0());
							}
							lv_effects_8_0=rulePureEmission
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPolicyTransitionRule());
								}
								add(
									$current,
									"effects",
									lv_effects_8_0,
									"de.cau.cs.kieler.kexpressions.keffects.KEffects.PureEmission");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
		)?
		otherlv_9='go'
		{
			newLeafNode(otherlv_9, grammarAccess.getPolicyTransitionAccess().getGoKeyword_3());
		}
		otherlv_10='to'
		{
			newLeafNode(otherlv_10, grammarAccess.getPolicyTransitionAccess().getToKeyword_4());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPolicyTransitionRule());
					}
				}
				otherlv_11=RULE_ID
				{
					newLeafNode(otherlv_11, grammarAccess.getPolicyTransitionAccess().getTargetStateStateCrossReference_5_0());
				}
			)
		)
		(
			otherlv_12='label'
			{
				newLeafNode(otherlv_12, grammarAccess.getPolicyTransitionAccess().getLabelKeyword_6_0());
			}
			(
				(
					lv_label_13_0=RULE_STRING
					{
						newLeafNode(lv_label_13_0, grammarAccess.getPolicyTransitionAccess().getLabelSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPolicyTransitionRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_13_0,
							"de.cau.cs.kieler.annotations.Annotations.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDeclarationOrMethodWithKeywordWOSemicolon
entryRuleDeclarationOrMethodWithKeywordWOSemicolon returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationOrMethodWithKeywordWOSemicolonRule()); }
	iv_ruleDeclarationOrMethodWithKeywordWOSemicolon=ruleDeclarationOrMethodWithKeywordWOSemicolon
	{ $current=$iv_ruleDeclarationOrMethodWithKeywordWOSemicolon.current; }
	EOF;

// Rule DeclarationOrMethodWithKeywordWOSemicolon
ruleDeclarationOrMethodWithKeywordWOSemicolon returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationOrMethodWithKeywordWOSemicolonAccess().getDeclarationWOSemicolonParserRuleCall_0());
		}
		this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon
		{
			$current = $this_DeclarationWOSemicolon_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationOrMethodWithKeywordWOSemicolonAccess().getKeywordMethodDeclarationWOSemicolonParserRuleCall_1());
		}
		this_KeywordMethodDeclarationWOSemicolon_1=ruleKeywordMethodDeclarationWOSemicolon
		{
			$current = $this_KeywordMethodDeclarationWOSemicolon_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationOrMethodWithKeywordWOSemicolonAccess().getEnumDeclarationWOSemicolonParserRuleCall_2());
		}
		this_EnumDeclarationWOSemicolon_2=ruleEnumDeclarationWOSemicolon
		{
			$current = $this_EnumDeclarationWOSemicolon_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleKeywordMethodDeclarationWOSemicolon
entryRuleKeywordMethodDeclarationWOSemicolon returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule()); }
	iv_ruleKeywordMethodDeclarationWOSemicolon=ruleKeywordMethodDeclarationWOSemicolon
	{ $current=$iv_ruleKeywordMethodDeclarationWOSemicolon.current; }
	EOF;

// Rule KeywordMethodDeclarationWOSemicolon
ruleKeywordMethodDeclarationWOSemicolon returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getMethodImplementationDeclarationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0_0());
					}
					lv_access_2_0=ruleAccessModifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
						}
						set(
							$current,
							"access",
							lv_access_2_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			    |
			(
				(
					lv_override_3_0='override'
					{
						newLeafNode(lv_override_3_0, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getOverrideOverrideKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
						}
						setWithLastConsumed($current, "override", lv_override_3_0 != null, "override");
					}
				)
			)
		)
		otherlv_4='method'
		{
			newLeafNode(otherlv_4, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getMethodKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getReturnTypeMethodReturnTypeEnumRuleCall_4_0());
				}
				lv_returnType_5_0=ruleMethodReturnType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_5_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_5_0());
				}
				lv_valuedObjects_6_0=ruleSimpleValuedObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"valuedObjects",
						lv_valuedObjects_6_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_7='('
				{
					newLeafNode(otherlv_7, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getLeftParenthesisKeyword_6_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_6_0_1_0());
						}
						lv_parameterDeclarations_8_0=ruleVariableDeclarationWOSemicolon
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
							}
							add(
								$current,
								"parameterDeclarations",
								lv_parameterDeclarations_8_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_9=','
					{
						newLeafNode(otherlv_9, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getCommaKeyword_6_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_6_0_2_1_0());
							}
							lv_parameterDeclarations_10_0=ruleVariableDeclarationWOSemicolon
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
								}
								add(
									$current,
									"parameterDeclarations",
									lv_parameterDeclarations_10_0,
									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_11=')'
				{
					newLeafNode(otherlv_11, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getRightParenthesisKeyword_6_0_3());
				}
			)
			    |
			otherlv_12='()'
			{
				newLeafNode(otherlv_12, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getLeftParenthesisRightParenthesisKeyword_6_1());
			}
		)
		(
			otherlv_13='schedule'
			{
				newLeafNode(otherlv_13, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getScheduleKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getScheduleScheduleObjectReferenceParserRuleCall_7_1_0());
					}
					lv_schedule_14_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_14_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_15='{'
			{
				newLeafNode(otherlv_15, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_1_0());
					}
					lv_annotations_16_0=ruleCommentAnnotatonSL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_16_0,
							"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationParserRuleCall_8_2_0());
					}
					lv_declarations_17_0=ruleDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
						}
						add(
							$current,
							"declarations",
							lv_declarations_17_0,
							"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getStatementsStatementParserRuleCall_8_3_0());
					}
					lv_statements_18_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeywordMethodDeclarationWOSemicolonRule());
						}
						add(
							$current,
							"statements",
							lv_statements_18_0,
							"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_19='}'
			{
				newLeafNode(otherlv_19, grammarAccess.getKeywordMethodDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
	)
;

// Entry rule entryRuleReferenceValuedObject
entryRuleReferenceValuedObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceValuedObjectRule()); }
	iv_ruleReferenceValuedObject=ruleReferenceValuedObject
	{ $current=$iv_ruleReferenceValuedObject.current; }
	EOF;

// Rule ReferenceValuedObject
ruleReferenceValuedObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleQuotedStringAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
				}
				lv_name_1_0=rulePrimeID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getReferenceValuedObjectAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_2_1_0());
					}
					lv_cardinalities_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
						}
						add(
							$current,
							"cardinalities",
							lv_cardinalities_3_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getReferenceValuedObjectAccess().getRightSquareBracketKeyword_2_2());
			}
		)*
		(
			otherlv_5='<'
			{
				newLeafNode(otherlv_5, grammarAccess.getReferenceValuedObjectAccess().getLessThanSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getGenericParametersGenericParameterParserRuleCall_3_1_0());
					}
					lv_genericParameters_6_0=ruleGenericParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
						}
						add(
							$current,
							"genericParameters",
							lv_genericParameters_6_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getReferenceValuedObjectAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getGenericParametersGenericParameterParserRuleCall_3_2_1_0());
						}
						lv_genericParameters_8_0=ruleGenericParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
							}
							add(
								$current,
								"genericParameters",
								lv_genericParameters_8_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='>'
			{
				newLeafNode(otherlv_9, grammarAccess.getReferenceValuedObjectAccess().getGreaterThanSignKeyword_3_3());
			}
		)?
		(
			(
				otherlv_10='('
				{
					newLeafNode(otherlv_10, grammarAccess.getReferenceValuedObjectAccess().getLeftParenthesisKeyword_4_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getParametersScopeParameterParserRuleCall_4_0_1_0());
						}
						lv_parameters_11_0=ruleScopeParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_11_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.ScopeParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_12=','
					{
						newLeafNode(otherlv_12, grammarAccess.getReferenceValuedObjectAccess().getCommaKeyword_4_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getParametersScopeParameterParserRuleCall_4_0_2_1_0());
							}
							lv_parameters_13_0=ruleScopeParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
								}
								add(
									$current,
									"parameters",
									lv_parameters_13_0,
									"de.cau.cs.kieler.sccharts.text.SCTX.ScopeParameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_14=')'
				{
					newLeafNode(otherlv_14, grammarAccess.getReferenceValuedObjectAccess().getRightParenthesisKeyword_4_0_3());
				}
			)
			    |
			otherlv_15='()'
			{
				newLeafNode(otherlv_15, grammarAccess.getReferenceValuedObjectAccess().getLeftParenthesisRightParenthesisKeyword_4_1());
			}
		)?
		(
			otherlv_16='='
			{
				newLeafNode(otherlv_16, grammarAccess.getReferenceValuedObjectAccess().getEqualsSignKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getInitialValueExpressionParserRuleCall_5_1_0());
					}
					lv_initialValue_17_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
						}
						set(
							$current,
							"initialValue",
							lv_initialValue_17_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_18='label'
			{
				newLeafNode(otherlv_18, grammarAccess.getReferenceValuedObjectAccess().getLabelKeyword_6_0());
			}
			(
				(
					lv_label_19_0=RULE_STRING
					{
						newLeafNode(lv_label_19_0, grammarAccess.getReferenceValuedObjectAccess().getLabelSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReferenceValuedObjectRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_19_0,
							"de.cau.cs.kieler.annotations.Annotations.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSpecialAccessExpression
entryRuleSpecialAccessExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecialAccessExpressionRule()); }
	iv_ruleSpecialAccessExpression=ruleSpecialAccessExpression
	{ $current=$iv_ruleSpecialAccessExpression.current; }
	EOF;

// Rule SpecialAccessExpression
ruleSpecialAccessExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSpecialAccessExpressionAccess().getSCChartAccessExpressionParserRuleCall_0());
		}
		this_SCChartAccessExpression_0=ruleSCChartAccessExpression
		{
			$current = $this_SCChartAccessExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSpecialAccessExpressionAccess().getStateAccessExpressionParserRuleCall_1());
		}
		this_StateAccessExpression_1=ruleStateAccessExpression
		{
			$current = $this_StateAccessExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSCChartAccessExpression
entryRuleSCChartAccessExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSCChartAccessExpressionRule()); }
	iv_ruleSCChartAccessExpression=ruleSCChartAccessExpression
	{ $current=$iv_ruleSCChartAccessExpression.current; }
	EOF;

// Rule SCChartAccessExpression
ruleSCChartAccessExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_access_0_0='scchart'
				{
					newLeafNode(lv_access_0_0, grammarAccess.getSCChartAccessExpressionAccess().getAccessScchartKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSCChartAccessExpressionRule());
					}
					setWithLastConsumed($current, "access", lv_access_0_0, "scchart");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSCChartAccessExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSCChartAccessExpressionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSCChartAccessExpressionAccess().getTargetNamedObjectCrossReference_2_0());
				}
				rulePrimeID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getSCChartAccessExpressionAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='.'
		{
			newLeafNode(otherlv_4, grammarAccess.getSCChartAccessExpressionAccess().getFullStopKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSCChartAccessExpressionAccess().getSubReferenceValuedObjectReferenceParserRuleCall_5_0());
				}
				lv_subReference_5_0=ruleValuedObjectReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSCChartAccessExpressionRule());
					}
					set(
						$current,
						"subReference",
						lv_subReference_5_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStateAccessExpression
entryRuleStateAccessExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateAccessExpressionRule()); }
	iv_ruleStateAccessExpression=ruleStateAccessExpression
	{ $current=$iv_ruleStateAccessExpression.current; }
	EOF;

// Rule StateAccessExpression
ruleStateAccessExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_access_0_0='state'
				{
					newLeafNode(lv_access_0_0, grammarAccess.getStateAccessExpressionAccess().getAccessStateKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateAccessExpressionRule());
					}
					setWithLastConsumed($current, "access", lv_access_0_0, "state");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getStateAccessExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getStateAccessExpressionRule());
							}
						}
						otherlv_2=RULE_ID
						{
							newLeafNode(otherlv_2, grammarAccess.getStateAccessExpressionAccess().getContainerControlflowRegionCrossReference_2_0_0_0());
						}
					)
				)
				    |
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getStateAccessExpressionRule());
							}
						}
						otherlv_3=RULE_ID
						{
							newLeafNode(otherlv_3, grammarAccess.getStateAccessExpressionAccess().getContainerDataflowRegionCrossReference_2_0_1_0());
						}
					)
				)
			)
			otherlv_4='.'
			{
				newLeafNode(otherlv_4, grammarAccess.getStateAccessExpressionAccess().getFullStopKeyword_2_1());
			}
		)?
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateAccessExpressionRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getStateAccessExpressionAccess().getTargetStateCrossReference_3_0());
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getStateAccessExpressionAccess().getRightParenthesisKeyword_4());
		}
		(
			otherlv_7='schedule'
			{
				newLeafNode(otherlv_7, grammarAccess.getStateAccessExpressionAccess().getScheduleKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStateAccessExpressionAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0());
					}
					lv_schedule_8_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStateAccessExpressionRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_8_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleModule
entryRuleModule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleRule()); }
	iv_ruleModule=ruleModule
	{ $current=$iv_ruleModule.current; }
	EOF;

// Rule Module
ruleModule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='module'
		{
			newLeafNode(otherlv_1, grammarAccess.getModuleAccess().getModuleKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"de.cau.cs.kieler.annotations.Annotations.ID");
				}
			)
		)
		(
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getModuleAccess().getColonKeyword_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getDeclarationsDeclarationParserRuleCall_4_0());
				}
				lv_declarations_4_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_4_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getStatementsStatementParserRuleCall_5_0());
				}
				lv_statements_5_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"statements",
						lv_statements_5_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	iv_ruleLabel=ruleLabel
	{ $current=$iv_ruleLabel.current; }
	EOF;

// Rule Label
ruleLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLabelAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabelRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLabelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.annotations.Annotations.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getLabelAccess().getColonKeyword_2());
		}
	)
;

// Entry rule entryRuleGoto
entryRuleGoto returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGotoRule()); }
	iv_ruleGoto=ruleGoto
	{ $current=$iv_ruleGoto.current; }
	EOF;

// Rule Goto
ruleGoto returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGotoAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGotoRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='goto'
		{
			newLeafNode(otherlv_1, grammarAccess.getGotoAccess().getGotoKeyword_1());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGotoRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getGotoAccess().getTargetLabelCrossReference_2_0());
				}
			)
		)
		(
			(
				lv_semicolon_3_0=';'
				{
					newLeafNode(lv_semicolon_3_0, grammarAccess.getGotoAccess().getSemicolonSemicolonKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGotoRule());
					}
					setWithLastConsumed($current, "semicolon", lv_semicolon_3_0 != null, ";");
				}
			)
		)?
	)
;

// Entry rule entryRuleSclAssignment
entryRuleSclAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSclAssignmentRule()); }
	iv_ruleSclAssignment=ruleSclAssignment
	{ $current=$iv_ruleSclAssignment.current; }
	EOF;

// Rule SclAssignment
ruleSclAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSclAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSclAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
				}
				lv_reference_1_0=ruleValuedObjectReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
					}
					set(
						$current,
						"reference",
						lv_reference_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSclAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
				}
				lv_operator_2_0=ruleAssignOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
					}
					set(
						$current,
						"operator",
						lv_operator_2_0,
						"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSclAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
				}
				lv_expression_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='schedule'
			{
				newLeafNode(otherlv_4, grammarAccess.getSclAssignmentAccess().getScheduleKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSclAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
					}
					lv_schedule_5_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_5_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			(
				lv_semicolon_6_0=';'
				{
					newLeafNode(lv_semicolon_6_0, grammarAccess.getSclAssignmentAccess().getSemicolonSemicolonKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSclAssignmentRule());
					}
					setWithLastConsumed($current, "semicolon", lv_semicolon_6_0 != null, ";");
				}
			)
		)?
	)
;

// Entry rule entryRuleSclPostfixAssignment
entryRuleSclPostfixAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSclPostfixAssignmentRule()); }
	iv_ruleSclPostfixAssignment=ruleSclPostfixAssignment
	{ $current=$iv_ruleSclPostfixAssignment.current; }
	EOF;

// Rule SclPostfixAssignment
ruleSclPostfixAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
				}
				lv_reference_1_0=ruleValuedObjectReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
					}
					set(
						$current,
						"reference",
						lv_reference_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getOperatorPostfixOperatorEnumRuleCall_2_0());
				}
				lv_operator_2_0=rulePostfixOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
					}
					set(
						$current,
						"operator",
						lv_operator_2_0,
						"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='schedule'
			{
				newLeafNode(otherlv_3, grammarAccess.getSclPostfixAssignmentAccess().getScheduleKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
					}
					lv_schedule_4_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_4_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			(
				lv_semicolon_5_0=';'
				{
					newLeafNode(lv_semicolon_5_0, grammarAccess.getSclPostfixAssignmentAccess().getSemicolonSemicolonKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSclPostfixAssignmentRule());
					}
					setWithLastConsumed($current, "semicolon", lv_semicolon_5_0 != null, ";");
				}
			)
		)?
	)
;

// Entry rule entryRuleSclEffectAssignment
entryRuleSclEffectAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSclEffectAssignmentRule()); }
	iv_ruleSclEffectAssignment=ruleSclEffectAssignment
	{ $current=$iv_ruleSclEffectAssignment.current; }
	EOF;

// Rule SclEffectAssignment
ruleSclEffectAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSclEffectAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSclEffectAssignmentRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSclEffectAssignmentAccess().getExpressionReferenceCallParserRuleCall_1_0_0());
					}
					lv_expression_1_1=ruleReferenceCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSclEffectAssignmentRule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_1,
							"de.cau.cs.kieler.kexpressions.KExpressions.ReferenceCall");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getSclEffectAssignmentAccess().getExpressionTextExpressionParserRuleCall_1_0_1());
					}
					lv_expression_1_2=ruleTextExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSclEffectAssignmentRule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_2,
							"de.cau.cs.kieler.kexpressions.KExpressions.TextExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getSclEffectAssignmentAccess().getExpressionPrintCallParserRuleCall_1_0_2());
					}
					lv_expression_1_3=rulePrintCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSclEffectAssignmentRule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_3,
							"de.cau.cs.kieler.kexpressions.KExpressions.PrintCall");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getSclEffectAssignmentAccess().getExpressionRandomizeCallParserRuleCall_1_0_3());
					}
					lv_expression_1_4=ruleRandomizeCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSclEffectAssignmentRule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_4,
							"de.cau.cs.kieler.kexpressions.KExpressions.RandomizeCall");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getSclEffectAssignmentAccess().getExpressionFunctionCallParserRuleCall_1_0_4());
					}
					lv_expression_1_5=ruleFunctionCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSclEffectAssignmentRule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_5,
							"de.cau.cs.kieler.kexpressions.KExpressions.FunctionCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_2='schedule'
			{
				newLeafNode(otherlv_2, grammarAccess.getSclEffectAssignmentAccess().getScheduleKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSclEffectAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_2_1_0());
					}
					lv_schedule_3_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSclEffectAssignmentRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_3_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			(
				lv_semicolon_4_0=';'
				{
					newLeafNode(lv_semicolon_4_0, grammarAccess.getSclEffectAssignmentAccess().getSemicolonSemicolonKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSclEffectAssignmentRule());
					}
					setWithLastConsumed($current, "semicolon", lv_semicolon_4_0 != null, ";");
				}
			)
		)?
	)
;

// Entry rule entryRuleReturn
entryRuleReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnRule()); }
	iv_ruleReturn=ruleReturn
	{ $current=$iv_ruleReturn.current; }
	EOF;

// Rule Return
ruleReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='return'
		{
			newLeafNode(otherlv_1, grammarAccess.getReturnAccess().getReturnKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConditional
entryRuleConditional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalRule()); }
	iv_ruleConditional=ruleConditional
	{ $current=$iv_ruleConditional.current; }
	EOF;

// Rule Conditional
ruleConditional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='if'
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionalAccess().getIfKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalAccess().getExpressionBoolScheduleExpressionParserRuleCall_2_0_0());
					}
					lv_expression_2_1=ruleBoolScheduleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalRule());
						}
						set(
							$current,
							"expression",
							lv_expression_2_1,
							"de.cau.cs.kieler.kexpressions.KExpressions.BoolScheduleExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getConditionalAccess().getExpressionAtomicExpressionParserRuleCall_2_0_1());
					}
					lv_expression_2_2=ruleAtomicExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalRule());
						}
						set(
							$current,
							"expression",
							lv_expression_2_2,
							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getConditionalAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalAccess().getDeclarationsDeclarationParserRuleCall_4_0());
				}
				lv_declarations_4_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_4_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalAccess().getStatementsStatementParserRuleCall_5_0());
				}
				lv_statements_5_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalRule());
					}
					add(
						$current,
						"statements",
						lv_statements_5_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getConditionalAccess().getRightCurlyBracketKeyword_6());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalAccess().getElseElseScopeParserRuleCall_7_0_0());
					}
					lv_else_7_0=ruleElseScope
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalRule());
						}
						set(
							$current,
							"else",
							lv_else_7_0,
							"de.cau.cs.kieler.scl.SCL.ElseScope");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_semicolon_8_0=';'
					{
						newLeafNode(lv_semicolon_8_0, grammarAccess.getConditionalAccess().getSemicolonSemicolonKeyword_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionalRule());
						}
						setWithLastConsumed($current, "semicolon", lv_semicolon_8_0 != null, ";");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleElseScope
entryRuleElseScope returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseScopeRule()); }
	iv_ruleElseScope=ruleElseScope
	{ $current=$iv_ruleElseScope.current; }
	EOF;

// Rule ElseScope
ruleElseScope returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getElseScopeAccess().getElseScopeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getElseScopeAccess().getAnnotationsAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseScopeRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='else'
		{
			newLeafNode(otherlv_2, grammarAccess.getElseScopeAccess().getElseKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getElseScopeAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElseScopeAccess().getDeclarationsDeclarationParserRuleCall_4_0());
				}
				lv_declarations_4_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseScopeRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_4_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getElseScopeAccess().getStatementsStatementParserRuleCall_5_0());
				}
				lv_statements_5_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseScopeRule());
					}
					add(
						$current,
						"statements",
						lv_statements_5_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getElseScopeAccess().getRightCurlyBracketKeyword_6());
		}
		(
			(
				lv_semicolon_7_0=';'
				{
					newLeafNode(lv_semicolon_7_0, grammarAccess.getElseScopeAccess().getSemicolonSemicolonKeyword_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElseScopeRule());
					}
					setWithLastConsumed($current, "semicolon", lv_semicolon_7_0 != null, ";");
				}
			)
		)?
	)
;

// Entry rule entryRuleLegacyElseScope
entryRuleLegacyElseScope returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLegacyElseScopeRule()); }
	iv_ruleLegacyElseScope=ruleLegacyElseScope
	{ $current=$iv_ruleLegacyElseScope.current; }
	EOF;

// Rule LegacyElseScope
ruleLegacyElseScope returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLegacyElseScopeAccess().getElseScopeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLegacyElseScopeAccess().getAnnotationsAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLegacyElseScopeRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='else'
		{
			newLeafNode(otherlv_2, grammarAccess.getLegacyElseScopeAccess().getElseKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLegacyElseScopeAccess().getStatementsStatementParserRuleCall_3_0());
				}
				lv_statements_3_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLegacyElseScopeRule());
					}
					add(
						$current,
						"statements",
						lv_statements_3_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleThread
entryRuleThread returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThreadRule()); }
	iv_ruleThread=ruleThread
	{ $current=$iv_ruleThread.current; }
	EOF;

// Rule Thread
ruleThread returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getThreadAccess().getThreadAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getThreadAccess().getAnnotationsAnnotationParserRuleCall_1_0_0_0());
						}
						lv_annotations_1_0=ruleAnnotation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getThreadRule());
							}
							add(
								$current,
								"annotations",
								lv_annotations_1_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_2='{'
				{
					newLeafNode(otherlv_2, grammarAccess.getThreadAccess().getLeftCurlyBracketKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
						}
						lv_declarations_3_0=ruleDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getThreadRule());
							}
							add(
								$current,
								"declarations",
								lv_declarations_3_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_0_3_0());
						}
						lv_statements_4_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getThreadRule());
							}
							add(
								$current,
								"statements",
								lv_statements_4_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_5='}'
				{
					newLeafNode(otherlv_5, grammarAccess.getThreadAccess().getRightCurlyBracketKeyword_1_0_4());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_1_0());
					}
					lv_statements_6_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getThreadRule());
						}
						add(
							$current,
							"statements",
							lv_statements_6_0,
							"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
	)
;

// Entry rule entryRuleScopeStatement
entryRuleScopeStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScopeStatementRule()); }
	iv_ruleScopeStatement=ruleScopeStatement
	{ $current=$iv_ruleScopeStatement.current; }
	EOF;

// Rule ScopeStatement
ruleScopeStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getScopeStatementAccess().getScopeStatementAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getScopeStatementAccess().getAnnotationsAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScopeStatementRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getScopeStatementAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScopeStatementAccess().getDeclarationsDeclarationParserRuleCall_3_0());
				}
				lv_declarations_3_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScopeStatementRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_3_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getScopeStatementAccess().getStatementsStatementParserRuleCall_4_0());
				}
				lv_statements_4_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScopeStatementRule());
					}
					add(
						$current,
						"statements",
						lv_statements_4_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getScopeStatementAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleForLoop
entryRuleForLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForLoopRule()); }
	iv_ruleForLoop=ruleForLoop
	{ $current=$iv_ruleForLoop.current; }
	EOF;

// Rule ForLoop
ruleForLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForLoopAccess().getForKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getForLoopAccess().getInitializationDeclarationLoopDeclarationParserRuleCall_2_0_0());
					}
					lv_initializationDeclaration_2_0=ruleLoopDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForLoopRule());
						}
						set(
							$current,
							"initializationDeclaration",
							lv_initializationDeclaration_2_0,
							"de.cau.cs.kieler.scl.SCL.LoopDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getForLoopAccess().getInitializationEffectOrAssignmentParserRuleCall_2_1_0());
					}
					lv_initialization_3_0=ruleEffectOrAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForLoopRule());
						}
						set(
							$current,
							"initialization",
							lv_initialization_3_0,
							"de.cau.cs.kieler.scl.SCL.EffectOrAssignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getForLoopAccess().getSemicolonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForLoopAccess().getConditionBoolExpressionParserRuleCall_4_0());
				}
				lv_condition_5_0=ruleBoolExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForLoopRule());
					}
					set(
						$current,
						"condition",
						lv_condition_5_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getForLoopAccess().getSemicolonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForLoopAccess().getAfterthoughtEffectOrAssignmentParserRuleCall_6_0());
				}
				lv_afterthought_7_0=ruleEffectOrAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForLoopRule());
					}
					set(
						$current,
						"afterthought",
						lv_afterthought_7_0,
						"de.cau.cs.kieler.scl.SCL.EffectOrAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7());
		}
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForLoopAccess().getDeclarationsDeclarationParserRuleCall_9_0());
				}
				lv_declarations_10_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForLoopRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_10_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getForLoopAccess().getStatementsStatementParserRuleCall_10_0());
				}
				lv_statements_11_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForLoopRule());
					}
					add(
						$current,
						"statements",
						lv_statements_11_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_11());
		}
		(
			(
				lv_semicolon_13_0=';'
				{
					newLeafNode(lv_semicolon_13_0, grammarAccess.getForLoopAccess().getSemicolonSemicolonKeyword_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForLoopRule());
					}
					setWithLastConsumed($current, "semicolon", lv_semicolon_13_0 != null, ";");
				}
			)
		)?
	)
;

// Entry rule entryRuleLoopDeclaration
entryRuleLoopDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopDeclarationRule()); }
	iv_ruleLoopDeclaration=ruleLoopDeclaration
	{ $current=$iv_ruleLoopDeclaration.current; }
	EOF;

// Rule LoopDeclaration
ruleLoopDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLoopDeclarationAccess().getTypeValueTypeEnumRuleCall_1_0_0());
					}
					lv_type_1_0=ruleValueType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
						}
						set(
							$current,
							"type",
							lv_type_1_0,
							"de.cau.cs.kieler.sccharts.text.SCTX.ValueType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getLoopDeclarationAccess().getTypeHostTypeEnumRuleCall_1_1_0_0());
						}
						lv_type_2_0=ruleHostType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
							}
							set(
								$current,
								"type",
								lv_type_2_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_hostType_3_0=RULE_STRING
						{
							newLeafNode(lv_hostType_3_0, grammarAccess.getLoopDeclarationAccess().getHostTypeSTRINGTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getLoopDeclarationRule());
							}
							setWithLastConsumed(
								$current,
								"hostType",
								lv_hostType_3_0,
								"de.cau.cs.kieler.annotations.Annotations.STRING");
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_2_0());
				}
				lv_valuedObjects_4_0=ruleValuedObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopDeclarationRule());
					}
					add(
						$current,
						"valuedObjects",
						lv_valuedObjects_4_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEffectOrAssignment
entryRuleEffectOrAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEffectOrAssignmentRule()); }
	iv_ruleEffectOrAssignment=ruleEffectOrAssignment
	{ $current=$iv_ruleEffectOrAssignment.current; }
	EOF;

// Rule EffectOrAssignment
ruleEffectOrAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0_0_0());
						}
						lv_reference_1_0=ruleValuedObjectReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
							}
							set(
								$current,
								"reference",
								lv_reference_1_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getOperatorPostfixOperatorEnumRuleCall_1_0_1_0());
						}
						lv_operator_2_0=rulePostfixOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_1_0_0());
						}
						lv_reference_3_0=ruleValuedObjectReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
							}
							set(
								$current,
								"reference",
								lv_reference_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_1_1_1_0());
						}
						lv_operator_4_0=ruleAssignOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
							}
							set(
								$current,
								"operator",
								lv_operator_4_0,
								"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getExpressionExpressionParserRuleCall_1_1_2_0());
						}
						lv_expression_5_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
							}
							set(
								$current,
								"expression",
								lv_expression_5_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getEffectOrAssignmentAccess().getExpressionExpressionParserRuleCall_1_2_0());
					}
					lv_expression_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEffectOrAssignmentRule());
						}
						set(
							$current,
							"expression",
							lv_expression_6_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleWhileLoop
entryRuleWhileLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileLoopRule()); }
	iv_ruleWhileLoop=ruleWhileLoop
	{ $current=$iv_ruleWhileLoop.current; }
	EOF;

// Rule WhileLoop
ruleWhileLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileLoopAccess().getWhileKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileLoopAccess().getConditionBoolExpressionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleBoolExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileLoopRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileLoopAccess().getDeclarationsDeclarationParserRuleCall_5_0());
				}
				lv_declarations_5_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileLoopRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_5_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileLoopAccess().getStatementsStatementParserRuleCall_6_0());
				}
				lv_statements_6_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileLoopRule());
					}
					add(
						$current,
						"statements",
						lv_statements_6_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_7());
		}
		(
			(
				lv_semicolon_8_0=';'
				{
					newLeafNode(lv_semicolon_8_0, grammarAccess.getWhileLoopAccess().getSemicolonSemicolonKeyword_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWhileLoopRule());
					}
					setWithLastConsumed($current, "semicolon", lv_semicolon_8_0 != null, ";");
				}
			)
		)?
	)
;

// Entry rule entryRuleModuleCallParameter
entryRuleModuleCallParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleCallParameterRule()); }
	iv_ruleModuleCallParameter=ruleModuleCallParameter
	{ $current=$iv_ruleModuleCallParameter.current; }
	EOF;

// Rule ModuleCallParameter
ruleModuleCallParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getModuleCallParameterAccess().getAccessTypeParameterAccessTypeEnumRuleCall_0_0_0_0());
						}
						lv_accessType_0_0=ruleParameterAccessType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModuleCallParameterRule());
							}
							set(
								$current,
								"accessType",
								lv_accessType_0_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ParameterAccessType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getModuleCallParameterAccess().getExpressionValuedObjectReferenceParserRuleCall_0_0_1_0());
						}
						lv_expression_1_0=ruleValuedObjectReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModuleCallParameterRule());
							}
							set(
								$current,
								"expression",
								lv_expression_1_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleCallParameterAccess().getExpressionExpressionParserRuleCall_0_1_0());
					}
					lv_expression_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleCallParameterRule());
						}
						set(
							$current,
							"expression",
							lv_expression_2_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_3='to'
			{
				newLeafNode(otherlv_3, grammarAccess.getModuleCallParameterAccess().getToKeyword_1_0());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModuleCallParameterRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getModuleCallParameterAccess().getExplicitBindingValuedObjectCrossReference_1_1_0());
					}
				)
			)
			(
				otherlv_5='['
				{
					newLeafNode(otherlv_5, grammarAccess.getModuleCallParameterAccess().getLeftSquareBracketKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getModuleCallParameterAccess().getExplicitBindingIndicesExpressionParserRuleCall_1_2_1_0());
						}
						lv_explicitBindingIndices_6_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModuleCallParameterRule());
							}
							add(
								$current,
								"explicitBindingIndices",
								lv_explicitBindingIndices_6_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7=']'
				{
					newLeafNode(otherlv_7, grammarAccess.getModuleCallParameterAccess().getRightSquareBracketKeyword_1_2_2());
				}
			)*
		)?
	)
;

// Entry rule entryRuleMethodDeclaration
entryRuleMethodDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodDeclarationRule()); }
	iv_ruleMethodDeclaration=ruleMethodDeclaration
	{ $current=$iv_ruleMethodDeclaration.current; }
	EOF;

// Rule MethodDeclaration
ruleMethodDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMethodDeclarationAccess().getMethodImplementationDeclarationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
				}
				lv_access_2_0=ruleAccessModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
					}
					set(
						$current,
						"access",
						lv_access_2_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getReturnTypeMethodReturnTypeEnumRuleCall_3_0());
				}
				lv_returnType_3_0=ruleMethodReturnType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_3_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_4_0());
				}
				lv_valuedObjects_4_0=ruleSimpleValuedObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
					}
					add(
						$current,
						"valuedObjects",
						lv_valuedObjects_4_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_5='('
				{
					newLeafNode(otherlv_5, grammarAccess.getMethodDeclarationAccess().getLeftParenthesisKeyword_5_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_1_0());
						}
						lv_parameterDeclarations_6_0=ruleVariableDeclarationWOSemicolon
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
							}
							add(
								$current,
								"parameterDeclarations",
								lv_parameterDeclarations_6_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_7=','
					{
						newLeafNode(otherlv_7, grammarAccess.getMethodDeclarationAccess().getCommaKeyword_5_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMethodDeclarationAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_2_1_0());
							}
							lv_parameterDeclarations_8_0=ruleVariableDeclarationWOSemicolon
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
								}
								add(
									$current,
									"parameterDeclarations",
									lv_parameterDeclarations_8_0,
									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_9=')'
				{
					newLeafNode(otherlv_9, grammarAccess.getMethodDeclarationAccess().getRightParenthesisKeyword_5_0_3());
				}
			)
			    |
			otherlv_10='()'
			{
				newLeafNode(otherlv_10, grammarAccess.getMethodDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
			}
		)
		(
			otherlv_11='schedule'
			{
				newLeafNode(otherlv_11, grammarAccess.getMethodDeclarationAccess().getScheduleKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodDeclarationAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0());
					}
					lv_schedule_12_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_12_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_13=';'
			{
				newLeafNode(otherlv_13, grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_7_0());
			}
			    |
			(
				otherlv_14='{'
				{
					newLeafNode(otherlv_14, grammarAccess.getMethodDeclarationAccess().getLeftCurlyBracketKeyword_7_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_1_1_0());
						}
						lv_annotations_15_0=ruleCommentAnnotatonSL
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
							}
							add(
								$current,
								"annotations",
								lv_annotations_15_0,
								"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getDeclarationsDeclarationParserRuleCall_7_1_2_0());
						}
						lv_declarations_16_0=ruleDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
							}
							add(
								$current,
								"declarations",
								lv_declarations_16_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getStatementsStatementParserRuleCall_7_1_3_0());
						}
						lv_statements_17_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
							}
							add(
								$current,
								"statements",
								lv_statements_17_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_18='}'
				{
					newLeafNode(otherlv_18, grammarAccess.getMethodDeclarationAccess().getRightCurlyBracketKeyword_7_1_4());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
				}
				lv_annotations_19_0=ruleCommentAnnotatonSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_19_0,
						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleMethodDeclarationWOSemicolon
entryRuleMethodDeclarationWOSemicolon returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonRule()); }
	iv_ruleMethodDeclarationWOSemicolon=ruleMethodDeclarationWOSemicolon
	{ $current=$iv_ruleMethodDeclarationWOSemicolon.current; }
	EOF;

// Rule MethodDeclarationWOSemicolon
ruleMethodDeclarationWOSemicolon returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMethodDeclarationWOSemicolonAccess().getMethodImplementationDeclarationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
				}
				lv_access_2_0=ruleAccessModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
					}
					set(
						$current,
						"access",
						lv_access_2_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getReturnTypeMethodReturnTypeEnumRuleCall_3_0());
				}
				lv_returnType_3_0=ruleMethodReturnType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_3_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_4_0());
				}
				lv_valuedObjects_4_0=ruleSimpleValuedObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"valuedObjects",
						lv_valuedObjects_4_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_5='('
				{
					newLeafNode(otherlv_5, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftParenthesisKeyword_5_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_1_0());
						}
						lv_parameterDeclarations_6_0=ruleVariableDeclarationWOSemicolon
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
							}
							add(
								$current,
								"parameterDeclarations",
								lv_parameterDeclarations_6_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_7=','
					{
						newLeafNode(otherlv_7, grammarAccess.getMethodDeclarationWOSemicolonAccess().getCommaKeyword_5_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_2_1_0());
							}
							lv_parameterDeclarations_8_0=ruleVariableDeclarationWOSemicolon
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
								}
								add(
									$current,
									"parameterDeclarations",
									lv_parameterDeclarations_8_0,
									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_9=')'
				{
					newLeafNode(otherlv_9, grammarAccess.getMethodDeclarationWOSemicolonAccess().getRightParenthesisKeyword_5_0_3());
				}
			)
			    |
			otherlv_10='()'
			{
				newLeafNode(otherlv_10, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
			}
		)
		(
			otherlv_11='schedule'
			{
				newLeafNode(otherlv_11, grammarAccess.getMethodDeclarationWOSemicolonAccess().getScheduleKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0());
					}
					lv_schedule_12_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_12_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_13='{'
			{
				newLeafNode(otherlv_13, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_1_0());
					}
					lv_annotations_14_0=ruleCommentAnnotatonSL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_14_0,
							"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationParserRuleCall_7_2_0());
					}
					lv_declarations_15_0=ruleDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
						}
						add(
							$current,
							"declarations",
							lv_declarations_15_0,
							"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getStatementsStatementParserRuleCall_7_3_0());
					}
					lv_statements_16_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
						}
						add(
							$current,
							"statements",
							lv_statements_16_0,
							"de.cau.cs.kieler.sccharts.text.SCTX.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_17='}'
			{
				newLeafNode(otherlv_17, grammarAccess.getMethodDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
	)
;

// Entry rule entryRuleRootScope
entryRuleRootScope returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRootScopeRule()); }
	iv_ruleRootScope=ruleRootScope
	{ $current=$iv_ruleRootScope.current; }
	EOF;

// Rule RootScope
ruleRootScope returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getRootScopeAccess().getKExtScopeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
				}
				lv_declarations_1_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootScopeRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_1_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRootScopeAccess().getEntitiesTestEntityParserRuleCall_2_0());
				}
				lv_entities_2_0=ruleTestEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootScopeRule());
					}
					add(
						$current,
						"entities",
						lv_entities_2_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_3='scope'
			{
				newLeafNode(otherlv_3, grammarAccess.getRootScopeAccess().getScopeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRootScopeAccess().getScopesScopeParserRuleCall_3_1_0());
					}
					lv_scopes_4_0=ruleScope
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRootScopeRule());
						}
						add(
							$current,
							"scopes",
							lv_scopes_4_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleScope
entryRuleScope returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScopeRule()); }
	iv_ruleScope=ruleScope
	{ $current=$iv_ruleScope.current; }
	EOF;

// Rule Scope
ruleScope returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getScopeAccess().getKExtScopeAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getScopeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScopeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.annotations.Annotations.ID");
				}
			)
		)?
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getScopeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
				}
				lv_declarations_3_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScopeRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_3_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getScopeAccess().getEntitiesTestEntityParserRuleCall_4_0());
				}
				lv_entities_4_0=ruleTestEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScopeRule());
					}
					add(
						$current,
						"entities",
						lv_entities_4_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_5='scope'
			{
				newLeafNode(otherlv_5, grammarAccess.getScopeAccess().getScopeKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScopeAccess().getScopesScopeParserRuleCall_5_1_0());
					}
					lv_scopes_6_0=ruleScope
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScopeRule());
						}
						add(
							$current,
							"scopes",
							lv_scopes_6_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getScopeAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleTestEntity
entryRuleTestEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTestEntityRule()); }
	iv_ruleTestEntity=ruleTestEntity
	{ $current=$iv_ruleTestEntity.current; }
	EOF;

// Rule TestEntity
ruleTestEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0_0());
					}
					lv_expression_0_1=ruleAnnotatedExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTestEntityRule());
						}
						set(
							$current,
							"expression",
							lv_expression_0_1,
							"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedJsonExpressionParserRuleCall_0_0_1());
					}
					lv_expression_0_2=ruleAnnotatedJsonExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTestEntityRule());
						}
						set(
							$current,
							"expression",
							lv_expression_0_2,
							"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedJsonExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0());
				}
				lv_effect_1_0=ruleEffect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTestEntityRule());
					}
					set(
						$current,
						"effect",
						lv_effect_1_0,
						"de.cau.cs.kieler.sccharts.text.SCTX.Effect");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAnnotatedExpression
entryRuleAnnotatedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotatedExpressionRule()); }
	iv_ruleAnnotatedExpression=ruleAnnotatedExpression
	{ $current=$iv_ruleAnnotatedExpression.current; }
	EOF;

// Rule AnnotatedExpression
ruleAnnotatedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='expression'
		{
			newLeafNode(otherlv_1, grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAnnotatedJsonExpression
entryRuleAnnotatedJsonExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotatedJsonExpressionRule()); }
	iv_ruleAnnotatedJsonExpression=ruleAnnotatedJsonExpression
	{ $current=$iv_ruleAnnotatedJsonExpression.current; }
	EOF;

// Rule AnnotatedJsonExpression
ruleAnnotatedJsonExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotatedJsonExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotatedJsonExpressionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='json'
		{
			newLeafNode(otherlv_1, grammarAccess.getAnnotatedJsonExpressionAccess().getJsonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotatedJsonExpressionAccess().getExpressionJsonObjectValueParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleJsonObjectValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotatedJsonExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entrySuperDeclaration
entrySuperDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKExtDeclarationRule()); }
	iv_superDeclaration=superDeclaration
	{ $current=$iv_superDeclaration.current; }
	EOF;

// Rule Declaration
superDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getVariableDeclarationParserRuleCall_0());
		}
		this_VariableDeclaration_0=ruleVariableDeclaration
		{
			$current = $this_VariableDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getReferenceDeclarationParserRuleCall_1());
		}
		this_ReferenceDeclaration_1=ruleReferenceDeclaration
		{
			$current = $this_ReferenceDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getScheduleDeclarationParserRuleCall_2());
		}
		this_ScheduleDeclaration_2=ruleScheduleDeclaration
		{
			$current = $this_ScheduleDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getKExtDeclarationAccess().getClassDeclarationParserRuleCall_3());
		}
		this_ClassDeclaration_3=ruleClassDeclaration
		{
			$current = $this_ClassDeclaration_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDeclarationWOSemicolon
entryRuleDeclarationWOSemicolon returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationWOSemicolonRule()); }
	iv_ruleDeclarationWOSemicolon=ruleDeclarationWOSemicolon
	{ $current=$iv_ruleDeclarationWOSemicolon.current; }
	EOF;

// Rule DeclarationWOSemicolon
ruleDeclarationWOSemicolon returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getVariableDeclarationWOSemicolonParserRuleCall_0());
		}
		this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon
		{
			$current = $this_VariableDeclarationWOSemicolon_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getReferenceDeclarationWOSemicolonParserRuleCall_1());
		}
		this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon
		{
			$current = $this_ReferenceDeclarationWOSemicolon_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getScheduleDeclarationWOSemicolonParserRuleCall_2());
		}
		this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon
		{
			$current = $this_ScheduleDeclarationWOSemicolon_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getClassDeclarationWOSemicolonParserRuleCall_3());
		}
		this_ClassDeclarationWOSemicolon_3=ruleClassDeclarationWOSemicolon
		{
			$current = $this_ClassDeclarationWOSemicolon_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclarationRule()); }
	iv_ruleVariableDeclaration=ruleVariableDeclaration
	{ $current=$iv_ruleVariableDeclaration.current; }
	EOF;

// Rule VariableDeclaration
ruleVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
				}
				lv_access_1_0=ruleAccessModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
					}
					set(
						$current,
						"access",
						lv_access_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_const_2_0='const'
				{
					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclarationRule());
					}
					setWithLastConsumed($current, "const", lv_const_2_0 != null, "const");
				}
			)
		)?
		(
			(
				lv_input_3_0='input'
				{
					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationAccess().getInputInputKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclarationRule());
					}
					setWithLastConsumed($current, "input", lv_input_3_0 != null, "input");
				}
			)
		)?
		(
			(
				lv_output_4_0='output'
				{
					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationAccess().getOutputOutputKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclarationRule());
					}
					setWithLastConsumed($current, "output", lv_output_4_0 != null, "output");
				}
			)
		)?
		(
			(
				lv_global_5_0='global'
				{
					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationAccess().getGlobalGlobalKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclarationRule());
					}
					setWithLastConsumed($current, "global", lv_global_5_0 != null, "global");
				}
			)
		)?
		(
			(
				lv_static_6_0='static'
				{
					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationAccess().getStaticStaticKeyword_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclarationRule());
					}
					setWithLastConsumed($current, "static", lv_static_6_0 != null, "static");
				}
			)
		)?
		(
			(
				(
					(
						lv_signal_7_0='signal'
						{
							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getVariableDeclarationRule());
							}
							setWithLastConsumed($current, "signal", lv_signal_7_0 != null, "signal");
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
						}
						lv_type_8_0=ruleValueType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
							}
							set(
								$current,
								"type",
								lv_type_8_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.ValueType");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					lv_signal_9_0='signal'
					{
						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableDeclarationRule());
						}
						setWithLastConsumed($current, "signal", lv_signal_9_0 != null, "signal");
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
						}
						lv_type_10_0=ruleHostType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
							}
							set(
								$current,
								"type",
								lv_type_10_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_hostType_11_0=RULE_STRING
						{
							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getVariableDeclarationRule());
							}
							setWithLastConsumed(
								$current,
								"hostType",
								lv_hostType_11_0,
								"de.cau.cs.kieler.annotations.Annotations.STRING");
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
				}
				lv_valuedObjects_12_0=ruleValuedObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
					}
					add(
						$current,
						"valuedObjects",
						lv_valuedObjects_12_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_13=','
			{
				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
					}
					lv_valuedObjects_14_0=ruleValuedObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
						}
						add(
							$current,
							"valuedObjects",
							lv_valuedObjects_14_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_15=';'
		{
			newLeafNode(otherlv_15, grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_11_0());
				}
				lv_annotations_16_0=ruleCommentAnnotatonSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_16_0,
						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleVariableDeclarationWOSemicolon
entryRuleVariableDeclarationWOSemicolon returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonRule()); }
	iv_ruleVariableDeclarationWOSemicolon=ruleVariableDeclarationWOSemicolon
	{ $current=$iv_ruleVariableDeclarationWOSemicolon.current; }
	EOF;

// Rule VariableDeclarationWOSemicolon
ruleVariableDeclarationWOSemicolon returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
				}
				lv_access_1_0=ruleAccessModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
					}
					set(
						$current,
						"access",
						lv_access_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_const_2_0='const'
				{
					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
					}
					setWithLastConsumed($current, "const", lv_const_2_0 != null, "const");
				}
			)
		)?
		(
			(
				lv_input_3_0='input'
				{
					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
					}
					setWithLastConsumed($current, "input", lv_input_3_0 != null, "input");
				}
			)
		)?
		(
			(
				lv_output_4_0='output'
				{
					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
					}
					setWithLastConsumed($current, "output", lv_output_4_0 != null, "output");
				}
			)
		)?
		(
			(
				lv_global_5_0='global'
				{
					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
					}
					setWithLastConsumed($current, "global", lv_global_5_0 != null, "global");
				}
			)
		)?
		(
			(
				lv_static_6_0='static'
				{
					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
					}
					setWithLastConsumed($current, "static", lv_static_6_0 != null, "static");
				}
			)
		)?
		(
			(
				(
					(
						lv_signal_7_0='signal'
						{
							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
							}
							setWithLastConsumed($current, "signal", lv_signal_7_0 != null, "signal");
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
						}
						lv_type_8_0=ruleValueType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
							}
							set(
								$current,
								"type",
								lv_type_8_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.ValueType");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					lv_signal_9_0='signal'
					{
						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
						}
						setWithLastConsumed($current, "signal", lv_signal_9_0 != null, "signal");
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
						}
						lv_type_10_0=ruleHostType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
							}
							set(
								$current,
								"type",
								lv_type_10_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_hostType_11_0=RULE_STRING
						{
							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
							}
							setWithLastConsumed(
								$current,
								"hostType",
								lv_hostType_11_0,
								"de.cau.cs.kieler.annotations.Annotations.STRING");
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
				}
				lv_valuedObjects_12_0=ruleValuedObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"valuedObjects",
						lv_valuedObjects_12_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_13=','
			{
				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationWOSemicolonAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
					}
					lv_valuedObjects_14_0=ruleValuedObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
						}
						add(
							$current,
							"valuedObjects",
							lv_valuedObjects_14_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_10_0());
				}
				lv_annotations_15_0=ruleCommentAnnotatonSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_15_0,
						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassDeclarationRule()); }
	iv_ruleClassDeclaration=ruleClassDeclaration
	{ $current=$iv_ruleClassDeclaration.current; }
	EOF;

// Rule ClassDeclaration
ruleClassDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getClassDeclarationAccess().getClassDeclarationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
				}
				lv_access_2_0=ruleAccessModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
					}
					set(
						$current,
						"access",
						lv_access_2_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_host_3_0='host'
				{
					newLeafNode(lv_host_3_0, grammarAccess.getClassDeclarationAccess().getHostHostKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassDeclarationRule());
					}
					setWithLastConsumed($current, "host", lv_host_3_0 != null, "host");
				}
			)
		)?
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getClassDeclarationAccess().getTypeClassTypeEnumRuleCall_4_0_0_0());
						}
						lv_type_4_0=ruleClassType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
							}
							set(
								$current,
								"type",
								lv_type_4_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ClassType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getClassDeclarationAccess().getNameEStringParserRuleCall_4_0_1_0());
						}
						lv_name_5_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
							}
							set(
								$current,
								"name",
								lv_name_5_0,
								"de.cau.cs.kieler.annotations.Annotations.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_6='{'
				{
					newLeafNode(otherlv_6, grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_4_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getClassDeclarationAccess().getDeclarationsDeclarationOrMethodParserRuleCall_4_0_3_0());
						}
						lv_declarations_7_0=ruleDeclarationOrMethod
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
							}
							add(
								$current,
								"declarations",
								lv_declarations_7_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationOrMethod");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_8='}'
				{
					newLeafNode(otherlv_8, grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_4_0_4());
				}
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getClassDeclarationAccess().getTypeStructTypeEnumRuleCall_4_1_0_0());
						}
						lv_type_9_0=ruleStructType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
							}
							set(
								$current,
								"type",
								lv_type_9_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getClassDeclarationAccess().getNameEStringParserRuleCall_4_1_1_0());
						}
						lv_name_10_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
							}
							set(
								$current,
								"name",
								lv_name_10_0,
								"de.cau.cs.kieler.annotations.Annotations.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_11='{'
				{
					newLeafNode(otherlv_11, grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_4_1_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getClassDeclarationAccess().getDeclarationsDeclarationParserRuleCall_4_1_3_0());
						}
						lv_declarations_12_0=ruleDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
							}
							add(
								$current,
								"declarations",
								lv_declarations_12_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.Declaration");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_13='}'
				{
					newLeafNode(otherlv_13, grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_4_1_4());
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getClassDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_5_0_0());
					}
					lv_valuedObjects_14_0=ruleValuedObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
						}
						add(
							$current,
							"valuedObjects",
							lv_valuedObjects_14_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getClassDeclarationAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getClassDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_5_1_1_0());
						}
						lv_valuedObjects_16_0=ruleValuedObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
							}
							add(
								$current,
								"valuedObjects",
								lv_valuedObjects_16_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_17=';'
		{
			newLeafNode(otherlv_17, grammarAccess.getClassDeclarationAccess().getSemicolonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_0());
				}
				lv_annotations_18_0=ruleCommentAnnotatonSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_18_0,
						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleDeclarationOrMethod
entryRuleDeclarationOrMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationOrMethodRule()); }
	iv_ruleDeclarationOrMethod=ruleDeclarationOrMethod
	{ $current=$iv_ruleDeclarationOrMethod.current; }
	EOF;

// Rule DeclarationOrMethod
ruleDeclarationOrMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getDeclarationParserRuleCall_0());
		}
		this_Declaration_0=ruleDeclaration
		{
			$current = $this_Declaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getEnumDeclarationParserRuleCall_1());
		}
		this_EnumDeclaration_1=ruleEnumDeclaration
		{
			$current = $this_EnumDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getMethodDeclarationParserRuleCall_2());
		}
		this_MethodDeclaration_2=ruleMethodDeclaration
		{
			$current = $this_MethodDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDeclarationOrMethodWOSemicolon
entryRuleDeclarationOrMethodWOSemicolon returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonRule()); }
	iv_ruleDeclarationOrMethodWOSemicolon=ruleDeclarationOrMethodWOSemicolon
	{ $current=$iv_ruleDeclarationOrMethodWOSemicolon.current; }
	EOF;

// Rule DeclarationOrMethodWOSemicolon
ruleDeclarationOrMethodWOSemicolon returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getDeclarationWOSemicolonParserRuleCall_0());
		}
		this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon
		{
			$current = $this_DeclarationWOSemicolon_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getEnumDeclarationWOSemicolonParserRuleCall_1());
		}
		this_EnumDeclarationWOSemicolon_1=ruleEnumDeclarationWOSemicolon
		{
			$current = $this_EnumDeclarationWOSemicolon_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getMethodDeclarationWOSemicolonParserRuleCall_2());
		}
		this_MethodDeclarationWOSemicolon_2=ruleMethodDeclarationWOSemicolon
		{
			$current = $this_MethodDeclarationWOSemicolon_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEnumDeclaration
entryRuleEnumDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumDeclarationRule()); }
	iv_ruleEnumDeclaration=ruleEnumDeclaration
	{ $current=$iv_ruleEnumDeclaration.current; }
	EOF;

// Rule EnumDeclaration
ruleEnumDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnumDeclarationAccess().getClassDeclarationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
				}
				lv_access_2_0=ruleAccessModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
					}
					set(
						$current,
						"access",
						lv_access_2_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_host_3_0='host'
				{
					newLeafNode(lv_host_3_0, grammarAccess.getEnumDeclarationAccess().getHostHostKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumDeclarationRule());
					}
					setWithLastConsumed($current, "host", lv_host_3_0 != null, "host");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDeclarationAccess().getTypeEnumTypeEnumRuleCall_4_0());
				}
				lv_type_4_0=ruleEnumType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.EnumType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDeclarationAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_5_0());
				}
				lv_valuedObjects_5_0=ruleSimpleValuedObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
					}
					add(
						$current,
						"valuedObjects",
						lv_valuedObjects_5_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_hostType_6_0=RULE_STRING
				{
					newLeafNode(lv_hostType_6_0, grammarAccess.getEnumDeclarationAccess().getHostTypeSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"hostType",
						lv_hostType_6_0,
						"de.cau.cs.kieler.annotations.Annotations.STRING");
				}
			)
		)?
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getEnumDeclarationAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDeclarationAccess().getDeclarationsEnumMemberDeclarationParserRuleCall_8_0());
				}
				lv_declarations_8_0=ruleEnumMemberDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_8_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.EnumMemberDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getEnumDeclarationAccess().getSemicolonKeyword_9());
		}
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getEnumDeclarationAccess().getRightCurlyBracketKeyword_10());
		}
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getEnumDeclarationAccess().getSemicolonKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_12_0());
				}
				lv_annotations_12_0=ruleCommentAnnotatonSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_12_0,
						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleEnumMemberDeclaration
entryRuleEnumMemberDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumMemberDeclarationRule()); }
	iv_ruleEnumMemberDeclaration=ruleEnumMemberDeclaration
	{ $current=$iv_ruleEnumMemberDeclaration.current; }
	EOF;

// Rule EnumMemberDeclaration
ruleEnumMemberDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumMemberDeclarationAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleQuotedStringAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumMemberDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumMemberDeclarationAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_1_0());
				}
				lv_valuedObjects_1_0=ruleSimpleValuedObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumMemberDeclarationRule());
					}
					add(
						$current,
						"valuedObjects",
						lv_valuedObjects_1_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getEnumMemberDeclarationAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumMemberDeclarationAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_2_1_0());
					}
					lv_valuedObjects_3_0=ruleSimpleValuedObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumMemberDeclarationRule());
						}
						add(
							$current,
							"valuedObjects",
							lv_valuedObjects_3_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumMemberDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_3_0());
				}
				lv_annotations_4_0=ruleCommentAnnotatonSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumMemberDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_4_0,
						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleEnumDeclarationWOSemicolon
entryRuleEnumDeclarationWOSemicolon returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumDeclarationWOSemicolonRule()); }
	iv_ruleEnumDeclarationWOSemicolon=ruleEnumDeclarationWOSemicolon
	{ $current=$iv_ruleEnumDeclarationWOSemicolon.current; }
	EOF;

// Rule EnumDeclarationWOSemicolon
ruleEnumDeclarationWOSemicolon returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnumDeclarationWOSemicolonAccess().getClassDeclarationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
				}
				lv_access_2_0=ruleAccessModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDeclarationWOSemicolonRule());
					}
					set(
						$current,
						"access",
						lv_access_2_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_host_3_0='host'
				{
					newLeafNode(lv_host_3_0, grammarAccess.getEnumDeclarationWOSemicolonAccess().getHostHostKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumDeclarationWOSemicolonRule());
					}
					setWithLastConsumed($current, "host", lv_host_3_0 != null, "host");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDeclarationWOSemicolonAccess().getTypeEnumTypeEnumRuleCall_4_0());
				}
				lv_type_4_0=ruleEnumType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDeclarationWOSemicolonRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.EnumType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDeclarationWOSemicolonAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_5_0());
				}
				lv_valuedObjects_5_0=ruleSimpleValuedObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"valuedObjects",
						lv_valuedObjects_5_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_hostType_6_0=RULE_STRING
				{
					newLeafNode(lv_hostType_6_0, grammarAccess.getEnumDeclarationWOSemicolonAccess().getHostTypeSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumDeclarationWOSemicolonRule());
					}
					setWithLastConsumed(
						$current,
						"hostType",
						lv_hostType_6_0,
						"de.cau.cs.kieler.annotations.Annotations.STRING");
				}
			)
		)?
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getEnumDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDeclarationWOSemicolonAccess().getDeclarationsEnumMemberDeclarationParserRuleCall_8_0());
				}
				lv_declarations_8_0=ruleEnumMemberDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_8_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.EnumMemberDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getEnumDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_10_0());
				}
				lv_annotations_10_0=ruleCommentAnnotatonSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_10_0,
						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleReferenceDeclaration
entryRuleReferenceDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceDeclarationRule()); }
	iv_ruleReferenceDeclaration=ruleReferenceDeclaration
	{ $current=$iv_ruleReferenceDeclaration.current; }
	EOF;

// Rule ReferenceDeclaration
ruleReferenceDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
				}
				lv_access_1_0=ruleAccessModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
					}
					set(
						$current,
						"access",
						lv_access_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					(
						lv_input_2_0='input'
						{
							newLeafNode(lv_input_2_0, grammarAccess.getReferenceDeclarationAccess().getInputInputKeyword_2_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getReferenceDeclarationRule());
							}
							setWithLastConsumed($current, "input", lv_input_2_0 != null, "input");
						}
					)
				)?
				otherlv_3='ref'
				{
					newLeafNode(otherlv_3, grammarAccess.getReferenceDeclarationAccess().getRefKeyword_2_0_1());
				}
				(
					(
						(
							{
								/* */
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getReferenceDeclarationRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getReferenceContainerNamedObjectCrossReference_2_0_2_0_0());
							}
							rulePrimeID
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5='.'
					{
						newLeafNode(otherlv_5, grammarAccess.getReferenceDeclarationAccess().getFullStopKeyword_2_0_2_1());
					}
				)?
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getReferenceDeclarationRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getReferenceNamedObjectCrossReference_2_0_3_0());
						}
						rulePrimeID
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_7='<'
					{
						newLeafNode(otherlv_7, grammarAccess.getReferenceDeclarationAccess().getLessThanSignKeyword_2_0_4_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getGenericParametersGenericParameterParserRuleCall_2_0_4_1_0());
							}
							lv_genericParameters_8_0=ruleGenericParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
								}
								add(
									$current,
									"genericParameters",
									lv_genericParameters_8_0,
									"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_9=','
						{
							newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_2_0_4_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getGenericParametersGenericParameterParserRuleCall_2_0_4_2_1_0());
								}
								lv_genericParameters_10_0=ruleGenericParameter
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
									}
									add(
										$current,
										"genericParameters",
										lv_genericParameters_10_0,
										"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_11='>'
					{
						newLeafNode(otherlv_11, grammarAccess.getReferenceDeclarationAccess().getGreaterThanSignKeyword_2_0_4_3());
					}
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsReferenceValuedObjectParserRuleCall_2_0_5_0());
						}
						lv_valuedObjects_12_0=ruleReferenceValuedObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
							}
							add(
								$current,
								"valuedObjects",
								lv_valuedObjects_12_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.ReferenceValuedObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_13=','
					{
						newLeafNode(otherlv_13, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_2_0_6_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsReferenceValuedObjectParserRuleCall_2_0_6_1_0());
							}
							lv_valuedObjects_14_0=ruleReferenceValuedObject
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
								}
								add(
									$current,
									"valuedObjects",
									lv_valuedObjects_14_0,
									"de.cau.cs.kieler.sccharts.text.SCTX.ReferenceValuedObject");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				otherlv_15='extern'
				{
					newLeafNode(otherlv_15, grammarAccess.getReferenceDeclarationAccess().getExternKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_1_0());
						}
						lv_extern_16_0=ruleExternString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
							}
							add(
								$current,
								"extern",
								lv_extern_16_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_17=','
					{
						newLeafNode(otherlv_17, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_2_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
							}
							lv_extern_18_0=ruleExternString
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
								}
								add(
									$current,
									"extern",
									lv_extern_18_0,
									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_2_1_3_0());
						}
						lv_valuedObjects_19_0=ruleValuedObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
							}
							add(
								$current,
								"valuedObjects",
								lv_valuedObjects_19_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_20=','
					{
						newLeafNode(otherlv_20, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_2_1_4_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_2_1_4_1_0());
							}
							lv_valuedObjects_21_0=ruleValuedObject
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
								}
								add(
									$current,
									"valuedObjects",
									lv_valuedObjects_21_0,
									"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)
		otherlv_22=';'
		{
			newLeafNode(otherlv_22, grammarAccess.getReferenceDeclarationAccess().getSemicolonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_4_0());
				}
				lv_annotations_23_0=ruleCommentAnnotatonSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_23_0,
						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleReferenceDeclarationWOSemicolon
entryRuleReferenceDeclarationWOSemicolon returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonRule()); }
	iv_ruleReferenceDeclarationWOSemicolon=ruleReferenceDeclarationWOSemicolon
	{ $current=$iv_ruleReferenceDeclarationWOSemicolon.current; }
	EOF;

// Rule ReferenceDeclarationWOSemicolon
ruleReferenceDeclarationWOSemicolon returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
				}
				lv_access_1_0=ruleAccessModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
					}
					set(
						$current,
						"access",
						lv_access_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					(
						lv_input_2_0='input'
						{
							newLeafNode(lv_input_2_0, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getInputInputKeyword_2_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
							}
							setWithLastConsumed($current, "input", lv_input_2_0 != null, "input");
						}
					)
				)?
				otherlv_3='ref'
				{
					newLeafNode(otherlv_3, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getRefKeyword_2_0_1());
				}
				(
					(
						(
							{
								/* */
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceContainerNamedObjectCrossReference_2_0_2_0_0());
							}
							rulePrimeID
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5='.'
					{
						newLeafNode(otherlv_5, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getFullStopKeyword_2_0_2_1());
					}
				)?
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceNamedObjectCrossReference_2_0_3_0());
						}
						rulePrimeID
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_7='<'
					{
						newLeafNode(otherlv_7, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getLessThanSignKeyword_2_0_4_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGenericParametersGenericParameterParserRuleCall_2_0_4_1_0());
							}
							lv_genericParameters_8_0=ruleGenericParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
								}
								add(
									$current,
									"genericParameters",
									lv_genericParameters_8_0,
									"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_9=','
						{
							newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_2_0_4_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGenericParametersGenericParameterParserRuleCall_2_0_4_2_1_0());
								}
								lv_genericParameters_10_0=ruleGenericParameter
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
									}
									add(
										$current,
										"genericParameters",
										lv_genericParameters_10_0,
										"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_11='>'
					{
						newLeafNode(otherlv_11, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGreaterThanSignKeyword_2_0_4_3());
					}
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsReferenceValuedObjectParserRuleCall_2_0_5_0());
						}
						lv_valuedObjects_12_0=ruleReferenceValuedObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
							}
							add(
								$current,
								"valuedObjects",
								lv_valuedObjects_12_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.ReferenceValuedObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_13=','
					{
						newLeafNode(otherlv_13, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_2_0_6_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsReferenceValuedObjectParserRuleCall_2_0_6_1_0());
							}
							lv_valuedObjects_14_0=ruleReferenceValuedObject
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
								}
								add(
									$current,
									"valuedObjects",
									lv_valuedObjects_14_0,
									"de.cau.cs.kieler.sccharts.text.SCTX.ReferenceValuedObject");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				otherlv_15='extern'
				{
					newLeafNode(otherlv_15, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_1_0());
						}
						lv_extern_16_0=ruleExternString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
							}
							add(
								$current,
								"extern",
								lv_extern_16_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_17=','
					{
						newLeafNode(otherlv_17, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_2_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
							}
							lv_extern_18_0=ruleExternString
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
								}
								add(
									$current,
									"extern",
									lv_extern_18_0,
									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_2_1_3_0());
						}
						lv_valuedObjects_19_0=ruleValuedObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
							}
							add(
								$current,
								"valuedObjects",
								lv_valuedObjects_19_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_20=','
					{
						newLeafNode(otherlv_20, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_2_1_4_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_2_1_4_1_0());
							}
							lv_valuedObjects_21_0=ruleValuedObject
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
								}
								add(
									$current,
									"valuedObjects",
									lv_valuedObjects_21_0,
									"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_3_0());
				}
				lv_annotations_22_0=ruleCommentAnnotatonSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_22_0,
						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleExternString
entryRuleExternString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExternStringRule()); }
	iv_ruleExternString=ruleExternString
	{ $current=$iv_ruleExternString.current; }
	EOF;

// Rule ExternString
ruleExternString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExternStringAccess().getAnnotationsTagAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleTagAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExternStringRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.annotations.Annotations.TagAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				lv_code_1_0=RULE_STRING
				{
					newLeafNode(lv_code_1_0, grammarAccess.getExternStringAccess().getCodeSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExternStringRule());
					}
					setWithLastConsumed(
						$current,
						"code",
						lv_code_1_0,
						"de.cau.cs.kieler.annotations.Annotations.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleGenericParameterDeclaration
entryRuleGenericParameterDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenericParameterDeclarationRule()); }
	iv_ruleGenericParameterDeclaration=ruleGenericParameterDeclaration
	{ $current=$iv_ruleGenericParameterDeclaration.current; }
	EOF;

// Rule GenericParameterDeclaration
ruleGenericParameterDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGenericParameterDeclarationAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleQuotedStringAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenericParameterDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getGenericParameterDeclarationAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_1_0());
				}
				lv_valuedObjects_1_0=ruleSimpleValuedObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenericParameterDeclarationRule());
					}
					add(
						$current,
						"valuedObjects",
						lv_valuedObjects_1_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_2='is'
				{
					newLeafNode(otherlv_2, grammarAccess.getGenericParameterDeclarationAccess().getIsKeyword_2_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGenericParameterDeclarationAccess().getValueTypeValueTypeEnumRuleCall_2_0_1_0());
						}
						lv_valueType_3_0=ruleValueType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGenericParameterDeclarationRule());
							}
							set(
								$current,
								"valueType",
								lv_valueType_3_0,
								"de.cau.cs.kieler.sccharts.text.SCTX.ValueType");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='is'
				{
					newLeafNode(otherlv_4, grammarAccess.getGenericParameterDeclarationAccess().getIsKeyword_2_1_0());
				}
				(
					(
						lv_reference_5_0='ref'
						{
							newLeafNode(lv_reference_5_0, grammarAccess.getGenericParameterDeclarationAccess().getReferenceRefKeyword_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getGenericParameterDeclarationRule());
							}
							setWithLastConsumed($current, "reference", lv_reference_5_0 != null, "ref");
						}
					)
				)?
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getGenericParameterDeclarationRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getGenericParameterDeclarationAccess().getTypeNamedObjectCrossReference_2_1_2_0());
						}
						rulePrimeID
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleGenericParameter
entryRuleGenericParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenericParameterRule()); }
	iv_ruleGenericParameter=ruleGenericParameter
	{ $current=$iv_ruleGenericParameter.current; }
	EOF;

// Rule GenericParameter
ruleGenericParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionValueTypeReferenceParserRuleCall_0_0());
				}
				lv_expression_0_1=ruleValueTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenericParameterRule());
					}
					set(
						$current,
						"expression",
						lv_expression_0_1,
						"de.cau.cs.kieler.kexpressions.kext.KExt.ValueTypeReference");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionAnyValueParserRuleCall_0_1());
				}
				lv_expression_0_2=ruleAnyValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenericParameterRule());
					}
					set(
						$current,
						"expression",
						lv_expression_0_2,
						"de.cau.cs.kieler.kexpressions.KExpressions.AnyValue");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionGenericParameter_GenericTypeReference_ParameterizedParserRuleCall_0_2());
				}
				lv_expression_0_3=ruleGenericParameter_GenericTypeReference_Parameterized
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenericParameterRule());
					}
					set(
						$current,
						"expression",
						lv_expression_0_3,
						"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter_GenericTypeReference_Parameterized");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionGenericParameter_ValuedObjectReference_ArrayParserRuleCall_0_3());
				}
				lv_expression_0_4=ruleGenericParameter_ValuedObjectReference_Array
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenericParameterRule());
					}
					set(
						$current,
						"expression",
						lv_expression_0_4,
						"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter_ValuedObjectReference_Array");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionGenericParameter_ValuedObjectReference_SubParserRuleCall_0_4());
				}
				lv_expression_0_5=ruleGenericParameter_ValuedObjectReference_Sub
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenericParameterRule());
					}
					set(
						$current,
						"expression",
						lv_expression_0_5,
						"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter_ValuedObjectReference_Sub");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionGenericTypeReferenceParserRuleCall_0_5());
				}
				lv_expression_0_6=ruleGenericTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenericParameterRule());
					}
					set(
						$current,
						"expression",
						lv_expression_0_6,
						"de.cau.cs.kieler.kexpressions.kext.KExt.GenericTypeReference");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionValuedObjectReferenceParserRuleCall_0_6());
				}
				lv_expression_0_7=ruleValuedObjectReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenericParameterRule());
					}
					set(
						$current,
						"expression",
						lv_expression_0_7,
						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleValueTypeReference
entryRuleValueTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueTypeReferenceRule()); }
	iv_ruleValueTypeReference=ruleValueTypeReference
	{ $current=$iv_ruleValueTypeReference.current; }
	EOF;

// Rule ValueTypeReference
ruleValueTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getValueTypeReferenceAccess().getValueTypeValueTypeEnumRuleCall_0());
			}
			lv_valueType_0_0=ruleValueType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getValueTypeReferenceRule());
				}
				set(
					$current,
					"valueType",
					lv_valueType_0_0,
					"de.cau.cs.kieler.sccharts.text.SCTX.ValueType");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleGenericTypeReference
entryRuleGenericTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenericTypeReferenceRule()); }
	iv_ruleGenericTypeReference=ruleGenericTypeReference
	{ $current=$iv_ruleGenericTypeReference.current; }
	EOF;

// Rule GenericTypeReference
ruleGenericTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGenericTypeReferenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGenericTypeReferenceAccess().getTypeNamedObjectCrossReference_0_0());
				}
				rulePrimeID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='<'
			{
				newLeafNode(otherlv_1, grammarAccess.getGenericTypeReferenceAccess().getLessThanSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGenericTypeReferenceAccess().getGenericParametersGenericParameterParserRuleCall_1_1_0());
					}
					lv_genericParameters_2_0=ruleGenericParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenericTypeReferenceRule());
						}
						add(
							$current,
							"genericParameters",
							lv_genericParameters_2_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getGenericTypeReferenceAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGenericTypeReferenceAccess().getGenericParametersGenericParameterParserRuleCall_1_2_1_0());
						}
						lv_genericParameters_4_0=ruleGenericParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGenericTypeReferenceRule());
							}
							add(
								$current,
								"genericParameters",
								lv_genericParameters_4_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='>'
			{
				newLeafNode(otherlv_5, grammarAccess.getGenericTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRuleGenericParameter_GenericTypeReference_Parameterized
entryRuleGenericParameter_GenericTypeReference_Parameterized returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedRule()); }
	iv_ruleGenericParameter_GenericTypeReference_Parameterized=ruleGenericParameter_GenericTypeReference_Parameterized
	{ $current=$iv_ruleGenericParameter_GenericTypeReference_Parameterized.current; }
	EOF;

// Rule GenericParameter_GenericTypeReference_Parameterized
ruleGenericParameter_GenericTypeReference_Parameterized returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedAccess().getTypeNamedObjectCrossReference_0_0());
				}
				rulePrimeID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedAccess().getLessThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedAccess().getGenericParametersGenericParameterParserRuleCall_2_0());
				}
				lv_genericParameters_2_0=ruleGenericParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedRule());
					}
					add(
						$current,
						"genericParameters",
						lv_genericParameters_2_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedAccess().getGenericParametersGenericParameterParserRuleCall_3_1_0());
					}
					lv_genericParameters_4_0=ruleGenericParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedRule());
						}
						add(
							$current,
							"genericParameters",
							lv_genericParameters_4_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='>'
		{
			newLeafNode(otherlv_5, grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedAccess().getGreaterThanSignKeyword_4());
		}
	)
;

// Entry rule entryRuleGenericParameter_ValuedObjectReference_Array
entryRuleGenericParameter_ValuedObjectReference_Array returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_ArrayRule()); }
	iv_ruleGenericParameter_ValuedObjectReference_Array=ruleGenericParameter_ValuedObjectReference_Array
	{ $current=$iv_ruleGenericParameter_ValuedObjectReference_Array.current; }
	EOF;

// Rule GenericParameter_ValuedObjectReference_Array
ruleGenericParameter_ValuedObjectReference_Array returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGenericParameter_ValuedObjectReference_ArrayRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_ArrayAccess().getValuedObjectValuedObjectCrossReference_0_0());
				}
				rulePrimeID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getGenericParameter_ValuedObjectReference_ArrayAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_ArrayAccess().getIndicesExpressionParserRuleCall_1_1_0());
					}
					lv_indices_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenericParameter_ValuedObjectReference_ArrayRule());
						}
						add(
							$current,
							"indices",
							lv_indices_2_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getGenericParameter_ValuedObjectReference_ArrayAccess().getRightSquareBracketKeyword_1_2());
			}
		)+
		(
			otherlv_4='.'
			{
				newLeafNode(otherlv_4, grammarAccess.getGenericParameter_ValuedObjectReference_ArrayAccess().getFullStopKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_ArrayAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
					}
					lv_subReference_5_0=ruleValuedObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenericParameter_ValuedObjectReference_ArrayRule());
						}
						set(
							$current,
							"subReference",
							lv_subReference_5_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleGenericParameter_ValuedObjectReference_Sub
entryRuleGenericParameter_ValuedObjectReference_Sub returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_SubRule()); }
	iv_ruleGenericParameter_ValuedObjectReference_Sub=ruleGenericParameter_ValuedObjectReference_Sub
	{ $current=$iv_ruleGenericParameter_ValuedObjectReference_Sub.current; }
	EOF;

// Rule GenericParameter_ValuedObjectReference_Sub
ruleGenericParameter_ValuedObjectReference_Sub returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGenericParameter_ValuedObjectReference_SubRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_SubAccess().getValuedObjectValuedObjectCrossReference_0_0());
				}
				rulePrimeID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getGenericParameter_ValuedObjectReference_SubAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_SubAccess().getIndicesExpressionParserRuleCall_1_1_0());
					}
					lv_indices_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenericParameter_ValuedObjectReference_SubRule());
						}
						add(
							$current,
							"indices",
							lv_indices_2_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getGenericParameter_ValuedObjectReference_SubAccess().getRightSquareBracketKeyword_1_2());
			}
		)*
		(
			otherlv_4='.'
			{
				newLeafNode(otherlv_4, grammarAccess.getGenericParameter_ValuedObjectReference_SubAccess().getFullStopKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_SubAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
					}
					lv_subReference_5_0=ruleValuedObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenericParameter_ValuedObjectReference_SubRule());
						}
						set(
							$current,
							"subReference",
							lv_subReference_5_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleScheduleDeclaration
entryRuleScheduleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScheduleDeclarationRule()); }
	iv_ruleScheduleDeclaration=ruleScheduleDeclaration
	{ $current=$iv_ruleScheduleDeclaration.current; }
	EOF;

// Rule ScheduleDeclaration
ruleScheduleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
				}
				lv_access_1_0=ruleAccessModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
					}
					set(
						$current,
						"access",
						lv_access_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='schedule'
		{
			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationAccess().getScheduleKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScheduleDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"de.cau.cs.kieler.annotations.Annotations.STRING");
				}
			)
		)?
		(
			otherlv_4='global'
			{
				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationAccess().getGlobalKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
					}
					lv_global_5_0=rulePriorityProtocol
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
						}
						set(
							$current,
							"global",
							lv_global_5_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationAccess().getLeftCurlyBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
					}
					lv_priorities_7_0=rulePriorityProtocol
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
						}
						add(
							$current,
							"priorities",
							lv_priorities_7_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
						}
						lv_priorities_9_0=rulePriorityProtocol
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
							}
							add(
								$current,
								"priorities",
								lv_priorities_9_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
				}
				lv_valuedObjects_11_0=ruleValuedObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
					}
					add(
						$current,
						"valuedObjects",
						lv_valuedObjects_11_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
					}
					lv_valuedObjects_13_0=ruleValuedObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
						}
						add(
							$current,
							"valuedObjects",
							lv_valuedObjects_13_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_14=';'
		{
			newLeafNode(otherlv_14, grammarAccess.getScheduleDeclarationAccess().getSemicolonKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_9_0());
				}
				lv_annotations_15_0=ruleCommentAnnotatonSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_15_0,
						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleScheduleDeclarationWOSemicolon
entryRuleScheduleDeclarationWOSemicolon returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonRule()); }
	iv_ruleScheduleDeclarationWOSemicolon=ruleScheduleDeclarationWOSemicolon
	{ $current=$iv_ruleScheduleDeclarationWOSemicolon.current; }
	EOF;

// Rule ScheduleDeclarationWOSemicolon
ruleScheduleDeclarationWOSemicolon returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
				}
				lv_access_1_0=ruleAccessModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
					}
					set(
						$current,
						"access",
						lv_access_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='schedule'
		{
			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getScheduleKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScheduleDeclarationWOSemicolonRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"de.cau.cs.kieler.annotations.Annotations.STRING");
				}
			)
		)?
		(
			otherlv_4='global'
			{
				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
					}
					lv_global_5_0=rulePriorityProtocol
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
						}
						set(
							$current,
							"global",
							lv_global_5_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
					}
					lv_priorities_7_0=rulePriorityProtocol
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
						}
						add(
							$current,
							"priorities",
							lv_priorities_7_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
						}
						lv_priorities_9_0=rulePriorityProtocol
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
							}
							add(
								$current,
								"priorities",
								lv_priorities_9_0,
								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
				}
				lv_valuedObjects_11_0=ruleValuedObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"valuedObjects",
						lv_valuedObjects_11_0,
						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
					}
					lv_valuedObjects_13_0=ruleValuedObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
						}
						add(
							$current,
							"valuedObjects",
							lv_valuedObjects_13_0,
							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
				}
				lv_annotations_14_0=ruleCommentAnnotatonSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_14_0,
						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleValuedObject
entryRuleValuedObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValuedObjectRule()); }
	iv_ruleValuedObject=ruleValuedObject
	{ $current=$iv_ruleValuedObject.current; }
	EOF;

// Rule ValuedObject
ruleValuedObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleQuotedStringAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValuedObjectRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
				}
				lv_name_1_0=rulePrimeID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValuedObjectRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_2_1_0());
					}
					lv_cardinalities_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValuedObjectRule());
						}
						add(
							$current,
							"cardinalities",
							lv_cardinalities_3_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_2_2());
			}
		)*
		(
			otherlv_5='='
			{
				newLeafNode(otherlv_5, grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_3_1_0());
					}
					lv_initialValue_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValuedObjectRule());
						}
						set(
							$current,
							"initialValue",
							lv_initialValue_6_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='combine'
			{
				newLeafNode(otherlv_7, grammarAccess.getValuedObjectAccess().getCombineKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_1_0());
					}
					lv_combineOperator_8_0=ruleCombineOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValuedObjectRule());
						}
						set(
							$current,
							"combineOperator",
							lv_combineOperator_8_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.CombineOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='label'
			{
				newLeafNode(otherlv_9, grammarAccess.getValuedObjectAccess().getLabelKeyword_5_0());
			}
			(
				(
					lv_label_10_0=RULE_STRING
					{
						newLeafNode(lv_label_10_0, grammarAccess.getValuedObjectAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValuedObjectRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_10_0,
							"de.cau.cs.kieler.annotations.Annotations.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSimpleValuedObject
entryRuleSimpleValuedObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleValuedObjectRule()); }
	iv_ruleSimpleValuedObject=ruleSimpleValuedObject
	{ $current=$iv_ruleSimpleValuedObject.current; }
	EOF;

// Rule SimpleValuedObject
ruleSimpleValuedObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleQuotedStringAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleValuedObjectRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
				}
				lv_name_1_0=rulePrimeID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleValuedObjectRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entrySuperEffect
entrySuperEffect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKEffectsEffectRule()); }
	iv_superEffect=superEffect
	{ $current=$iv_superEffect.current; }
	EOF;

// Rule Effect
superEffect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getAssignmentParserRuleCall_0());
		}
		this_Assignment_0=ruleAssignment
		{
			$current = $this_Assignment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getPostfixEffectParserRuleCall_1());
		}
		this_PostfixEffect_1=rulePostfixEffect
		{
			$current = $this_PostfixEffect_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getValuedEmissionParserRuleCall_2());
		}
		this_ValuedEmission_2=ruleValuedEmission
		{
			$current = $this_ValuedEmission_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getHostcodeEffectParserRuleCall_3());
		}
		this_HostcodeEffect_3=ruleHostcodeEffect
		{
			$current = $this_HostcodeEffect_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getReferenceCallEffectParserRuleCall_4());
		}
		this_ReferenceCallEffect_4=ruleReferenceCallEffect
		{
			$current = $this_ReferenceCallEffect_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getFunctionCallEffectParserRuleCall_5());
		}
		this_FunctionCallEffect_5=ruleFunctionCallEffect
		{
			$current = $this_FunctionCallEffect_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getPrintCallEffectParserRuleCall_6());
		}
		this_PrintCallEffect_6=rulePrintCallEffect
		{
			$current = $this_PrintCallEffect_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getRandomizeCallEffectParserRuleCall_7());
		}
		this_RandomizeCallEffect_7=ruleRandomizeCallEffect
		{
			$current = $this_RandomizeCallEffect_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getKEffectsEffectAccess().getPureEmissionParserRuleCall_8());
		}
		this_PureEmission_8=rulePureEmission
		{
			$current = $this_PureEmission_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePureEmission
entryRulePureEmission returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPureEmissionRule()); }
	iv_rulePureEmission=rulePureEmission
	{ $current=$iv_rulePureEmission.current; }
	EOF;

// Rule PureEmission
rulePureEmission returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPureEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleQuotedStringAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPureEmissionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPureEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
				}
				lv_reference_1_0=ruleValuedObjectReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPureEmissionRule());
					}
					set(
						$current,
						"reference",
						lv_reference_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='schedule'
			{
				newLeafNode(otherlv_2, grammarAccess.getPureEmissionAccess().getScheduleKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPureEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_2_1_0());
					}
					lv_schedule_3_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPureEmissionRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_3_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
	)
;

// Entry rule entryRuleValuedEmission
entryRuleValuedEmission returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValuedEmissionRule()); }
	iv_ruleValuedEmission=ruleValuedEmission
	{ $current=$iv_ruleValuedEmission.current; }
	EOF;

// Rule ValuedEmission
ruleValuedEmission returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getValuedEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleQuotedStringAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getValuedEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
				}
				lv_reference_1_0=ruleValuedObjectReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
					}
					set(
						$current,
						"reference",
						lv_reference_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getValuedEmissionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getValuedEmissionAccess().getNewValueExpressionParserRuleCall_3_0());
				}
				lv_newValue_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
					}
					set(
						$current,
						"newValue",
						lv_newValue_3_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getValuedEmissionAccess().getRightParenthesisKeyword_4());
		}
		(
			otherlv_5='schedule'
			{
				newLeafNode(otherlv_5, grammarAccess.getValuedEmissionAccess().getScheduleKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValuedEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0());
					}
					lv_schedule_6_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_6_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
				}
				lv_reference_1_0=ruleValuedObjectReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"reference",
						lv_reference_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
				}
				lv_operator_2_0=ruleAssignOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"operator",
						lv_operator_2_0,
						"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
				}
				lv_expression_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='schedule'
			{
				newLeafNode(otherlv_4, grammarAccess.getAssignmentAccess().getScheduleKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
					}
					lv_schedule_5_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_5_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
	)
;

// Entry rule entryRulePostfixEffect
entryRulePostfixEffect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostfixEffectRule()); }
	iv_rulePostfixEffect=rulePostfixEffect
	{ $current=$iv_rulePostfixEffect.current; }
	EOF;

// Rule PostfixEffect
rulePostfixEffect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPostfixEffectAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
				}
				lv_reference_1_0=ruleValuedObjectReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
					}
					set(
						$current,
						"reference",
						lv_reference_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_2_0());
				}
				lv_operator_2_0=rulePostfixOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
					}
					set(
						$current,
						"operator",
						lv_operator_2_0,
						"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='schedule'
			{
				newLeafNode(otherlv_3, grammarAccess.getPostfixEffectAccess().getScheduleKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPostfixEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
					}
					lv_schedule_4_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_4_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
	)
;

// Entry rule entryRuleHostcodeEffect
entryRuleHostcodeEffect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHostcodeEffectRule()); }
	iv_ruleHostcodeEffect=ruleHostcodeEffect
	{ $current=$iv_ruleHostcodeEffect.current; }
	EOF;

// Rule HostcodeEffect
ruleHostcodeEffect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHostcodeEffectRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				lv_text_1_0=RULE_HOSTCODE
				{
					newLeafNode(lv_text_1_0, grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHostcodeEffectRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
				}
			)
		)
	)
;

// Entry rule entryRuleReferenceCallEffect
entryRuleReferenceCallEffect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceCallEffectRule()); }
	iv_ruleReferenceCallEffect=ruleReferenceCallEffect
	{ $current=$iv_ruleReferenceCallEffect.current; }
	EOF;

// Rule ReferenceCallEffect
ruleReferenceCallEffect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceCallEffectRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectCrossReference_1_0());
				}
				rulePrimeID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getReferenceCallEffectAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getIndicesExpressionParserRuleCall_2_1_0());
					}
					lv_indices_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
						}
						add(
							$current,
							"indices",
							lv_indices_3_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getReferenceCallEffectAccess().getRightSquareBracketKeyword_2_2());
			}
		)*
		(
			otherlv_5='.'
			{
				newLeafNode(otherlv_5, grammarAccess.getReferenceCallEffectAccess().getFullStopKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getSubReferenceValuedObjectReferenceParserRuleCall_3_1_0());
					}
					lv_subReference_6_0=ruleValuedObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
						}
						set(
							$current,
							"subReference",
							lv_subReference_6_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				otherlv_7='('
				{
					newLeafNode(otherlv_7, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisKeyword_4_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_4_0_1_0());
						}
						lv_parameters_8_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_8_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_9=','
					{
						newLeafNode(otherlv_9, grammarAccess.getReferenceCallEffectAccess().getCommaKeyword_4_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_4_0_2_1_0());
							}
							lv_parameters_10_0=ruleParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
								}
								add(
									$current,
									"parameters",
									lv_parameters_10_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_11=')'
				{
					newLeafNode(otherlv_11, grammarAccess.getReferenceCallEffectAccess().getRightParenthesisKeyword_4_0_3());
				}
			)
			    |
			otherlv_12='()'
			{
				newLeafNode(otherlv_12, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_4_1());
			}
		)
		(
			otherlv_13='schedule'
			{
				newLeafNode(otherlv_13, grammarAccess.getReferenceCallEffectAccess().getScheduleKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0());
					}
					lv_schedule_14_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_14_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
	)
;

// Entry rule entryRuleFunctionCallEffect
entryRuleFunctionCallEffect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallEffectRule()); }
	iv_ruleFunctionCallEffect=ruleFunctionCallEffect
	{ $current=$iv_ruleFunctionCallEffect.current; }
	EOF;

// Rule FunctionCallEffect
ruleFunctionCallEffect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_1='extern'
			{
				newLeafNode(otherlv_1, grammarAccess.getFunctionCallEffectAccess().getExternKeyword_1_0());
			}
			(
				(
					lv_functionName_2_0=RULE_ID
					{
						newLeafNode(lv_functionName_2_0, grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFunctionCallEffectRule());
						}
						setWithLastConsumed(
							$current,
							"functionName",
							lv_functionName_2_0,
							"de.cau.cs.kieler.annotations.Annotations.ID");
					}
				)
			)
			(
				(
					otherlv_3='('
					{
						newLeafNode(otherlv_3, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_1_2_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_1_0());
							}
							lv_parameters_4_0=ruleParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
								}
								add(
									$current,
									"parameters",
									lv_parameters_4_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_5=','
						{
							newLeafNode(otherlv_5, grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_1_2_0_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0());
								}
								lv_parameters_6_0=ruleParameter
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
									}
									add(
										$current,
										"parameters",
										lv_parameters_6_0,
										"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_7=')'
					{
						newLeafNode(otherlv_7, grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_1_2_0_3());
					}
				)
				    |
				otherlv_8='()'
				{
					newLeafNode(otherlv_8, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1());
				}
			)
		)
	)
;

// Entry rule entryRulePrintCallEffect
entryRulePrintCallEffect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintCallEffectRule()); }
	iv_rulePrintCallEffect=rulePrintCallEffect
	{ $current=$iv_rulePrintCallEffect.current; }
	EOF;

// Rule PrintCallEffect
rulePrintCallEffect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPrintCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='print'
		{
			newLeafNode(otherlv_1, grammarAccess.getPrintCallEffectAccess().getPrintKeyword_1());
		}
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getPrintCallEffectAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_1_0());
					}
					lv_parameters_3_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getPrintCallEffectAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_2_1_0());
						}
						lv_parameters_5_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_5_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getPrintCallEffectAccess().getRightParenthesisKeyword_2_3());
			}
		)
		(
			otherlv_7='schedule'
			{
				newLeafNode(otherlv_7, grammarAccess.getPrintCallEffectAccess().getScheduleKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
					}
					lv_schedule_8_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_8_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
	)
;

// Entry rule entryRuleRandomizeCallEffect
entryRuleRandomizeCallEffect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRandomizeCallEffectRule()); }
	iv_ruleRandomizeCallEffect=ruleRandomizeCallEffect
	{ $current=$iv_ruleRandomizeCallEffect.current; }
	EOF;

// Rule RandomizeCallEffect
ruleRandomizeCallEffect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getRandomizeCallEffectAccess().getRandomizeCallEffectAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getAnnotationsAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='randomize'
		{
			newLeafNode(otherlv_2, grammarAccess.getRandomizeCallEffectAccess().getRandomizeKeyword_2());
		}
		(
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisKeyword_3_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_1_0());
						}
						lv_parameters_4_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_4_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_5=','
					{
						newLeafNode(otherlv_5, grammarAccess.getRandomizeCallEffectAccess().getCommaKeyword_3_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
							}
							lv_parameters_6_0=ruleParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
								}
								add(
									$current,
									"parameters",
									lv_parameters_6_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_7=')'
				{
					newLeafNode(otherlv_7, grammarAccess.getRandomizeCallEffectAccess().getRightParenthesisKeyword_3_0_3());
				}
			)
			    |
			otherlv_8='()'
			{
				newLeafNode(otherlv_8, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0());
		}
		this_BoolExpression_0=ruleBoolExpression
		{
			$current = $this_BoolExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1());
		}
		this_ValuedExpression_1=ruleValuedExpression
		{
			$current = $this_ValuedExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBoolExpression
entryRuleBoolExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolExpressionRule()); }
	iv_ruleBoolExpression=ruleBoolExpression
	{ $current=$iv_ruleBoolExpression.current; }
	EOF;

// Rule BoolExpression
ruleBoolExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getBoolExpressionAccess().getLogicalOrExpressionParserRuleCall());
	}
	this_LogicalOrExpression_0=ruleLogicalOrExpression
	{
		$current = $this_LogicalOrExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleLogicalOrExpression
entryRuleLogicalOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); }
	iv_ruleLogicalOrExpression=ruleLogicalOrExpression
	{ $current=$iv_ruleLogicalOrExpression.current; }
	EOF;

// Rule LogicalOrExpression
ruleLogicalOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0());
		}
		this_LogicalAndExpression_0=ruleLogicalAndExpression
		{
			$current = $this_LogicalAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0());
						}
						lv_operator_2_0=ruleLogicalOrOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalOrOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0());
						}
						lv_subExpressions_3_0=ruleLogicalAndExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_4='||'
				{
					newLeafNode(otherlv_4, grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0());
						}
						lv_subExpressions_5_0=ruleLogicalAndExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_5_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleLogicalAndExpression
entryRuleLogicalAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); }
	iv_ruleLogicalAndExpression=ruleLogicalAndExpression
	{ $current=$iv_ruleLogicalAndExpression.current; }
	EOF;

// Rule LogicalAndExpression
ruleLogicalAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0());
		}
		this_BitwiseOrExpression_0=ruleBitwiseOrExpression
		{
			$current = $this_BitwiseOrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0());
						}
						lv_operator_2_0=ruleLogicalAndOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0());
						}
						lv_subExpressions_3_0=ruleBitwiseOrExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_4='&&'
				{
					newLeafNode(otherlv_4, grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_2_1_0());
						}
						lv_subExpressions_5_0=ruleBitwiseOrExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_5_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleBitwiseOrExpression
entryRuleBitwiseOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBitwiseOrExpressionRule()); }
	iv_ruleBitwiseOrExpression=ruleBitwiseOrExpression
	{ $current=$iv_ruleBitwiseOrExpression.current; }
	EOF;

// Rule BitwiseOrExpression
ruleBitwiseOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXOrExpressionParserRuleCall_0());
		}
		this_BitwiseXOrExpression_0=ruleBitwiseXOrExpression
		{
			$current = $this_BitwiseXOrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0());
						}
						lv_operator_2_0=ruleBitwiseOrOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_1_1_0());
						}
						lv_subExpressions_3_0=ruleBitwiseXOrExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_4='|'
				{
					newLeafNode(otherlv_4, grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_2_1_0());
						}
						lv_subExpressions_5_0=ruleBitwiseXOrExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_5_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleBitwiseXOrExpression
entryRuleBitwiseXOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBitwiseXOrExpressionRule()); }
	iv_ruleBitwiseXOrExpression=ruleBitwiseXOrExpression
	{ $current=$iv_ruleBitwiseXOrExpression.current; }
	EOF;

// Rule BitwiseXOrExpression
ruleBitwiseXOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0());
		}
		this_BitwiseAndExpression_0=ruleBitwiseAndExpression
		{
			$current = $this_BitwiseAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getBitwiseXOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorBitwiseXOrOperatorEnumRuleCall_1_1_0_0());
						}
						lv_operator_2_0=ruleBitwiseXOrOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0());
						}
						lv_subExpressions_3_0=ruleBitwiseAndExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_4='^'
				{
					newLeafNode(otherlv_4, grammarAccess.getBitwiseXOrExpressionAccess().getCircumflexAccentKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0());
						}
						lv_subExpressions_5_0=ruleBitwiseAndExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_5_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleBitwiseAndExpression
entryRuleBitwiseAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBitwiseAndExpressionRule()); }
	iv_ruleBitwiseAndExpression=ruleBitwiseAndExpression
	{ $current=$iv_ruleBitwiseAndExpression.current; }
	EOF;

// Rule BitwiseAndExpression
ruleBitwiseAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0());
		}
		this_CompareOperation_0=ruleCompareOperation
		{
			$current = $this_CompareOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0());
						}
						lv_operator_2_0=ruleBitwiseAndOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0());
						}
						lv_subExpressions_3_0=ruleCompareOperation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_4='&'
				{
					newLeafNode(otherlv_4, grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0());
						}
						lv_subExpressions_5_0=ruleCompareOperation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_5_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleCompareOperation
entryRuleCompareOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompareOperationRule()); }
	iv_ruleCompareOperation=ruleCompareOperation
	{ $current=$iv_ruleCompareOperation.current; }
	EOF;

// Rule CompareOperation
ruleCompareOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0());
		}
		this_NotOrValuedExpression_0=ruleNotOrValuedExpression
		{
			$current = $this_NotOrValuedExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleCompareOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompareOperationRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0());
					}
					lv_subExpressions_3_0=ruleNotOrValuedExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompareOperationRule());
						}
						add(
							$current,
							"subExpressions",
							lv_subExpressions_3_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.NotOrValuedExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleNotOrValuedExpression
entryRuleNotOrValuedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotOrValuedExpressionRule()); }
	iv_ruleNotOrValuedExpression=ruleNotOrValuedExpression
	{ $current=$iv_ruleNotOrValuedExpression.current; }
	EOF;

// Rule NotOrValuedExpression
ruleNotOrValuedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0());
		}
		this_ValuedExpression_0=ruleValuedExpression
		{
			$current = $this_ValuedExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1());
		}
		this_NotExpression_1=ruleNotExpression
		{
			$current = $this_NotExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBitwiseNotExpression
entryRuleBitwiseNotExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBitwiseNotExpressionRule()); }
	iv_ruleBitwiseNotExpression=ruleBitwiseNotExpression
	{ $current=$iv_ruleBitwiseNotExpression.current; }
	EOF;

// Rule BitwiseNotExpression
ruleBitwiseNotExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBitwiseNotExpressionAccess().getOperatorExpressionAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getOperatorBitwiseNotOperatorEnumRuleCall_0_1_0());
					}
					lv_operator_1_0=ruleBitwiseNotOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_1_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getSubExpressionsBitwiseNotExpressionParserRuleCall_0_2_0());
					}
					lv_subExpressions_2_0=ruleBitwiseNotExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
						}
						add(
							$current,
							"subExpressions",
							lv_subExpressions_2_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getAtomicExpressionParserRuleCall_1());
		}
		this_AtomicExpression_3=ruleAtomicExpression
		{
			$current = $this_AtomicExpression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNotExpression
entryRuleNotExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotExpressionRule()); }
	iv_ruleNotExpression=ruleNotExpression
	{ $current=$iv_ruleNotExpression.current; }
	EOF;

// Rule NotExpression
ruleNotExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0());
					}
					lv_operator_1_0=ruleNotOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNotExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_1_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.NotOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0());
					}
					lv_subExpressions_2_0=ruleNotExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNotExpressionRule());
						}
						add(
							$current,
							"subExpressions",
							lv_subExpressions_2_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.NotExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNotExpressionAccess().getBitwiseNotExpressionParserRuleCall_1());
		}
		this_BitwiseNotExpression_3=ruleBitwiseNotExpression
		{
			$current = $this_BitwiseNotExpression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleValuedExpression
entryRuleValuedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValuedExpressionRule()); }
	iv_ruleValuedExpression=ruleValuedExpression
	{ $current=$iv_ruleValuedExpression.current; }
	EOF;

// Rule ValuedExpression
ruleValuedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getValuedExpressionAccess().getShiftExpressionsParserRuleCall());
	}
	this_ShiftExpressions_0=ruleShiftExpressions
	{
		$current = $this_ShiftExpressions_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleShiftExpressions
entryRuleShiftExpressions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShiftExpressionsRule()); }
	iv_ruleShiftExpressions=ruleShiftExpressions
	{ $current=$iv_ruleShiftExpressions.current; }
	EOF;

// Rule ShiftExpressions
ruleShiftExpressions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSumExpressionParserRuleCall_0());
		}
		this_SumExpression_0=ruleSumExpression
		{
			$current = $this_SumExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getOperatorShiftLeftOperatorEnumRuleCall_1_0_1_0());
						}
						lv_operator_2_0=ruleShiftLeftOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_0_2_0());
						}
						lv_subExpressions_3_0=ruleSumExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4='<<'
					{
						newLeafNode(otherlv_4, grammarAccess.getShiftExpressionsAccess().getLessThanSignLessThanSignKeyword_1_0_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_0_3_1_0());
							}
							lv_subExpressions_5_0=ruleSumExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
								}
								add(
									$current,
									"subExpressions",
									lv_subExpressions_5_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_1_0());
						}
						lv_operator_7_0=ruleShiftRightOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
							}
							set(
								$current,
								"operator",
								lv_operator_7_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_2_0());
						}
						lv_subExpressions_8_0=ruleSumExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_8_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_9='>>'
					{
						newLeafNode(otherlv_9, grammarAccess.getShiftExpressionsAccess().getGreaterThanSignGreaterThanSignKeyword_1_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_3_1_0());
							}
							lv_subExpressions_10_0=ruleSumExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
								}
								add(
									$current,
									"subExpressions",
									lv_subExpressions_10_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_2_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_2_1_0());
						}
						lv_operator_12_0=ruleShiftRightUnsignedOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
							}
							set(
								$current,
								"operator",
								lv_operator_12_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_2_0());
						}
						lv_subExpressions_13_0=ruleSumExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_13_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_14='>>>'
					{
						newLeafNode(otherlv_14, grammarAccess.getShiftExpressionsAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_3_1_0());
							}
							lv_subExpressions_15_0=ruleSumExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
								}
								add(
									$current,
									"subExpressions",
									lv_subExpressions_15_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)*
	)
;

// Entry rule entryRuleShiftRightExpression
entryRuleShiftRightExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShiftRightExpressionRule()); }
	iv_ruleShiftRightExpression=ruleShiftRightExpression
	{ $current=$iv_ruleShiftRightExpression.current; }
	EOF;

// Rule ShiftRightExpression
ruleShiftRightExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSumExpressionParserRuleCall_0());
		}
		this_SumExpression_0=ruleSumExpression
		{
			$current = $this_SumExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getShiftRightExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_0_0());
						}
						lv_operator_2_0=ruleShiftRightOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_1_1_0());
						}
						lv_subExpressions_3_0=ruleShiftRightUnsignedExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_4='>>'
				{
					newLeafNode(otherlv_4, grammarAccess.getShiftRightExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_2_1_0());
						}
						lv_subExpressions_5_0=ruleShiftRightUnsignedExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_5_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleShiftRightUnsignedExpression
entryRuleShiftRightUnsignedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionRule()); }
	iv_ruleShiftRightUnsignedExpression=ruleShiftRightUnsignedExpression
	{ $current=$iv_ruleShiftRightUnsignedExpression.current; }
	EOF;

// Rule ShiftRightUnsignedExpression
ruleShiftRightUnsignedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSumExpressionParserRuleCall_0());
		}
		this_SumExpression_0=ruleSumExpression
		{
			$current = $this_SumExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_1_0_0());
						}
						lv_operator_2_0=ruleShiftRightUnsignedOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_1_0());
						}
						lv_subExpressions_3_0=ruleSumExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_4='>>>'
				{
					newLeafNode(otherlv_4, grammarAccess.getShiftRightUnsignedExpressionAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_1_0());
						}
						lv_subExpressions_5_0=ruleSumExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_5_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleSumExpression
entryRuleSumExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSumExpressionRule()); }
	iv_ruleSumExpression=ruleSumExpression
	{ $current=$iv_ruleSumExpression.current; }
	EOF;

// Rule SumExpression
ruleSumExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSumExpressionAccess().getProductExpressionParserRuleCall_0());
		}
		this_ProductExpression_0=ruleProductExpression
		{
			$current = $this_ProductExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSumExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_0_1_0());
						}
						lv_operator_2_0=ruleAddOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSumExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.AddOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_2_0());
						}
						lv_subExpressions_3_0=ruleProductExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSumExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4='+'
					{
						newLeafNode(otherlv_4, grammarAccess.getSumExpressionAccess().getPlusSignKeyword_1_0_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_3_1_0());
							}
							lv_subExpressions_5_0=ruleProductExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSumExpressionRule());
								}
								add(
									$current,
									"subExpressions",
									lv_subExpressions_5_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSumExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_1_0());
						}
						lv_operator_7_0=ruleSubOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSumExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_7_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_2_0());
						}
						lv_subExpressions_8_0=ruleProductExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSumExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_8_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_9='-'
					{
						newLeafNode(otherlv_9, grammarAccess.getSumExpressionAccess().getHyphenMinusKeyword_1_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_3_1_0());
							}
							lv_subExpressions_10_0=ruleProductExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSumExpressionRule());
								}
								add(
									$current,
									"subExpressions",
									lv_subExpressions_10_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)*
	)
;

// Entry rule entryRuleProductExpression
entryRuleProductExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProductExpressionRule()); }
	iv_ruleProductExpression=ruleProductExpression
	{ $current=$iv_ruleProductExpression.current; }
	EOF;

// Rule ProductExpression
ruleProductExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getProductExpressionAccess().getNegExpressionParserRuleCall_0());
		}
		this_NegExpression_0=ruleNegExpression
		{
			$current = $this_NegExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_0_1_0());
						}
						lv_operator_2_0=ruleMultOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProductExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.MultOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_0_2_0());
						}
						lv_subExpressions_3_0=ruleNegExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProductExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4='*'
					{
						newLeafNode(otherlv_4, grammarAccess.getProductExpressionAccess().getAsteriskKeyword_1_0_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_0_3_1_0());
							}
							lv_subExpressions_5_0=ruleNegExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getProductExpressionRule());
								}
								add(
									$current,
									"subExpressions",
									lv_subExpressions_5_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_1_0());
						}
						lv_operator_7_0=ruleDivOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProductExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_7_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.DivOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_2_0());
						}
						lv_subExpressions_8_0=ruleNegExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProductExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_8_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_9='/'
					{
						newLeafNode(otherlv_9, grammarAccess.getProductExpressionAccess().getSolidusKeyword_1_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_3_1_0());
							}
							lv_subExpressions_10_0=ruleNegExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getProductExpressionRule());
								}
								add(
									$current,
									"subExpressions",
									lv_subExpressions_10_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_2_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorModOperatorEnumRuleCall_1_2_1_0());
						}
						lv_operator_12_0=ruleModOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProductExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_12_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ModOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_2_2_0());
						}
						lv_subExpressions_13_0=ruleNegExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProductExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_13_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_14='%'
					{
						newLeafNode(otherlv_14, grammarAccess.getProductExpressionAccess().getPercentSignKeyword_1_2_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_2_3_1_0());
							}
							lv_subExpressions_15_0=ruleNegExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getProductExpressionRule());
								}
								add(
									$current,
									"subExpressions",
									lv_subExpressions_15_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)*
	)
;

// Entry rule entryRuleNegExpression
entryRuleNegExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNegExpressionRule()); }
	iv_ruleNegExpression=ruleNegExpression
	{ $current=$iv_ruleNegExpression.current; }
	EOF;

// Rule NegExpression
ruleNegExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0());
					}
					lv_operator_1_0=ruleSubOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNegExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_1_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0());
					}
					lv_subExpressions_2_0=ruleNegExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNegExpressionRule());
						}
						add(
							$current,
							"subExpressions",
							lv_subExpressions_2_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNegExpressionAccess().getTernaryOperationParserRuleCall_1());
		}
		this_TernaryOperation_3=ruleTernaryOperation
		{
			$current = $this_TernaryOperation_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTernaryOperation
entryRuleTernaryOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTernaryOperationRule()); }
	iv_ruleTernaryOperation=ruleTernaryOperation
	{ $current=$iv_ruleTernaryOperation.current; }
	EOF;

// Rule TernaryOperation
ruleTernaryOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getTernaryOperationAccess().getOperatorExpressionAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
					}
					lv_subExpressions_1_0=ruleAtomicValuedExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
						}
						add(
							$current,
							"subExpressions",
							lv_subExpressions_1_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTernaryOperationAccess().getOperatorConditionalOperatorEnumRuleCall_0_2_0());
					}
					lv_operator_2_0=ruleConditionalOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ConditionalOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
					}
					lv_subExpressions_3_0=ruleAtomicValuedExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
						}
						add(
							$current,
							"subExpressions",
							lv_subExpressions_3_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=':'
				{
					newLeafNode(otherlv_4, grammarAccess.getTernaryOperationAccess().getColonKeyword_0_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_4_1_0());
						}
						lv_subExpressions_5_0=ruleAtomicValuedExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_5_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTernaryOperationAccess().getInitExpressionParserRuleCall_1());
		}
		this_InitExpression_6=ruleInitExpression
		{
			$current = $this_InitExpression_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInitExpression
entryRuleInitExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitExpressionRule()); }
	iv_ruleInitExpression=ruleInitExpression
	{ $current=$iv_ruleInitExpression.current; }
	EOF;

// Rule InitExpression
ruleInitExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getInitExpressionAccess().getFbyExpressionParserRuleCall_0());
		}
		this_FbyExpression_0=ruleFbyExpression
		{
			$current = $this_FbyExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getInitExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getInitExpressionAccess().getOperatorInitOperatorEnumRuleCall_1_1_0_0());
						}
						lv_operator_2_0=ruleInitOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInitExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.InitOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsFbyExpressionParserRuleCall_1_1_1_0());
						}
						lv_subExpressions_3_0=ruleFbyExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInitExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.FbyExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_4='->'
				{
					newLeafNode(otherlv_4, grammarAccess.getInitExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsFbyExpressionParserRuleCall_1_2_1_0());
						}
						lv_subExpressions_5_0=ruleFbyExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInitExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_5_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.FbyExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleFbyExpression
entryRuleFbyExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFbyExpressionRule()); }
	iv_ruleFbyExpression=ruleFbyExpression
	{ $current=$iv_ruleFbyExpression.current; }
	EOF;

// Rule FbyExpression
ruleFbyExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getFbyExpressionAccess().getSfbyExpressionParserRuleCall_0());
		}
		this_SfbyExpression_0=ruleSfbyExpression
		{
			$current = $this_SfbyExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getFbyExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFbyExpressionAccess().getOperatorFbyOperatorEnumRuleCall_1_1_0_0());
						}
						lv_operator_2_0=ruleFbyOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFbyExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.FbyOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getFbyExpressionAccess().getSubExpressionsSfbyExpressionParserRuleCall_1_1_1_0());
						}
						lv_subExpressions_3_0=ruleSfbyExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFbyExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.SfbyExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_4='fby'
				{
					newLeafNode(otherlv_4, grammarAccess.getFbyExpressionAccess().getFbyKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFbyExpressionAccess().getSubExpressionsSfbyExpressionParserRuleCall_1_2_1_0());
						}
						lv_subExpressions_5_0=ruleSfbyExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFbyExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_5_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.SfbyExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleSfbyExpression
entryRuleSfbyExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSfbyExpressionRule()); }
	iv_ruleSfbyExpression=ruleSfbyExpression
	{ $current=$iv_ruleSfbyExpression.current; }
	EOF;

// Rule SfbyExpression
ruleSfbyExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSfbyExpressionAccess().getAtomicValuedExpressionParserRuleCall_0());
		}
		this_AtomicValuedExpression_0=ruleAtomicValuedExpression
		{
			$current = $this_AtomicValuedExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getSfbyExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSfbyExpressionAccess().getOperatorSfbyOperatorEnumRuleCall_1_1_0_0());
						}
						lv_operator_2_0=ruleSfbyOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSfbyExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.SfbyOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSfbyExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_1_1_0());
						}
						lv_subExpressions_3_0=ruleAtomicValuedExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSfbyExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_4='sfby'
				{
					newLeafNode(otherlv_4, grammarAccess.getSfbyExpressionAccess().getSfbyKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSfbyExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_1_0());
						}
						lv_subExpressions_5_0=ruleAtomicValuedExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSfbyExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_5_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleAtomicExpression
entryRuleAtomicExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicExpressionRule()); }
	iv_ruleAtomicExpression=ruleAtomicExpression
	{ $current=$iv_ruleAtomicExpression.current; }
	EOF;

// Rule AtomicExpression
ruleAtomicExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0());
		}
		this_BoolValue_0=ruleBoolValue
		{
			$current = $this_BoolValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_1_0());
			}
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolExpressionParserRuleCall_1_1());
			}
			this_BoolExpression_2=ruleBoolExpression
			{
				$current = $this_BoolExpression_2.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_1_2());
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_2());
		}
		this_ReferenceCall_4=ruleReferenceCall
		{
			$current = $this_ReferenceCall_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_3());
		}
		this_FunctionCall_5=ruleFunctionCall
		{
			$current = $this_FunctionCall_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getRandomCallParserRuleCall_4());
		}
		this_RandomCall_6=ruleRandomCall
		{
			$current = $this_RandomCall_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getRandomizeCallParserRuleCall_5());
		}
		this_RandomizeCall_7=ruleRandomizeCall
		{
			$current = $this_RandomizeCall_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_6());
		}
		this_ValuedObjectTestExpression_8=ruleValuedObjectTestExpression
		{
			$current = $this_ValuedObjectTestExpression_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getSpecialAccessExpressionParserRuleCall_7());
		}
		this_SpecialAccessExpression_9=ruleSpecialAccessExpression
		{
			$current = $this_SpecialAccessExpression_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_8());
		}
		this_TextExpression_10=ruleTextExpression
		{
			$current = $this_TextExpression_10.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAtomicValuedExpression
entryRuleAtomicValuedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicValuedExpressionRule()); }
	iv_ruleAtomicValuedExpression=ruleAtomicValuedExpression
	{ $current=$iv_ruleAtomicValuedExpression.current; }
	EOF;

// Rule AtomicValuedExpression
ruleAtomicValuedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0());
		}
		this_IntValue_0=ruleIntValue
		{
			$current = $this_IntValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1());
		}
		this_FloatValue_1=ruleFloatValue
		{
			$current = $this_FloatValue_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2());
		}
		this_StringValue_2=ruleStringValue
		{
			$current = $this_StringValue_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getVectorValueParserRuleCall_3());
		}
		this_VectorValue_3=ruleVectorValue
		{
			$current = $this_VectorValue_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getNullValueParserRuleCall_4());
		}
		this_NullValue_4=ruleNullValue
		{
			$current = $this_NullValue_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_5_0());
			}
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_5_1());
			}
			this_ValuedExpression_6=ruleValuedExpression
			{
				$current = $this_ValuedExpression_6.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_5_2());
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_6());
		}
		this_AtomicExpression_8=ruleAtomicExpression
		{
			$current = $this_AtomicExpression_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBoolScheduleExpression
entryRuleBoolScheduleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolScheduleExpressionRule()); }
	iv_ruleBoolScheduleExpression=ruleBoolScheduleExpression
	{ $current=$iv_ruleBoolScheduleExpression.current; }
	EOF;

// Rule BoolScheduleExpression
ruleBoolScheduleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBoolScheduleExpressionAccess().getLogicalOrExpressionParserRuleCall_0());
		}
		this_LogicalOrExpression_0=ruleLogicalOrExpression
		{
			$current = $this_LogicalOrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1='schedule'
			{
				newLeafNode(otherlv_1, grammarAccess.getBoolScheduleExpressionAccess().getScheduleKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBoolScheduleExpressionAccess().getScheduleScheduleObjectReferenceParserRuleCall_1_1_0());
					}
					lv_schedule_2_0=ruleScheduleObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoolScheduleExpressionRule());
						}
						add(
							$current,
							"schedule",
							lv_schedule_2_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleValuedObjectTestExpression
entryRuleValuedObjectTestExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValuedObjectTestExpressionRule()); }
	iv_ruleValuedObjectTestExpression=ruleValuedObjectTestExpression
	{ $current=$iv_ruleValuedObjectTestExpression.current; }
	EOF;

// Rule ValuedObjectTestExpression
ruleValuedObjectTestExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0());
						}
						lv_operator_1_1=rulePreOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_1_1,
								"de.cau.cs.kieler.kexpressions.KExpressions.PreOperator");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1());
						}
						lv_operator_1_2=ruleValOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_1_2,
								"de.cau.cs.kieler.kexpressions.KExpressions.ValOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0());
					}
					lv_subExpressions_3_0=ruleValuedObjectTestExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
						}
						add(
							$current,
							"subExpressions",
							lv_subExpressions_3_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectTestExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getValuedObjectTestExpressionAccess().getCommaKeyword_0_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectReferenceParserRuleCall_0_4_1_0());
						}
						lv_subExpressions_5_0=ruleValuedObjectReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
							}
							add(
								$current,
								"subExpressions",
								lv_subExpressions_5_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_5());
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1());
		}
		this_ValuedObjectReference_7=ruleValuedObjectReference
		{
			$current = $this_ValuedObjectReference_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimeID
entryRulePrimeID returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimeIDRule()); }
	iv_rulePrimeID=rulePrimeID
	{ $current=$iv_rulePrimeID.current.getText(); }
	EOF;

// Rule PrimeID
rulePrimeID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='\''
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPrimeIDAccess().getApostropheKeyword_1());
			}
		)*
	)
;

// Entry rule entryRuleValuedObjectReference
entryRuleValuedObjectReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValuedObjectReferenceRule()); }
	iv_ruleValuedObjectReference=ruleValuedObjectReference
	{ $current=$iv_ruleValuedObjectReference.current; }
	EOF;

// Rule ValuedObjectReference
ruleValuedObjectReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValuedObjectReferenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
				}
				rulePrimeID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0());
					}
					lv_indices_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
						}
						add(
							$current,
							"indices",
							lv_indices_2_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2());
			}
		)*
		(
			otherlv_4='.'
			{
				newLeafNode(otherlv_4, grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
					}
					lv_subReference_5_0=ruleValuedObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
						}
						set(
							$current,
							"subReference",
							lv_subReference_5_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleScheduleObjectReference
entryRuleScheduleObjectReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScheduleObjectReferenceRule()); }
	iv_ruleScheduleObjectReference=ruleScheduleObjectReference
	{ $current=$iv_ruleScheduleObjectReference.current; }
	EOF;

// Rule ScheduleObjectReference
ruleScheduleObjectReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
				}
				rulePrimeID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_priority_1_0=RULE_INT
				{
					newLeafNode(lv_priority_1_0, grammarAccess.getScheduleObjectReferenceAccess().getPriorityINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
					}
					setWithLastConsumed(
						$current,
						"priority",
						lv_priority_1_0,
						"de.cau.cs.kieler.annotations.Annotations.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleReferenceCall
entryRuleReferenceCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceCallRule()); }
	iv_ruleReferenceCall=ruleReferenceCall
	{ $current=$iv_ruleReferenceCall.current; }
	EOF;

// Rule ReferenceCall
ruleReferenceCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceCallRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectCrossReference_0_0());
				}
				rulePrimeID
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getReferenceCallAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceCallAccess().getIndicesExpressionParserRuleCall_1_1_0());
					}
					lv_indices_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceCallRule());
						}
						add(
							$current,
							"indices",
							lv_indices_2_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getReferenceCallAccess().getRightSquareBracketKeyword_1_2());
			}
		)*
		(
			otherlv_4='.'
			{
				newLeafNode(otherlv_4, grammarAccess.getReferenceCallAccess().getFullStopKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReferenceCallAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
					}
					lv_subReference_5_0=ruleValuedObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReferenceCallRule());
						}
						set(
							$current,
							"subReference",
							lv_subReference_5_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				otherlv_6='('
				{
					newLeafNode(otherlv_6, grammarAccess.getReferenceCallAccess().getLeftParenthesisKeyword_3_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_1_0());
						}
						lv_parameters_7_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReferenceCallRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_7_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_8=','
					{
						newLeafNode(otherlv_8, grammarAccess.getReferenceCallAccess().getCommaKeyword_3_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
							}
							lv_parameters_9_0=ruleParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getReferenceCallRule());
								}
								add(
									$current,
									"parameters",
									lv_parameters_9_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_10=')'
				{
					newLeafNode(otherlv_10, grammarAccess.getReferenceCallAccess().getRightParenthesisKeyword_3_0_3());
				}
			)
			    |
			otherlv_11='()'
			{
				newLeafNode(otherlv_11, grammarAccess.getReferenceCallAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleRandomCall
entryRuleRandomCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRandomCallRule()); }
	iv_ruleRandomCall=ruleRandomCall
	{ $current=$iv_ruleRandomCall.current; }
	EOF;

// Rule RandomCall
ruleRandomCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getRandomCallAccess().getRandomCallAction_0(),
					$current);
			}
		)
		otherlv_1='random'
		{
			newLeafNode(otherlv_1, grammarAccess.getRandomCallAccess().getRandomKeyword_1());
		}
		(
			otherlv_2='()'
			{
				newLeafNode(otherlv_2, grammarAccess.getRandomCallAccess().getLeftParenthesisRightParenthesisKeyword_2());
			}
		)?
	)
;

// Entry rule entryRuleRandomizeCall
entryRuleRandomizeCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRandomizeCallRule()); }
	iv_ruleRandomizeCall=ruleRandomizeCall
	{ $current=$iv_ruleRandomizeCall.current; }
	EOF;

// Rule RandomizeCall
ruleRandomizeCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getRandomizeCallAccess().getRandomizeCallAction_0(),
					$current);
			}
		)
		otherlv_1='randomize'
		{
			newLeafNode(otherlv_1, grammarAccess.getRandomizeCallAccess().getRandomizeKeyword_1());
		}
		(
			otherlv_2='()'
			{
				newLeafNode(otherlv_2, grammarAccess.getRandomizeCallAccess().getLeftParenthesisRightParenthesisKeyword_2());
			}
		)?
	)
;

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallRule()); }
	iv_ruleFunctionCall=ruleFunctionCall
	{ $current=$iv_ruleFunctionCall.current; }
	EOF;

// Rule FunctionCall
ruleFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extern'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionCallAccess().getExternKeyword_0());
		}
		(
			(
				lv_functionName_1_0=RULE_ID
				{
					newLeafNode(lv_functionName_1_0, grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionCallRule());
					}
					setWithLastConsumed(
						$current,
						"functionName",
						lv_functionName_1_0,
						"de.cau.cs.kieler.annotations.Annotations.ID");
				}
			)
		)
		(
			(
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_1_0());
						}
						lv_parameters_3_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getFunctionCallAccess().getCommaKeyword_2_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_2_1_0());
							}
							lv_parameters_5_0=ruleParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
								}
								add(
									$current,
									"parameters",
									lv_parameters_5_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_2_0_3());
				}
			)
			    |
			otherlv_7='()'
			{
				newLeafNode(otherlv_7, grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRulePrintCall
entryRulePrintCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintCallRule()); }
	iv_rulePrintCall=rulePrintCall
	{ $current=$iv_rulePrintCall.current; }
	EOF;

// Rule PrintCall
rulePrintCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getPrintCallAccess().getPrintCallAction_0(),
					$current);
			}
		)
		otherlv_1='print'
		{
			newLeafNode(otherlv_1, grammarAccess.getPrintCallAccess().getPrintKeyword_1());
		}
		(
			(
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getPrintCallAccess().getLeftParenthesisKeyword_2_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPrintCallAccess().getParametersParameterParserRuleCall_2_0_1_0());
						}
						lv_parameters_3_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrintCallRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_3_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getPrintCallAccess().getCommaKeyword_2_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPrintCallAccess().getParametersParameterParserRuleCall_2_0_2_1_0());
							}
							lv_parameters_5_0=ruleParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPrintCallRule());
								}
								add(
									$current,
									"parameters",
									lv_parameters_5_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getPrintCallAccess().getRightParenthesisKeyword_2_0_3());
				}
			)
			    |
			otherlv_7='()'
			{
				newLeafNode(otherlv_7, grammarAccess.getPrintCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getAccessTypeParameterAccessTypeEnumRuleCall_0_0_0());
					}
					lv_accessType_0_0=ruleParameterAccessType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"accessType",
							lv_accessType_0_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ParameterAccessType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getExpressionValuedObjectReferenceParserRuleCall_0_1_0());
					}
					lv_expression_1_0=ruleValuedObjectReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTextExpression
entryRuleTextExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextExpressionRule()); }
	iv_ruleTextExpression=ruleTextExpression
	{ $current=$iv_ruleTextExpression.current; }
	EOF;

// Rule TextExpression
ruleTextExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTextExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
				}
				lv_annotations_0_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextExpressionRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_0_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				lv_text_1_0=RULE_HOSTCODE
				{
					newLeafNode(lv_text_1_0, grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_1_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
				}
			)
		)
	)
;

// Entry rule entryRuleIntValue
entryRuleIntValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntValueRule()); }
	iv_ruleIntValue=ruleIntValue
	{ $current=$iv_ruleIntValue.current; }
	EOF;

// Rule IntValue
ruleIntValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntValueRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"de.cau.cs.kieler.annotations.Annotations.INT");
			}
		)
	)
;

// Entry rule entryRuleFloatValue
entryRuleFloatValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloatValueRule()); }
	iv_ruleFloatValue=ruleFloatValue
	{ $current=$iv_ruleFloatValue.current; }
	EOF;

// Rule FloatValue
ruleFloatValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_FLOAT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFloatValueRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"de.cau.cs.kieler.annotations.Annotations.FLOAT");
			}
		)
	)
;

// Entry rule entryRuleBoolValue
entryRuleBoolValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolValueRule()); }
	iv_ruleBoolValue=ruleBoolValue
	{ $current=$iv_ruleBoolValue.current; }
	EOF;

// Rule BoolValue
ruleBoolValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_BOOLEAN
			{
				newLeafNode(lv_value_0_0, grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBoolValueRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"de.cau.cs.kieler.annotations.Annotations.BOOLEAN");
			}
		)
	)
;

// Entry rule entryRuleStringValue
entryRuleStringValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringValueRule()); }
	iv_ruleStringValue=ruleStringValue
	{ $current=$iv_ruleStringValue.current; }
	EOF;

// Rule StringValue
ruleStringValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringValueRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"de.cau.cs.kieler.annotations.Annotations.STRING");
			}
		)
	)
;

// Entry rule entryRuleVectorValue
entryRuleVectorValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVectorValueRule()); }
	iv_ruleVectorValue=ruleVectorValue
	{ $current=$iv_ruleVectorValue.current; }
	EOF;

// Rule VectorValue
ruleVectorValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getVectorValueAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_1_0_0_0());
						}
						lv_values_1_0=ruleVectorValueMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVectorValueRule());
							}
							add(
								$current,
								"values",
								lv_values_1_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_2=','
					{
						newLeafNode(otherlv_2, grammarAccess.getVectorValueAccess().getCommaKeyword_1_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_1_0_1_1_0());
							}
							lv_values_3_0=ruleVectorValueMember
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getVectorValueRule());
								}
								add(
									$current,
									"values",
									lv_values_3_0,
									"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getVectorValueAccess().getValuesIntValueParserRuleCall_1_1_0_0());
						}
						lv_values_4_0=ruleIntValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVectorValueRule());
							}
							add(
								$current,
								"values",
								lv_values_4_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.IntValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						lv_range_5_0='to'
						{
							newLeafNode(lv_range_5_0, grammarAccess.getVectorValueAccess().getRangeToKeyword_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getVectorValueRule());
							}
							setWithLastConsumed($current, "range", lv_range_5_0 != null, "to");
						}
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getVectorValueAccess().getValuesIntValueParserRuleCall_1_1_2_0_0());
							}
							lv_values_6_1=ruleIntValue
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getVectorValueRule());
								}
								add(
									$current,
									"values",
									lv_values_6_1,
									"de.cau.cs.kieler.kexpressions.KExpressions.IntValue");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getVectorValueAccess().getValuesValuedObjectReferenceParserRuleCall_1_1_2_0_1());
							}
							lv_values_6_2=ruleValuedObjectReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getVectorValueRule());
								}
								add(
									$current,
									"values",
									lv_values_6_2,
									"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getVectorValueAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleVectorValueMember
entryRuleVectorValueMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVectorValueMemberRule()); }
	iv_ruleVectorValueMember=ruleVectorValueMember
	{ $current=$iv_ruleVectorValueMember.current; }
	EOF;

// Rule VectorValueMember
ruleVectorValueMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getBoolExpressionParserRuleCall_0());
		}
		this_BoolExpression_0=ruleBoolExpression
		{
			$current = $this_BoolExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getValuedExpressionParserRuleCall_1());
		}
		this_ValuedExpression_1=ruleValuedExpression
		{
			$current = $this_ValuedExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getIgnoreValueParserRuleCall_2());
		}
		this_IgnoreValue_2=ruleIgnoreValue
		{
			$current = $this_IgnoreValue_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIgnoreValue
entryRuleIgnoreValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIgnoreValueRule()); }
	iv_ruleIgnoreValue=ruleIgnoreValue
	{ $current=$iv_ruleIgnoreValue.current; }
	EOF;

// Rule IgnoreValue
ruleIgnoreValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getIgnoreValueAccess().getIgnoreValueAction_0(),
					$current);
			}
		)
		otherlv_1='_'
		{
			newLeafNode(otherlv_1, grammarAccess.getIgnoreValueAccess().get_Keyword_1());
		}
	)
;

// Entry rule entryRuleAnyValue
entryRuleAnyValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnyValueRule()); }
	iv_ruleAnyValue=ruleAnyValue
	{ $current=$iv_ruleAnyValue.current; }
	EOF;

// Rule AnyValue
ruleAnyValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnyValueAccess().getIntValueParserRuleCall_0());
		}
		this_IntValue_0=ruleIntValue
		{
			$current = $this_IntValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnyValueAccess().getFloatValueParserRuleCall_1());
		}
		this_FloatValue_1=ruleFloatValue
		{
			$current = $this_FloatValue_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnyValueAccess().getBoolValueParserRuleCall_2());
		}
		this_BoolValue_2=ruleBoolValue
		{
			$current = $this_BoolValue_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnyValueAccess().getStringValueParserRuleCall_3());
		}
		this_StringValue_3=ruleStringValue
		{
			$current = $this_StringValue_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJsonObjectValue
entryRuleJsonObjectValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonObjectValueRule()); }
	iv_ruleJsonObjectValue=ruleJsonObjectValue
	{ $current=$iv_ruleJsonObjectValue.current; }
	EOF;

// Rule JsonObjectValue
ruleJsonObjectValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getJsonObjectValueAccess().getJsonObjectValueAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getJsonObjectValueAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_0_0());
					}
					lv_members_2_0=ruleJsonObjectMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
						}
						add(
							$current,
							"members",
							lv_members_2_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getJsonObjectValueAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_1_1_0());
						}
						lv_members_4_0=ruleJsonObjectMember
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
							}
							add(
								$current,
								"members",
								lv_members_4_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getJsonObjectValueAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleJsonObjectMember
entryRuleJsonObjectMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonObjectMemberRule()); }
	iv_ruleJsonObjectMember=ruleJsonObjectMember
	{ $current=$iv_ruleJsonObjectMember.current; }
	EOF;

// Rule JsonObjectMember
ruleJsonObjectMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_STRING
				{
					newLeafNode(lv_key_0_0, grammarAccess.getJsonObjectMemberAccess().getKeySTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJsonObjectMemberRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"de.cau.cs.kieler.annotations.Annotations.STRING");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getJsonObjectMemberAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJsonObjectMemberAccess().getValueJsonValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleJsonValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJsonObjectMemberRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJsonArrayValue
entryRuleJsonArrayValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonArrayValueRule()); }
	iv_ruleJsonArrayValue=ruleJsonArrayValue
	{ $current=$iv_ruleJsonArrayValue.current; }
	EOF;

// Rule JsonArrayValue
ruleJsonArrayValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getJsonArrayValueAccess().getJsonArrayValueAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getJsonArrayValueAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_0_0());
					}
					lv_elements_2_0=ruleJsonValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_0,
							"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getJsonArrayValueAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_1_1_0());
						}
						lv_elements_4_0=ruleJsonValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
							}
							add(
								$current,
								"elements",
								lv_elements_4_0,
								"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getJsonArrayValueAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleJsonValue
entryRuleJsonValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonValueRule()); }
	iv_ruleJsonValue=ruleJsonValue
	{ $current=$iv_ruleJsonValue.current; }
	EOF;

// Rule JsonValue
ruleJsonValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonObjectValueParserRuleCall_0());
		}
		this_JsonObjectValue_0=ruleJsonObjectValue
		{
			$current = $this_JsonObjectValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonArrayValueParserRuleCall_1());
		}
		this_JsonArrayValue_1=ruleJsonArrayValue
		{
			$current = $this_JsonArrayValue_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getJsonValueAccess().getNullValueParserRuleCall_2());
		}
		this_NullValue_2=ruleNullValue
		{
			$current = $this_NullValue_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getJsonValueAccess().getAnyValueParserRuleCall_3());
		}
		this_AnyValue_3=ruleAnyValue
		{
			$current = $this_AnyValue_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNullValue
entryRuleNullValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNullValueRule()); }
	iv_ruleNullValue=ruleNullValue
	{ $current=$iv_ruleNullValue.current; }
	EOF;

// Rule NullValue
ruleNullValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getNullValueAccess().getNullValueAction_0(),
					$current);
			}
		)
		otherlv_1='null'
		{
			newLeafNode(otherlv_1, grammarAccess.getNullValueAccess().getNullKeyword_1());
		}
	)
;

// Entry rule entryRuleJsonPragma
entryRuleJsonPragma returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonPragmaRule()); }
	iv_ruleJsonPragma=ruleJsonPragma
	{ $current=$iv_ruleJsonPragma.current; }
	EOF;

// Rule JsonPragma
ruleJsonPragma returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#'
		{
			newLeafNode(otherlv_0, grammarAccess.getJsonPragmaAccess().getNumberSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJsonPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJsonPragmaRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getJsonPragmaAccess().getValueJsonObjectValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleJsonObjectValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJsonPragmaRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJsonAnnotation
entryRuleJsonAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonAnnotationRule()); }
	iv_ruleJsonAnnotation=ruleJsonAnnotation
	{ $current=$iv_ruleJsonAnnotation.current; }
	EOF;

// Rule JsonAnnotation
ruleJsonAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getJsonAnnotationAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJsonAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJsonAnnotationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getJsonAnnotationAccess().getValueJsonObjectValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleJsonObjectValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJsonAnnotationRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePragma
entryRulePragma returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPragmaRule()); }
	iv_rulePragma=rulePragma
	{ $current=$iv_rulePragma.current; }
	EOF;

// Rule Pragma
rulePragma returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPragmaAccess().getPragmaParserRuleCall_0());
		}
		this_Pragma_0=superPragma
		{
			$current = $this_Pragma_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPragmaAccess().getJsonPragmaParserRuleCall_1());
		}
		this_JsonPragma_1=ruleJsonPragma
		{
			$current = $this_JsonPragma_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	iv_ruleAnnotation=ruleAnnotation
	{ $current=$iv_ruleAnnotation.current; }
	EOF;

// Rule Annotation
ruleAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationParserRuleCall_0());
		}
		this_Annotation_0=superAnnotation
		{
			$current = $this_Annotation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnnotationAccess().getJsonAnnotationParserRuleCall_1());
		}
		this_JsonAnnotation_1=ruleJsonAnnotation
		{
			$current = $this_JsonAnnotation_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQuotedStringAnnotation
entryRuleQuotedStringAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuotedStringAnnotationRule()); }
	iv_ruleQuotedStringAnnotation=ruleQuotedStringAnnotation
	{ $current=$iv_ruleQuotedStringAnnotation.current; }
	EOF;

// Rule QuotedStringAnnotation
ruleQuotedStringAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedStringAnnotationParserRuleCall_0());
		}
		this_QuotedStringAnnotation_0=superQuotedStringAnnotation
		{
			$current = $this_QuotedStringAnnotation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getJsonAnnotationParserRuleCall_1());
		}
		this_JsonAnnotation_1=ruleJsonAnnotation
		{
			$current = $this_JsonAnnotation_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleThisExpression
entryRuleThisExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThisExpressionRule()); }
	iv_ruleThisExpression=ruleThisExpression
	{ $current=$iv_ruleThisExpression.current; }
	EOF;

// Rule ThisExpression
ruleThisExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getThisExpressionAccess().getThisExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='this'
		{
			newLeafNode(otherlv_1, grammarAccess.getThisExpressionAccess().getThisKeyword_1());
		}
	)
;

// Entry rule entrySuperAnnotation
entrySuperAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationsAnnotationRule()); }
	iv_superAnnotation=superAnnotation
	{ $current=$iv_superAnnotation.current; }
	EOF;

// Rule Annotation
superAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getCommentAnnotationParserRuleCall_0());
		}
		this_CommentAnnotation_0=ruleCommentAnnotation
		{
			$current = $this_CommentAnnotation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
		}
		this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation
		{
			$current = $this_KeyStringValueAnnotation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
		}
		this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation
		{
			$current = $this_TypedKeyStringValueAnnotation_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getTagAnnotationParserRuleCall_3());
		}
		this_TagAnnotation_3=ruleTagAnnotation
		{
			$current = $this_TagAnnotation_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entrySuperPragma
entrySuperPragma returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationsPragmaRule()); }
	iv_superPragma=superPragma
	{ $current=$iv_superPragma.current; }
	EOF;

// Rule Pragma
superPragma returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnnotationsPragmaAccess().getStringPragmaParserRuleCall_0());
		}
		this_StringPragma_0=ruleStringPragma
		{
			$current = $this_StringPragma_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnnotationsPragmaAccess().getPragmaTagParserRuleCall_1());
		}
		this_PragmaTag_1=rulePragmaTag
		{
			$current = $this_PragmaTag_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entrySuperValuedAnnotation
entrySuperValuedAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationRule()); }
	iv_superValuedAnnotation=superValuedAnnotation
	{ $current=$iv_superValuedAnnotation.current; }
	EOF;

// Rule ValuedAnnotation
superValuedAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getCommentAnnotationParserRuleCall_0());
		}
		this_CommentAnnotation_0=ruleCommentAnnotation
		{
			$current = $this_CommentAnnotation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
		}
		this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation
		{
			$current = $this_KeyStringValueAnnotation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
		}
		this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation
		{
			$current = $this_TypedKeyStringValueAnnotation_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRestrictedTypeAnnotation
entryRuleRestrictedTypeAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRestrictedTypeAnnotationRule()); }
	iv_ruleRestrictedTypeAnnotation=ruleRestrictedTypeAnnotation
	{ $current=$iv_ruleRestrictedTypeAnnotation.current; }
	EOF;

// Rule RestrictedTypeAnnotation
ruleRestrictedTypeAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getCommentAnnotationParserRuleCall_0());
		}
		this_CommentAnnotation_0=ruleCommentAnnotation
		{
			$current = $this_CommentAnnotation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedKeyStringValueAnnotationParserRuleCall_1());
		}
		this_RestrictedKeyStringValueAnnotation_1=ruleRestrictedKeyStringValueAnnotation
		{
			$current = $this_RestrictedKeyStringValueAnnotation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getRestrictedTypedKeyStringValueAnnotationParserRuleCall_2());
		}
		this_RestrictedTypedKeyStringValueAnnotation_2=ruleRestrictedTypedKeyStringValueAnnotation
		{
			$current = $this_RestrictedTypedKeyStringValueAnnotation_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRestrictedTypeAnnotationAccess().getTagAnnotationParserRuleCall_3());
		}
		this_TagAnnotation_3=ruleTagAnnotation
		{
			$current = $this_TagAnnotation_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entrySuperQuotedStringAnnotation
entrySuperQuotedStringAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationRule()); }
	iv_superQuotedStringAnnotation=superQuotedStringAnnotation
	{ $current=$iv_superQuotedStringAnnotation.current; }
	EOF;

// Rule QuotedStringAnnotation
superQuotedStringAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0());
		}
		this_CommentAnnotation_0=ruleCommentAnnotation
		{
			$current = $this_CommentAnnotation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1());
		}
		this_QuotedKeyStringValueAnnotation_1=ruleQuotedKeyStringValueAnnotation
		{
			$current = $this_QuotedKeyStringValueAnnotation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2());
		}
		this_QuotedTypedKeyStringValueAnnotation_2=ruleQuotedTypedKeyStringValueAnnotation
		{
			$current = $this_QuotedTypedKeyStringValueAnnotation_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3());
		}
		this_TagAnnotation_3=ruleTagAnnotation
		{
			$current = $this_TagAnnotation_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCommentAnnotation
entryRuleCommentAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommentAnnotationRule()); }
	iv_ruleCommentAnnotation=ruleCommentAnnotation
	{ $current=$iv_ruleCommentAnnotation.current; }
	EOF;

// Rule CommentAnnotation
ruleCommentAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_values_0_0=RULE_COMMENT_ANNOTATION
			{
				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCommentAnnotationRule());
				}
				addWithLastConsumed(
					$current,
					"values",
					lv_values_0_0,
					"de.cau.cs.kieler.annotations.Annotations.COMMENT_ANNOTATION");
			}
		)
	)
;

// Entry rule entryRuleCommentAnnotatonSL
entryRuleCommentAnnotatonSL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommentAnnotatonSLRule()); }
	iv_ruleCommentAnnotatonSL=ruleCommentAnnotatonSL
	{ $current=$iv_ruleCommentAnnotatonSL.current; }
	EOF;

// Rule CommentAnnotatonSL
ruleCommentAnnotatonSL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_values_0_0=RULE_SL_COMMENT_ANNOTATION
			{
				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotatonSLAccess().getValuesSL_COMMENT_ANNOTATIONTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCommentAnnotatonSLRule());
				}
				addWithLastConsumed(
					$current,
					"values",
					lv_values_0_0,
					"de.cau.cs.kieler.annotations.Annotations.SL_COMMENT_ANNOTATION");
			}
		)
	)
;

// Entry rule entryRuleTagAnnotation
entryRuleTagAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTagAnnotationRule()); }
	iv_ruleTagAnnotation=ruleTagAnnotation
	{ $current=$iv_ruleTagAnnotation.current; }
	EOF;

// Rule TagAnnotation
ruleTagAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTagAnnotationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePragmaTag
entryRulePragmaTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPragmaTagRule()); }
	iv_rulePragmaTag=rulePragmaTag
	{ $current=$iv_rulePragmaTag.current; }
	EOF;

// Rule PragmaTag
rulePragmaTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#'
		{
			newLeafNode(otherlv_0, grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPragmaTagRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleKeyStringValueAnnotation
entryRuleKeyStringValueAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyStringValueAnnotationRule()); }
	iv_ruleKeyStringValueAnnotation=ruleKeyStringValueAnnotation
	{ $current=$iv_ruleKeyStringValueAnnotation.current; }
	EOF;

// Rule KeyStringValueAnnotation
ruleKeyStringValueAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0());
				}
				lv_values_2_0=ruleEStringAllTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
					}
					add(
						$current,
						"values",
						lv_values_2_0,
						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
					}
					lv_values_4_0=ruleEStringAllTypes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
						}
						add(
							$current,
							"values",
							lv_values_4_0,
							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRestrictedKeyStringValueAnnotation
entryRuleRestrictedKeyStringValueAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); }
	iv_ruleRestrictedKeyStringValueAnnotation=ruleRestrictedKeyStringValueAnnotation
	{ $current=$iv_ruleRestrictedKeyStringValueAnnotation.current; }
	EOF;

// Rule RestrictedKeyStringValueAnnotation
ruleRestrictedKeyStringValueAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0());
				}
				lv_values_2_0=ruleEStringBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
					}
					add(
						$current,
						"values",
						lv_values_2_0,
						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0());
					}
					lv_values_4_0=ruleEStringBoolean
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
						}
						add(
							$current,
							"values",
							lv_values_4_0,
							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleStringPragma
entryRuleStringPragma returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringPragmaRule()); }
	iv_ruleStringPragma=ruleStringPragma
	{ $current=$iv_ruleStringPragma.current; }
	EOF;

// Rule StringPragma
ruleStringPragma returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#'
		{
			newLeafNode(otherlv_0, grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringPragmaRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0());
				}
				lv_values_2_0=ruleEStringAllTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringPragmaRule());
					}
					add(
						$current,
						"values",
						lv_values_2_0,
						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
					}
					lv_values_4_0=ruleEStringAllTypes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStringPragmaRule());
						}
						add(
							$current,
							"values",
							lv_values_4_0,
							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTypedKeyStringValueAnnotation
entryRuleTypedKeyStringValueAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationRule()); }
	iv_ruleTypedKeyStringValueAnnotation=ruleTypedKeyStringValueAnnotation
	{ $current=$iv_ruleTypedKeyStringValueAnnotation.current; }
	EOF;

// Rule TypedKeyStringValueAnnotation
ruleTypedKeyStringValueAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
				}
				lv_type_3_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0());
				}
				lv_values_5_0=ruleEStringAllTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
					}
					add(
						$current,
						"values",
						lv_values_5_0,
						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0());
					}
					lv_values_7_0=ruleEStringAllTypes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
						}
						add(
							$current,
							"values",
							lv_values_7_0,
							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRestrictedTypedKeyStringValueAnnotation
entryRuleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); }
	iv_ruleRestrictedTypedKeyStringValueAnnotation=ruleRestrictedTypedKeyStringValueAnnotation
	{ $current=$iv_ruleRestrictedTypedKeyStringValueAnnotation.current; }
	EOF;

// Rule RestrictedTypedKeyStringValueAnnotation
ruleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
				}
				lv_type_3_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0());
				}
				lv_values_5_0=ruleEStringBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
					}
					add(
						$current,
						"values",
						lv_values_5_0,
						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0());
					}
					lv_values_7_0=ruleEStringBoolean
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
						}
						add(
							$current,
							"values",
							lv_values_7_0,
							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleQuotedKeyStringValueAnnotation
entryRuleQuotedKeyStringValueAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationRule()); }
	iv_ruleQuotedKeyStringValueAnnotation=ruleQuotedKeyStringValueAnnotation
	{ $current=$iv_ruleQuotedKeyStringValueAnnotation.current; }
	EOF;

// Rule QuotedKeyStringValueAnnotation
ruleQuotedKeyStringValueAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuotedKeyStringValueAnnotationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_values_2_0=RULE_STRING
				{
					newLeafNode(lv_values_2_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
					}
					addWithLastConsumed(
						$current,
						"values",
						lv_values_2_0,
						"de.cau.cs.kieler.annotations.Annotations.STRING");
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
			}
			(
				(
					lv_values_4_0=RULE_STRING
					{
						newLeafNode(lv_values_4_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_4_0,
							"de.cau.cs.kieler.annotations.Annotations.STRING");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleQuotedTypedKeyStringValueAnnotation
entryRuleQuotedTypedKeyStringValueAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); }
	iv_ruleQuotedTypedKeyStringValueAnnotation=ruleQuotedTypedKeyStringValueAnnotation
	{ $current=$iv_ruleQuotedTypedKeyStringValueAnnotation.current; }
	EOF;

// Rule QuotedTypedKeyStringValueAnnotation
ruleQuotedTypedKeyStringValueAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
				}
				lv_type_3_0=ruleExtendedID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
		}
		(
			(
				lv_values_5_0=RULE_STRING
				{
					newLeafNode(lv_values_5_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
					}
					addWithLastConsumed(
						$current,
						"values",
						lv_values_5_0,
						"de.cau.cs.kieler.annotations.Annotations.STRING");
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
			}
			(
				(
					lv_values_7_0=RULE_STRING
					{
						newLeafNode(lv_values_7_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_7_0,
							"de.cau.cs.kieler.annotations.Annotations.STRING");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getEStringAccess().getExtendedIDParserRuleCall_1());
		}
		this_ExtendedID_1=ruleExtendedID
		{
			$current.merge(this_ExtendedID_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEStringBoolean
entryRuleEStringBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringBooleanRule()); }
	iv_ruleEStringBoolean=ruleEStringBoolean
	{ $current=$iv_ruleEStringBoolean.current.getText(); }
	EOF;

// Rule EStringBoolean
ruleEStringBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1());
		}
		this_ExtendedID_1=ruleExtendedID
		{
			$current.merge(this_ExtendedID_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_BOOLEAN_2=RULE_BOOLEAN
		{
			$current.merge(this_BOOLEAN_2);
		}
		{
			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleEStringAllTypes
entryRuleEStringAllTypes returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringAllTypesRule()); }
	iv_ruleEStringAllTypes=ruleEStringAllTypes
	{ $current=$iv_ruleEStringAllTypes.current.getText(); }
	EOF;

// Rule EStringAllTypes
ruleEStringAllTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1());
		}
		this_ExtendedID_1=ruleExtendedID
		{
			$current.merge(this_ExtendedID_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_BOOLEAN_2=RULE_BOOLEAN
		{
			$current.merge(this_BOOLEAN_2);
		}
		{
			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2());
		}
		    |
		{
			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3());
		}
		this_Integer_3=ruleInteger
		{
			$current.merge(this_Integer_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4());
		}
		this_Floateger_4=ruleFloateger
		{
			$current.merge(this_Floateger_4);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExtendedID
entryRuleExtendedID returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExtendedIDRule()); }
	iv_ruleExtendedID=ruleExtendedID
	{ $current=$iv_ruleExtendedID.current.getText(); }
	EOF;

// Rule ExtendedID
ruleExtendedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0());
		}
		(
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0_0());
				}
				    |
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getHyphenMinusKeyword_1_0_1());
				}
			)
			this_ID_3=RULE_ID
			{
				$current.merge(this_ID_3);
			}
			{
				newLeafNode(this_ID_3, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1());
			}
		)*
		(
			kw='#'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0());
			}
			this_INT_5=RULE_INT
			{
				$current.merge(this_INT_5);
			}
			{
				newLeafNode(this_INT_5, grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1());
			}
		)?
	)
;

// Entry rule entryRuleInteger
entryRuleInteger returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIntegerRule()); }
	iv_ruleInteger=ruleInteger
	{ $current=$iv_ruleInteger.current.getText(); }
	EOF;

// Rule Integer
ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleFloateger
entryRuleFloateger returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFloategerRule()); }
	iv_ruleFloateger=ruleFloateger
	{ $current=$iv_ruleFloateger.current.getText(); }
	EOF;

// Rule Floateger
ruleFloateger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_FLOAT_1=RULE_FLOAT
		{
			$current.merge(this_FLOAT_1);
		}
		{
			newLeafNode(this_FLOAT_1, grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1());
		}
	)
;

// Rule PreemptionType
rulePreemptionType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='go'
			{
				$current = grammarAccess.getPreemptionTypeAccess().getWEAKEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPreemptionTypeAccess().getWEAKEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='abort'
			{
				$current = grammarAccess.getPreemptionTypeAccess().getSTRONGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPreemptionTypeAccess().getSTRONGEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='join'
			{
				$current = grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPreemptionTypeAccess().getTERMINATIONEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule PreemptionActionType
rulePreemptionActionType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='weak'
			{
				$current = grammarAccess.getPreemptionActionTypeAccess().getWEAKEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPreemptionActionTypeAccess().getWEAKEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='strong'
			{
				$current = grammarAccess.getPreemptionActionTypeAccess().getSTRONGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPreemptionActionTypeAccess().getSTRONGEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule DelayType
ruleDelayType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='undefined'
			{
				$current = grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDelayTypeAccess().getUNDEFINEDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='delayed'
			{
				$current = grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDelayTypeAccess().getDELAYEDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='immediate'
			{
				$current = grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDelayTypeAccess().getIMMEDIATEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='auto'
			{
				$current = grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDelayTypeAccess().getAUTOMATICEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule HistoryType
ruleHistoryType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='reset'
			{
				$current = grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getHistoryTypeAccess().getRESETEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='shallow history'
			{
				$current = grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getHistoryTypeAccess().getSHALLOWEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='history'
			{
				$current = grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getHistoryTypeAccess().getDEEPEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule DeferredType
ruleDeferredType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='deferred'
			{
				$current = grammarAccess.getDeferredTypeAccess().getSHALLOWEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDeferredTypeAccess().getSHALLOWEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='deep deferred'
			{
				$current = grammarAccess.getDeferredTypeAccess().getDEEPEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDeferredTypeAccess().getDEEPEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ValueType
ruleValueType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='pure'
			{
				$current = grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='bool'
			{
				$current = grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='int'
			{
				$current = grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='float'
			{
				$current = grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='string'
			{
				$current = grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='clock'
			{
				$current = grammarAccess.getValueTypeAccess().getCLOCKEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getValueTypeAccess().getCLOCKEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule PriorityProtocol
rulePriorityProtocol returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='conflicting'
			{
				$current = grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='commuting'
			{
				$current = grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule AssignOperator
ruleAssignOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='='
			{
				$current = grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='+='
			{
				$current = grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='-='
			{
				$current = grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='*='
			{
				$current = grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='/='
			{
				$current = grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='%='
			{
				$current = grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='&='
			{
				$current = grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='|='
			{
				$current = grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='^='
			{
				$current = grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='<<='
			{
				$current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTLEFTEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTLEFTEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='>>='
			{
				$current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='>>>='
			{
				$current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTUNSIGNEDEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTUNSIGNEDEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='min='
			{
				$current = grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='max='
			{
				$current = grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_13());
			}
		)
	)
;

// Rule PostfixOperator
rulePostfixOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='++'
			{
				$current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='--'
			{
				$current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule CompareOperator
ruleCompareOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='=='
			{
				$current = grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<'
			{
				$current = grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='<='
			{
				$current = grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='>'
			{
				$current = grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='>='
			{
				$current = grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='!='
			{
				$current = grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule PreOperator
rulePreOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='pre'
		{
			$current = grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration());
		}
	)
;

// Rule BitwiseNotOperator
ruleBitwiseNotOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='~'
		{
			$current = grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration());
		}
	)
;

// Rule BitwiseXOrOperator
ruleBitwiseXOrOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='^'
		{
			$current = grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration());
		}
	)
;

// Rule BitwiseOrOperator
ruleBitwiseOrOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='|'
		{
			$current = grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration());
		}
	)
;

// Rule BitwiseAndOperator
ruleBitwiseAndOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='&'
		{
			$current = grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration());
		}
	)
;

// Rule NotOperator
ruleNotOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='!'
		{
			$current = grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration());
		}
	)
;

// Rule AddOperator
ruleAddOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='+'
		{
			$current = grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration());
		}
	)
;

// Rule SubOperator
ruleSubOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='-'
		{
			$current = grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration());
		}
	)
;

// Rule MultOperator
ruleMultOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='*'
		{
			$current = grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration());
		}
	)
;

// Rule ModOperator
ruleModOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='%'
		{
			$current = grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration());
		}
	)
;

// Rule DivOperator
ruleDivOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='/'
		{
			$current = grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration());
		}
	)
;

// Rule ValOperator
ruleValOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='val'
		{
			$current = grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration());
		}
	)
;

// Rule LogicalOrOperator
ruleLogicalOrOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='||'
		{
			$current = grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration());
		}
	)
;

// Rule LogicalAndOperator
ruleLogicalAndOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='&&'
		{
			$current = grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration());
		}
	)
;

// Rule ShiftLeftOperator
ruleShiftLeftOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='<<'
		{
			$current = grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration());
		}
	)
;

// Rule ShiftRightOperator
ruleShiftRightOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='>>'
		{
			$current = grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration());
		}
	)
;

// Rule ShiftRightUnsignedOperator
ruleShiftRightUnsignedOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='>>>'
		{
			$current = grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration());
		}
	)
;

// Rule ConditionalOperator
ruleConditionalOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='?'
		{
			$current = grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration());
		}
	)
;

// Rule InitOperator
ruleInitOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='->'
		{
			$current = grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration());
		}
	)
;

// Rule FbyOperator
ruleFbyOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='fby'
		{
			$current = grammarAccess.getFbyOperatorAccess().getFBYEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getFbyOperatorAccess().getFBYEnumLiteralDeclaration());
		}
	)
;

// Rule SfbyOperator
ruleSfbyOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='sfby'
		{
			$current = grammarAccess.getSfbyOperatorAccess().getSFBYEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getSfbyOperatorAccess().getSFBYEnumLiteralDeclaration());
		}
	)
;

// Rule HostType
ruleHostType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='host'
		{
			$current = grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration());
		}
	)
;

// Rule StructType
ruleStructType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='struct'
		{
			$current = grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration());
		}
	)
;

// Rule ClassType
ruleClassType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='class'
		{
			$current = grammarAccess.getClassTypeAccess().getCLASSEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getClassTypeAccess().getCLASSEnumLiteralDeclaration());
		}
	)
;

// Rule EnumType
ruleEnumType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='enum'
		{
			$current = grammarAccess.getEnumTypeAccess().getENUMEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getEnumTypeAccess().getENUMEnumLiteralDeclaration());
		}
	)
;

// Rule CombineOperator
ruleCombineOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='none'
			{
				$current = grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='+'
			{
				$current = grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='*'
			{
				$current = grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='max'
			{
				$current = grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='min'
			{
				$current = grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='|'
			{
				$current = grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='&'
			{
				$current = grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='host'
			{
				$current = grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7());
			}
		)
	)
;

// Rule AccessModifier
ruleAccessModifier returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='public'
			{
				$current = grammarAccess.getAccessModifierAccess().getPUBLICEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAccessModifierAccess().getPUBLICEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='protected'
			{
				$current = grammarAccess.getAccessModifierAccess().getPROTECTEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAccessModifierAccess().getPROTECTEDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='private'
			{
				$current = grammarAccess.getAccessModifierAccess().getPRIVATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAccessModifierAccess().getPRIVATEEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule MethodReturnType
ruleMethodReturnType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='void'
			{
				$current = grammarAccess.getMethodReturnTypeAccess().getVOIDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMethodReturnTypeAccess().getVOIDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='bool'
			{
				$current = grammarAccess.getMethodReturnTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMethodReturnTypeAccess().getBOOLEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='int'
			{
				$current = grammarAccess.getMethodReturnTypeAccess().getINTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMethodReturnTypeAccess().getINTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='float'
			{
				$current = grammarAccess.getMethodReturnTypeAccess().getFLOATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getMethodReturnTypeAccess().getFLOATEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='string'
			{
				$current = grammarAccess.getMethodReturnTypeAccess().getSTRINGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getMethodReturnTypeAccess().getSTRINGEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule ParameterAccessType
ruleParameterAccessType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='&'
			{
				$current = grammarAccess.getParameterAccessTypeAccess().getCALL_BY_REFERENCEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getParameterAccessTypeAccess().getCALL_BY_REFERENCEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='!&'
			{
				$current = grammarAccess.getParameterAccessTypeAccess().getPURE_OUTPUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getParameterAccessTypeAccess().getPURE_OUTPUTEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_HOSTCODE : '`' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'`')))* '`';

RULE_COMMENT_ANNOTATION : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT_ANNOTATION : '//*' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_SL_COMMENT : '//' ~('*') ~(('\n'|'\r'))* ('\r'? '\n')?;

fragment RULE_NUMBER : '0'..'9';

RULE_INT : RULE_NUMBER+;

RULE_FLOAT : (RULE_NUMBER+ '.' RULE_NUMBER* (('e'|'E') ('+'|'-')? RULE_NUMBER+)? 'f'?|RULE_NUMBER+ 'f');

RULE_BOOLEAN : ('true'|'false');

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ID : '^'? (('_'? 'a'..'z'|'_'? 'A'..'Z')|'_' '0'..'9'|'__') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
