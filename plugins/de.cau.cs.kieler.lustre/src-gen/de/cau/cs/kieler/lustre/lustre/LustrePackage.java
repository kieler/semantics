/**
 * generated by Xtext
 */
package de.cau.cs.kieler.lustre.lustre;

import de.cau.cs.kieler.kexpressions.KExpressionsPackage;

import de.cau.cs.kieler.kexpressions.keffects.KEffectsPackage;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see de.cau.cs.kieler.lustre.lustre.LustreFactory
 * @model kind="package"
 * @generated
 */
public interface LustrePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "lustre";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.cau.de/cs/kieler/lustre/Lustre";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "lustre";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  LustrePackage eINSTANCE = de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl.init();

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.LustreProgramImpl <em>Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustreProgramImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getLustreProgram()
   * @generated
   */
  int LUSTRE_PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Includes</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_PROGRAM__INCLUDES = 0;

  /**
   * The feature id for the '<em><b>Constants</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_PROGRAM__CONSTANTS = 1;

  /**
   * The feature id for the '<em><b>Types</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_PROGRAM__TYPES = 2;

  /**
   * The feature id for the '<em><b>Externals</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_PROGRAM__EXTERNALS = 3;

  /**
   * The feature id for the '<em><b>Nodes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_PROGRAM__NODES = 4;

  /**
   * The number of structural features of the '<em>Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_PROGRAM_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.TypeDeclarationImpl <em>Type Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.TypeDeclarationImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getTypeDeclaration()
   * @generated
   */
  int TYPE_DECLARATION = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DECLARATION__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DECLARATION__TYPE = 1;

  /**
   * The feature id for the '<em><b>Enums</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DECLARATION__ENUMS = 2;

  /**
   * The feature id for the '<em><b>Variables</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DECLARATION__VARIABLES = 3;

  /**
   * The number of structural features of the '<em>Type Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DECLARATION_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AutomatonImpl <em>Automaton</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.AutomatonImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAutomaton()
   * @generated
   */
  int AUTOMATON = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AUTOMATON__NAME = 0;

  /**
   * The feature id for the '<em><b>States</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AUTOMATON__STATES = 1;

  /**
   * The number of structural features of the '<em>Automaton</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AUTOMATON_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AStateImpl <em>AState</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.AStateImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAState()
   * @generated
   */
  int ASTATE = 3;

  /**
   * The feature id for the '<em><b>Initial</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE__INITIAL = 0;

  /**
   * The feature id for the '<em><b>Valued Object</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE__VALUED_OBJECT = 1;

  /**
   * The feature id for the '<em><b>Constants</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE__CONSTANTS = 2;

  /**
   * The feature id for the '<em><b>Variables</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE__VARIABLES = 3;

  /**
   * The feature id for the '<em><b>Equations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE__EQUATIONS = 4;

  /**
   * The feature id for the '<em><b>Emissions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE__EMISSIONS = 5;

  /**
   * The feature id for the '<em><b>Assertions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE__ASSERTIONS = 6;

  /**
   * The feature id for the '<em><b>Automatons</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE__AUTOMATONS = 7;

  /**
   * The feature id for the '<em><b>Transitions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE__TRANSITIONS = 8;

  /**
   * The number of structural features of the '<em>AState</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASTATE_FEATURE_COUNT = 9;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ATransitionImpl <em>ATransition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.ATransitionImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getATransition()
   * @generated
   */
  int ATRANSITION = 4;

  /**
   * The feature id for the '<em><b>Strong</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRANSITION__STRONG = 0;

  /**
   * The feature id for the '<em><b>Actions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRANSITION__ACTIONS = 1;

  /**
   * The number of structural features of the '<em>ATransition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATRANSITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AnActionImpl <em>An Action</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.AnActionImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAnAction()
   * @generated
   */
  int AN_ACTION = 5;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AN_ACTION__CONDITION = 0;

  /**
   * The feature id for the '<em><b>Effects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AN_ACTION__EFFECTS = 1;

  /**
   * The feature id for the '<em><b>History</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AN_ACTION__HISTORY = 2;

  /**
   * The feature id for the '<em><b>Next State</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AN_ACTION__NEXT_STATE = 3;

  /**
   * The number of structural features of the '<em>An Action</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AN_ACTION_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ExternalNodeDeclarationImpl <em>External Node Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.ExternalNodeDeclarationImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getExternalNodeDeclaration()
   * @generated
   */
  int EXTERNAL_NODE_DECLARATION = 6;

  /**
   * The feature id for the '<em><b>Annotations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTERNAL_NODE_DECLARATION__ANNOTATIONS = KExpressionsPackage.DECLARATION__ANNOTATIONS;

  /**
   * The feature id for the '<em><b>Valued Objects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTERNAL_NODE_DECLARATION__VALUED_OBJECTS = KExpressionsPackage.DECLARATION__VALUED_OBJECTS;

  /**
   * The feature id for the '<em><b>Access</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTERNAL_NODE_DECLARATION__ACCESS = KExpressionsPackage.DECLARATION__ACCESS;

  /**
   * The feature id for the '<em><b>Is Unsafe</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTERNAL_NODE_DECLARATION__IS_UNSAFE = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Has State</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTERNAL_NODE_DECLARATION__HAS_STATE = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Inputs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTERNAL_NODE_DECLARATION__INPUTS = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Outputs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTERNAL_NODE_DECLARATION__OUTPUTS = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>External Node Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTERNAL_NODE_DECLARATION_FEATURE_COUNT = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.LustreVariableDeclarationImpl <em>Variable Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustreVariableDeclarationImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getLustreVariableDeclaration()
   * @generated
   */
  int LUSTRE_VARIABLE_DECLARATION = 7;

  /**
   * The feature id for the '<em><b>Annotations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VARIABLE_DECLARATION__ANNOTATIONS = KExpressionsPackage.VARIABLE_DECLARATION__ANNOTATIONS;

  /**
   * The feature id for the '<em><b>Valued Objects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VARIABLE_DECLARATION__VALUED_OBJECTS = KExpressionsPackage.VARIABLE_DECLARATION__VALUED_OBJECTS;

  /**
   * The feature id for the '<em><b>Access</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VARIABLE_DECLARATION__ACCESS = KExpressionsPackage.VARIABLE_DECLARATION__ACCESS;

  /**
   * The feature id for the '<em><b>Input</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VARIABLE_DECLARATION__INPUT = KExpressionsPackage.VARIABLE_DECLARATION__INPUT;

  /**
   * The feature id for the '<em><b>Output</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VARIABLE_DECLARATION__OUTPUT = KExpressionsPackage.VARIABLE_DECLARATION__OUTPUT;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VARIABLE_DECLARATION__TYPE = KExpressionsPackage.VARIABLE_DECLARATION__TYPE;

  /**
   * The feature id for the '<em><b>Static</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VARIABLE_DECLARATION__STATIC = KExpressionsPackage.VARIABLE_DECLARATION__STATIC;

  /**
   * The feature id for the '<em><b>Signal</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VARIABLE_DECLARATION__SIGNAL = KExpressionsPackage.VARIABLE_DECLARATION__SIGNAL;

  /**
   * The feature id for the '<em><b>Const</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VARIABLE_DECLARATION__CONST = KExpressionsPackage.VARIABLE_DECLARATION__CONST;

  /**
   * The feature id for the '<em><b>Extern</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VARIABLE_DECLARATION__EXTERN = KExpressionsPackage.VARIABLE_DECLARATION__EXTERN;

  /**
   * The feature id for the '<em><b>Volatile</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VARIABLE_DECLARATION__VOLATILE = KExpressionsPackage.VARIABLE_DECLARATION__VOLATILE;

  /**
   * The feature id for the '<em><b>Global</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VARIABLE_DECLARATION__GLOBAL = KExpressionsPackage.VARIABLE_DECLARATION__GLOBAL;

  /**
   * The feature id for the '<em><b>Host Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VARIABLE_DECLARATION__HOST_TYPE = KExpressionsPackage.VARIABLE_DECLARATION__HOST_TYPE;

  /**
   * The feature id for the '<em><b>Clock Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VARIABLE_DECLARATION__CLOCK_EXPR = KExpressionsPackage.VARIABLE_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Variable Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VARIABLE_DECLARATION_FEATURE_COUNT = KExpressionsPackage.VARIABLE_DECLARATION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.LustreValuedObjectImpl <em>Valued Object</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustreValuedObjectImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getLustreValuedObject()
   * @generated
   */
  int LUSTRE_VALUED_OBJECT = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VALUED_OBJECT__NAME = KExpressionsPackage.VALUED_OBJECT__NAME;

  /**
   * The feature id for the '<em><b>Annotations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VALUED_OBJECT__ANNOTATIONS = KExpressionsPackage.VALUED_OBJECT__ANNOTATIONS;

  /**
   * The feature id for the '<em><b>Combine Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VALUED_OBJECT__COMBINE_OPERATOR = KExpressionsPackage.VALUED_OBJECT__COMBINE_OPERATOR;

  /**
   * The feature id for the '<em><b>Initial Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VALUED_OBJECT__INITIAL_VALUE = KExpressionsPackage.VALUED_OBJECT__INITIAL_VALUE;

  /**
   * The feature id for the '<em><b>Cardinalities</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VALUED_OBJECT__CARDINALITIES = KExpressionsPackage.VALUED_OBJECT__CARDINALITIES;

  /**
   * The feature id for the '<em><b>Label</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VALUED_OBJECT__LABEL = KExpressionsPackage.VALUED_OBJECT__LABEL;

  /**
   * The feature id for the '<em><b>Generic Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VALUED_OBJECT__GENERIC_PARAMETERS = KExpressionsPackage.VALUED_OBJECT__GENERIC_PARAMETERS;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VALUED_OBJECT__PARAMETERS = KExpressionsPackage.VALUED_OBJECT__PARAMETERS;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VALUED_OBJECT__TYPE = KExpressionsPackage.VALUED_OBJECT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Valued Object</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LUSTRE_VALUED_OBJECT_FEATURE_COUNT = KExpressionsPackage.VALUED_OBJECT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.NodeDeclarationImpl <em>Node Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.NodeDeclarationImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getNodeDeclaration()
   * @generated
   */
  int NODE_DECLARATION = 9;

  /**
   * The feature id for the '<em><b>Annotations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__ANNOTATIONS = KExpressionsPackage.DECLARATION__ANNOTATIONS;

  /**
   * The feature id for the '<em><b>Valued Objects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__VALUED_OBJECTS = KExpressionsPackage.DECLARATION__VALUED_OBJECTS;

  /**
   * The feature id for the '<em><b>Access</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__ACCESS = KExpressionsPackage.DECLARATION__ACCESS;

  /**
   * The feature id for the '<em><b>Is Unsafe</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__IS_UNSAFE = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Has State</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__HAS_STATE = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Inputs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__INPUTS = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Outputs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__OUTPUTS = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Constants</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__CONSTANTS = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Variables</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__VARIABLES = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Equations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__EQUATIONS = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 6;

  /**
   * The feature id for the '<em><b>Emissions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__EMISSIONS = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 7;

  /**
   * The feature id for the '<em><b>Assertions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__ASSERTIONS = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 8;

  /**
   * The feature id for the '<em><b>Automatons</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION__AUTOMATONS = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 9;

  /**
   * The number of structural features of the '<em>Node Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_DECLARATION_FEATURE_COUNT = KExpressionsPackage.DECLARATION_FEATURE_COUNT + 10;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.NodeValuedObjectImpl <em>Node Valued Object</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.NodeValuedObjectImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getNodeValuedObject()
   * @generated
   */
  int NODE_VALUED_OBJECT = 10;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_VALUED_OBJECT__NAME = KExpressionsPackage.VALUED_OBJECT__NAME;

  /**
   * The feature id for the '<em><b>Annotations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_VALUED_OBJECT__ANNOTATIONS = KExpressionsPackage.VALUED_OBJECT__ANNOTATIONS;

  /**
   * The feature id for the '<em><b>Combine Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_VALUED_OBJECT__COMBINE_OPERATOR = KExpressionsPackage.VALUED_OBJECT__COMBINE_OPERATOR;

  /**
   * The feature id for the '<em><b>Initial Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_VALUED_OBJECT__INITIAL_VALUE = KExpressionsPackage.VALUED_OBJECT__INITIAL_VALUE;

  /**
   * The feature id for the '<em><b>Cardinalities</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_VALUED_OBJECT__CARDINALITIES = KExpressionsPackage.VALUED_OBJECT__CARDINALITIES;

  /**
   * The feature id for the '<em><b>Label</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_VALUED_OBJECT__LABEL = KExpressionsPackage.VALUED_OBJECT__LABEL;

  /**
   * The feature id for the '<em><b>Generic Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_VALUED_OBJECT__GENERIC_PARAMETERS = KExpressionsPackage.VALUED_OBJECT__GENERIC_PARAMETERS;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_VALUED_OBJECT__PARAMETERS = KExpressionsPackage.VALUED_OBJECT__PARAMETERS;

  /**
   * The number of structural features of the '<em>Node Valued Object</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_VALUED_OBJECT_FEATURE_COUNT = KExpressionsPackage.VALUED_OBJECT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.EquationImpl <em>Equation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.EquationImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getEquation()
   * @generated
   */
  int EQUATION = 11;

  /**
   * The feature id for the '<em><b>Annotations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION__ANNOTATIONS = KEffectsPackage.ASSIGNMENT__ANNOTATIONS;

  /**
   * The feature id for the '<em><b>Schedule</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION__SCHEDULE = KEffectsPackage.ASSIGNMENT__SCHEDULE;

  /**
   * The feature id for the '<em><b>Outgoing Links</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION__OUTGOING_LINKS = KEffectsPackage.ASSIGNMENT__OUTGOING_LINKS;

  /**
   * The feature id for the '<em><b>Incoming Links</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION__INCOMING_LINKS = KEffectsPackage.ASSIGNMENT__INCOMING_LINKS;

  /**
   * The feature id for the '<em><b>Reference</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION__REFERENCE = KEffectsPackage.ASSIGNMENT__REFERENCE;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION__EXPRESSION = KEffectsPackage.ASSIGNMENT__EXPRESSION;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION__OPERATOR = KEffectsPackage.ASSIGNMENT__OPERATOR;

  /**
   * The feature id for the '<em><b>References</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION__REFERENCES = KEffectsPackage.ASSIGNMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Equation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUATION_FEATURE_COUNT = KEffectsPackage.ASSIGNMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AssertionImpl <em>Assertion</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.AssertionImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAssertion()
   * @generated
   */
  int ASSERTION = 12;

  /**
   * The feature id for the '<em><b>Schedule</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSERTION__SCHEDULE = KExpressionsPackage.EXPRESSION__SCHEDULE;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSERTION__EXPR = KExpressionsPackage.EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Assertion</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSERTION_FEATURE_COUNT = KExpressionsPackage.EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cau.cs.kieler.lustre.lustre.impl.StateValuedObjectImpl <em>State Valued Object</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cau.cs.kieler.lustre.lustre.impl.StateValuedObjectImpl
   * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getStateValuedObject()
   * @generated
   */
  int STATE_VALUED_OBJECT = 13;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_VALUED_OBJECT__NAME = KExpressionsPackage.VALUED_OBJECT__NAME;

  /**
   * The feature id for the '<em><b>Annotations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_VALUED_OBJECT__ANNOTATIONS = KExpressionsPackage.VALUED_OBJECT__ANNOTATIONS;

  /**
   * The feature id for the '<em><b>Combine Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_VALUED_OBJECT__COMBINE_OPERATOR = KExpressionsPackage.VALUED_OBJECT__COMBINE_OPERATOR;

  /**
   * The feature id for the '<em><b>Initial Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_VALUED_OBJECT__INITIAL_VALUE = KExpressionsPackage.VALUED_OBJECT__INITIAL_VALUE;

  /**
   * The feature id for the '<em><b>Cardinalities</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_VALUED_OBJECT__CARDINALITIES = KExpressionsPackage.VALUED_OBJECT__CARDINALITIES;

  /**
   * The feature id for the '<em><b>Label</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_VALUED_OBJECT__LABEL = KExpressionsPackage.VALUED_OBJECT__LABEL;

  /**
   * The feature id for the '<em><b>Generic Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_VALUED_OBJECT__GENERIC_PARAMETERS = KExpressionsPackage.VALUED_OBJECT__GENERIC_PARAMETERS;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_VALUED_OBJECT__PARAMETERS = KExpressionsPackage.VALUED_OBJECT__PARAMETERS;

  /**
   * The number of structural features of the '<em>State Valued Object</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_VALUED_OBJECT_FEATURE_COUNT = KExpressionsPackage.VALUED_OBJECT_FEATURE_COUNT + 0;


  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.LustreProgram <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Program</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.LustreProgram
   * @generated
   */
  EClass getLustreProgram();

  /**
   * Returns the meta object for the attribute list '{@link de.cau.cs.kieler.lustre.lustre.LustreProgram#getIncludes <em>Includes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Includes</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.LustreProgram#getIncludes()
   * @see #getLustreProgram()
   * @generated
   */
  EAttribute getLustreProgram_Includes();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.LustreProgram#getConstants <em>Constants</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constants</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.LustreProgram#getConstants()
   * @see #getLustreProgram()
   * @generated
   */
  EReference getLustreProgram_Constants();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.LustreProgram#getTypes <em>Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Types</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.LustreProgram#getTypes()
   * @see #getLustreProgram()
   * @generated
   */
  EReference getLustreProgram_Types();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.LustreProgram#getExternals <em>Externals</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Externals</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.LustreProgram#getExternals()
   * @see #getLustreProgram()
   * @generated
   */
  EReference getLustreProgram_Externals();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.LustreProgram#getNodes <em>Nodes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Nodes</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.LustreProgram#getNodes()
   * @see #getLustreProgram()
   * @generated
   */
  EReference getLustreProgram_Nodes();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.TypeDeclaration <em>Type Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type Declaration</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.TypeDeclaration
   * @generated
   */
  EClass getTypeDeclaration();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.TypeDeclaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.TypeDeclaration#getName()
   * @see #getTypeDeclaration()
   * @generated
   */
  EAttribute getTypeDeclaration_Name();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.TypeDeclaration#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.TypeDeclaration#getType()
   * @see #getTypeDeclaration()
   * @generated
   */
  EAttribute getTypeDeclaration_Type();

  /**
   * Returns the meta object for the attribute list '{@link de.cau.cs.kieler.lustre.lustre.TypeDeclaration#getEnums <em>Enums</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Enums</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.TypeDeclaration#getEnums()
   * @see #getTypeDeclaration()
   * @generated
   */
  EAttribute getTypeDeclaration_Enums();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.TypeDeclaration#getVariables <em>Variables</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Variables</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.TypeDeclaration#getVariables()
   * @see #getTypeDeclaration()
   * @generated
   */
  EReference getTypeDeclaration_Variables();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Automaton <em>Automaton</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Automaton</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Automaton
   * @generated
   */
  EClass getAutomaton();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.Automaton#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Automaton#getName()
   * @see #getAutomaton()
   * @generated
   */
  EAttribute getAutomaton_Name();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Automaton#getStates <em>States</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>States</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Automaton#getStates()
   * @see #getAutomaton()
   * @generated
   */
  EReference getAutomaton_States();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.AState <em>AState</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>AState</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState
   * @generated
   */
  EClass getAState();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.AState#isInitial <em>Initial</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Initial</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState#isInitial()
   * @see #getAState()
   * @generated
   */
  EAttribute getAState_Initial();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.AState#getValuedObject <em>Valued Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Valued Object</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState#getValuedObject()
   * @see #getAState()
   * @generated
   */
  EReference getAState_ValuedObject();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.AState#getConstants <em>Constants</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constants</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState#getConstants()
   * @see #getAState()
   * @generated
   */
  EReference getAState_Constants();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.AState#getVariables <em>Variables</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Variables</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState#getVariables()
   * @see #getAState()
   * @generated
   */
  EReference getAState_Variables();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.AState#getEquations <em>Equations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Equations</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState#getEquations()
   * @see #getAState()
   * @generated
   */
  EReference getAState_Equations();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.AState#getEmissions <em>Emissions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Emissions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState#getEmissions()
   * @see #getAState()
   * @generated
   */
  EReference getAState_Emissions();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.AState#getAssertions <em>Assertions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Assertions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState#getAssertions()
   * @see #getAState()
   * @generated
   */
  EReference getAState_Assertions();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.AState#getAutomatons <em>Automatons</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Automatons</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState#getAutomatons()
   * @see #getAState()
   * @generated
   */
  EReference getAState_Automatons();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.AState#getTransitions <em>Transitions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Transitions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AState#getTransitions()
   * @see #getAState()
   * @generated
   */
  EReference getAState_Transitions();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.ATransition <em>ATransition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>ATransition</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.ATransition
   * @generated
   */
  EClass getATransition();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.ATransition#isStrong <em>Strong</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Strong</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.ATransition#isStrong()
   * @see #getATransition()
   * @generated
   */
  EAttribute getATransition_Strong();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.ATransition#getActions <em>Actions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Actions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.ATransition#getActions()
   * @see #getATransition()
   * @generated
   */
  EReference getATransition_Actions();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.AnAction <em>An Action</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>An Action</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AnAction
   * @generated
   */
  EClass getAnAction();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.AnAction#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AnAction#getCondition()
   * @see #getAnAction()
   * @generated
   */
  EReference getAnAction_Condition();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.AnAction#getEffects <em>Effects</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Effects</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AnAction#getEffects()
   * @see #getAnAction()
   * @generated
   */
  EReference getAnAction_Effects();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.AnAction#isHistory <em>History</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>History</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AnAction#isHistory()
   * @see #getAnAction()
   * @generated
   */
  EAttribute getAnAction_History();

  /**
   * Returns the meta object for the reference '{@link de.cau.cs.kieler.lustre.lustre.AnAction#getNextState <em>Next State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Next State</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.AnAction#getNextState()
   * @see #getAnAction()
   * @generated
   */
  EReference getAnAction_NextState();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.ExternalNodeDeclaration <em>External Node Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>External Node Declaration</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.ExternalNodeDeclaration
   * @generated
   */
  EClass getExternalNodeDeclaration();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.ExternalNodeDeclaration#isIsUnsafe <em>Is Unsafe</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is Unsafe</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.ExternalNodeDeclaration#isIsUnsafe()
   * @see #getExternalNodeDeclaration()
   * @generated
   */
  EAttribute getExternalNodeDeclaration_IsUnsafe();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.ExternalNodeDeclaration#isHasState <em>Has State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Has State</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.ExternalNodeDeclaration#isHasState()
   * @see #getExternalNodeDeclaration()
   * @generated
   */
  EAttribute getExternalNodeDeclaration_HasState();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.ExternalNodeDeclaration#getInputs <em>Inputs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Inputs</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.ExternalNodeDeclaration#getInputs()
   * @see #getExternalNodeDeclaration()
   * @generated
   */
  EReference getExternalNodeDeclaration_Inputs();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.ExternalNodeDeclaration#getOutputs <em>Outputs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Outputs</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.ExternalNodeDeclaration#getOutputs()
   * @see #getExternalNodeDeclaration()
   * @generated
   */
  EReference getExternalNodeDeclaration_Outputs();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.LustreVariableDeclaration <em>Variable Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Declaration</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.LustreVariableDeclaration
   * @generated
   */
  EClass getLustreVariableDeclaration();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.LustreVariableDeclaration#getClockExpr <em>Clock Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Clock Expr</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.LustreVariableDeclaration#getClockExpr()
   * @see #getLustreVariableDeclaration()
   * @generated
   */
  EReference getLustreVariableDeclaration_ClockExpr();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.LustreValuedObject <em>Valued Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Valued Object</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.LustreValuedObject
   * @generated
   */
  EClass getLustreValuedObject();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.LustreValuedObject#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.LustreValuedObject#getType()
   * @see #getLustreValuedObject()
   * @generated
   */
  EAttribute getLustreValuedObject_Type();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.NodeDeclaration <em>Node Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node Declaration</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.NodeDeclaration
   * @generated
   */
  EClass getNodeDeclaration();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.NodeDeclaration#isIsUnsafe <em>Is Unsafe</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is Unsafe</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.NodeDeclaration#isIsUnsafe()
   * @see #getNodeDeclaration()
   * @generated
   */
  EAttribute getNodeDeclaration_IsUnsafe();

  /**
   * Returns the meta object for the attribute '{@link de.cau.cs.kieler.lustre.lustre.NodeDeclaration#isHasState <em>Has State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Has State</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.NodeDeclaration#isHasState()
   * @see #getNodeDeclaration()
   * @generated
   */
  EAttribute getNodeDeclaration_HasState();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getInputs <em>Inputs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Inputs</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getInputs()
   * @see #getNodeDeclaration()
   * @generated
   */
  EReference getNodeDeclaration_Inputs();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getOutputs <em>Outputs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Outputs</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getOutputs()
   * @see #getNodeDeclaration()
   * @generated
   */
  EReference getNodeDeclaration_Outputs();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getConstants <em>Constants</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constants</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getConstants()
   * @see #getNodeDeclaration()
   * @generated
   */
  EReference getNodeDeclaration_Constants();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getVariables <em>Variables</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Variables</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getVariables()
   * @see #getNodeDeclaration()
   * @generated
   */
  EReference getNodeDeclaration_Variables();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getEquations <em>Equations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Equations</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getEquations()
   * @see #getNodeDeclaration()
   * @generated
   */
  EReference getNodeDeclaration_Equations();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getEmissions <em>Emissions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Emissions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getEmissions()
   * @see #getNodeDeclaration()
   * @generated
   */
  EReference getNodeDeclaration_Emissions();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getAssertions <em>Assertions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Assertions</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getAssertions()
   * @see #getNodeDeclaration()
   * @generated
   */
  EReference getNodeDeclaration_Assertions();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getAutomatons <em>Automatons</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Automatons</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.NodeDeclaration#getAutomatons()
   * @see #getNodeDeclaration()
   * @generated
   */
  EReference getNodeDeclaration_Automatons();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.NodeValuedObject <em>Node Valued Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node Valued Object</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.NodeValuedObject
   * @generated
   */
  EClass getNodeValuedObject();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Equation <em>Equation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equation</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Equation
   * @generated
   */
  EClass getEquation();

  /**
   * Returns the meta object for the containment reference list '{@link de.cau.cs.kieler.lustre.lustre.Equation#getReferences <em>References</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>References</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Equation#getReferences()
   * @see #getEquation()
   * @generated
   */
  EReference getEquation_References();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.Assertion <em>Assertion</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assertion</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Assertion
   * @generated
   */
  EClass getAssertion();

  /**
   * Returns the meta object for the containment reference '{@link de.cau.cs.kieler.lustre.lustre.Assertion#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.Assertion#getExpr()
   * @see #getAssertion()
   * @generated
   */
  EReference getAssertion_Expr();

  /**
   * Returns the meta object for class '{@link de.cau.cs.kieler.lustre.lustre.StateValuedObject <em>State Valued Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>State Valued Object</em>'.
   * @see de.cau.cs.kieler.lustre.lustre.StateValuedObject
   * @generated
   */
  EClass getStateValuedObject();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  LustreFactory getLustreFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.LustreProgramImpl <em>Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustreProgramImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getLustreProgram()
     * @generated
     */
    EClass LUSTRE_PROGRAM = eINSTANCE.getLustreProgram();

    /**
     * The meta object literal for the '<em><b>Includes</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LUSTRE_PROGRAM__INCLUDES = eINSTANCE.getLustreProgram_Includes();

    /**
     * The meta object literal for the '<em><b>Constants</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LUSTRE_PROGRAM__CONSTANTS = eINSTANCE.getLustreProgram_Constants();

    /**
     * The meta object literal for the '<em><b>Types</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LUSTRE_PROGRAM__TYPES = eINSTANCE.getLustreProgram_Types();

    /**
     * The meta object literal for the '<em><b>Externals</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LUSTRE_PROGRAM__EXTERNALS = eINSTANCE.getLustreProgram_Externals();

    /**
     * The meta object literal for the '<em><b>Nodes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LUSTRE_PROGRAM__NODES = eINSTANCE.getLustreProgram_Nodes();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.TypeDeclarationImpl <em>Type Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.TypeDeclarationImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getTypeDeclaration()
     * @generated
     */
    EClass TYPE_DECLARATION = eINSTANCE.getTypeDeclaration();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_DECLARATION__NAME = eINSTANCE.getTypeDeclaration_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_DECLARATION__TYPE = eINSTANCE.getTypeDeclaration_Type();

    /**
     * The meta object literal for the '<em><b>Enums</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_DECLARATION__ENUMS = eINSTANCE.getTypeDeclaration_Enums();

    /**
     * The meta object literal for the '<em><b>Variables</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_DECLARATION__VARIABLES = eINSTANCE.getTypeDeclaration_Variables();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AutomatonImpl <em>Automaton</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.AutomatonImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAutomaton()
     * @generated
     */
    EClass AUTOMATON = eINSTANCE.getAutomaton();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AUTOMATON__NAME = eINSTANCE.getAutomaton_Name();

    /**
     * The meta object literal for the '<em><b>States</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AUTOMATON__STATES = eINSTANCE.getAutomaton_States();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AStateImpl <em>AState</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.AStateImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAState()
     * @generated
     */
    EClass ASTATE = eINSTANCE.getAState();

    /**
     * The meta object literal for the '<em><b>Initial</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASTATE__INITIAL = eINSTANCE.getAState_Initial();

    /**
     * The meta object literal for the '<em><b>Valued Object</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASTATE__VALUED_OBJECT = eINSTANCE.getAState_ValuedObject();

    /**
     * The meta object literal for the '<em><b>Constants</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASTATE__CONSTANTS = eINSTANCE.getAState_Constants();

    /**
     * The meta object literal for the '<em><b>Variables</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASTATE__VARIABLES = eINSTANCE.getAState_Variables();

    /**
     * The meta object literal for the '<em><b>Equations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASTATE__EQUATIONS = eINSTANCE.getAState_Equations();

    /**
     * The meta object literal for the '<em><b>Emissions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASTATE__EMISSIONS = eINSTANCE.getAState_Emissions();

    /**
     * The meta object literal for the '<em><b>Assertions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASTATE__ASSERTIONS = eINSTANCE.getAState_Assertions();

    /**
     * The meta object literal for the '<em><b>Automatons</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASTATE__AUTOMATONS = eINSTANCE.getAState_Automatons();

    /**
     * The meta object literal for the '<em><b>Transitions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASTATE__TRANSITIONS = eINSTANCE.getAState_Transitions();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ATransitionImpl <em>ATransition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.ATransitionImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getATransition()
     * @generated
     */
    EClass ATRANSITION = eINSTANCE.getATransition();

    /**
     * The meta object literal for the '<em><b>Strong</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATRANSITION__STRONG = eINSTANCE.getATransition_Strong();

    /**
     * The meta object literal for the '<em><b>Actions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATRANSITION__ACTIONS = eINSTANCE.getATransition_Actions();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AnActionImpl <em>An Action</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.AnActionImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAnAction()
     * @generated
     */
    EClass AN_ACTION = eINSTANCE.getAnAction();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AN_ACTION__CONDITION = eINSTANCE.getAnAction_Condition();

    /**
     * The meta object literal for the '<em><b>Effects</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AN_ACTION__EFFECTS = eINSTANCE.getAnAction_Effects();

    /**
     * The meta object literal for the '<em><b>History</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AN_ACTION__HISTORY = eINSTANCE.getAnAction_History();

    /**
     * The meta object literal for the '<em><b>Next State</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AN_ACTION__NEXT_STATE = eINSTANCE.getAnAction_NextState();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.ExternalNodeDeclarationImpl <em>External Node Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.ExternalNodeDeclarationImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getExternalNodeDeclaration()
     * @generated
     */
    EClass EXTERNAL_NODE_DECLARATION = eINSTANCE.getExternalNodeDeclaration();

    /**
     * The meta object literal for the '<em><b>Is Unsafe</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXTERNAL_NODE_DECLARATION__IS_UNSAFE = eINSTANCE.getExternalNodeDeclaration_IsUnsafe();

    /**
     * The meta object literal for the '<em><b>Has State</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXTERNAL_NODE_DECLARATION__HAS_STATE = eINSTANCE.getExternalNodeDeclaration_HasState();

    /**
     * The meta object literal for the '<em><b>Inputs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTERNAL_NODE_DECLARATION__INPUTS = eINSTANCE.getExternalNodeDeclaration_Inputs();

    /**
     * The meta object literal for the '<em><b>Outputs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTERNAL_NODE_DECLARATION__OUTPUTS = eINSTANCE.getExternalNodeDeclaration_Outputs();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.LustreVariableDeclarationImpl <em>Variable Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustreVariableDeclarationImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getLustreVariableDeclaration()
     * @generated
     */
    EClass LUSTRE_VARIABLE_DECLARATION = eINSTANCE.getLustreVariableDeclaration();

    /**
     * The meta object literal for the '<em><b>Clock Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LUSTRE_VARIABLE_DECLARATION__CLOCK_EXPR = eINSTANCE.getLustreVariableDeclaration_ClockExpr();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.LustreValuedObjectImpl <em>Valued Object</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustreValuedObjectImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getLustreValuedObject()
     * @generated
     */
    EClass LUSTRE_VALUED_OBJECT = eINSTANCE.getLustreValuedObject();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LUSTRE_VALUED_OBJECT__TYPE = eINSTANCE.getLustreValuedObject_Type();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.NodeDeclarationImpl <em>Node Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.NodeDeclarationImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getNodeDeclaration()
     * @generated
     */
    EClass NODE_DECLARATION = eINSTANCE.getNodeDeclaration();

    /**
     * The meta object literal for the '<em><b>Is Unsafe</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE_DECLARATION__IS_UNSAFE = eINSTANCE.getNodeDeclaration_IsUnsafe();

    /**
     * The meta object literal for the '<em><b>Has State</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE_DECLARATION__HAS_STATE = eINSTANCE.getNodeDeclaration_HasState();

    /**
     * The meta object literal for the '<em><b>Inputs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_DECLARATION__INPUTS = eINSTANCE.getNodeDeclaration_Inputs();

    /**
     * The meta object literal for the '<em><b>Outputs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_DECLARATION__OUTPUTS = eINSTANCE.getNodeDeclaration_Outputs();

    /**
     * The meta object literal for the '<em><b>Constants</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_DECLARATION__CONSTANTS = eINSTANCE.getNodeDeclaration_Constants();

    /**
     * The meta object literal for the '<em><b>Variables</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_DECLARATION__VARIABLES = eINSTANCE.getNodeDeclaration_Variables();

    /**
     * The meta object literal for the '<em><b>Equations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_DECLARATION__EQUATIONS = eINSTANCE.getNodeDeclaration_Equations();

    /**
     * The meta object literal for the '<em><b>Emissions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_DECLARATION__EMISSIONS = eINSTANCE.getNodeDeclaration_Emissions();

    /**
     * The meta object literal for the '<em><b>Assertions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_DECLARATION__ASSERTIONS = eINSTANCE.getNodeDeclaration_Assertions();

    /**
     * The meta object literal for the '<em><b>Automatons</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_DECLARATION__AUTOMATONS = eINSTANCE.getNodeDeclaration_Automatons();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.NodeValuedObjectImpl <em>Node Valued Object</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.NodeValuedObjectImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getNodeValuedObject()
     * @generated
     */
    EClass NODE_VALUED_OBJECT = eINSTANCE.getNodeValuedObject();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.EquationImpl <em>Equation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.EquationImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getEquation()
     * @generated
     */
    EClass EQUATION = eINSTANCE.getEquation();

    /**
     * The meta object literal for the '<em><b>References</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUATION__REFERENCES = eINSTANCE.getEquation_References();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.AssertionImpl <em>Assertion</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.AssertionImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getAssertion()
     * @generated
     */
    EClass ASSERTION = eINSTANCE.getAssertion();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSERTION__EXPR = eINSTANCE.getAssertion_Expr();

    /**
     * The meta object literal for the '{@link de.cau.cs.kieler.lustre.lustre.impl.StateValuedObjectImpl <em>State Valued Object</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cau.cs.kieler.lustre.lustre.impl.StateValuedObjectImpl
     * @see de.cau.cs.kieler.lustre.lustre.impl.LustrePackageImpl#getStateValuedObject()
     * @generated
     */
    EClass STATE_VALUED_OBJECT = eINSTANCE.getStateValuedObject();

  }

} //LustrePackage
